

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Wed Oct 23 09:34:13 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK5,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	idataBANK6,global,class=CODE,space=0,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,space=0,delta=1,noexec
     8                           	psect	nvBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1,group=3
    29                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1,group=1
    30                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1,group=1
    31                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1,group=1
    32                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1,group=1
    33                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1,group=1
    34                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1,group=1
    35                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1,group=1
    36                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1,group=3
    37                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1,group=3
    38                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1,group=3
    39                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1,group=3
    40                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1,group=2
    41                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1,group=2
    42                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,space=0,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,space=0,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,space=0,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,space=0,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,space=0,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,space=0,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,space=0,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,space=0,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,space=0,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,space=0,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,space=0,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,space=0,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,space=0,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,space=0,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,space=0,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,space=0,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,space=0,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,space=0,delta=1
    76                           	psect	ivt0x8,global,reloc=2,class=CODE,space=0,delta=1,noexec,keep,optim=
    77                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    78                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    79                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    80                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    81   000000                     
    82                           ; Generated 18/12/2023 GMT
    83                           ; 
    84                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    85                           ; All rights reserved.
    86                           ; 
    87                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    88                           ; 
    89                           ; Redistribution and use in source and binary forms, with or without modification, are
    90                           ; permitted provided that the following conditions are met:
    91                           ; 
    92                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    93                           ;        conditions and the following disclaimer.
    94                           ; 
    95                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    96                           ;        of conditions and the following disclaimer in the documentation and/or other
    97                           ;        materials provided with the distribution. Publication is not required when
    98                           ;        this file is used in an embedded application.
    99                           ; 
   100                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   101                           ;        software without specific prior written permission.
   102                           ; 
   103                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   104                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   105                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   106                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   107                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   108                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   109                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   110                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   111                           ; 
   112                           ; 
   113                           ; Code-generator required, PIC18F57Q43 Definitions
   114                           ; 
   115                           ; SFR Addresses
   116   0004E0                     bsr             equ	1248
   117   0004E9                     fsr0            equ	1257
   118   0004EA                     fsr0h           equ	1258
   119   0004E9                     fsr0l           equ	1257
   120   0004E1                     fsr1            equ	1249
   121   0004E2                     fsr1h           equ	1250
   122   0004E1                     fsr1l           equ	1249
   123   0004D9                     fsr2            equ	1241
   124   0004DA                     fsr2h           equ	1242
   125   0004D9                     fsr2l           equ	1241
   126   0004EF                     indf0           equ	1263
   127   0004E7                     indf1           equ	1255
   128   0004DF                     indf2           equ	1247
   129   0004D6                     intcon          equ	1238
   130   000041                     nvmcon          equ	65
   131   0004F9                     pcl             equ	1273
   132   0004FA                     pclath          equ	1274
   133   0004FB                     pclatu          equ	1275
   134   0004EB                     plusw0          equ	1259
   135   0004E3                     plusw1          equ	1251
   136   0004DB                     plusw2          equ	1243
   137   0004ED                     postdec0        equ	1261
   138   0004E5                     postdec1        equ	1253
   139   0004DD                     postdec2        equ	1245
   140   0004EE                     postinc0        equ	1262
   141   0004E6                     postinc1        equ	1254
   142   0004DE                     postinc2        equ	1246
   143   0004EC                     preinc0         equ	1260
   144   0004E4                     preinc1         equ	1252
   145   0004DC                     preinc2         equ	1244
   146   0004F3                     prod            equ	1267
   147   0004F4                     prodh           equ	1268
   148   0004F3                     prodl           equ	1267
   149   0004D8                     status          equ	1240
   150   0004F5                     tablat          equ	1269
   151   0004F6                     tblptr          equ	1270
   152   0004F7                     tblptrh         equ	1271
   153   0004F6                     tblptrl         equ	1270
   154   0004F8                     tblptru         equ	1272
   155   0004FD                     tosl            equ	1277
   156   0004E8                     wreg            equ	1256
   157   000039                     CLKRCON         equ	57	;# 
   158   00003A                     CLKRCLK         equ	58	;# 
   159   000040                     NVMCON0         equ	64	;# 
   160   000041                     NVMCON1         equ	65	;# 
   161   000042                     NVMLOCK         equ	66	;# 
   162   000043                     NVMADR          equ	67	;# 
   163   000043                     NVMADRL         equ	67	;# 
   164   000044                     NVMADRH         equ	68	;# 
   165   000045                     NVMADRU         equ	69	;# 
   166   000046                     NVMDAT          equ	70	;# 
   167   000046                     NVMDATL         equ	70	;# 
   168   000047                     NVMDATH         equ	71	;# 
   169   000048                     VREGCON         equ	72	;# 
   170   000049                     BORCON          equ	73	;# 
   171   00004A                     HLVDCON0        equ	74	;# 
   172   00004B                     HLVDCON1        equ	75	;# 
   173   00004C                     ZCDCON          equ	76	;# 
   174   000060                     PMD0            equ	96	;# 
   175   000061                     PMD1            equ	97	;# 
   176   000063                     PMD3            equ	99	;# 
   177   000064                     PMD4            equ	100	;# 
   178   000065                     PMD5            equ	101	;# 
   179   000066                     PMD6            equ	102	;# 
   180   000067                     PMD7            equ	103	;# 
   181   000068                     PMD8            equ	104	;# 
   182   00006A                     MD1CON0         equ	106	;# 
   183   00006B                     MD1CON1         equ	107	;# 
   184   00006C                     MD1SRC          equ	108	;# 
   185   00006D                     MD1CARL         equ	109	;# 
   186   00006E                     MD1CARH         equ	110	;# 
   187   00006F                     CMOUT           equ	111	;# 
   188   000070                     CM1CON0         equ	112	;# 
   189   000071                     CM1CON1         equ	113	;# 
   190   000072                     CM1NCH          equ	114	;# 
   191   000073                     CM1PCH          equ	115	;# 
   192   000074                     CM2CON0         equ	116	;# 
   193   000075                     CM2CON1         equ	117	;# 
   194   000076                     CM2NCH          equ	118	;# 
   195   000077                     CM2PCH          equ	119	;# 
   196   000078                     WDTCON0         equ	120	;# 
   197   000079                     WDTCON1         equ	121	;# 
   198   00007A                     WDTPS           equ	122	;# 
   199   00007A                     WDTPSL          equ	122	;# 
   200   00007B                     WDTPSH          equ	123	;# 
   201   00007C                     WDTTMR          equ	124	;# 
   202   00007D                     DAC1DAT         equ	125	;# 
   203   00007D                     DAC1DATL        equ	125	;# 
   204   00007F                     DAC1CON         equ	127	;# 
   205   000080                     SPI1RXB         equ	128	;# 
   206   000081                     SPI1TXB         equ	129	;# 
   207   000082                     SPI1TCNT        equ	130	;# 
   208   000082                     SPI1TCNTL       equ	130	;# 
   209   000083                     SPI1TCNTH       equ	131	;# 
   210   000084                     SPI1CON0        equ	132	;# 
   211   000085                     SPI1CON1        equ	133	;# 
   212   000086                     SPI1CON2        equ	134	;# 
   213   000087                     SPI1STATUS      equ	135	;# 
   214   000088                     SPI1TWIDTH      equ	136	;# 
   215   000089                     SPI1BAUD        equ	137	;# 
   216   00008A                     SPI1INTF        equ	138	;# 
   217   00008B                     SPI1INTE        equ	139	;# 
   218   00008C                     SPI1CLK         equ	140	;# 
   219   00008D                     SPI2RXB         equ	141	;# 
   220   00008E                     SPI2TXB         equ	142	;# 
   221   00008F                     SPI2TCNT        equ	143	;# 
   222   00008F                     SPI2TCNTL       equ	143	;# 
   223   000090                     SPI2TCNTH       equ	144	;# 
   224   000091                     SPI2CON0        equ	145	;# 
   225   000092                     SPI2CON1        equ	146	;# 
   226   000093                     SPI2CON2        equ	147	;# 
   227   000094                     SPI2STATUS      equ	148	;# 
   228   000095                     SPI2TWIDTH      equ	149	;# 
   229   000096                     SPI2BAUD        equ	150	;# 
   230   000097                     SPI2INTF        equ	151	;# 
   231   000098                     SPI2INTE        equ	152	;# 
   232   000099                     SPI2CLK         equ	153	;# 
   233   0000AC                     ACTCON          equ	172	;# 
   234   0000AD                     OSCCON1         equ	173	;# 
   235   0000AE                     OSCCON2         equ	174	;# 
   236   0000AF                     OSCCON3         equ	175	;# 
   237   0000B0                     OSCTUNE         equ	176	;# 
   238   0000B1                     OSCFRQ          equ	177	;# 
   239   0000B1                     OSCFREQ         equ	177	;# 
   240   0000B2                     OSCSTAT         equ	178	;# 
   241   0000B2                     OSCSTAT1        equ	178	;# 
   242   0000B3                     OSCEN           equ	179	;# 
   243   0000B4                     PRLOCK          equ	180	;# 
   244   0000B5                     SCANPR          equ	181	;# 
   245   0000B6                     DMA1PR          equ	182	;# 
   246   0000B7                     DMA2PR          equ	183	;# 
   247   0000B8                     DMA3PR          equ	184	;# 
   248   0000B9                     DMA4PR          equ	185	;# 
   249   0000BA                     DMA5PR          equ	186	;# 
   250   0000BB                     DMA6PR          equ	187	;# 
   251   0000BE                     MAINPR          equ	190	;# 
   252   0000BF                     ISRPR           equ	191	;# 
   253   0000D4                     CLCDATA         equ	212	;# 
   254   0000D5                     CLCSELECT       equ	213	;# 
   255   0000D6                     CLCnCON         equ	214	;# 
   256   0000D7                     CLCnPOL         equ	215	;# 
   257   0000D8                     CLCnSEL0        equ	216	;# 
   258   0000D9                     CLCnSEL1        equ	217	;# 
   259   0000DA                     CLCnSEL2        equ	218	;# 
   260   0000DB                     CLCnSEL3        equ	219	;# 
   261   0000DC                     CLCnGLS0        equ	220	;# 
   262   0000DD                     CLCnGLS1        equ	221	;# 
   263   0000DE                     CLCnGLS2        equ	222	;# 
   264   0000DF                     CLCnGLS3        equ	223	;# 
   265   0000E8                     DMASELECT       equ	232	;# 
   266   0000E9                     DMAnBUF         equ	233	;# 
   267   0000EA                     DMAnDCNT        equ	234	;# 
   268   0000EA                     DMAnDCNTL       equ	234	;# 
   269   0000EB                     DMAnDCNTH       equ	235	;# 
   270   0000EC                     DMAnDPTR        equ	236	;# 
   271   0000EC                     DMAnDPTRL       equ	236	;# 
   272   0000ED                     DMAnDPTRH       equ	237	;# 
   273   0000EE                     DMAnDSZ         equ	238	;# 
   274   0000EE                     DMAnDSZL        equ	238	;# 
   275   0000EF                     DMAnDSZH        equ	239	;# 
   276   0000F0                     DMAnDSA         equ	240	;# 
   277   0000F0                     DMAnDSAL        equ	240	;# 
   278   0000F1                     DMAnDSAH        equ	241	;# 
   279   0000F2                     DMAnSCNT        equ	242	;# 
   280   0000F2                     DMAnSCNTL       equ	242	;# 
   281   0000F3                     DMAnSCNTH       equ	243	;# 
   282   0000F4                     DMAnSPTR        equ	244	;# 
   283   0000F4                     DMAnSPTRL       equ	244	;# 
   284   0000F5                     DMAnSPTRH       equ	245	;# 
   285   0000F6                     DMAnSPTRU       equ	246	;# 
   286   0000F7                     DMAnSSZ         equ	247	;# 
   287   0000F7                     DMAnSSZL        equ	247	;# 
   288   0000F8                     DMAnSSZH        equ	248	;# 
   289   0000F9                     DMAnSSA         equ	249	;# 
   290   0000F9                     DMAnSSAL        equ	249	;# 
   291   0000FA                     DMAnSSAH        equ	250	;# 
   292   0000FB                     DMAnSSAU        equ	251	;# 
   293   0000FC                     DMAnCON0        equ	252	;# 
   294   0000FD                     DMAnCON1        equ	253	;# 
   295   0000FE                     DMAnAIRQ        equ	254	;# 
   296   0000FF                     DMAnSIRQ        equ	255	;# 
   297   000200                     PPSLOCK         equ	512	;# 
   298   000201                     RA0PPS          equ	513	;# 
   299   000202                     RA1PPS          equ	514	;# 
   300   000203                     RA2PPS          equ	515	;# 
   301   000204                     RA3PPS          equ	516	;# 
   302   000205                     RA4PPS          equ	517	;# 
   303   000206                     RA5PPS          equ	518	;# 
   304   000207                     RA6PPS          equ	519	;# 
   305   000208                     RA7PPS          equ	520	;# 
   306   000209                     RB0PPS          equ	521	;# 
   307   00020A                     RB1PPS          equ	522	;# 
   308   00020B                     RB2PPS          equ	523	;# 
   309   00020C                     RB3PPS          equ	524	;# 
   310   00020D                     RB4PPS          equ	525	;# 
   311   00020E                     RB5PPS          equ	526	;# 
   312   00020F                     RB6PPS          equ	527	;# 
   313   000210                     RB7PPS          equ	528	;# 
   314   000211                     RC0PPS          equ	529	;# 
   315   000212                     RC1PPS          equ	530	;# 
   316   000213                     RC2PPS          equ	531	;# 
   317   000214                     RC3PPS          equ	532	;# 
   318   000215                     RC4PPS          equ	533	;# 
   319   000216                     RC5PPS          equ	534	;# 
   320   000217                     RC6PPS          equ	535	;# 
   321   000218                     RC7PPS          equ	536	;# 
   322   000219                     RD0PPS          equ	537	;# 
   323   00021A                     RD1PPS          equ	538	;# 
   324   00021B                     RD2PPS          equ	539	;# 
   325   00021C                     RD3PPS          equ	540	;# 
   326   00021D                     RD4PPS          equ	541	;# 
   327   00021E                     RD5PPS          equ	542	;# 
   328   00021F                     RD6PPS          equ	543	;# 
   329   000220                     RD7PPS          equ	544	;# 
   330   000221                     RE0PPS          equ	545	;# 
   331   000222                     RE1PPS          equ	546	;# 
   332   000223                     RE2PPS          equ	547	;# 
   333   000229                     RF0PPS          equ	553	;# 
   334   00022A                     RF1PPS          equ	554	;# 
   335   00022B                     RF2PPS          equ	555	;# 
   336   00022C                     RF3PPS          equ	556	;# 
   337   00022D                     RF4PPS          equ	557	;# 
   338   00022E                     RF5PPS          equ	558	;# 
   339   00022F                     RF6PPS          equ	559	;# 
   340   000230                     RF7PPS          equ	560	;# 
   341   00023E                     INT0PPS         equ	574	;# 
   342   00023F                     INT1PPS         equ	575	;# 
   343   000240                     INT2PPS         equ	576	;# 
   344   000241                     T0CKIPPS        equ	577	;# 
   345   000242                     T1CKIPPS        equ	578	;# 
   346   000243                     T1GPPS          equ	579	;# 
   347   000244                     T3CKIPPS        equ	580	;# 
   348   000245                     T3GPPS          equ	581	;# 
   349   000246                     T5CKIPPS        equ	582	;# 
   350   000247                     T5GPPS          equ	583	;# 
   351   000248                     T2INPPS         equ	584	;# 
   352   000249                     T4INPPS         equ	585	;# 
   353   00024A                     T6INPPS         equ	586	;# 
   354   00024F                     CCP1PPS         equ	591	;# 
   355   000250                     CCP2PPS         equ	592	;# 
   356   000251                     CCP3PPS         equ	593	;# 
   357   000253                     PWM1ERSPPS      equ	595	;# 
   358   000254                     PWM2ERSPPS      equ	596	;# 
   359   000255                     PWM3ERSPPS      equ	597	;# 
   360   000257                     PWMIN0PPS       equ	599	;# 
   361   000258                     PWMIN1PPS       equ	600	;# 
   362   000259                     SMT1WINPPS      equ	601	;# 
   363   00025A                     SMT1SIGPPS      equ	602	;# 
   364   00025B                     CWG1PPS         equ	603	;# 
   365   00025B                     CWG1INPPS       equ	603	;# 
   366   00025C                     CWG2PPS         equ	604	;# 
   367   00025C                     CWG2INPPS       equ	604	;# 
   368   00025D                     CWG3PPS         equ	605	;# 
   369   00025D                     CWG3INPPS       equ	605	;# 
   370   00025E                     MD1CARLPPS      equ	606	;# 
   371   00025E                     MDCARLPPS       equ	606	;# 
   372   00025F                     MD1CARHPPS      equ	607	;# 
   373   00025F                     MDCARHPPS       equ	607	;# 
   374   000260                     MD1SRCPPS       equ	608	;# 
   375   000260                     MDSRCPPS        equ	608	;# 
   376   000261                     CLCIN0PPS       equ	609	;# 
   377   000262                     CLCIN1PPS       equ	610	;# 
   378   000263                     CLCIN2PPS       equ	611	;# 
   379   000264                     CLCIN3PPS       equ	612	;# 
   380   000265                     CLCIN4PPS       equ	613	;# 
   381   000266                     CLCIN5PPS       equ	614	;# 
   382   000267                     CLCIN6PPS       equ	615	;# 
   383   000268                     CLCIN7PPS       equ	616	;# 
   384   000269                     ADACTPPS        equ	617	;# 
   385   00026A                     SPI1SCKPPS      equ	618	;# 
   386   00026B                     SPI1SDIPPS      equ	619	;# 
   387   00026C                     SPI1SSPPS       equ	620	;# 
   388   00026D                     SPI2SCKPPS      equ	621	;# 
   389   00026E                     SPI2SDIPPS      equ	622	;# 
   390   00026F                     SPI2SSPPS       equ	623	;# 
   391   000270                     I2C1SDAPPS      equ	624	;# 
   392   000271                     I2C1SCLPPS      equ	625	;# 
   393   000272                     U1RXPPS         equ	626	;# 
   394   000273                     U1CTSPPS        equ	627	;# 
   395   000274                     U2RXPPS         equ	628	;# 
   396   000275                     U2CTSPPS        equ	629	;# 
   397   000276                     U3RXPPS         equ	630	;# 
   398   000277                     U3CTSPPS        equ	631	;# 
   399   000278                     U4RXPPS         equ	632	;# 
   400   000279                     U4CTSPPS        equ	633	;# 
   401   00027A                     U5RXPPS         equ	634	;# 
   402   00027B                     U5CTSPPS        equ	635	;# 
   403   000286                     RC4I2C          equ	646	;# 
   404   000287                     RC3I2C          equ	647	;# 
   405   000288                     RB2I2C          equ	648	;# 
   406   000289                     RB1I2C          equ	649	;# 
   407   00028B                     I2C1RXB         equ	651	;# 
   408   00028C                     I2C1TXB         equ	652	;# 
   409   00028D                     I2C1CNT         equ	653	;# 
   410   00028E                     I2C1ADB0        equ	654	;# 
   411   00028F                     I2C1ADB1        equ	655	;# 
   412   000290                     I2C1ADR0        equ	656	;# 
   413   000291                     I2C1ADR1        equ	657	;# 
   414   000292                     I2C1ADR2        equ	658	;# 
   415   000293                     I2C1ADR3        equ	659	;# 
   416   000294                     I2C1CON0        equ	660	;# 
   417   000295                     I2C1CON1        equ	661	;# 
   418   000296                     I2C1CON2        equ	662	;# 
   419   000297                     I2C1ERR         equ	663	;# 
   420   000298                     I2C1STAT0       equ	664	;# 
   421   000299                     I2C1STAT1       equ	665	;# 
   422   00029A                     I2C1PIR         equ	666	;# 
   423   00029B                     I2C1PIE         equ	667	;# 
   424   00029C                     I2C1CLK         equ	668	;# 
   425   00029D                     I2C1BTO         equ	669	;# 
   426   0002A1                     U1RXB           equ	673	;# 
   427   0002A1                     U1RXBL          equ	673	;# 
   428   0002A2                     U1RXCHK         equ	674	;# 
   429   0002A3                     U1TXB           equ	675	;# 
   430   0002A3                     U1TXBL          equ	675	;# 
   431   0002A4                     U1TXCHK         equ	676	;# 
   432   0002A5                     U1P1            equ	677	;# 
   433   0002A5                     U1P1L           equ	677	;# 
   434   0002A6                     U1P1H           equ	678	;# 
   435   0002A7                     U1P2            equ	679	;# 
   436   0002A7                     U1P2L           equ	679	;# 
   437   0002A8                     U1P2H           equ	680	;# 
   438   0002A9                     U1P3            equ	681	;# 
   439   0002A9                     U1P3L           equ	681	;# 
   440   0002AA                     U1P3H           equ	682	;# 
   441   0002AB                     U1CON0          equ	683	;# 
   442   0002AC                     U1CON1          equ	684	;# 
   443   0002AD                     U1CON2          equ	685	;# 
   444   0002AE                     U1BRG           equ	686	;# 
   445   0002AE                     U1BRGL          equ	686	;# 
   446   0002AF                     U1BRGH          equ	687	;# 
   447   0002B0                     U1FIFO          equ	688	;# 
   448   0002B1                     U1UIR           equ	689	;# 
   449   0002B2                     U1ERRIR         equ	690	;# 
   450   0002B3                     U1ERRIE         equ	691	;# 
   451   0002B4                     U2RXB           equ	692	;# 
   452   0002B4                     U2RXBL          equ	692	;# 
   453   0002B6                     U2TXB           equ	694	;# 
   454   0002B6                     U2TXBL          equ	694	;# 
   455   0002B8                     U2P1            equ	696	;# 
   456   0002B8                     U2P1L           equ	696	;# 
   457   0002BA                     U2P2            equ	698	;# 
   458   0002BA                     U2P2L           equ	698	;# 
   459   0002BC                     U2P3            equ	700	;# 
   460   0002BC                     U2P3L           equ	700	;# 
   461   0002BE                     U2CON0          equ	702	;# 
   462   0002BF                     U2CON1          equ	703	;# 
   463   0002C0                     U2CON2          equ	704	;# 
   464   0002C1                     U2BRG           equ	705	;# 
   465   0002C1                     U2BRGL          equ	705	;# 
   466   0002C2                     U2BRGH          equ	706	;# 
   467   0002C3                     U2FIFO          equ	707	;# 
   468   0002C4                     U2UIR           equ	708	;# 
   469   0002C5                     U2ERRIR         equ	709	;# 
   470   0002C6                     U2ERRIE         equ	710	;# 
   471   0002C7                     U3RXB           equ	711	;# 
   472   0002C7                     U3RXBL          equ	711	;# 
   473   0002C9                     U3TXB           equ	713	;# 
   474   0002C9                     U3TXBL          equ	713	;# 
   475   0002CB                     U3P1            equ	715	;# 
   476   0002CB                     U3P1L           equ	715	;# 
   477   0002CD                     U3P2            equ	717	;# 
   478   0002CD                     U3P2L           equ	717	;# 
   479   0002CF                     U3P3            equ	719	;# 
   480   0002CF                     U3P3L           equ	719	;# 
   481   0002D1                     U3CON0          equ	721	;# 
   482   0002D2                     U3CON1          equ	722	;# 
   483   0002D3                     U3CON2          equ	723	;# 
   484   0002D4                     U3BRG           equ	724	;# 
   485   0002D4                     U3BRGL          equ	724	;# 
   486   0002D5                     U3BRGH          equ	725	;# 
   487   0002D6                     U3FIFO          equ	726	;# 
   488   0002D7                     U3UIR           equ	727	;# 
   489   0002D8                     U3ERRIR         equ	728	;# 
   490   0002D9                     U3ERRIE         equ	729	;# 
   491   0002DA                     U4RXB           equ	730	;# 
   492   0002DA                     U4RXBL          equ	730	;# 
   493   0002DC                     U4TXB           equ	732	;# 
   494   0002DC                     U4TXBL          equ	732	;# 
   495   0002DE                     U4P1            equ	734	;# 
   496   0002DE                     U4P1L           equ	734	;# 
   497   0002E0                     U4P2            equ	736	;# 
   498   0002E0                     U4P2L           equ	736	;# 
   499   0002E2                     U4P3            equ	738	;# 
   500   0002E2                     U4P3L           equ	738	;# 
   501   0002E4                     U4CON0          equ	740	;# 
   502   0002E5                     U4CON1          equ	741	;# 
   503   0002E6                     U4CON2          equ	742	;# 
   504   0002E7                     U4BRG           equ	743	;# 
   505   0002E7                     U4BRGL          equ	743	;# 
   506   0002E8                     U4BRGH          equ	744	;# 
   507   0002E9                     U4FIFO          equ	745	;# 
   508   0002EA                     U4UIR           equ	746	;# 
   509   0002EB                     U4ERRIR         equ	747	;# 
   510   0002EC                     U4ERRIE         equ	748	;# 
   511   0002ED                     U5RXB           equ	749	;# 
   512   0002ED                     U5RXBL          equ	749	;# 
   513   0002EF                     U5TXB           equ	751	;# 
   514   0002EF                     U5TXBL          equ	751	;# 
   515   0002F1                     U5P1            equ	753	;# 
   516   0002F1                     U5P1L           equ	753	;# 
   517   0002F3                     U5P2            equ	755	;# 
   518   0002F3                     U5P2L           equ	755	;# 
   519   0002F5                     U5P3            equ	757	;# 
   520   0002F5                     U5P3L           equ	757	;# 
   521   0002F7                     U5CON0          equ	759	;# 
   522   0002F8                     U5CON1          equ	760	;# 
   523   0002F9                     U5CON2          equ	761	;# 
   524   0002FA                     U5BRG           equ	762	;# 
   525   0002FA                     U5BRGL          equ	762	;# 
   526   0002FB                     U5BRGH          equ	763	;# 
   527   0002FC                     U5FIFO          equ	764	;# 
   528   0002FD                     U5UIR           equ	765	;# 
   529   0002FE                     U5ERRIR         equ	766	;# 
   530   0002FF                     U5ERRIE         equ	767	;# 
   531   000300                     SMT1TMR         equ	768	;# 
   532   000300                     SMT1TMRL        equ	768	;# 
   533   000301                     SMT1TMRH        equ	769	;# 
   534   000302                     SMT1TMRU        equ	770	;# 
   535   000303                     SMT1CPR         equ	771	;# 
   536   000303                     SMT1CPRL        equ	771	;# 
   537   000304                     SMT1CPRH        equ	772	;# 
   538   000305                     SMT1CPRU        equ	773	;# 
   539   000306                     SMT1CPW         equ	774	;# 
   540   000306                     SMT1CPWL        equ	774	;# 
   541   000307                     SMT1CPWH        equ	775	;# 
   542   000308                     SMT1CPWU        equ	776	;# 
   543   000309                     SMT1PR          equ	777	;# 
   544   000309                     SMT1PRL         equ	777	;# 
   545   00030A                     SMT1PRH         equ	778	;# 
   546   00030B                     SMT1PRU         equ	779	;# 
   547   00030C                     SMT1CON0        equ	780	;# 
   548   00030D                     SMT1CON1        equ	781	;# 
   549   00030E                     SMT1STAT        equ	782	;# 
   550   00030F                     SMT1CLK         equ	783	;# 
   551   000310                     SMT1SIG         equ	784	;# 
   552   000311                     SMT1WIN         equ	785	;# 
   553   000318                     TMR0L           equ	792	;# 
   554   000318                     TMR0            equ	792	;# 
   555   000319                     TMR0H           equ	793	;# 
   556   000319                     PR0             equ	793	;# 
   557   00031A                     T0CON0          equ	794	;# 
   558   00031B                     T0CON1          equ	795	;# 
   559   00031C                     TMR1            equ	796	;# 
   560   00031C                     TMR1L           equ	796	;# 
   561   00031D                     TMR1H           equ	797	;# 
   562   00031E                     T1CON           equ	798	;# 
   563   00031E                     TMR1CON         equ	798	;# 
   564   00031F                     T1GCON          equ	799	;# 
   565   00031F                     TMR1GCON        equ	799	;# 
   566   000320                     T1GATE          equ	800	;# 
   567   000320                     TMR1GATE        equ	800	;# 
   568   000321                     T1CLK           equ	801	;# 
   569   000321                     TMR1CLK         equ	801	;# 
   570   000321                     PR1             equ	801	;# 
   571   000322                     T2TMR           equ	802	;# 
   572   000322                     TMR2            equ	802	;# 
   573   000323                     T2PR            equ	803	;# 
   574   000323                     PR2             equ	803	;# 
   575   000324                     T2CON           equ	804	;# 
   576   000325                     T2HLT           equ	805	;# 
   577   000326                     T2CLKCON        equ	806	;# 
   578   000326                     T2CLK           equ	806	;# 
   579   000327                     T2RST           equ	807	;# 
   580   000328                     TMR3            equ	808	;# 
   581   000328                     TMR3L           equ	808	;# 
   582   000329                     TMR3H           equ	809	;# 
   583   00032A                     T3CON           equ	810	;# 
   584   00032A                     TMR3CON         equ	810	;# 
   585   00032B                     T3GCON          equ	811	;# 
   586   00032B                     TMR3GCON        equ	811	;# 
   587   00032C                     T3GATE          equ	812	;# 
   588   00032C                     TMR3GATE        equ	812	;# 
   589   00032D                     T3CLK           equ	813	;# 
   590   00032D                     TMR3CLK         equ	813	;# 
   591   00032D                     PR3             equ	813	;# 
   592   00032E                     T4TMR           equ	814	;# 
   593   00032E                     TMR4            equ	814	;# 
   594   00032F                     T4PR            equ	815	;# 
   595   00032F                     PR4             equ	815	;# 
   596   000330                     T4CON           equ	816	;# 
   597   000331                     T4HLT           equ	817	;# 
   598   000332                     T4CLKCON        equ	818	;# 
   599   000332                     T4CLK           equ	818	;# 
   600   000333                     T4RST           equ	819	;# 
   601   000334                     TMR5            equ	820	;# 
   602   000334                     TMR5L           equ	820	;# 
   603   000335                     TMR5H           equ	821	;# 
   604   000336                     T5CON           equ	822	;# 
   605   000336                     TMR5CON         equ	822	;# 
   606   000337                     T5GCON          equ	823	;# 
   607   000337                     TMR5GCON        equ	823	;# 
   608   000338                     T5GATE          equ	824	;# 
   609   000338                     TMR5GATE        equ	824	;# 
   610   000339                     T5CLK           equ	825	;# 
   611   000339                     TMR5CLK         equ	825	;# 
   612   000339                     PR5             equ	825	;# 
   613   00033A                     T6TMR           equ	826	;# 
   614   00033A                     TMR6            equ	826	;# 
   615   00033B                     T6PR            equ	827	;# 
   616   00033B                     PR6             equ	827	;# 
   617   00033C                     T6CON           equ	828	;# 
   618   00033D                     T6HLT           equ	829	;# 
   619   00033E                     T6CLKCON        equ	830	;# 
   620   00033E                     T6CLK           equ	830	;# 
   621   00033F                     T6RST           equ	831	;# 
   622   000340                     CCPR1           equ	832	;# 
   623   000340                     CCPR1L          equ	832	;# 
   624   000341                     CCPR1H          equ	833	;# 
   625   000342                     CCP1CON         equ	834	;# 
   626   000343                     CCP1CAP         equ	835	;# 
   627   000344                     CCPR2           equ	836	;# 
   628   000344                     CCPR2L          equ	836	;# 
   629   000345                     CCPR2H          equ	837	;# 
   630   000346                     CCP2CON         equ	838	;# 
   631   000347                     CCP2CAP         equ	839	;# 
   632   000348                     CCPR3           equ	840	;# 
   633   000348                     CCPR3L          equ	840	;# 
   634   000349                     CCPR3H          equ	841	;# 
   635   00034A                     CCP3CON         equ	842	;# 
   636   00034B                     CCP3CAP         equ	843	;# 
   637   00034C                     CCPTMRS0        equ	844	;# 
   638   00034F                     CRCDATA         equ	847	;# 
   639   00034F                     CRCDATL         equ	847	;# 
   640   000350                     CRCDATH         equ	848	;# 
   641   000351                     CRCACC          equ	849	;# 
   642   000351                     CRCACCL         equ	849	;# 
   643   000352                     CRCACCH         equ	850	;# 
   644   000353                     CRCSHFT         equ	851	;# 
   645   000353                     CRCSHIFTL       equ	851	;# 
   646   000354                     CRCSHIFTH       equ	852	;# 
   647   000355                     CRCXOR          equ	853	;# 
   648   000355                     CRCXORL         equ	853	;# 
   649   000356                     CRCXORH         equ	854	;# 
   650   000357                     CRCCON0         equ	855	;# 
   651   000358                     CRCCON1         equ	856	;# 
   652   00035A                     SCANLADR        equ	858	;# 
   653   00035A                     SCANLADRL       equ	858	;# 
   654   00035B                     SCANLADRH       equ	859	;# 
   655   00035C                     SCANLADRU       equ	860	;# 
   656   00035D                     SCANHADR        equ	861	;# 
   657   00035D                     SCANHADRL       equ	861	;# 
   658   00035E                     SCANHADRH       equ	862	;# 
   659   00035F                     SCANHADRU       equ	863	;# 
   660   000360                     SCANCON0        equ	864	;# 
   661   000361                     SCANTRIG        equ	865	;# 
   662   000362                     IPR0            equ	866	;# 
   663   000363                     IPR1            equ	867	;# 
   664   000364                     IPR2            equ	868	;# 
   665   000365                     IPR3            equ	869	;# 
   666   000366                     IPR4            equ	870	;# 
   667   000367                     IPR5            equ	871	;# 
   668   000368                     IPR6            equ	872	;# 
   669   000369                     IPR7            equ	873	;# 
   670   00036A                     IPR8            equ	874	;# 
   671   00036B                     IPR9            equ	875	;# 
   672   00036C                     IPR10           equ	876	;# 
   673   00036D                     IPR11           equ	877	;# 
   674   00036E                     IPR12           equ	878	;# 
   675   00036F                     IPR13           equ	879	;# 
   676   000370                     IPR14           equ	880	;# 
   677   000371                     IPR15           equ	881	;# 
   678   000373                     STATUS_CSHAD    equ	883	;# 
   679   000374                     WREG_CSHAD      equ	884	;# 
   680   000375                     BSR_CSHAD       equ	885	;# 
   681   000376                     SHADCON         equ	886	;# 
   682   000377                     STATUS_SHAD     equ	887	;# 
   683   000378                     WREG_SHAD       equ	888	;# 
   684   000379                     BSR_SHAD        equ	889	;# 
   685   00037A                     PCLATH_SHAD     equ	890	;# 
   686   00037B                     PCLATU_SHAD     equ	891	;# 
   687   00037C                     FSR0SH          equ	892	;# 
   688   00037C                     FSR0L_SHAD      equ	892	;# 
   689   00037D                     FSR0H_SHAD      equ	893	;# 
   690   00037E                     FSR1SH          equ	894	;# 
   691   00037E                     FSR1L_SHAD      equ	894	;# 
   692   00037F                     FSR1H_SHAD      equ	895	;# 
   693   000380                     FSR2SH          equ	896	;# 
   694   000380                     FSR2L_SHAD      equ	896	;# 
   695   000381                     FSR2H_SHAD      equ	897	;# 
   696   000382                     PRODSH          equ	898	;# 
   697   000382                     PRODL_SHAD      equ	898	;# 
   698   000383                     PRODH_SHAD      equ	899	;# 
   699   0003BC                     CWG1CLK         equ	956	;# 
   700   0003BC                     CWG1CLKCON      equ	956	;# 
   701   0003BD                     CWG1ISM         equ	957	;# 
   702   0003BD                     CWG1DAT         equ	957	;# 
   703   0003BE                     CWG1DBR         equ	958	;# 
   704   0003BF                     CWG1DBF         equ	959	;# 
   705   0003C0                     CWG1CON0        equ	960	;# 
   706   0003C1                     CWG1CON1        equ	961	;# 
   707   0003C2                     CWG1AS0         equ	962	;# 
   708   0003C3                     CWG1AS1         equ	963	;# 
   709   0003C4                     CWG1STR         equ	964	;# 
   710   0003C5                     CWG2CLK         equ	965	;# 
   711   0003C5                     CWG2CLKCON      equ	965	;# 
   712   0003C6                     CWG2ISM         equ	966	;# 
   713   0003C6                     CWG2DAT         equ	966	;# 
   714   0003C7                     CWG2DBR         equ	967	;# 
   715   0003C8                     CWG2DBF         equ	968	;# 
   716   0003C9                     CWG2CON0        equ	969	;# 
   717   0003CA                     CWG2CON1        equ	970	;# 
   718   0003CB                     CWG2AS0         equ	971	;# 
   719   0003CC                     CWG2AS1         equ	972	;# 
   720   0003CD                     CWG2STR         equ	973	;# 
   721   0003CE                     CWG3CLK         equ	974	;# 
   722   0003CE                     CWG3CLKCON      equ	974	;# 
   723   0003CF                     CWG3ISM         equ	975	;# 
   724   0003CF                     CWG3DAT         equ	975	;# 
   725   0003D0                     CWG3DBR         equ	976	;# 
   726   0003D1                     CWG3DBF         equ	977	;# 
   727   0003D2                     CWG3CON0        equ	978	;# 
   728   0003D3                     CWG3CON1        equ	979	;# 
   729   0003D4                     CWG3AS0         equ	980	;# 
   730   0003D5                     CWG3AS1         equ	981	;# 
   731   0003D6                     CWG3STR         equ	982	;# 
   732   0003D7                     FVRCON          equ	983	;# 
   733   0003D8                     ADCPCON         equ	984	;# 
   734   0003D8                     ADCP            equ	984	;# 
   735   0003D9                     ADLTH           equ	985	;# 
   736   0003D9                     ADLTHL          equ	985	;# 
   737   0003DA                     ADLTHH          equ	986	;# 
   738   0003DB                     ADUTH           equ	987	;# 
   739   0003DB                     ADUTHL          equ	987	;# 
   740   0003DC                     ADUTHH          equ	988	;# 
   741   0003DD                     ADERR           equ	989	;# 
   742   0003DD                     ADERRL          equ	989	;# 
   743   0003DE                     ADERRH          equ	990	;# 
   744   0003DF                     ADSTPT          equ	991	;# 
   745   0003DF                     ADSTPTL         equ	991	;# 
   746   0003E0                     ADSTPTH         equ	992	;# 
   747   0003E1                     ADFLTR          equ	993	;# 
   748   0003E1                     ADFLTRL         equ	993	;# 
   749   0003E2                     ADFLTRH         equ	994	;# 
   750   0003E3                     ADACC           equ	995	;# 
   751   0003E3                     ADACCL          equ	995	;# 
   752   0003E4                     ADACCH          equ	996	;# 
   753   0003E5                     ADACCU          equ	997	;# 
   754   0003E6                     ADCNT           equ	998	;# 
   755   0003E7                     ADRPT           equ	999	;# 
   756   0003E8                     ADPREV          equ	1000	;# 
   757   0003E8                     ADPREVL         equ	1000	;# 
   758   0003E9                     ADPREVH         equ	1001	;# 
   759   0003EA                     ADRES           equ	1002	;# 
   760   0003EA                     ADRESL          equ	1002	;# 
   761   0003EB                     ADRESH          equ	1003	;# 
   762   0003EC                     ADPCH           equ	1004	;# 
   763   0003EE                     ADACQ           equ	1006	;# 
   764   0003EE                     ADACQL          equ	1006	;# 
   765   0003EF                     ADACQH          equ	1007	;# 
   766   0003F0                     ADCAP           equ	1008	;# 
   767   0003F1                     ADPRE           equ	1009	;# 
   768   0003F1                     ADPREL          equ	1009	;# 
   769   0003F2                     ADPREH          equ	1010	;# 
   770   0003F3                     ADCON0          equ	1011	;# 
   771   0003F4                     ADCON1          equ	1012	;# 
   772   0003F5                     ADCON2          equ	1013	;# 
   773   0003F6                     ADCON3          equ	1014	;# 
   774   0003F7                     ADSTAT          equ	1015	;# 
   775   0003F8                     ADREF           equ	1016	;# 
   776   0003F9                     ADACT           equ	1017	;# 
   777   0003FA                     ADCLK           equ	1018	;# 
   778   000400                     ANSELA          equ	1024	;# 
   779   000401                     WPUA            equ	1025	;# 
   780   000402                     ODCONA          equ	1026	;# 
   781   000403                     SLRCONA         equ	1027	;# 
   782   000404                     INLVLA          equ	1028	;# 
   783   000405                     IOCAP           equ	1029	;# 
   784   000406                     IOCAN           equ	1030	;# 
   785   000407                     IOCAF           equ	1031	;# 
   786   000408                     ANSELB          equ	1032	;# 
   787   000409                     WPUB            equ	1033	;# 
   788   00040A                     ODCONB          equ	1034	;# 
   789   00040B                     SLRCONB         equ	1035	;# 
   790   00040C                     INLVLB          equ	1036	;# 
   791   00040D                     IOCBP           equ	1037	;# 
   792   00040E                     IOCBN           equ	1038	;# 
   793   00040F                     IOCBF           equ	1039	;# 
   794   000410                     ANSELC          equ	1040	;# 
   795   000411                     WPUC            equ	1041	;# 
   796   000412                     ODCONC          equ	1042	;# 
   797   000413                     SLRCONC         equ	1043	;# 
   798   000414                     INLVLC          equ	1044	;# 
   799   000415                     IOCCP           equ	1045	;# 
   800   000416                     IOCCN           equ	1046	;# 
   801   000417                     IOCCF           equ	1047	;# 
   802   000418                     ANSELD          equ	1048	;# 
   803   000419                     WPUD            equ	1049	;# 
   804   00041A                     ODCOND          equ	1050	;# 
   805   00041B                     SLRCOND         equ	1051	;# 
   806   00041C                     INLVLD          equ	1052	;# 
   807   000420                     ANSELE          equ	1056	;# 
   808   000421                     WPUE            equ	1057	;# 
   809   000422                     ODCONE          equ	1058	;# 
   810   000423                     SLRCONE         equ	1059	;# 
   811   000424                     INLVLE          equ	1060	;# 
   812   000425                     IOCEP           equ	1061	;# 
   813   000426                     IOCEN           equ	1062	;# 
   814   000427                     IOCEF           equ	1063	;# 
   815   000428                     ANSELF          equ	1064	;# 
   816   000429                     WPUF            equ	1065	;# 
   817   00042A                     ODCONF          equ	1066	;# 
   818   00042B                     SLRCONF         equ	1067	;# 
   819   00042C                     INLVLF          equ	1068	;# 
   820   000440                     NCO1ACC         equ	1088	;# 
   821   000440                     NCO1ACCL        equ	1088	;# 
   822   000441                     NCO1ACCH        equ	1089	;# 
   823   000442                     NCO1ACCU        equ	1090	;# 
   824   000443                     NCO1INC         equ	1091	;# 
   825   000443                     NCO1INCL        equ	1091	;# 
   826   000444                     NCO1INCH        equ	1092	;# 
   827   000445                     NCO1INCU        equ	1093	;# 
   828   000446                     NCO1CON         equ	1094	;# 
   829   000447                     NCO1CLK         equ	1095	;# 
   830   000448                     NCO2ACC         equ	1096	;# 
   831   000448                     NCO2ACCL        equ	1096	;# 
   832   000449                     NCO2ACCH        equ	1097	;# 
   833   00044A                     NCO2ACCU        equ	1098	;# 
   834   00044B                     NCO2INC         equ	1099	;# 
   835   00044B                     NCO2INCL        equ	1099	;# 
   836   00044C                     NCO2INCH        equ	1100	;# 
   837   00044D                     NCO2INCU        equ	1101	;# 
   838   00044E                     NCO2CON         equ	1102	;# 
   839   00044F                     NCO2CLK         equ	1103	;# 
   840   000450                     NCO3ACC         equ	1104	;# 
   841   000450                     NCO3ACCL        equ	1104	;# 
   842   000451                     NCO3ACCH        equ	1105	;# 
   843   000452                     NCO3ACCU        equ	1106	;# 
   844   000453                     NCO3INC         equ	1107	;# 
   845   000453                     NCO3INCL        equ	1107	;# 
   846   000454                     NCO3INCH        equ	1108	;# 
   847   000455                     NCO3INCU        equ	1109	;# 
   848   000456                     NCO3CON         equ	1110	;# 
   849   000457                     NCO3CLK         equ	1111	;# 
   850   000459                     IVTLOCK         equ	1113	;# 
   851   00045A                     IVTAD           equ	1114	;# 
   852   00045A                     IVTADL          equ	1114	;# 
   853   00045B                     IVTADH          equ	1115	;# 
   854   00045C                     IVTADU          equ	1116	;# 
   855   00045D                     IVTBASE         equ	1117	;# 
   856   00045D                     IVTBASEL        equ	1117	;# 
   857   00045E                     IVTBASEH        equ	1118	;# 
   858   00045F                     IVTBASEU        equ	1119	;# 
   859   000460                     PWM1ERS         equ	1120	;# 
   860   000461                     PWM1CLK         equ	1121	;# 
   861   000462                     PWM1LDS         equ	1122	;# 
   862   000463                     PWM1PR          equ	1123	;# 
   863   000463                     PWM1PRL         equ	1123	;# 
   864   000464                     PWM1PRH         equ	1124	;# 
   865   000465                     PWM1CPRE        equ	1125	;# 
   866   000466                     PWM1PIPOS       equ	1126	;# 
   867   000467                     PWM1GIR         equ	1127	;# 
   868   000468                     PWM1GIE         equ	1128	;# 
   869   000469                     PWM1CON         equ	1129	;# 
   870   00046A                     PWM1S1CFG       equ	1130	;# 
   871   00046B                     PWM1S1P1        equ	1131	;# 
   872   00046B                     PWM1S1P1L       equ	1131	;# 
   873   00046C                     PWM1S1P1H       equ	1132	;# 
   874   00046D                     PWM1S1P2        equ	1133	;# 
   875   00046D                     PWM1S1P2L       equ	1133	;# 
   876   00046E                     PWM1S1P2H       equ	1134	;# 
   877   00046F                     PWM2ERS         equ	1135	;# 
   878   000470                     PWM2CLK         equ	1136	;# 
   879   000471                     PWM2LDS         equ	1137	;# 
   880   000472                     PWM2PR          equ	1138	;# 
   881   000472                     PWM2PRL         equ	1138	;# 
   882   000473                     PWM2PRH         equ	1139	;# 
   883   000474                     PWM2CPRE        equ	1140	;# 
   884   000475                     PWM2PIPOS       equ	1141	;# 
   885   000476                     PWM2GIR         equ	1142	;# 
   886   000477                     PWM2GIE         equ	1143	;# 
   887   000478                     PWM2CON         equ	1144	;# 
   888   000479                     PWM2S1CFG       equ	1145	;# 
   889   00047A                     PWM2S1P1        equ	1146	;# 
   890   00047A                     PWM2S1P1L       equ	1146	;# 
   891   00047B                     PWM2S1P1H       equ	1147	;# 
   892   00047C                     PWM2S1P2        equ	1148	;# 
   893   00047C                     PWM2S1P2L       equ	1148	;# 
   894   00047D                     PWM2S1P2H       equ	1149	;# 
   895   00047E                     PWM3ERS         equ	1150	;# 
   896   00047F                     PWM3CLK         equ	1151	;# 
   897   000480                     PWM3LDS         equ	1152	;# 
   898   000481                     PWM3PR          equ	1153	;# 
   899   000481                     PWM3PRL         equ	1153	;# 
   900   000482                     PWM3PRH         equ	1154	;# 
   901   000483                     PWM3CPRE        equ	1155	;# 
   902   000484                     PWM3PIPOS       equ	1156	;# 
   903   000485                     PWM3GIR         equ	1157	;# 
   904   000486                     PWM3GIE         equ	1158	;# 
   905   000487                     PWM3CON         equ	1159	;# 
   906   000488                     PWM3S1CFG       equ	1160	;# 
   907   000489                     PWM3S1P1        equ	1161	;# 
   908   000489                     PWM3S1P1L       equ	1161	;# 
   909   00048A                     PWM3S1P1H       equ	1162	;# 
   910   00048B                     PWM3S1P2        equ	1163	;# 
   911   00048B                     PWM3S1P2L       equ	1163	;# 
   912   00048C                     PWM3S1P2H       equ	1164	;# 
   913   00049C                     PWMLOAD         equ	1180	;# 
   914   00049D                     PWMEN           equ	1181	;# 
   915   00049E                     PIE0            equ	1182	;# 
   916   00049F                     PIE1            equ	1183	;# 
   917   0004A0                     PIE2            equ	1184	;# 
   918   0004A1                     PIE3            equ	1185	;# 
   919   0004A2                     PIE4            equ	1186	;# 
   920   0004A3                     PIE5            equ	1187	;# 
   921   0004A4                     PIE6            equ	1188	;# 
   922   0004A5                     PIE7            equ	1189	;# 
   923   0004A6                     PIE8            equ	1190	;# 
   924   0004A7                     PIE9            equ	1191	;# 
   925   0004A8                     PIE10           equ	1192	;# 
   926   0004A9                     PIE11           equ	1193	;# 
   927   0004AA                     PIE12           equ	1194	;# 
   928   0004AB                     PIE13           equ	1195	;# 
   929   0004AC                     PIE14           equ	1196	;# 
   930   0004AD                     PIE15           equ	1197	;# 
   931   0004AE                     PIR0            equ	1198	;# 
   932   0004AF                     PIR1            equ	1199	;# 
   933   0004B0                     PIR2            equ	1200	;# 
   934   0004B1                     PIR3            equ	1201	;# 
   935   0004B2                     PIR4            equ	1202	;# 
   936   0004B3                     PIR5            equ	1203	;# 
   937   0004B4                     PIR6            equ	1204	;# 
   938   0004B5                     PIR7            equ	1205	;# 
   939   0004B6                     PIR8            equ	1206	;# 
   940   0004B7                     PIR9            equ	1207	;# 
   941   0004B8                     PIR10           equ	1208	;# 
   942   0004B9                     PIR11           equ	1209	;# 
   943   0004BA                     PIR12           equ	1210	;# 
   944   0004BB                     PIR13           equ	1211	;# 
   945   0004BC                     PIR14           equ	1212	;# 
   946   0004BD                     PIR15           equ	1213	;# 
   947   0004BE                     LATA            equ	1214	;# 
   948   0004BF                     LATB            equ	1215	;# 
   949   0004C0                     LATC            equ	1216	;# 
   950   0004C1                     LATD            equ	1217	;# 
   951   0004C2                     LATE            equ	1218	;# 
   952   0004C3                     LATF            equ	1219	;# 
   953   0004C6                     TRISA           equ	1222	;# 
   954   0004C7                     TRISB           equ	1223	;# 
   955   0004C8                     TRISC           equ	1224	;# 
   956   0004C9                     TRISD           equ	1225	;# 
   957   0004CA                     TRISE           equ	1226	;# 
   958   0004CB                     TRISF           equ	1227	;# 
   959   0004CE                     PORTA           equ	1230	;# 
   960   0004CF                     PORTB           equ	1231	;# 
   961   0004D0                     PORTC           equ	1232	;# 
   962   0004D1                     PORTD           equ	1233	;# 
   963   0004D2                     PORTE           equ	1234	;# 
   964   0004D3                     PORTF           equ	1235	;# 
   965   0004D6                     INTCON0         equ	1238	;# 
   966   0004D7                     INTCON1         equ	1239	;# 
   967   0004D8                     STATUS          equ	1240	;# 
   968   0004D9                     FSR2            equ	1241	;# 
   969   0004D9                     FSR2L           equ	1241	;# 
   970   0004DA                     FSR2H           equ	1242	;# 
   971   0004DB                     PLUSW2          equ	1243	;# 
   972   0004DC                     PREINC2         equ	1244	;# 
   973   0004DD                     POSTDEC2        equ	1245	;# 
   974   0004DE                     POSTINC2        equ	1246	;# 
   975   0004DF                     INDF2           equ	1247	;# 
   976   0004E0                     BSR             equ	1248	;# 
   977   0004E1                     FSR1            equ	1249	;# 
   978   0004E1                     FSR1L           equ	1249	;# 
   979   0004E2                     FSR1H           equ	1250	;# 
   980   0004E3                     PLUSW1          equ	1251	;# 
   981   0004E4                     PREINC1         equ	1252	;# 
   982   0004E5                     POSTDEC1        equ	1253	;# 
   983   0004E6                     POSTINC1        equ	1254	;# 
   984   0004E7                     INDF1           equ	1255	;# 
   985   0004E8                     WREG            equ	1256	;# 
   986   0004E9                     FSR0            equ	1257	;# 
   987   0004E9                     FSR0L           equ	1257	;# 
   988   0004EA                     FSR0H           equ	1258	;# 
   989   0004EB                     PLUSW0          equ	1259	;# 
   990   0004EC                     PREINC0         equ	1260	;# 
   991   0004ED                     POSTDEC0        equ	1261	;# 
   992   0004EE                     POSTINC0        equ	1262	;# 
   993   0004EF                     INDF0           equ	1263	;# 
   994   0004F0                     PCON0           equ	1264	;# 
   995   0004F1                     PCON1           equ	1265	;# 
   996   0004F2                     CPUDOZE         equ	1266	;# 
   997   0004F3                     PROD            equ	1267	;# 
   998   0004F3                     PRODL           equ	1267	;# 
   999   0004F4                     PRODH           equ	1268	;# 
  1000   0004F5                     TABLAT          equ	1269	;# 
  1001   0004F6                     TBLPTR          equ	1270	;# 
  1002   0004F6                     TBLPTRL         equ	1270	;# 
  1003   0004F7                     TBLPTRH         equ	1271	;# 
  1004   0004F8                     TBLPTRU         equ	1272	;# 
  1005   0004F9                     PCLAT           equ	1273	;# 
  1006   0004F9                     PCL             equ	1273	;# 
  1007   0004FA                     PCLATH          equ	1274	;# 
  1008   0004FB                     PCLATU          equ	1275	;# 
  1009   0004FC                     STKPTR          equ	1276	;# 
  1010   0004FD                     TOS             equ	1277	;# 
  1011   0004FD                     TOSL            equ	1277	;# 
  1012   0004FE                     TOSH            equ	1278	;# 
  1013   0004FF                     TOSU            equ	1279	;# 
  1014   000039                     CLKRCON         equ	57	;# 
  1015   00003A                     CLKRCLK         equ	58	;# 
  1016   000040                     NVMCON0         equ	64	;# 
  1017   000041                     NVMCON1         equ	65	;# 
  1018   000042                     NVMLOCK         equ	66	;# 
  1019   000043                     NVMADR          equ	67	;# 
  1020   000043                     NVMADRL         equ	67	;# 
  1021   000044                     NVMADRH         equ	68	;# 
  1022   000045                     NVMADRU         equ	69	;# 
  1023   000046                     NVMDAT          equ	70	;# 
  1024   000046                     NVMDATL         equ	70	;# 
  1025   000047                     NVMDATH         equ	71	;# 
  1026   000048                     VREGCON         equ	72	;# 
  1027   000049                     BORCON          equ	73	;# 
  1028   00004A                     HLVDCON0        equ	74	;# 
  1029   00004B                     HLVDCON1        equ	75	;# 
  1030   00004C                     ZCDCON          equ	76	;# 
  1031   000060                     PMD0            equ	96	;# 
  1032   000061                     PMD1            equ	97	;# 
  1033   000063                     PMD3            equ	99	;# 
  1034   000064                     PMD4            equ	100	;# 
  1035   000065                     PMD5            equ	101	;# 
  1036   000066                     PMD6            equ	102	;# 
  1037   000067                     PMD7            equ	103	;# 
  1038   000068                     PMD8            equ	104	;# 
  1039   00006A                     MD1CON0         equ	106	;# 
  1040   00006B                     MD1CON1         equ	107	;# 
  1041   00006C                     MD1SRC          equ	108	;# 
  1042   00006D                     MD1CARL         equ	109	;# 
  1043   00006E                     MD1CARH         equ	110	;# 
  1044   00006F                     CMOUT           equ	111	;# 
  1045   000070                     CM1CON0         equ	112	;# 
  1046   000071                     CM1CON1         equ	113	;# 
  1047   000072                     CM1NCH          equ	114	;# 
  1048   000073                     CM1PCH          equ	115	;# 
  1049   000074                     CM2CON0         equ	116	;# 
  1050   000075                     CM2CON1         equ	117	;# 
  1051   000076                     CM2NCH          equ	118	;# 
  1052   000077                     CM2PCH          equ	119	;# 
  1053   000078                     WDTCON0         equ	120	;# 
  1054   000079                     WDTCON1         equ	121	;# 
  1055   00007A                     WDTPS           equ	122	;# 
  1056   00007A                     WDTPSL          equ	122	;# 
  1057   00007B                     WDTPSH          equ	123	;# 
  1058   00007C                     WDTTMR          equ	124	;# 
  1059   00007D                     DAC1DAT         equ	125	;# 
  1060   00007D                     DAC1DATL        equ	125	;# 
  1061   00007F                     DAC1CON         equ	127	;# 
  1062   000080                     SPI1RXB         equ	128	;# 
  1063   000081                     SPI1TXB         equ	129	;# 
  1064   000082                     SPI1TCNT        equ	130	;# 
  1065   000082                     SPI1TCNTL       equ	130	;# 
  1066   000083                     SPI1TCNTH       equ	131	;# 
  1067   000084                     SPI1CON0        equ	132	;# 
  1068   000085                     SPI1CON1        equ	133	;# 
  1069   000086                     SPI1CON2        equ	134	;# 
  1070   000087                     SPI1STATUS      equ	135	;# 
  1071   000088                     SPI1TWIDTH      equ	136	;# 
  1072   000089                     SPI1BAUD        equ	137	;# 
  1073   00008A                     SPI1INTF        equ	138	;# 
  1074   00008B                     SPI1INTE        equ	139	;# 
  1075   00008C                     SPI1CLK         equ	140	;# 
  1076   00008D                     SPI2RXB         equ	141	;# 
  1077   00008E                     SPI2TXB         equ	142	;# 
  1078   00008F                     SPI2TCNT        equ	143	;# 
  1079   00008F                     SPI2TCNTL       equ	143	;# 
  1080   000090                     SPI2TCNTH       equ	144	;# 
  1081   000091                     SPI2CON0        equ	145	;# 
  1082   000092                     SPI2CON1        equ	146	;# 
  1083   000093                     SPI2CON2        equ	147	;# 
  1084   000094                     SPI2STATUS      equ	148	;# 
  1085   000095                     SPI2TWIDTH      equ	149	;# 
  1086   000096                     SPI2BAUD        equ	150	;# 
  1087   000097                     SPI2INTF        equ	151	;# 
  1088   000098                     SPI2INTE        equ	152	;# 
  1089   000099                     SPI2CLK         equ	153	;# 
  1090   0000AC                     ACTCON          equ	172	;# 
  1091   0000AD                     OSCCON1         equ	173	;# 
  1092   0000AE                     OSCCON2         equ	174	;# 
  1093   0000AF                     OSCCON3         equ	175	;# 
  1094   0000B0                     OSCTUNE         equ	176	;# 
  1095   0000B1                     OSCFRQ          equ	177	;# 
  1096   0000B1                     OSCFREQ         equ	177	;# 
  1097   0000B2                     OSCSTAT         equ	178	;# 
  1098   0000B2                     OSCSTAT1        equ	178	;# 
  1099   0000B3                     OSCEN           equ	179	;# 
  1100   0000B4                     PRLOCK          equ	180	;# 
  1101   0000B5                     SCANPR          equ	181	;# 
  1102   0000B6                     DMA1PR          equ	182	;# 
  1103   0000B7                     DMA2PR          equ	183	;# 
  1104   0000B8                     DMA3PR          equ	184	;# 
  1105   0000B9                     DMA4PR          equ	185	;# 
  1106   0000BA                     DMA5PR          equ	186	;# 
  1107   0000BB                     DMA6PR          equ	187	;# 
  1108   0000BE                     MAINPR          equ	190	;# 
  1109   0000BF                     ISRPR           equ	191	;# 
  1110   0000D4                     CLCDATA         equ	212	;# 
  1111   0000D5                     CLCSELECT       equ	213	;# 
  1112   0000D6                     CLCnCON         equ	214	;# 
  1113   0000D7                     CLCnPOL         equ	215	;# 
  1114   0000D8                     CLCnSEL0        equ	216	;# 
  1115   0000D9                     CLCnSEL1        equ	217	;# 
  1116   0000DA                     CLCnSEL2        equ	218	;# 
  1117   0000DB                     CLCnSEL3        equ	219	;# 
  1118   0000DC                     CLCnGLS0        equ	220	;# 
  1119   0000DD                     CLCnGLS1        equ	221	;# 
  1120   0000DE                     CLCnGLS2        equ	222	;# 
  1121   0000DF                     CLCnGLS3        equ	223	;# 
  1122   0000E8                     DMASELECT       equ	232	;# 
  1123   0000E9                     DMAnBUF         equ	233	;# 
  1124   0000EA                     DMAnDCNT        equ	234	;# 
  1125   0000EA                     DMAnDCNTL       equ	234	;# 
  1126   0000EB                     DMAnDCNTH       equ	235	;# 
  1127   0000EC                     DMAnDPTR        equ	236	;# 
  1128   0000EC                     DMAnDPTRL       equ	236	;# 
  1129   0000ED                     DMAnDPTRH       equ	237	;# 
  1130   0000EE                     DMAnDSZ         equ	238	;# 
  1131   0000EE                     DMAnDSZL        equ	238	;# 
  1132   0000EF                     DMAnDSZH        equ	239	;# 
  1133   0000F0                     DMAnDSA         equ	240	;# 
  1134   0000F0                     DMAnDSAL        equ	240	;# 
  1135   0000F1                     DMAnDSAH        equ	241	;# 
  1136   0000F2                     DMAnSCNT        equ	242	;# 
  1137   0000F2                     DMAnSCNTL       equ	242	;# 
  1138   0000F3                     DMAnSCNTH       equ	243	;# 
  1139   0000F4                     DMAnSPTR        equ	244	;# 
  1140   0000F4                     DMAnSPTRL       equ	244	;# 
  1141   0000F5                     DMAnSPTRH       equ	245	;# 
  1142   0000F6                     DMAnSPTRU       equ	246	;# 
  1143   0000F7                     DMAnSSZ         equ	247	;# 
  1144   0000F7                     DMAnSSZL        equ	247	;# 
  1145   0000F8                     DMAnSSZH        equ	248	;# 
  1146   0000F9                     DMAnSSA         equ	249	;# 
  1147   0000F9                     DMAnSSAL        equ	249	;# 
  1148   0000FA                     DMAnSSAH        equ	250	;# 
  1149   0000FB                     DMAnSSAU        equ	251	;# 
  1150   0000FC                     DMAnCON0        equ	252	;# 
  1151   0000FD                     DMAnCON1        equ	253	;# 
  1152   0000FE                     DMAnAIRQ        equ	254	;# 
  1153   0000FF                     DMAnSIRQ        equ	255	;# 
  1154   000200                     PPSLOCK         equ	512	;# 
  1155   000201                     RA0PPS          equ	513	;# 
  1156   000202                     RA1PPS          equ	514	;# 
  1157   000203                     RA2PPS          equ	515	;# 
  1158   000204                     RA3PPS          equ	516	;# 
  1159   000205                     RA4PPS          equ	517	;# 
  1160   000206                     RA5PPS          equ	518	;# 
  1161   000207                     RA6PPS          equ	519	;# 
  1162   000208                     RA7PPS          equ	520	;# 
  1163   000209                     RB0PPS          equ	521	;# 
  1164   00020A                     RB1PPS          equ	522	;# 
  1165   00020B                     RB2PPS          equ	523	;# 
  1166   00020C                     RB3PPS          equ	524	;# 
  1167   00020D                     RB4PPS          equ	525	;# 
  1168   00020E                     RB5PPS          equ	526	;# 
  1169   00020F                     RB6PPS          equ	527	;# 
  1170   000210                     RB7PPS          equ	528	;# 
  1171   000211                     RC0PPS          equ	529	;# 
  1172   000212                     RC1PPS          equ	530	;# 
  1173   000213                     RC2PPS          equ	531	;# 
  1174   000214                     RC3PPS          equ	532	;# 
  1175   000215                     RC4PPS          equ	533	;# 
  1176   000216                     RC5PPS          equ	534	;# 
  1177   000217                     RC6PPS          equ	535	;# 
  1178   000218                     RC7PPS          equ	536	;# 
  1179   000219                     RD0PPS          equ	537	;# 
  1180   00021A                     RD1PPS          equ	538	;# 
  1181   00021B                     RD2PPS          equ	539	;# 
  1182   00021C                     RD3PPS          equ	540	;# 
  1183   00021D                     RD4PPS          equ	541	;# 
  1184   00021E                     RD5PPS          equ	542	;# 
  1185   00021F                     RD6PPS          equ	543	;# 
  1186   000220                     RD7PPS          equ	544	;# 
  1187   000221                     RE0PPS          equ	545	;# 
  1188   000222                     RE1PPS          equ	546	;# 
  1189   000223                     RE2PPS          equ	547	;# 
  1190   000229                     RF0PPS          equ	553	;# 
  1191   00022A                     RF1PPS          equ	554	;# 
  1192   00022B                     RF2PPS          equ	555	;# 
  1193   00022C                     RF3PPS          equ	556	;# 
  1194   00022D                     RF4PPS          equ	557	;# 
  1195   00022E                     RF5PPS          equ	558	;# 
  1196   00022F                     RF6PPS          equ	559	;# 
  1197   000230                     RF7PPS          equ	560	;# 
  1198   00023E                     INT0PPS         equ	574	;# 
  1199   00023F                     INT1PPS         equ	575	;# 
  1200   000240                     INT2PPS         equ	576	;# 
  1201   000241                     T0CKIPPS        equ	577	;# 
  1202   000242                     T1CKIPPS        equ	578	;# 
  1203   000243                     T1GPPS          equ	579	;# 
  1204   000244                     T3CKIPPS        equ	580	;# 
  1205   000245                     T3GPPS          equ	581	;# 
  1206   000246                     T5CKIPPS        equ	582	;# 
  1207   000247                     T5GPPS          equ	583	;# 
  1208   000248                     T2INPPS         equ	584	;# 
  1209   000249                     T4INPPS         equ	585	;# 
  1210   00024A                     T6INPPS         equ	586	;# 
  1211   00024F                     CCP1PPS         equ	591	;# 
  1212   000250                     CCP2PPS         equ	592	;# 
  1213   000251                     CCP3PPS         equ	593	;# 
  1214   000253                     PWM1ERSPPS      equ	595	;# 
  1215   000254                     PWM2ERSPPS      equ	596	;# 
  1216   000255                     PWM3ERSPPS      equ	597	;# 
  1217   000257                     PWMIN0PPS       equ	599	;# 
  1218   000258                     PWMIN1PPS       equ	600	;# 
  1219   000259                     SMT1WINPPS      equ	601	;# 
  1220   00025A                     SMT1SIGPPS      equ	602	;# 
  1221   00025B                     CWG1PPS         equ	603	;# 
  1222   00025B                     CWG1INPPS       equ	603	;# 
  1223   00025C                     CWG2PPS         equ	604	;# 
  1224   00025C                     CWG2INPPS       equ	604	;# 
  1225   00025D                     CWG3PPS         equ	605	;# 
  1226   00025D                     CWG3INPPS       equ	605	;# 
  1227   00025E                     MD1CARLPPS      equ	606	;# 
  1228   00025E                     MDCARLPPS       equ	606	;# 
  1229   00025F                     MD1CARHPPS      equ	607	;# 
  1230   00025F                     MDCARHPPS       equ	607	;# 
  1231   000260                     MD1SRCPPS       equ	608	;# 
  1232   000260                     MDSRCPPS        equ	608	;# 
  1233   000261                     CLCIN0PPS       equ	609	;# 
  1234   000262                     CLCIN1PPS       equ	610	;# 
  1235   000263                     CLCIN2PPS       equ	611	;# 
  1236   000264                     CLCIN3PPS       equ	612	;# 
  1237   000265                     CLCIN4PPS       equ	613	;# 
  1238   000266                     CLCIN5PPS       equ	614	;# 
  1239   000267                     CLCIN6PPS       equ	615	;# 
  1240   000268                     CLCIN7PPS       equ	616	;# 
  1241   000269                     ADACTPPS        equ	617	;# 
  1242   00026A                     SPI1SCKPPS      equ	618	;# 
  1243   00026B                     SPI1SDIPPS      equ	619	;# 
  1244   00026C                     SPI1SSPPS       equ	620	;# 
  1245   00026D                     SPI2SCKPPS      equ	621	;# 
  1246   00026E                     SPI2SDIPPS      equ	622	;# 
  1247   00026F                     SPI2SSPPS       equ	623	;# 
  1248   000270                     I2C1SDAPPS      equ	624	;# 
  1249   000271                     I2C1SCLPPS      equ	625	;# 
  1250   000272                     U1RXPPS         equ	626	;# 
  1251   000273                     U1CTSPPS        equ	627	;# 
  1252   000274                     U2RXPPS         equ	628	;# 
  1253   000275                     U2CTSPPS        equ	629	;# 
  1254   000276                     U3RXPPS         equ	630	;# 
  1255   000277                     U3CTSPPS        equ	631	;# 
  1256   000278                     U4RXPPS         equ	632	;# 
  1257   000279                     U4CTSPPS        equ	633	;# 
  1258   00027A                     U5RXPPS         equ	634	;# 
  1259   00027B                     U5CTSPPS        equ	635	;# 
  1260   000286                     RC4I2C          equ	646	;# 
  1261   000287                     RC3I2C          equ	647	;# 
  1262   000288                     RB2I2C          equ	648	;# 
  1263   000289                     RB1I2C          equ	649	;# 
  1264   00028B                     I2C1RXB         equ	651	;# 
  1265   00028C                     I2C1TXB         equ	652	;# 
  1266   00028D                     I2C1CNT         equ	653	;# 
  1267   00028E                     I2C1ADB0        equ	654	;# 
  1268   00028F                     I2C1ADB1        equ	655	;# 
  1269   000290                     I2C1ADR0        equ	656	;# 
  1270   000291                     I2C1ADR1        equ	657	;# 
  1271   000292                     I2C1ADR2        equ	658	;# 
  1272   000293                     I2C1ADR3        equ	659	;# 
  1273   000294                     I2C1CON0        equ	660	;# 
  1274   000295                     I2C1CON1        equ	661	;# 
  1275   000296                     I2C1CON2        equ	662	;# 
  1276   000297                     I2C1ERR         equ	663	;# 
  1277   000298                     I2C1STAT0       equ	664	;# 
  1278   000299                     I2C1STAT1       equ	665	;# 
  1279   00029A                     I2C1PIR         equ	666	;# 
  1280   00029B                     I2C1PIE         equ	667	;# 
  1281   00029C                     I2C1CLK         equ	668	;# 
  1282   00029D                     I2C1BTO         equ	669	;# 
  1283   0002A1                     U1RXB           equ	673	;# 
  1284   0002A1                     U1RXBL          equ	673	;# 
  1285   0002A2                     U1RXCHK         equ	674	;# 
  1286   0002A3                     U1TXB           equ	675	;# 
  1287   0002A3                     U1TXBL          equ	675	;# 
  1288   0002A4                     U1TXCHK         equ	676	;# 
  1289   0002A5                     U1P1            equ	677	;# 
  1290   0002A5                     U1P1L           equ	677	;# 
  1291   0002A6                     U1P1H           equ	678	;# 
  1292   0002A7                     U1P2            equ	679	;# 
  1293   0002A7                     U1P2L           equ	679	;# 
  1294   0002A8                     U1P2H           equ	680	;# 
  1295   0002A9                     U1P3            equ	681	;# 
  1296   0002A9                     U1P3L           equ	681	;# 
  1297   0002AA                     U1P3H           equ	682	;# 
  1298   0002AB                     U1CON0          equ	683	;# 
  1299   0002AC                     U1CON1          equ	684	;# 
  1300   0002AD                     U1CON2          equ	685	;# 
  1301   0002AE                     U1BRG           equ	686	;# 
  1302   0002AE                     U1BRGL          equ	686	;# 
  1303   0002AF                     U1BRGH          equ	687	;# 
  1304   0002B0                     U1FIFO          equ	688	;# 
  1305   0002B1                     U1UIR           equ	689	;# 
  1306   0002B2                     U1ERRIR         equ	690	;# 
  1307   0002B3                     U1ERRIE         equ	691	;# 
  1308   0002B4                     U2RXB           equ	692	;# 
  1309   0002B4                     U2RXBL          equ	692	;# 
  1310   0002B6                     U2TXB           equ	694	;# 
  1311   0002B6                     U2TXBL          equ	694	;# 
  1312   0002B8                     U2P1            equ	696	;# 
  1313   0002B8                     U2P1L           equ	696	;# 
  1314   0002BA                     U2P2            equ	698	;# 
  1315   0002BA                     U2P2L           equ	698	;# 
  1316   0002BC                     U2P3            equ	700	;# 
  1317   0002BC                     U2P3L           equ	700	;# 
  1318   0002BE                     U2CON0          equ	702	;# 
  1319   0002BF                     U2CON1          equ	703	;# 
  1320   0002C0                     U2CON2          equ	704	;# 
  1321   0002C1                     U2BRG           equ	705	;# 
  1322   0002C1                     U2BRGL          equ	705	;# 
  1323   0002C2                     U2BRGH          equ	706	;# 
  1324   0002C3                     U2FIFO          equ	707	;# 
  1325   0002C4                     U2UIR           equ	708	;# 
  1326   0002C5                     U2ERRIR         equ	709	;# 
  1327   0002C6                     U2ERRIE         equ	710	;# 
  1328   0002C7                     U3RXB           equ	711	;# 
  1329   0002C7                     U3RXBL          equ	711	;# 
  1330   0002C9                     U3TXB           equ	713	;# 
  1331   0002C9                     U3TXBL          equ	713	;# 
  1332   0002CB                     U3P1            equ	715	;# 
  1333   0002CB                     U3P1L           equ	715	;# 
  1334   0002CD                     U3P2            equ	717	;# 
  1335   0002CD                     U3P2L           equ	717	;# 
  1336   0002CF                     U3P3            equ	719	;# 
  1337   0002CF                     U3P3L           equ	719	;# 
  1338   0002D1                     U3CON0          equ	721	;# 
  1339   0002D2                     U3CON1          equ	722	;# 
  1340   0002D3                     U3CON2          equ	723	;# 
  1341   0002D4                     U3BRG           equ	724	;# 
  1342   0002D4                     U3BRGL          equ	724	;# 
  1343   0002D5                     U3BRGH          equ	725	;# 
  1344   0002D6                     U3FIFO          equ	726	;# 
  1345   0002D7                     U3UIR           equ	727	;# 
  1346   0002D8                     U3ERRIR         equ	728	;# 
  1347   0002D9                     U3ERRIE         equ	729	;# 
  1348   0002DA                     U4RXB           equ	730	;# 
  1349   0002DA                     U4RXBL          equ	730	;# 
  1350   0002DC                     U4TXB           equ	732	;# 
  1351   0002DC                     U4TXBL          equ	732	;# 
  1352   0002DE                     U4P1            equ	734	;# 
  1353   0002DE                     U4P1L           equ	734	;# 
  1354   0002E0                     U4P2            equ	736	;# 
  1355   0002E0                     U4P2L           equ	736	;# 
  1356   0002E2                     U4P3            equ	738	;# 
  1357   0002E2                     U4P3L           equ	738	;# 
  1358   0002E4                     U4CON0          equ	740	;# 
  1359   0002E5                     U4CON1          equ	741	;# 
  1360   0002E6                     U4CON2          equ	742	;# 
  1361   0002E7                     U4BRG           equ	743	;# 
  1362   0002E7                     U4BRGL          equ	743	;# 
  1363   0002E8                     U4BRGH          equ	744	;# 
  1364   0002E9                     U4FIFO          equ	745	;# 
  1365   0002EA                     U4UIR           equ	746	;# 
  1366   0002EB                     U4ERRIR         equ	747	;# 
  1367   0002EC                     U4ERRIE         equ	748	;# 
  1368   0002ED                     U5RXB           equ	749	;# 
  1369   0002ED                     U5RXBL          equ	749	;# 
  1370   0002EF                     U5TXB           equ	751	;# 
  1371   0002EF                     U5TXBL          equ	751	;# 
  1372   0002F1                     U5P1            equ	753	;# 
  1373   0002F1                     U5P1L           equ	753	;# 
  1374   0002F3                     U5P2            equ	755	;# 
  1375   0002F3                     U5P2L           equ	755	;# 
  1376   0002F5                     U5P3            equ	757	;# 
  1377   0002F5                     U5P3L           equ	757	;# 
  1378   0002F7                     U5CON0          equ	759	;# 
  1379   0002F8                     U5CON1          equ	760	;# 
  1380   0002F9                     U5CON2          equ	761	;# 
  1381   0002FA                     U5BRG           equ	762	;# 
  1382   0002FA                     U5BRGL          equ	762	;# 
  1383   0002FB                     U5BRGH          equ	763	;# 
  1384   0002FC                     U5FIFO          equ	764	;# 
  1385   0002FD                     U5UIR           equ	765	;# 
  1386   0002FE                     U5ERRIR         equ	766	;# 
  1387   0002FF                     U5ERRIE         equ	767	;# 
  1388   000300                     SMT1TMR         equ	768	;# 
  1389   000300                     SMT1TMRL        equ	768	;# 
  1390   000301                     SMT1TMRH        equ	769	;# 
  1391   000302                     SMT1TMRU        equ	770	;# 
  1392   000303                     SMT1CPR         equ	771	;# 
  1393   000303                     SMT1CPRL        equ	771	;# 
  1394   000304                     SMT1CPRH        equ	772	;# 
  1395   000305                     SMT1CPRU        equ	773	;# 
  1396   000306                     SMT1CPW         equ	774	;# 
  1397   000306                     SMT1CPWL        equ	774	;# 
  1398   000307                     SMT1CPWH        equ	775	;# 
  1399   000308                     SMT1CPWU        equ	776	;# 
  1400   000309                     SMT1PR          equ	777	;# 
  1401   000309                     SMT1PRL         equ	777	;# 
  1402   00030A                     SMT1PRH         equ	778	;# 
  1403   00030B                     SMT1PRU         equ	779	;# 
  1404   00030C                     SMT1CON0        equ	780	;# 
  1405   00030D                     SMT1CON1        equ	781	;# 
  1406   00030E                     SMT1STAT        equ	782	;# 
  1407   00030F                     SMT1CLK         equ	783	;# 
  1408   000310                     SMT1SIG         equ	784	;# 
  1409   000311                     SMT1WIN         equ	785	;# 
  1410   000318                     TMR0L           equ	792	;# 
  1411   000318                     TMR0            equ	792	;# 
  1412   000319                     TMR0H           equ	793	;# 
  1413   000319                     PR0             equ	793	;# 
  1414   00031A                     T0CON0          equ	794	;# 
  1415   00031B                     T0CON1          equ	795	;# 
  1416   00031C                     TMR1            equ	796	;# 
  1417   00031C                     TMR1L           equ	796	;# 
  1418   00031D                     TMR1H           equ	797	;# 
  1419   00031E                     T1CON           equ	798	;# 
  1420   00031E                     TMR1CON         equ	798	;# 
  1421   00031F                     T1GCON          equ	799	;# 
  1422   00031F                     TMR1GCON        equ	799	;# 
  1423   000320                     T1GATE          equ	800	;# 
  1424   000320                     TMR1GATE        equ	800	;# 
  1425   000321                     T1CLK           equ	801	;# 
  1426   000321                     TMR1CLK         equ	801	;# 
  1427   000321                     PR1             equ	801	;# 
  1428   000322                     T2TMR           equ	802	;# 
  1429   000322                     TMR2            equ	802	;# 
  1430   000323                     T2PR            equ	803	;# 
  1431   000323                     PR2             equ	803	;# 
  1432   000324                     T2CON           equ	804	;# 
  1433   000325                     T2HLT           equ	805	;# 
  1434   000326                     T2CLKCON        equ	806	;# 
  1435   000326                     T2CLK           equ	806	;# 
  1436   000327                     T2RST           equ	807	;# 
  1437   000328                     TMR3            equ	808	;# 
  1438   000328                     TMR3L           equ	808	;# 
  1439   000329                     TMR3H           equ	809	;# 
  1440   00032A                     T3CON           equ	810	;# 
  1441   00032A                     TMR3CON         equ	810	;# 
  1442   00032B                     T3GCON          equ	811	;# 
  1443   00032B                     TMR3GCON        equ	811	;# 
  1444   00032C                     T3GATE          equ	812	;# 
  1445   00032C                     TMR3GATE        equ	812	;# 
  1446   00032D                     T3CLK           equ	813	;# 
  1447   00032D                     TMR3CLK         equ	813	;# 
  1448   00032D                     PR3             equ	813	;# 
  1449   00032E                     T4TMR           equ	814	;# 
  1450   00032E                     TMR4            equ	814	;# 
  1451   00032F                     T4PR            equ	815	;# 
  1452   00032F                     PR4             equ	815	;# 
  1453   000330                     T4CON           equ	816	;# 
  1454   000331                     T4HLT           equ	817	;# 
  1455   000332                     T4CLKCON        equ	818	;# 
  1456   000332                     T4CLK           equ	818	;# 
  1457   000333                     T4RST           equ	819	;# 
  1458   000334                     TMR5            equ	820	;# 
  1459   000334                     TMR5L           equ	820	;# 
  1460   000335                     TMR5H           equ	821	;# 
  1461   000336                     T5CON           equ	822	;# 
  1462   000336                     TMR5CON         equ	822	;# 
  1463   000337                     T5GCON          equ	823	;# 
  1464   000337                     TMR5GCON        equ	823	;# 
  1465   000338                     T5GATE          equ	824	;# 
  1466   000338                     TMR5GATE        equ	824	;# 
  1467   000339                     T5CLK           equ	825	;# 
  1468   000339                     TMR5CLK         equ	825	;# 
  1469   000339                     PR5             equ	825	;# 
  1470   00033A                     T6TMR           equ	826	;# 
  1471   00033A                     TMR6            equ	826	;# 
  1472   00033B                     T6PR            equ	827	;# 
  1473   00033B                     PR6             equ	827	;# 
  1474   00033C                     T6CON           equ	828	;# 
  1475   00033D                     T6HLT           equ	829	;# 
  1476   00033E                     T6CLKCON        equ	830	;# 
  1477   00033E                     T6CLK           equ	830	;# 
  1478   00033F                     T6RST           equ	831	;# 
  1479   000340                     CCPR1           equ	832	;# 
  1480   000340                     CCPR1L          equ	832	;# 
  1481   000341                     CCPR1H          equ	833	;# 
  1482   000342                     CCP1CON         equ	834	;# 
  1483   000343                     CCP1CAP         equ	835	;# 
  1484   000344                     CCPR2           equ	836	;# 
  1485   000344                     CCPR2L          equ	836	;# 
  1486   000345                     CCPR2H          equ	837	;# 
  1487   000346                     CCP2CON         equ	838	;# 
  1488   000347                     CCP2CAP         equ	839	;# 
  1489   000348                     CCPR3           equ	840	;# 
  1490   000348                     CCPR3L          equ	840	;# 
  1491   000349                     CCPR3H          equ	841	;# 
  1492   00034A                     CCP3CON         equ	842	;# 
  1493   00034B                     CCP3CAP         equ	843	;# 
  1494   00034C                     CCPTMRS0        equ	844	;# 
  1495   00034F                     CRCDATA         equ	847	;# 
  1496   00034F                     CRCDATL         equ	847	;# 
  1497   000350                     CRCDATH         equ	848	;# 
  1498   000351                     CRCACC          equ	849	;# 
  1499   000351                     CRCACCL         equ	849	;# 
  1500   000352                     CRCACCH         equ	850	;# 
  1501   000353                     CRCSHFT         equ	851	;# 
  1502   000353                     CRCSHIFTL       equ	851	;# 
  1503   000354                     CRCSHIFTH       equ	852	;# 
  1504   000355                     CRCXOR          equ	853	;# 
  1505   000355                     CRCXORL         equ	853	;# 
  1506   000356                     CRCXORH         equ	854	;# 
  1507   000357                     CRCCON0         equ	855	;# 
  1508   000358                     CRCCON1         equ	856	;# 
  1509   00035A                     SCANLADR        equ	858	;# 
  1510   00035A                     SCANLADRL       equ	858	;# 
  1511   00035B                     SCANLADRH       equ	859	;# 
  1512   00035C                     SCANLADRU       equ	860	;# 
  1513   00035D                     SCANHADR        equ	861	;# 
  1514   00035D                     SCANHADRL       equ	861	;# 
  1515   00035E                     SCANHADRH       equ	862	;# 
  1516   00035F                     SCANHADRU       equ	863	;# 
  1517   000360                     SCANCON0        equ	864	;# 
  1518   000361                     SCANTRIG        equ	865	;# 
  1519   000362                     IPR0            equ	866	;# 
  1520   000363                     IPR1            equ	867	;# 
  1521   000364                     IPR2            equ	868	;# 
  1522   000365                     IPR3            equ	869	;# 
  1523   000366                     IPR4            equ	870	;# 
  1524   000367                     IPR5            equ	871	;# 
  1525   000368                     IPR6            equ	872	;# 
  1526   000369                     IPR7            equ	873	;# 
  1527   00036A                     IPR8            equ	874	;# 
  1528   00036B                     IPR9            equ	875	;# 
  1529   00036C                     IPR10           equ	876	;# 
  1530   00036D                     IPR11           equ	877	;# 
  1531   00036E                     IPR12           equ	878	;# 
  1532   00036F                     IPR13           equ	879	;# 
  1533   000370                     IPR14           equ	880	;# 
  1534   000371                     IPR15           equ	881	;# 
  1535   000373                     STATUS_CSHAD    equ	883	;# 
  1536   000374                     WREG_CSHAD      equ	884	;# 
  1537   000375                     BSR_CSHAD       equ	885	;# 
  1538   000376                     SHADCON         equ	886	;# 
  1539   000377                     STATUS_SHAD     equ	887	;# 
  1540   000378                     WREG_SHAD       equ	888	;# 
  1541   000379                     BSR_SHAD        equ	889	;# 
  1542   00037A                     PCLATH_SHAD     equ	890	;# 
  1543   00037B                     PCLATU_SHAD     equ	891	;# 
  1544   00037C                     FSR0SH          equ	892	;# 
  1545   00037C                     FSR0L_SHAD      equ	892	;# 
  1546   00037D                     FSR0H_SHAD      equ	893	;# 
  1547   00037E                     FSR1SH          equ	894	;# 
  1548   00037E                     FSR1L_SHAD      equ	894	;# 
  1549   00037F                     FSR1H_SHAD      equ	895	;# 
  1550   000380                     FSR2SH          equ	896	;# 
  1551   000380                     FSR2L_SHAD      equ	896	;# 
  1552   000381                     FSR2H_SHAD      equ	897	;# 
  1553   000382                     PRODSH          equ	898	;# 
  1554   000382                     PRODL_SHAD      equ	898	;# 
  1555   000383                     PRODH_SHAD      equ	899	;# 
  1556   0003BC                     CWG1CLK         equ	956	;# 
  1557   0003BC                     CWG1CLKCON      equ	956	;# 
  1558   0003BD                     CWG1ISM         equ	957	;# 
  1559   0003BD                     CWG1DAT         equ	957	;# 
  1560   0003BE                     CWG1DBR         equ	958	;# 
  1561   0003BF                     CWG1DBF         equ	959	;# 
  1562   0003C0                     CWG1CON0        equ	960	;# 
  1563   0003C1                     CWG1CON1        equ	961	;# 
  1564   0003C2                     CWG1AS0         equ	962	;# 
  1565   0003C3                     CWG1AS1         equ	963	;# 
  1566   0003C4                     CWG1STR         equ	964	;# 
  1567   0003C5                     CWG2CLK         equ	965	;# 
  1568   0003C5                     CWG2CLKCON      equ	965	;# 
  1569   0003C6                     CWG2ISM         equ	966	;# 
  1570   0003C6                     CWG2DAT         equ	966	;# 
  1571   0003C7                     CWG2DBR         equ	967	;# 
  1572   0003C8                     CWG2DBF         equ	968	;# 
  1573   0003C9                     CWG2CON0        equ	969	;# 
  1574   0003CA                     CWG2CON1        equ	970	;# 
  1575   0003CB                     CWG2AS0         equ	971	;# 
  1576   0003CC                     CWG2AS1         equ	972	;# 
  1577   0003CD                     CWG2STR         equ	973	;# 
  1578   0003CE                     CWG3CLK         equ	974	;# 
  1579   0003CE                     CWG3CLKCON      equ	974	;# 
  1580   0003CF                     CWG3ISM         equ	975	;# 
  1581   0003CF                     CWG3DAT         equ	975	;# 
  1582   0003D0                     CWG3DBR         equ	976	;# 
  1583   0003D1                     CWG3DBF         equ	977	;# 
  1584   0003D2                     CWG3CON0        equ	978	;# 
  1585   0003D3                     CWG3CON1        equ	979	;# 
  1586   0003D4                     CWG3AS0         equ	980	;# 
  1587   0003D5                     CWG3AS1         equ	981	;# 
  1588   0003D6                     CWG3STR         equ	982	;# 
  1589   0003D7                     FVRCON          equ	983	;# 
  1590   0003D8                     ADCPCON         equ	984	;# 
  1591   0003D8                     ADCP            equ	984	;# 
  1592   0003D9                     ADLTH           equ	985	;# 
  1593   0003D9                     ADLTHL          equ	985	;# 
  1594   0003DA                     ADLTHH          equ	986	;# 
  1595   0003DB                     ADUTH           equ	987	;# 
  1596   0003DB                     ADUTHL          equ	987	;# 
  1597   0003DC                     ADUTHH          equ	988	;# 
  1598   0003DD                     ADERR           equ	989	;# 
  1599   0003DD                     ADERRL          equ	989	;# 
  1600   0003DE                     ADERRH          equ	990	;# 
  1601   0003DF                     ADSTPT          equ	991	;# 
  1602   0003DF                     ADSTPTL         equ	991	;# 
  1603   0003E0                     ADSTPTH         equ	992	;# 
  1604   0003E1                     ADFLTR          equ	993	;# 
  1605   0003E1                     ADFLTRL         equ	993	;# 
  1606   0003E2                     ADFLTRH         equ	994	;# 
  1607   0003E3                     ADACC           equ	995	;# 
  1608   0003E3                     ADACCL          equ	995	;# 
  1609   0003E4                     ADACCH          equ	996	;# 
  1610   0003E5                     ADACCU          equ	997	;# 
  1611   0003E6                     ADCNT           equ	998	;# 
  1612   0003E7                     ADRPT           equ	999	;# 
  1613   0003E8                     ADPREV          equ	1000	;# 
  1614   0003E8                     ADPREVL         equ	1000	;# 
  1615   0003E9                     ADPREVH         equ	1001	;# 
  1616   0003EA                     ADRES           equ	1002	;# 
  1617   0003EA                     ADRESL          equ	1002	;# 
  1618   0003EB                     ADRESH          equ	1003	;# 
  1619   0003EC                     ADPCH           equ	1004	;# 
  1620   0003EE                     ADACQ           equ	1006	;# 
  1621   0003EE                     ADACQL          equ	1006	;# 
  1622   0003EF                     ADACQH          equ	1007	;# 
  1623   0003F0                     ADCAP           equ	1008	;# 
  1624   0003F1                     ADPRE           equ	1009	;# 
  1625   0003F1                     ADPREL          equ	1009	;# 
  1626   0003F2                     ADPREH          equ	1010	;# 
  1627   0003F3                     ADCON0          equ	1011	;# 
  1628   0003F4                     ADCON1          equ	1012	;# 
  1629   0003F5                     ADCON2          equ	1013	;# 
  1630   0003F6                     ADCON3          equ	1014	;# 
  1631   0003F7                     ADSTAT          equ	1015	;# 
  1632   0003F8                     ADREF           equ	1016	;# 
  1633   0003F9                     ADACT           equ	1017	;# 
  1634   0003FA                     ADCLK           equ	1018	;# 
  1635   000400                     ANSELA          equ	1024	;# 
  1636   000401                     WPUA            equ	1025	;# 
  1637   000402                     ODCONA          equ	1026	;# 
  1638   000403                     SLRCONA         equ	1027	;# 
  1639   000404                     INLVLA          equ	1028	;# 
  1640   000405                     IOCAP           equ	1029	;# 
  1641   000406                     IOCAN           equ	1030	;# 
  1642   000407                     IOCAF           equ	1031	;# 
  1643   000408                     ANSELB          equ	1032	;# 
  1644   000409                     WPUB            equ	1033	;# 
  1645   00040A                     ODCONB          equ	1034	;# 
  1646   00040B                     SLRCONB         equ	1035	;# 
  1647   00040C                     INLVLB          equ	1036	;# 
  1648   00040D                     IOCBP           equ	1037	;# 
  1649   00040E                     IOCBN           equ	1038	;# 
  1650   00040F                     IOCBF           equ	1039	;# 
  1651   000410                     ANSELC          equ	1040	;# 
  1652   000411                     WPUC            equ	1041	;# 
  1653   000412                     ODCONC          equ	1042	;# 
  1654   000413                     SLRCONC         equ	1043	;# 
  1655   000414                     INLVLC          equ	1044	;# 
  1656   000415                     IOCCP           equ	1045	;# 
  1657   000416                     IOCCN           equ	1046	;# 
  1658   000417                     IOCCF           equ	1047	;# 
  1659   000418                     ANSELD          equ	1048	;# 
  1660   000419                     WPUD            equ	1049	;# 
  1661   00041A                     ODCOND          equ	1050	;# 
  1662   00041B                     SLRCOND         equ	1051	;# 
  1663   00041C                     INLVLD          equ	1052	;# 
  1664   000420                     ANSELE          equ	1056	;# 
  1665   000421                     WPUE            equ	1057	;# 
  1666   000422                     ODCONE          equ	1058	;# 
  1667   000423                     SLRCONE         equ	1059	;# 
  1668   000424                     INLVLE          equ	1060	;# 
  1669   000425                     IOCEP           equ	1061	;# 
  1670   000426                     IOCEN           equ	1062	;# 
  1671   000427                     IOCEF           equ	1063	;# 
  1672   000428                     ANSELF          equ	1064	;# 
  1673   000429                     WPUF            equ	1065	;# 
  1674   00042A                     ODCONF          equ	1066	;# 
  1675   00042B                     SLRCONF         equ	1067	;# 
  1676   00042C                     INLVLF          equ	1068	;# 
  1677   000440                     NCO1ACC         equ	1088	;# 
  1678   000440                     NCO1ACCL        equ	1088	;# 
  1679   000441                     NCO1ACCH        equ	1089	;# 
  1680   000442                     NCO1ACCU        equ	1090	;# 
  1681   000443                     NCO1INC         equ	1091	;# 
  1682   000443                     NCO1INCL        equ	1091	;# 
  1683   000444                     NCO1INCH        equ	1092	;# 
  1684   000445                     NCO1INCU        equ	1093	;# 
  1685   000446                     NCO1CON         equ	1094	;# 
  1686   000447                     NCO1CLK         equ	1095	;# 
  1687   000448                     NCO2ACC         equ	1096	;# 
  1688   000448                     NCO2ACCL        equ	1096	;# 
  1689   000449                     NCO2ACCH        equ	1097	;# 
  1690   00044A                     NCO2ACCU        equ	1098	;# 
  1691   00044B                     NCO2INC         equ	1099	;# 
  1692   00044B                     NCO2INCL        equ	1099	;# 
  1693   00044C                     NCO2INCH        equ	1100	;# 
  1694   00044D                     NCO2INCU        equ	1101	;# 
  1695   00044E                     NCO2CON         equ	1102	;# 
  1696   00044F                     NCO2CLK         equ	1103	;# 
  1697   000450                     NCO3ACC         equ	1104	;# 
  1698   000450                     NCO3ACCL        equ	1104	;# 
  1699   000451                     NCO3ACCH        equ	1105	;# 
  1700   000452                     NCO3ACCU        equ	1106	;# 
  1701   000453                     NCO3INC         equ	1107	;# 
  1702   000453                     NCO3INCL        equ	1107	;# 
  1703   000454                     NCO3INCH        equ	1108	;# 
  1704   000455                     NCO3INCU        equ	1109	;# 
  1705   000456                     NCO3CON         equ	1110	;# 
  1706   000457                     NCO3CLK         equ	1111	;# 
  1707   000459                     IVTLOCK         equ	1113	;# 
  1708   00045A                     IVTAD           equ	1114	;# 
  1709   00045A                     IVTADL          equ	1114	;# 
  1710   00045B                     IVTADH          equ	1115	;# 
  1711   00045C                     IVTADU          equ	1116	;# 
  1712   00045D                     IVTBASE         equ	1117	;# 
  1713   00045D                     IVTBASEL        equ	1117	;# 
  1714   00045E                     IVTBASEH        equ	1118	;# 
  1715   00045F                     IVTBASEU        equ	1119	;# 
  1716   000460                     PWM1ERS         equ	1120	;# 
  1717   000461                     PWM1CLK         equ	1121	;# 
  1718   000462                     PWM1LDS         equ	1122	;# 
  1719   000463                     PWM1PR          equ	1123	;# 
  1720   000463                     PWM1PRL         equ	1123	;# 
  1721   000464                     PWM1PRH         equ	1124	;# 
  1722   000465                     PWM1CPRE        equ	1125	;# 
  1723   000466                     PWM1PIPOS       equ	1126	;# 
  1724   000467                     PWM1GIR         equ	1127	;# 
  1725   000468                     PWM1GIE         equ	1128	;# 
  1726   000469                     PWM1CON         equ	1129	;# 
  1727   00046A                     PWM1S1CFG       equ	1130	;# 
  1728   00046B                     PWM1S1P1        equ	1131	;# 
  1729   00046B                     PWM1S1P1L       equ	1131	;# 
  1730   00046C                     PWM1S1P1H       equ	1132	;# 
  1731   00046D                     PWM1S1P2        equ	1133	;# 
  1732   00046D                     PWM1S1P2L       equ	1133	;# 
  1733   00046E                     PWM1S1P2H       equ	1134	;# 
  1734   00046F                     PWM2ERS         equ	1135	;# 
  1735   000470                     PWM2CLK         equ	1136	;# 
  1736   000471                     PWM2LDS         equ	1137	;# 
  1737   000472                     PWM2PR          equ	1138	;# 
  1738   000472                     PWM2PRL         equ	1138	;# 
  1739   000473                     PWM2PRH         equ	1139	;# 
  1740   000474                     PWM2CPRE        equ	1140	;# 
  1741   000475                     PWM2PIPOS       equ	1141	;# 
  1742   000476                     PWM2GIR         equ	1142	;# 
  1743   000477                     PWM2GIE         equ	1143	;# 
  1744   000478                     PWM2CON         equ	1144	;# 
  1745   000479                     PWM2S1CFG       equ	1145	;# 
  1746   00047A                     PWM2S1P1        equ	1146	;# 
  1747   00047A                     PWM2S1P1L       equ	1146	;# 
  1748   00047B                     PWM2S1P1H       equ	1147	;# 
  1749   00047C                     PWM2S1P2        equ	1148	;# 
  1750   00047C                     PWM2S1P2L       equ	1148	;# 
  1751   00047D                     PWM2S1P2H       equ	1149	;# 
  1752   00047E                     PWM3ERS         equ	1150	;# 
  1753   00047F                     PWM3CLK         equ	1151	;# 
  1754   000480                     PWM3LDS         equ	1152	;# 
  1755   000481                     PWM3PR          equ	1153	;# 
  1756   000481                     PWM3PRL         equ	1153	;# 
  1757   000482                     PWM3PRH         equ	1154	;# 
  1758   000483                     PWM3CPRE        equ	1155	;# 
  1759   000484                     PWM3PIPOS       equ	1156	;# 
  1760   000485                     PWM3GIR         equ	1157	;# 
  1761   000486                     PWM3GIE         equ	1158	;# 
  1762   000487                     PWM3CON         equ	1159	;# 
  1763   000488                     PWM3S1CFG       equ	1160	;# 
  1764   000489                     PWM3S1P1        equ	1161	;# 
  1765   000489                     PWM3S1P1L       equ	1161	;# 
  1766   00048A                     PWM3S1P1H       equ	1162	;# 
  1767   00048B                     PWM3S1P2        equ	1163	;# 
  1768   00048B                     PWM3S1P2L       equ	1163	;# 
  1769   00048C                     PWM3S1P2H       equ	1164	;# 
  1770   00049C                     PWMLOAD         equ	1180	;# 
  1771   00049D                     PWMEN           equ	1181	;# 
  1772   00049E                     PIE0            equ	1182	;# 
  1773   00049F                     PIE1            equ	1183	;# 
  1774   0004A0                     PIE2            equ	1184	;# 
  1775   0004A1                     PIE3            equ	1185	;# 
  1776   0004A2                     PIE4            equ	1186	;# 
  1777   0004A3                     PIE5            equ	1187	;# 
  1778   0004A4                     PIE6            equ	1188	;# 
  1779   0004A5                     PIE7            equ	1189	;# 
  1780   0004A6                     PIE8            equ	1190	;# 
  1781   0004A7                     PIE9            equ	1191	;# 
  1782   0004A8                     PIE10           equ	1192	;# 
  1783   0004A9                     PIE11           equ	1193	;# 
  1784   0004AA                     PIE12           equ	1194	;# 
  1785   0004AB                     PIE13           equ	1195	;# 
  1786   0004AC                     PIE14           equ	1196	;# 
  1787   0004AD                     PIE15           equ	1197	;# 
  1788   0004AE                     PIR0            equ	1198	;# 
  1789   0004AF                     PIR1            equ	1199	;# 
  1790   0004B0                     PIR2            equ	1200	;# 
  1791   0004B1                     PIR3            equ	1201	;# 
  1792   0004B2                     PIR4            equ	1202	;# 
  1793   0004B3                     PIR5            equ	1203	;# 
  1794   0004B4                     PIR6            equ	1204	;# 
  1795   0004B5                     PIR7            equ	1205	;# 
  1796   0004B6                     PIR8            equ	1206	;# 
  1797   0004B7                     PIR9            equ	1207	;# 
  1798   0004B8                     PIR10           equ	1208	;# 
  1799   0004B9                     PIR11           equ	1209	;# 
  1800   0004BA                     PIR12           equ	1210	;# 
  1801   0004BB                     PIR13           equ	1211	;# 
  1802   0004BC                     PIR14           equ	1212	;# 
  1803   0004BD                     PIR15           equ	1213	;# 
  1804   0004BE                     LATA            equ	1214	;# 
  1805   0004BF                     LATB            equ	1215	;# 
  1806   0004C0                     LATC            equ	1216	;# 
  1807   0004C1                     LATD            equ	1217	;# 
  1808   0004C2                     LATE            equ	1218	;# 
  1809   0004C3                     LATF            equ	1219	;# 
  1810   0004C6                     TRISA           equ	1222	;# 
  1811   0004C7                     TRISB           equ	1223	;# 
  1812   0004C8                     TRISC           equ	1224	;# 
  1813   0004C9                     TRISD           equ	1225	;# 
  1814   0004CA                     TRISE           equ	1226	;# 
  1815   0004CB                     TRISF           equ	1227	;# 
  1816   0004CE                     PORTA           equ	1230	;# 
  1817   0004CF                     PORTB           equ	1231	;# 
  1818   0004D0                     PORTC           equ	1232	;# 
  1819   0004D1                     PORTD           equ	1233	;# 
  1820   0004D2                     PORTE           equ	1234	;# 
  1821   0004D3                     PORTF           equ	1235	;# 
  1822   0004D6                     INTCON0         equ	1238	;# 
  1823   0004D7                     INTCON1         equ	1239	;# 
  1824   0004D8                     STATUS          equ	1240	;# 
  1825   0004D9                     FSR2            equ	1241	;# 
  1826   0004D9                     FSR2L           equ	1241	;# 
  1827   0004DA                     FSR2H           equ	1242	;# 
  1828   0004DB                     PLUSW2          equ	1243	;# 
  1829   0004DC                     PREINC2         equ	1244	;# 
  1830   0004DD                     POSTDEC2        equ	1245	;# 
  1831   0004DE                     POSTINC2        equ	1246	;# 
  1832   0004DF                     INDF2           equ	1247	;# 
  1833   0004E0                     BSR             equ	1248	;# 
  1834   0004E1                     FSR1            equ	1249	;# 
  1835   0004E1                     FSR1L           equ	1249	;# 
  1836   0004E2                     FSR1H           equ	1250	;# 
  1837   0004E3                     PLUSW1          equ	1251	;# 
  1838   0004E4                     PREINC1         equ	1252	;# 
  1839   0004E5                     POSTDEC1        equ	1253	;# 
  1840   0004E6                     POSTINC1        equ	1254	;# 
  1841   0004E7                     INDF1           equ	1255	;# 
  1842   0004E8                     WREG            equ	1256	;# 
  1843   0004E9                     FSR0            equ	1257	;# 
  1844   0004E9                     FSR0L           equ	1257	;# 
  1845   0004EA                     FSR0H           equ	1258	;# 
  1846   0004EB                     PLUSW0          equ	1259	;# 
  1847   0004EC                     PREINC0         equ	1260	;# 
  1848   0004ED                     POSTDEC0        equ	1261	;# 
  1849   0004EE                     POSTINC0        equ	1262	;# 
  1850   0004EF                     INDF0           equ	1263	;# 
  1851   0004F0                     PCON0           equ	1264	;# 
  1852   0004F1                     PCON1           equ	1265	;# 
  1853   0004F2                     CPUDOZE         equ	1266	;# 
  1854   0004F3                     PROD            equ	1267	;# 
  1855   0004F3                     PRODL           equ	1267	;# 
  1856   0004F4                     PRODH           equ	1268	;# 
  1857   0004F5                     TABLAT          equ	1269	;# 
  1858   0004F6                     TBLPTR          equ	1270	;# 
  1859   0004F6                     TBLPTRL         equ	1270	;# 
  1860   0004F7                     TBLPTRH         equ	1271	;# 
  1861   0004F8                     TBLPTRU         equ	1272	;# 
  1862   0004F9                     PCLAT           equ	1273	;# 
  1863   0004F9                     PCL             equ	1273	;# 
  1864   0004FA                     PCLATH          equ	1274	;# 
  1865   0004FB                     PCLATU          equ	1275	;# 
  1866   0004FC                     STKPTR          equ	1276	;# 
  1867   0004FD                     TOS             equ	1277	;# 
  1868   0004FD                     TOSL            equ	1277	;# 
  1869   0004FE                     TOSH            equ	1278	;# 
  1870   0004FF                     TOSU            equ	1279	;# 
  1871   000039                     CLKRCON         equ	57	;# 
  1872   00003A                     CLKRCLK         equ	58	;# 
  1873   000040                     NVMCON0         equ	64	;# 
  1874   000041                     NVMCON1         equ	65	;# 
  1875   000042                     NVMLOCK         equ	66	;# 
  1876   000043                     NVMADR          equ	67	;# 
  1877   000043                     NVMADRL         equ	67	;# 
  1878   000044                     NVMADRH         equ	68	;# 
  1879   000045                     NVMADRU         equ	69	;# 
  1880   000046                     NVMDAT          equ	70	;# 
  1881   000046                     NVMDATL         equ	70	;# 
  1882   000047                     NVMDATH         equ	71	;# 
  1883   000048                     VREGCON         equ	72	;# 
  1884   000049                     BORCON          equ	73	;# 
  1885   00004A                     HLVDCON0        equ	74	;# 
  1886   00004B                     HLVDCON1        equ	75	;# 
  1887   00004C                     ZCDCON          equ	76	;# 
  1888   000060                     PMD0            equ	96	;# 
  1889   000061                     PMD1            equ	97	;# 
  1890   000063                     PMD3            equ	99	;# 
  1891   000064                     PMD4            equ	100	;# 
  1892   000065                     PMD5            equ	101	;# 
  1893   000066                     PMD6            equ	102	;# 
  1894   000067                     PMD7            equ	103	;# 
  1895   000068                     PMD8            equ	104	;# 
  1896   00006A                     MD1CON0         equ	106	;# 
  1897   00006B                     MD1CON1         equ	107	;# 
  1898   00006C                     MD1SRC          equ	108	;# 
  1899   00006D                     MD1CARL         equ	109	;# 
  1900   00006E                     MD1CARH         equ	110	;# 
  1901   00006F                     CMOUT           equ	111	;# 
  1902   000070                     CM1CON0         equ	112	;# 
  1903   000071                     CM1CON1         equ	113	;# 
  1904   000072                     CM1NCH          equ	114	;# 
  1905   000073                     CM1PCH          equ	115	;# 
  1906   000074                     CM2CON0         equ	116	;# 
  1907   000075                     CM2CON1         equ	117	;# 
  1908   000076                     CM2NCH          equ	118	;# 
  1909   000077                     CM2PCH          equ	119	;# 
  1910   000078                     WDTCON0         equ	120	;# 
  1911   000079                     WDTCON1         equ	121	;# 
  1912   00007A                     WDTPS           equ	122	;# 
  1913   00007A                     WDTPSL          equ	122	;# 
  1914   00007B                     WDTPSH          equ	123	;# 
  1915   00007C                     WDTTMR          equ	124	;# 
  1916   00007D                     DAC1DAT         equ	125	;# 
  1917   00007D                     DAC1DATL        equ	125	;# 
  1918   00007F                     DAC1CON         equ	127	;# 
  1919   000080                     SPI1RXB         equ	128	;# 
  1920   000081                     SPI1TXB         equ	129	;# 
  1921   000082                     SPI1TCNT        equ	130	;# 
  1922   000082                     SPI1TCNTL       equ	130	;# 
  1923   000083                     SPI1TCNTH       equ	131	;# 
  1924   000084                     SPI1CON0        equ	132	;# 
  1925   000085                     SPI1CON1        equ	133	;# 
  1926   000086                     SPI1CON2        equ	134	;# 
  1927   000087                     SPI1STATUS      equ	135	;# 
  1928   000088                     SPI1TWIDTH      equ	136	;# 
  1929   000089                     SPI1BAUD        equ	137	;# 
  1930   00008A                     SPI1INTF        equ	138	;# 
  1931   00008B                     SPI1INTE        equ	139	;# 
  1932   00008C                     SPI1CLK         equ	140	;# 
  1933   00008D                     SPI2RXB         equ	141	;# 
  1934   00008E                     SPI2TXB         equ	142	;# 
  1935   00008F                     SPI2TCNT        equ	143	;# 
  1936   00008F                     SPI2TCNTL       equ	143	;# 
  1937   000090                     SPI2TCNTH       equ	144	;# 
  1938   000091                     SPI2CON0        equ	145	;# 
  1939   000092                     SPI2CON1        equ	146	;# 
  1940   000093                     SPI2CON2        equ	147	;# 
  1941   000094                     SPI2STATUS      equ	148	;# 
  1942   000095                     SPI2TWIDTH      equ	149	;# 
  1943   000096                     SPI2BAUD        equ	150	;# 
  1944   000097                     SPI2INTF        equ	151	;# 
  1945   000098                     SPI2INTE        equ	152	;# 
  1946   000099                     SPI2CLK         equ	153	;# 
  1947   0000AC                     ACTCON          equ	172	;# 
  1948   0000AD                     OSCCON1         equ	173	;# 
  1949   0000AE                     OSCCON2         equ	174	;# 
  1950   0000AF                     OSCCON3         equ	175	;# 
  1951   0000B0                     OSCTUNE         equ	176	;# 
  1952   0000B1                     OSCFRQ          equ	177	;# 
  1953   0000B1                     OSCFREQ         equ	177	;# 
  1954   0000B2                     OSCSTAT         equ	178	;# 
  1955   0000B2                     OSCSTAT1        equ	178	;# 
  1956   0000B3                     OSCEN           equ	179	;# 
  1957   0000B4                     PRLOCK          equ	180	;# 
  1958   0000B5                     SCANPR          equ	181	;# 
  1959   0000B6                     DMA1PR          equ	182	;# 
  1960   0000B7                     DMA2PR          equ	183	;# 
  1961   0000B8                     DMA3PR          equ	184	;# 
  1962   0000B9                     DMA4PR          equ	185	;# 
  1963   0000BA                     DMA5PR          equ	186	;# 
  1964   0000BB                     DMA6PR          equ	187	;# 
  1965   0000BE                     MAINPR          equ	190	;# 
  1966   0000BF                     ISRPR           equ	191	;# 
  1967   0000D4                     CLCDATA         equ	212	;# 
  1968   0000D5                     CLCSELECT       equ	213	;# 
  1969   0000D6                     CLCnCON         equ	214	;# 
  1970   0000D7                     CLCnPOL         equ	215	;# 
  1971   0000D8                     CLCnSEL0        equ	216	;# 
  1972   0000D9                     CLCnSEL1        equ	217	;# 
  1973   0000DA                     CLCnSEL2        equ	218	;# 
  1974   0000DB                     CLCnSEL3        equ	219	;# 
  1975   0000DC                     CLCnGLS0        equ	220	;# 
  1976   0000DD                     CLCnGLS1        equ	221	;# 
  1977   0000DE                     CLCnGLS2        equ	222	;# 
  1978   0000DF                     CLCnGLS3        equ	223	;# 
  1979   0000E8                     DMASELECT       equ	232	;# 
  1980   0000E9                     DMAnBUF         equ	233	;# 
  1981   0000EA                     DMAnDCNT        equ	234	;# 
  1982   0000EA                     DMAnDCNTL       equ	234	;# 
  1983   0000EB                     DMAnDCNTH       equ	235	;# 
  1984   0000EC                     DMAnDPTR        equ	236	;# 
  1985   0000EC                     DMAnDPTRL       equ	236	;# 
  1986   0000ED                     DMAnDPTRH       equ	237	;# 
  1987   0000EE                     DMAnDSZ         equ	238	;# 
  1988   0000EE                     DMAnDSZL        equ	238	;# 
  1989   0000EF                     DMAnDSZH        equ	239	;# 
  1990   0000F0                     DMAnDSA         equ	240	;# 
  1991   0000F0                     DMAnDSAL        equ	240	;# 
  1992   0000F1                     DMAnDSAH        equ	241	;# 
  1993   0000F2                     DMAnSCNT        equ	242	;# 
  1994   0000F2                     DMAnSCNTL       equ	242	;# 
  1995   0000F3                     DMAnSCNTH       equ	243	;# 
  1996   0000F4                     DMAnSPTR        equ	244	;# 
  1997   0000F4                     DMAnSPTRL       equ	244	;# 
  1998   0000F5                     DMAnSPTRH       equ	245	;# 
  1999   0000F6                     DMAnSPTRU       equ	246	;# 
  2000   0000F7                     DMAnSSZ         equ	247	;# 
  2001   0000F7                     DMAnSSZL        equ	247	;# 
  2002   0000F8                     DMAnSSZH        equ	248	;# 
  2003   0000F9                     DMAnSSA         equ	249	;# 
  2004   0000F9                     DMAnSSAL        equ	249	;# 
  2005   0000FA                     DMAnSSAH        equ	250	;# 
  2006   0000FB                     DMAnSSAU        equ	251	;# 
  2007   0000FC                     DMAnCON0        equ	252	;# 
  2008   0000FD                     DMAnCON1        equ	253	;# 
  2009   0000FE                     DMAnAIRQ        equ	254	;# 
  2010   0000FF                     DMAnSIRQ        equ	255	;# 
  2011   000200                     PPSLOCK         equ	512	;# 
  2012   000201                     RA0PPS          equ	513	;# 
  2013   000202                     RA1PPS          equ	514	;# 
  2014   000203                     RA2PPS          equ	515	;# 
  2015   000204                     RA3PPS          equ	516	;# 
  2016   000205                     RA4PPS          equ	517	;# 
  2017   000206                     RA5PPS          equ	518	;# 
  2018   000207                     RA6PPS          equ	519	;# 
  2019   000208                     RA7PPS          equ	520	;# 
  2020   000209                     RB0PPS          equ	521	;# 
  2021   00020A                     RB1PPS          equ	522	;# 
  2022   00020B                     RB2PPS          equ	523	;# 
  2023   00020C                     RB3PPS          equ	524	;# 
  2024   00020D                     RB4PPS          equ	525	;# 
  2025   00020E                     RB5PPS          equ	526	;# 
  2026   00020F                     RB6PPS          equ	527	;# 
  2027   000210                     RB7PPS          equ	528	;# 
  2028   000211                     RC0PPS          equ	529	;# 
  2029   000212                     RC1PPS          equ	530	;# 
  2030   000213                     RC2PPS          equ	531	;# 
  2031   000214                     RC3PPS          equ	532	;# 
  2032   000215                     RC4PPS          equ	533	;# 
  2033   000216                     RC5PPS          equ	534	;# 
  2034   000217                     RC6PPS          equ	535	;# 
  2035   000218                     RC7PPS          equ	536	;# 
  2036   000219                     RD0PPS          equ	537	;# 
  2037   00021A                     RD1PPS          equ	538	;# 
  2038   00021B                     RD2PPS          equ	539	;# 
  2039   00021C                     RD3PPS          equ	540	;# 
  2040   00021D                     RD4PPS          equ	541	;# 
  2041   00021E                     RD5PPS          equ	542	;# 
  2042   00021F                     RD6PPS          equ	543	;# 
  2043   000220                     RD7PPS          equ	544	;# 
  2044   000221                     RE0PPS          equ	545	;# 
  2045   000222                     RE1PPS          equ	546	;# 
  2046   000223                     RE2PPS          equ	547	;# 
  2047   000229                     RF0PPS          equ	553	;# 
  2048   00022A                     RF1PPS          equ	554	;# 
  2049   00022B                     RF2PPS          equ	555	;# 
  2050   00022C                     RF3PPS          equ	556	;# 
  2051   00022D                     RF4PPS          equ	557	;# 
  2052   00022E                     RF5PPS          equ	558	;# 
  2053   00022F                     RF6PPS          equ	559	;# 
  2054   000230                     RF7PPS          equ	560	;# 
  2055   00023E                     INT0PPS         equ	574	;# 
  2056   00023F                     INT1PPS         equ	575	;# 
  2057   000240                     INT2PPS         equ	576	;# 
  2058   000241                     T0CKIPPS        equ	577	;# 
  2059   000242                     T1CKIPPS        equ	578	;# 
  2060   000243                     T1GPPS          equ	579	;# 
  2061   000244                     T3CKIPPS        equ	580	;# 
  2062   000245                     T3GPPS          equ	581	;# 
  2063   000246                     T5CKIPPS        equ	582	;# 
  2064   000247                     T5GPPS          equ	583	;# 
  2065   000248                     T2INPPS         equ	584	;# 
  2066   000249                     T4INPPS         equ	585	;# 
  2067   00024A                     T6INPPS         equ	586	;# 
  2068   00024F                     CCP1PPS         equ	591	;# 
  2069   000250                     CCP2PPS         equ	592	;# 
  2070   000251                     CCP3PPS         equ	593	;# 
  2071   000253                     PWM1ERSPPS      equ	595	;# 
  2072   000254                     PWM2ERSPPS      equ	596	;# 
  2073   000255                     PWM3ERSPPS      equ	597	;# 
  2074   000257                     PWMIN0PPS       equ	599	;# 
  2075   000258                     PWMIN1PPS       equ	600	;# 
  2076   000259                     SMT1WINPPS      equ	601	;# 
  2077   00025A                     SMT1SIGPPS      equ	602	;# 
  2078   00025B                     CWG1PPS         equ	603	;# 
  2079   00025B                     CWG1INPPS       equ	603	;# 
  2080   00025C                     CWG2PPS         equ	604	;# 
  2081   00025C                     CWG2INPPS       equ	604	;# 
  2082   00025D                     CWG3PPS         equ	605	;# 
  2083   00025D                     CWG3INPPS       equ	605	;# 
  2084   00025E                     MD1CARLPPS      equ	606	;# 
  2085   00025E                     MDCARLPPS       equ	606	;# 
  2086   00025F                     MD1CARHPPS      equ	607	;# 
  2087   00025F                     MDCARHPPS       equ	607	;# 
  2088   000260                     MD1SRCPPS       equ	608	;# 
  2089   000260                     MDSRCPPS        equ	608	;# 
  2090   000261                     CLCIN0PPS       equ	609	;# 
  2091   000262                     CLCIN1PPS       equ	610	;# 
  2092   000263                     CLCIN2PPS       equ	611	;# 
  2093   000264                     CLCIN3PPS       equ	612	;# 
  2094   000265                     CLCIN4PPS       equ	613	;# 
  2095   000266                     CLCIN5PPS       equ	614	;# 
  2096   000267                     CLCIN6PPS       equ	615	;# 
  2097   000268                     CLCIN7PPS       equ	616	;# 
  2098   000269                     ADACTPPS        equ	617	;# 
  2099   00026A                     SPI1SCKPPS      equ	618	;# 
  2100   00026B                     SPI1SDIPPS      equ	619	;# 
  2101   00026C                     SPI1SSPPS       equ	620	;# 
  2102   00026D                     SPI2SCKPPS      equ	621	;# 
  2103   00026E                     SPI2SDIPPS      equ	622	;# 
  2104   00026F                     SPI2SSPPS       equ	623	;# 
  2105   000270                     I2C1SDAPPS      equ	624	;# 
  2106   000271                     I2C1SCLPPS      equ	625	;# 
  2107   000272                     U1RXPPS         equ	626	;# 
  2108   000273                     U1CTSPPS        equ	627	;# 
  2109   000274                     U2RXPPS         equ	628	;# 
  2110   000275                     U2CTSPPS        equ	629	;# 
  2111   000276                     U3RXPPS         equ	630	;# 
  2112   000277                     U3CTSPPS        equ	631	;# 
  2113   000278                     U4RXPPS         equ	632	;# 
  2114   000279                     U4CTSPPS        equ	633	;# 
  2115   00027A                     U5RXPPS         equ	634	;# 
  2116   00027B                     U5CTSPPS        equ	635	;# 
  2117   000286                     RC4I2C          equ	646	;# 
  2118   000287                     RC3I2C          equ	647	;# 
  2119   000288                     RB2I2C          equ	648	;# 
  2120   000289                     RB1I2C          equ	649	;# 
  2121   00028B                     I2C1RXB         equ	651	;# 
  2122   00028C                     I2C1TXB         equ	652	;# 
  2123   00028D                     I2C1CNT         equ	653	;# 
  2124   00028E                     I2C1ADB0        equ	654	;# 
  2125   00028F                     I2C1ADB1        equ	655	;# 
  2126   000290                     I2C1ADR0        equ	656	;# 
  2127   000291                     I2C1ADR1        equ	657	;# 
  2128   000292                     I2C1ADR2        equ	658	;# 
  2129   000293                     I2C1ADR3        equ	659	;# 
  2130   000294                     I2C1CON0        equ	660	;# 
  2131   000295                     I2C1CON1        equ	661	;# 
  2132   000296                     I2C1CON2        equ	662	;# 
  2133   000297                     I2C1ERR         equ	663	;# 
  2134   000298                     I2C1STAT0       equ	664	;# 
  2135   000299                     I2C1STAT1       equ	665	;# 
  2136   00029A                     I2C1PIR         equ	666	;# 
  2137   00029B                     I2C1PIE         equ	667	;# 
  2138   00029C                     I2C1CLK         equ	668	;# 
  2139   00029D                     I2C1BTO         equ	669	;# 
  2140   0002A1                     U1RXB           equ	673	;# 
  2141   0002A1                     U1RXBL          equ	673	;# 
  2142   0002A2                     U1RXCHK         equ	674	;# 
  2143   0002A3                     U1TXB           equ	675	;# 
  2144   0002A3                     U1TXBL          equ	675	;# 
  2145   0002A4                     U1TXCHK         equ	676	;# 
  2146   0002A5                     U1P1            equ	677	;# 
  2147   0002A5                     U1P1L           equ	677	;# 
  2148   0002A6                     U1P1H           equ	678	;# 
  2149   0002A7                     U1P2            equ	679	;# 
  2150   0002A7                     U1P2L           equ	679	;# 
  2151   0002A8                     U1P2H           equ	680	;# 
  2152   0002A9                     U1P3            equ	681	;# 
  2153   0002A9                     U1P3L           equ	681	;# 
  2154   0002AA                     U1P3H           equ	682	;# 
  2155   0002AB                     U1CON0          equ	683	;# 
  2156   0002AC                     U1CON1          equ	684	;# 
  2157   0002AD                     U1CON2          equ	685	;# 
  2158   0002AE                     U1BRG           equ	686	;# 
  2159   0002AE                     U1BRGL          equ	686	;# 
  2160   0002AF                     U1BRGH          equ	687	;# 
  2161   0002B0                     U1FIFO          equ	688	;# 
  2162   0002B1                     U1UIR           equ	689	;# 
  2163   0002B2                     U1ERRIR         equ	690	;# 
  2164   0002B3                     U1ERRIE         equ	691	;# 
  2165   0002B4                     U2RXB           equ	692	;# 
  2166   0002B4                     U2RXBL          equ	692	;# 
  2167   0002B6                     U2TXB           equ	694	;# 
  2168   0002B6                     U2TXBL          equ	694	;# 
  2169   0002B8                     U2P1            equ	696	;# 
  2170   0002B8                     U2P1L           equ	696	;# 
  2171   0002BA                     U2P2            equ	698	;# 
  2172   0002BA                     U2P2L           equ	698	;# 
  2173   0002BC                     U2P3            equ	700	;# 
  2174   0002BC                     U2P3L           equ	700	;# 
  2175   0002BE                     U2CON0          equ	702	;# 
  2176   0002BF                     U2CON1          equ	703	;# 
  2177   0002C0                     U2CON2          equ	704	;# 
  2178   0002C1                     U2BRG           equ	705	;# 
  2179   0002C1                     U2BRGL          equ	705	;# 
  2180   0002C2                     U2BRGH          equ	706	;# 
  2181   0002C3                     U2FIFO          equ	707	;# 
  2182   0002C4                     U2UIR           equ	708	;# 
  2183   0002C5                     U2ERRIR         equ	709	;# 
  2184   0002C6                     U2ERRIE         equ	710	;# 
  2185   0002C7                     U3RXB           equ	711	;# 
  2186   0002C7                     U3RXBL          equ	711	;# 
  2187   0002C9                     U3TXB           equ	713	;# 
  2188   0002C9                     U3TXBL          equ	713	;# 
  2189   0002CB                     U3P1            equ	715	;# 
  2190   0002CB                     U3P1L           equ	715	;# 
  2191   0002CD                     U3P2            equ	717	;# 
  2192   0002CD                     U3P2L           equ	717	;# 
  2193   0002CF                     U3P3            equ	719	;# 
  2194   0002CF                     U3P3L           equ	719	;# 
  2195   0002D1                     U3CON0          equ	721	;# 
  2196   0002D2                     U3CON1          equ	722	;# 
  2197   0002D3                     U3CON2          equ	723	;# 
  2198   0002D4                     U3BRG           equ	724	;# 
  2199   0002D4                     U3BRGL          equ	724	;# 
  2200   0002D5                     U3BRGH          equ	725	;# 
  2201   0002D6                     U3FIFO          equ	726	;# 
  2202   0002D7                     U3UIR           equ	727	;# 
  2203   0002D8                     U3ERRIR         equ	728	;# 
  2204   0002D9                     U3ERRIE         equ	729	;# 
  2205   0002DA                     U4RXB           equ	730	;# 
  2206   0002DA                     U4RXBL          equ	730	;# 
  2207   0002DC                     U4TXB           equ	732	;# 
  2208   0002DC                     U4TXBL          equ	732	;# 
  2209   0002DE                     U4P1            equ	734	;# 
  2210   0002DE                     U4P1L           equ	734	;# 
  2211   0002E0                     U4P2            equ	736	;# 
  2212   0002E0                     U4P2L           equ	736	;# 
  2213   0002E2                     U4P3            equ	738	;# 
  2214   0002E2                     U4P3L           equ	738	;# 
  2215   0002E4                     U4CON0          equ	740	;# 
  2216   0002E5                     U4CON1          equ	741	;# 
  2217   0002E6                     U4CON2          equ	742	;# 
  2218   0002E7                     U4BRG           equ	743	;# 
  2219   0002E7                     U4BRGL          equ	743	;# 
  2220   0002E8                     U4BRGH          equ	744	;# 
  2221   0002E9                     U4FIFO          equ	745	;# 
  2222   0002EA                     U4UIR           equ	746	;# 
  2223   0002EB                     U4ERRIR         equ	747	;# 
  2224   0002EC                     U4ERRIE         equ	748	;# 
  2225   0002ED                     U5RXB           equ	749	;# 
  2226   0002ED                     U5RXBL          equ	749	;# 
  2227   0002EF                     U5TXB           equ	751	;# 
  2228   0002EF                     U5TXBL          equ	751	;# 
  2229   0002F1                     U5P1            equ	753	;# 
  2230   0002F1                     U5P1L           equ	753	;# 
  2231   0002F3                     U5P2            equ	755	;# 
  2232   0002F3                     U5P2L           equ	755	;# 
  2233   0002F5                     U5P3            equ	757	;# 
  2234   0002F5                     U5P3L           equ	757	;# 
  2235   0002F7                     U5CON0          equ	759	;# 
  2236   0002F8                     U5CON1          equ	760	;# 
  2237   0002F9                     U5CON2          equ	761	;# 
  2238   0002FA                     U5BRG           equ	762	;# 
  2239   0002FA                     U5BRGL          equ	762	;# 
  2240   0002FB                     U5BRGH          equ	763	;# 
  2241   0002FC                     U5FIFO          equ	764	;# 
  2242   0002FD                     U5UIR           equ	765	;# 
  2243   0002FE                     U5ERRIR         equ	766	;# 
  2244   0002FF                     U5ERRIE         equ	767	;# 
  2245   000300                     SMT1TMR         equ	768	;# 
  2246   000300                     SMT1TMRL        equ	768	;# 
  2247   000301                     SMT1TMRH        equ	769	;# 
  2248   000302                     SMT1TMRU        equ	770	;# 
  2249   000303                     SMT1CPR         equ	771	;# 
  2250   000303                     SMT1CPRL        equ	771	;# 
  2251   000304                     SMT1CPRH        equ	772	;# 
  2252   000305                     SMT1CPRU        equ	773	;# 
  2253   000306                     SMT1CPW         equ	774	;# 
  2254   000306                     SMT1CPWL        equ	774	;# 
  2255   000307                     SMT1CPWH        equ	775	;# 
  2256   000308                     SMT1CPWU        equ	776	;# 
  2257   000309                     SMT1PR          equ	777	;# 
  2258   000309                     SMT1PRL         equ	777	;# 
  2259   00030A                     SMT1PRH         equ	778	;# 
  2260   00030B                     SMT1PRU         equ	779	;# 
  2261   00030C                     SMT1CON0        equ	780	;# 
  2262   00030D                     SMT1CON1        equ	781	;# 
  2263   00030E                     SMT1STAT        equ	782	;# 
  2264   00030F                     SMT1CLK         equ	783	;# 
  2265   000310                     SMT1SIG         equ	784	;# 
  2266   000311                     SMT1WIN         equ	785	;# 
  2267   000318                     TMR0L           equ	792	;# 
  2268   000318                     TMR0            equ	792	;# 
  2269   000319                     TMR0H           equ	793	;# 
  2270   000319                     PR0             equ	793	;# 
  2271   00031A                     T0CON0          equ	794	;# 
  2272   00031B                     T0CON1          equ	795	;# 
  2273   00031C                     TMR1            equ	796	;# 
  2274   00031C                     TMR1L           equ	796	;# 
  2275   00031D                     TMR1H           equ	797	;# 
  2276   00031E                     T1CON           equ	798	;# 
  2277   00031E                     TMR1CON         equ	798	;# 
  2278   00031F                     T1GCON          equ	799	;# 
  2279   00031F                     TMR1GCON        equ	799	;# 
  2280   000320                     T1GATE          equ	800	;# 
  2281   000320                     TMR1GATE        equ	800	;# 
  2282   000321                     T1CLK           equ	801	;# 
  2283   000321                     TMR1CLK         equ	801	;# 
  2284   000321                     PR1             equ	801	;# 
  2285   000322                     T2TMR           equ	802	;# 
  2286   000322                     TMR2            equ	802	;# 
  2287   000323                     T2PR            equ	803	;# 
  2288   000323                     PR2             equ	803	;# 
  2289   000324                     T2CON           equ	804	;# 
  2290   000325                     T2HLT           equ	805	;# 
  2291   000326                     T2CLKCON        equ	806	;# 
  2292   000326                     T2CLK           equ	806	;# 
  2293   000327                     T2RST           equ	807	;# 
  2294   000328                     TMR3            equ	808	;# 
  2295   000328                     TMR3L           equ	808	;# 
  2296   000329                     TMR3H           equ	809	;# 
  2297   00032A                     T3CON           equ	810	;# 
  2298   00032A                     TMR3CON         equ	810	;# 
  2299   00032B                     T3GCON          equ	811	;# 
  2300   00032B                     TMR3GCON        equ	811	;# 
  2301   00032C                     T3GATE          equ	812	;# 
  2302   00032C                     TMR3GATE        equ	812	;# 
  2303   00032D                     T3CLK           equ	813	;# 
  2304   00032D                     TMR3CLK         equ	813	;# 
  2305   00032D                     PR3             equ	813	;# 
  2306   00032E                     T4TMR           equ	814	;# 
  2307   00032E                     TMR4            equ	814	;# 
  2308   00032F                     T4PR            equ	815	;# 
  2309   00032F                     PR4             equ	815	;# 
  2310   000330                     T4CON           equ	816	;# 
  2311   000331                     T4HLT           equ	817	;# 
  2312   000332                     T4CLKCON        equ	818	;# 
  2313   000332                     T4CLK           equ	818	;# 
  2314   000333                     T4RST           equ	819	;# 
  2315   000334                     TMR5            equ	820	;# 
  2316   000334                     TMR5L           equ	820	;# 
  2317   000335                     TMR5H           equ	821	;# 
  2318   000336                     T5CON           equ	822	;# 
  2319   000336                     TMR5CON         equ	822	;# 
  2320   000337                     T5GCON          equ	823	;# 
  2321   000337                     TMR5GCON        equ	823	;# 
  2322   000338                     T5GATE          equ	824	;# 
  2323   000338                     TMR5GATE        equ	824	;# 
  2324   000339                     T5CLK           equ	825	;# 
  2325   000339                     TMR5CLK         equ	825	;# 
  2326   000339                     PR5             equ	825	;# 
  2327   00033A                     T6TMR           equ	826	;# 
  2328   00033A                     TMR6            equ	826	;# 
  2329   00033B                     T6PR            equ	827	;# 
  2330   00033B                     PR6             equ	827	;# 
  2331   00033C                     T6CON           equ	828	;# 
  2332   00033D                     T6HLT           equ	829	;# 
  2333   00033E                     T6CLKCON        equ	830	;# 
  2334   00033E                     T6CLK           equ	830	;# 
  2335   00033F                     T6RST           equ	831	;# 
  2336   000340                     CCPR1           equ	832	;# 
  2337   000340                     CCPR1L          equ	832	;# 
  2338   000341                     CCPR1H          equ	833	;# 
  2339   000342                     CCP1CON         equ	834	;# 
  2340   000343                     CCP1CAP         equ	835	;# 
  2341   000344                     CCPR2           equ	836	;# 
  2342   000344                     CCPR2L          equ	836	;# 
  2343   000345                     CCPR2H          equ	837	;# 
  2344   000346                     CCP2CON         equ	838	;# 
  2345   000347                     CCP2CAP         equ	839	;# 
  2346   000348                     CCPR3           equ	840	;# 
  2347   000348                     CCPR3L          equ	840	;# 
  2348   000349                     CCPR3H          equ	841	;# 
  2349   00034A                     CCP3CON         equ	842	;# 
  2350   00034B                     CCP3CAP         equ	843	;# 
  2351   00034C                     CCPTMRS0        equ	844	;# 
  2352   00034F                     CRCDATA         equ	847	;# 
  2353   00034F                     CRCDATL         equ	847	;# 
  2354   000350                     CRCDATH         equ	848	;# 
  2355   000351                     CRCACC          equ	849	;# 
  2356   000351                     CRCACCL         equ	849	;# 
  2357   000352                     CRCACCH         equ	850	;# 
  2358   000353                     CRCSHFT         equ	851	;# 
  2359   000353                     CRCSHIFTL       equ	851	;# 
  2360   000354                     CRCSHIFTH       equ	852	;# 
  2361   000355                     CRCXOR          equ	853	;# 
  2362   000355                     CRCXORL         equ	853	;# 
  2363   000356                     CRCXORH         equ	854	;# 
  2364   000357                     CRCCON0         equ	855	;# 
  2365   000358                     CRCCON1         equ	856	;# 
  2366   00035A                     SCANLADR        equ	858	;# 
  2367   00035A                     SCANLADRL       equ	858	;# 
  2368   00035B                     SCANLADRH       equ	859	;# 
  2369   00035C                     SCANLADRU       equ	860	;# 
  2370   00035D                     SCANHADR        equ	861	;# 
  2371   00035D                     SCANHADRL       equ	861	;# 
  2372   00035E                     SCANHADRH       equ	862	;# 
  2373   00035F                     SCANHADRU       equ	863	;# 
  2374   000360                     SCANCON0        equ	864	;# 
  2375   000361                     SCANTRIG        equ	865	;# 
  2376   000362                     IPR0            equ	866	;# 
  2377   000363                     IPR1            equ	867	;# 
  2378   000364                     IPR2            equ	868	;# 
  2379   000365                     IPR3            equ	869	;# 
  2380   000366                     IPR4            equ	870	;# 
  2381   000367                     IPR5            equ	871	;# 
  2382   000368                     IPR6            equ	872	;# 
  2383   000369                     IPR7            equ	873	;# 
  2384   00036A                     IPR8            equ	874	;# 
  2385   00036B                     IPR9            equ	875	;# 
  2386   00036C                     IPR10           equ	876	;# 
  2387   00036D                     IPR11           equ	877	;# 
  2388   00036E                     IPR12           equ	878	;# 
  2389   00036F                     IPR13           equ	879	;# 
  2390   000370                     IPR14           equ	880	;# 
  2391   000371                     IPR15           equ	881	;# 
  2392   000373                     STATUS_CSHAD    equ	883	;# 
  2393   000374                     WREG_CSHAD      equ	884	;# 
  2394   000375                     BSR_CSHAD       equ	885	;# 
  2395   000376                     SHADCON         equ	886	;# 
  2396   000377                     STATUS_SHAD     equ	887	;# 
  2397   000378                     WREG_SHAD       equ	888	;# 
  2398   000379                     BSR_SHAD        equ	889	;# 
  2399   00037A                     PCLATH_SHAD     equ	890	;# 
  2400   00037B                     PCLATU_SHAD     equ	891	;# 
  2401   00037C                     FSR0SH          equ	892	;# 
  2402   00037C                     FSR0L_SHAD      equ	892	;# 
  2403   00037D                     FSR0H_SHAD      equ	893	;# 
  2404   00037E                     FSR1SH          equ	894	;# 
  2405   00037E                     FSR1L_SHAD      equ	894	;# 
  2406   00037F                     FSR1H_SHAD      equ	895	;# 
  2407   000380                     FSR2SH          equ	896	;# 
  2408   000380                     FSR2L_SHAD      equ	896	;# 
  2409   000381                     FSR2H_SHAD      equ	897	;# 
  2410   000382                     PRODSH          equ	898	;# 
  2411   000382                     PRODL_SHAD      equ	898	;# 
  2412   000383                     PRODH_SHAD      equ	899	;# 
  2413   0003BC                     CWG1CLK         equ	956	;# 
  2414   0003BC                     CWG1CLKCON      equ	956	;# 
  2415   0003BD                     CWG1ISM         equ	957	;# 
  2416   0003BD                     CWG1DAT         equ	957	;# 
  2417   0003BE                     CWG1DBR         equ	958	;# 
  2418   0003BF                     CWG1DBF         equ	959	;# 
  2419   0003C0                     CWG1CON0        equ	960	;# 
  2420   0003C1                     CWG1CON1        equ	961	;# 
  2421   0003C2                     CWG1AS0         equ	962	;# 
  2422   0003C3                     CWG1AS1         equ	963	;# 
  2423   0003C4                     CWG1STR         equ	964	;# 
  2424   0003C5                     CWG2CLK         equ	965	;# 
  2425   0003C5                     CWG2CLKCON      equ	965	;# 
  2426   0003C6                     CWG2ISM         equ	966	;# 
  2427   0003C6                     CWG2DAT         equ	966	;# 
  2428   0003C7                     CWG2DBR         equ	967	;# 
  2429   0003C8                     CWG2DBF         equ	968	;# 
  2430   0003C9                     CWG2CON0        equ	969	;# 
  2431   0003CA                     CWG2CON1        equ	970	;# 
  2432   0003CB                     CWG2AS0         equ	971	;# 
  2433   0003CC                     CWG2AS1         equ	972	;# 
  2434   0003CD                     CWG2STR         equ	973	;# 
  2435   0003CE                     CWG3CLK         equ	974	;# 
  2436   0003CE                     CWG3CLKCON      equ	974	;# 
  2437   0003CF                     CWG3ISM         equ	975	;# 
  2438   0003CF                     CWG3DAT         equ	975	;# 
  2439   0003D0                     CWG3DBR         equ	976	;# 
  2440   0003D1                     CWG3DBF         equ	977	;# 
  2441   0003D2                     CWG3CON0        equ	978	;# 
  2442   0003D3                     CWG3CON1        equ	979	;# 
  2443   0003D4                     CWG3AS0         equ	980	;# 
  2444   0003D5                     CWG3AS1         equ	981	;# 
  2445   0003D6                     CWG3STR         equ	982	;# 
  2446   0003D7                     FVRCON          equ	983	;# 
  2447   0003D8                     ADCPCON         equ	984	;# 
  2448   0003D8                     ADCP            equ	984	;# 
  2449   0003D9                     ADLTH           equ	985	;# 
  2450   0003D9                     ADLTHL          equ	985	;# 
  2451   0003DA                     ADLTHH          equ	986	;# 
  2452   0003DB                     ADUTH           equ	987	;# 
  2453   0003DB                     ADUTHL          equ	987	;# 
  2454   0003DC                     ADUTHH          equ	988	;# 
  2455   0003DD                     ADERR           equ	989	;# 
  2456   0003DD                     ADERRL          equ	989	;# 
  2457   0003DE                     ADERRH          equ	990	;# 
  2458   0003DF                     ADSTPT          equ	991	;# 
  2459   0003DF                     ADSTPTL         equ	991	;# 
  2460   0003E0                     ADSTPTH         equ	992	;# 
  2461   0003E1                     ADFLTR          equ	993	;# 
  2462   0003E1                     ADFLTRL         equ	993	;# 
  2463   0003E2                     ADFLTRH         equ	994	;# 
  2464   0003E3                     ADACC           equ	995	;# 
  2465   0003E3                     ADACCL          equ	995	;# 
  2466   0003E4                     ADACCH          equ	996	;# 
  2467   0003E5                     ADACCU          equ	997	;# 
  2468   0003E6                     ADCNT           equ	998	;# 
  2469   0003E7                     ADRPT           equ	999	;# 
  2470   0003E8                     ADPREV          equ	1000	;# 
  2471   0003E8                     ADPREVL         equ	1000	;# 
  2472   0003E9                     ADPREVH         equ	1001	;# 
  2473   0003EA                     ADRES           equ	1002	;# 
  2474   0003EA                     ADRESL          equ	1002	;# 
  2475   0003EB                     ADRESH          equ	1003	;# 
  2476   0003EC                     ADPCH           equ	1004	;# 
  2477   0003EE                     ADACQ           equ	1006	;# 
  2478   0003EE                     ADACQL          equ	1006	;# 
  2479   0003EF                     ADACQH          equ	1007	;# 
  2480   0003F0                     ADCAP           equ	1008	;# 
  2481   0003F1                     ADPRE           equ	1009	;# 
  2482   0003F1                     ADPREL          equ	1009	;# 
  2483   0003F2                     ADPREH          equ	1010	;# 
  2484   0003F3                     ADCON0          equ	1011	;# 
  2485   0003F4                     ADCON1          equ	1012	;# 
  2486   0003F5                     ADCON2          equ	1013	;# 
  2487   0003F6                     ADCON3          equ	1014	;# 
  2488   0003F7                     ADSTAT          equ	1015	;# 
  2489   0003F8                     ADREF           equ	1016	;# 
  2490   0003F9                     ADACT           equ	1017	;# 
  2491   0003FA                     ADCLK           equ	1018	;# 
  2492   000400                     ANSELA          equ	1024	;# 
  2493   000401                     WPUA            equ	1025	;# 
  2494   000402                     ODCONA          equ	1026	;# 
  2495   000403                     SLRCONA         equ	1027	;# 
  2496   000404                     INLVLA          equ	1028	;# 
  2497   000405                     IOCAP           equ	1029	;# 
  2498   000406                     IOCAN           equ	1030	;# 
  2499   000407                     IOCAF           equ	1031	;# 
  2500   000408                     ANSELB          equ	1032	;# 
  2501   000409                     WPUB            equ	1033	;# 
  2502   00040A                     ODCONB          equ	1034	;# 
  2503   00040B                     SLRCONB         equ	1035	;# 
  2504   00040C                     INLVLB          equ	1036	;# 
  2505   00040D                     IOCBP           equ	1037	;# 
  2506   00040E                     IOCBN           equ	1038	;# 
  2507   00040F                     IOCBF           equ	1039	;# 
  2508   000410                     ANSELC          equ	1040	;# 
  2509   000411                     WPUC            equ	1041	;# 
  2510   000412                     ODCONC          equ	1042	;# 
  2511   000413                     SLRCONC         equ	1043	;# 
  2512   000414                     INLVLC          equ	1044	;# 
  2513   000415                     IOCCP           equ	1045	;# 
  2514   000416                     IOCCN           equ	1046	;# 
  2515   000417                     IOCCF           equ	1047	;# 
  2516   000418                     ANSELD          equ	1048	;# 
  2517   000419                     WPUD            equ	1049	;# 
  2518   00041A                     ODCOND          equ	1050	;# 
  2519   00041B                     SLRCOND         equ	1051	;# 
  2520   00041C                     INLVLD          equ	1052	;# 
  2521   000420                     ANSELE          equ	1056	;# 
  2522   000421                     WPUE            equ	1057	;# 
  2523   000422                     ODCONE          equ	1058	;# 
  2524   000423                     SLRCONE         equ	1059	;# 
  2525   000424                     INLVLE          equ	1060	;# 
  2526   000425                     IOCEP           equ	1061	;# 
  2527   000426                     IOCEN           equ	1062	;# 
  2528   000427                     IOCEF           equ	1063	;# 
  2529   000428                     ANSELF          equ	1064	;# 
  2530   000429                     WPUF            equ	1065	;# 
  2531   00042A                     ODCONF          equ	1066	;# 
  2532   00042B                     SLRCONF         equ	1067	;# 
  2533   00042C                     INLVLF          equ	1068	;# 
  2534   000440                     NCO1ACC         equ	1088	;# 
  2535   000440                     NCO1ACCL        equ	1088	;# 
  2536   000441                     NCO1ACCH        equ	1089	;# 
  2537   000442                     NCO1ACCU        equ	1090	;# 
  2538   000443                     NCO1INC         equ	1091	;# 
  2539   000443                     NCO1INCL        equ	1091	;# 
  2540   000444                     NCO1INCH        equ	1092	;# 
  2541   000445                     NCO1INCU        equ	1093	;# 
  2542   000446                     NCO1CON         equ	1094	;# 
  2543   000447                     NCO1CLK         equ	1095	;# 
  2544   000448                     NCO2ACC         equ	1096	;# 
  2545   000448                     NCO2ACCL        equ	1096	;# 
  2546   000449                     NCO2ACCH        equ	1097	;# 
  2547   00044A                     NCO2ACCU        equ	1098	;# 
  2548   00044B                     NCO2INC         equ	1099	;# 
  2549   00044B                     NCO2INCL        equ	1099	;# 
  2550   00044C                     NCO2INCH        equ	1100	;# 
  2551   00044D                     NCO2INCU        equ	1101	;# 
  2552   00044E                     NCO2CON         equ	1102	;# 
  2553   00044F                     NCO2CLK         equ	1103	;# 
  2554   000450                     NCO3ACC         equ	1104	;# 
  2555   000450                     NCO3ACCL        equ	1104	;# 
  2556   000451                     NCO3ACCH        equ	1105	;# 
  2557   000452                     NCO3ACCU        equ	1106	;# 
  2558   000453                     NCO3INC         equ	1107	;# 
  2559   000453                     NCO3INCL        equ	1107	;# 
  2560   000454                     NCO3INCH        equ	1108	;# 
  2561   000455                     NCO3INCU        equ	1109	;# 
  2562   000456                     NCO3CON         equ	1110	;# 
  2563   000457                     NCO3CLK         equ	1111	;# 
  2564   000459                     IVTLOCK         equ	1113	;# 
  2565   00045A                     IVTAD           equ	1114	;# 
  2566   00045A                     IVTADL          equ	1114	;# 
  2567   00045B                     IVTADH          equ	1115	;# 
  2568   00045C                     IVTADU          equ	1116	;# 
  2569   00045D                     IVTBASE         equ	1117	;# 
  2570   00045D                     IVTBASEL        equ	1117	;# 
  2571   00045E                     IVTBASEH        equ	1118	;# 
  2572   00045F                     IVTBASEU        equ	1119	;# 
  2573   000460                     PWM1ERS         equ	1120	;# 
  2574   000461                     PWM1CLK         equ	1121	;# 
  2575   000462                     PWM1LDS         equ	1122	;# 
  2576   000463                     PWM1PR          equ	1123	;# 
  2577   000463                     PWM1PRL         equ	1123	;# 
  2578   000464                     PWM1PRH         equ	1124	;# 
  2579   000465                     PWM1CPRE        equ	1125	;# 
  2580   000466                     PWM1PIPOS       equ	1126	;# 
  2581   000467                     PWM1GIR         equ	1127	;# 
  2582   000468                     PWM1GIE         equ	1128	;# 
  2583   000469                     PWM1CON         equ	1129	;# 
  2584   00046A                     PWM1S1CFG       equ	1130	;# 
  2585   00046B                     PWM1S1P1        equ	1131	;# 
  2586   00046B                     PWM1S1P1L       equ	1131	;# 
  2587   00046C                     PWM1S1P1H       equ	1132	;# 
  2588   00046D                     PWM1S1P2        equ	1133	;# 
  2589   00046D                     PWM1S1P2L       equ	1133	;# 
  2590   00046E                     PWM1S1P2H       equ	1134	;# 
  2591   00046F                     PWM2ERS         equ	1135	;# 
  2592   000470                     PWM2CLK         equ	1136	;# 
  2593   000471                     PWM2LDS         equ	1137	;# 
  2594   000472                     PWM2PR          equ	1138	;# 
  2595   000472                     PWM2PRL         equ	1138	;# 
  2596   000473                     PWM2PRH         equ	1139	;# 
  2597   000474                     PWM2CPRE        equ	1140	;# 
  2598   000475                     PWM2PIPOS       equ	1141	;# 
  2599   000476                     PWM2GIR         equ	1142	;# 
  2600   000477                     PWM2GIE         equ	1143	;# 
  2601   000478                     PWM2CON         equ	1144	;# 
  2602   000479                     PWM2S1CFG       equ	1145	;# 
  2603   00047A                     PWM2S1P1        equ	1146	;# 
  2604   00047A                     PWM2S1P1L       equ	1146	;# 
  2605   00047B                     PWM2S1P1H       equ	1147	;# 
  2606   00047C                     PWM2S1P2        equ	1148	;# 
  2607   00047C                     PWM2S1P2L       equ	1148	;# 
  2608   00047D                     PWM2S1P2H       equ	1149	;# 
  2609   00047E                     PWM3ERS         equ	1150	;# 
  2610   00047F                     PWM3CLK         equ	1151	;# 
  2611   000480                     PWM3LDS         equ	1152	;# 
  2612   000481                     PWM3PR          equ	1153	;# 
  2613   000481                     PWM3PRL         equ	1153	;# 
  2614   000482                     PWM3PRH         equ	1154	;# 
  2615   000483                     PWM3CPRE        equ	1155	;# 
  2616   000484                     PWM3PIPOS       equ	1156	;# 
  2617   000485                     PWM3GIR         equ	1157	;# 
  2618   000486                     PWM3GIE         equ	1158	;# 
  2619   000487                     PWM3CON         equ	1159	;# 
  2620   000488                     PWM3S1CFG       equ	1160	;# 
  2621   000489                     PWM3S1P1        equ	1161	;# 
  2622   000489                     PWM3S1P1L       equ	1161	;# 
  2623   00048A                     PWM3S1P1H       equ	1162	;# 
  2624   00048B                     PWM3S1P2        equ	1163	;# 
  2625   00048B                     PWM3S1P2L       equ	1163	;# 
  2626   00048C                     PWM3S1P2H       equ	1164	;# 
  2627   00049C                     PWMLOAD         equ	1180	;# 
  2628   00049D                     PWMEN           equ	1181	;# 
  2629   00049E                     PIE0            equ	1182	;# 
  2630   00049F                     PIE1            equ	1183	;# 
  2631   0004A0                     PIE2            equ	1184	;# 
  2632   0004A1                     PIE3            equ	1185	;# 
  2633   0004A2                     PIE4            equ	1186	;# 
  2634   0004A3                     PIE5            equ	1187	;# 
  2635   0004A4                     PIE6            equ	1188	;# 
  2636   0004A5                     PIE7            equ	1189	;# 
  2637   0004A6                     PIE8            equ	1190	;# 
  2638   0004A7                     PIE9            equ	1191	;# 
  2639   0004A8                     PIE10           equ	1192	;# 
  2640   0004A9                     PIE11           equ	1193	;# 
  2641   0004AA                     PIE12           equ	1194	;# 
  2642   0004AB                     PIE13           equ	1195	;# 
  2643   0004AC                     PIE14           equ	1196	;# 
  2644   0004AD                     PIE15           equ	1197	;# 
  2645   0004AE                     PIR0            equ	1198	;# 
  2646   0004AF                     PIR1            equ	1199	;# 
  2647   0004B0                     PIR2            equ	1200	;# 
  2648   0004B1                     PIR3            equ	1201	;# 
  2649   0004B2                     PIR4            equ	1202	;# 
  2650   0004B3                     PIR5            equ	1203	;# 
  2651   0004B4                     PIR6            equ	1204	;# 
  2652   0004B5                     PIR7            equ	1205	;# 
  2653   0004B6                     PIR8            equ	1206	;# 
  2654   0004B7                     PIR9            equ	1207	;# 
  2655   0004B8                     PIR10           equ	1208	;# 
  2656   0004B9                     PIR11           equ	1209	;# 
  2657   0004BA                     PIR12           equ	1210	;# 
  2658   0004BB                     PIR13           equ	1211	;# 
  2659   0004BC                     PIR14           equ	1212	;# 
  2660   0004BD                     PIR15           equ	1213	;# 
  2661   0004BE                     LATA            equ	1214	;# 
  2662   0004BF                     LATB            equ	1215	;# 
  2663   0004C0                     LATC            equ	1216	;# 
  2664   0004C1                     LATD            equ	1217	;# 
  2665   0004C2                     LATE            equ	1218	;# 
  2666   0004C3                     LATF            equ	1219	;# 
  2667   0004C6                     TRISA           equ	1222	;# 
  2668   0004C7                     TRISB           equ	1223	;# 
  2669   0004C8                     TRISC           equ	1224	;# 
  2670   0004C9                     TRISD           equ	1225	;# 
  2671   0004CA                     TRISE           equ	1226	;# 
  2672   0004CB                     TRISF           equ	1227	;# 
  2673   0004CE                     PORTA           equ	1230	;# 
  2674   0004CF                     PORTB           equ	1231	;# 
  2675   0004D0                     PORTC           equ	1232	;# 
  2676   0004D1                     PORTD           equ	1233	;# 
  2677   0004D2                     PORTE           equ	1234	;# 
  2678   0004D3                     PORTF           equ	1235	;# 
  2679   0004D6                     INTCON0         equ	1238	;# 
  2680   0004D7                     INTCON1         equ	1239	;# 
  2681   0004D8                     STATUS          equ	1240	;# 
  2682   0004D9                     FSR2            equ	1241	;# 
  2683   0004D9                     FSR2L           equ	1241	;# 
  2684   0004DA                     FSR2H           equ	1242	;# 
  2685   0004DB                     PLUSW2          equ	1243	;# 
  2686   0004DC                     PREINC2         equ	1244	;# 
  2687   0004DD                     POSTDEC2        equ	1245	;# 
  2688   0004DE                     POSTINC2        equ	1246	;# 
  2689   0004DF                     INDF2           equ	1247	;# 
  2690   0004E0                     BSR             equ	1248	;# 
  2691   0004E1                     FSR1            equ	1249	;# 
  2692   0004E1                     FSR1L           equ	1249	;# 
  2693   0004E2                     FSR1H           equ	1250	;# 
  2694   0004E3                     PLUSW1          equ	1251	;# 
  2695   0004E4                     PREINC1         equ	1252	;# 
  2696   0004E5                     POSTDEC1        equ	1253	;# 
  2697   0004E6                     POSTINC1        equ	1254	;# 
  2698   0004E7                     INDF1           equ	1255	;# 
  2699   0004E8                     WREG            equ	1256	;# 
  2700   0004E9                     FSR0            equ	1257	;# 
  2701   0004E9                     FSR0L           equ	1257	;# 
  2702   0004EA                     FSR0H           equ	1258	;# 
  2703   0004EB                     PLUSW0          equ	1259	;# 
  2704   0004EC                     PREINC0         equ	1260	;# 
  2705   0004ED                     POSTDEC0        equ	1261	;# 
  2706   0004EE                     POSTINC0        equ	1262	;# 
  2707   0004EF                     INDF0           equ	1263	;# 
  2708   0004F0                     PCON0           equ	1264	;# 
  2709   0004F1                     PCON1           equ	1265	;# 
  2710   0004F2                     CPUDOZE         equ	1266	;# 
  2711   0004F3                     PROD            equ	1267	;# 
  2712   0004F3                     PRODL           equ	1267	;# 
  2713   0004F4                     PRODH           equ	1268	;# 
  2714   0004F5                     TABLAT          equ	1269	;# 
  2715   0004F6                     TBLPTR          equ	1270	;# 
  2716   0004F6                     TBLPTRL         equ	1270	;# 
  2717   0004F7                     TBLPTRH         equ	1271	;# 
  2718   0004F8                     TBLPTRU         equ	1272	;# 
  2719   0004F9                     PCLAT           equ	1273	;# 
  2720   0004F9                     PCL             equ	1273	;# 
  2721   0004FA                     PCLATH          equ	1274	;# 
  2722   0004FB                     PCLATU          equ	1275	;# 
  2723   0004FC                     STKPTR          equ	1276	;# 
  2724   0004FD                     TOS             equ	1277	;# 
  2725   0004FD                     TOSL            equ	1277	;# 
  2726   0004FE                     TOSH            equ	1278	;# 
  2727   0004FF                     TOSU            equ	1279	;# 
  2728   000039                     CLKRCON         equ	57	;# 
  2729   00003A                     CLKRCLK         equ	58	;# 
  2730   000040                     NVMCON0         equ	64	;# 
  2731   000041                     NVMCON1         equ	65	;# 
  2732   000042                     NVMLOCK         equ	66	;# 
  2733   000043                     NVMADR          equ	67	;# 
  2734   000043                     NVMADRL         equ	67	;# 
  2735   000044                     NVMADRH         equ	68	;# 
  2736   000045                     NVMADRU         equ	69	;# 
  2737   000046                     NVMDAT          equ	70	;# 
  2738   000046                     NVMDATL         equ	70	;# 
  2739   000047                     NVMDATH         equ	71	;# 
  2740   000048                     VREGCON         equ	72	;# 
  2741   000049                     BORCON          equ	73	;# 
  2742   00004A                     HLVDCON0        equ	74	;# 
  2743   00004B                     HLVDCON1        equ	75	;# 
  2744   00004C                     ZCDCON          equ	76	;# 
  2745   000060                     PMD0            equ	96	;# 
  2746   000061                     PMD1            equ	97	;# 
  2747   000063                     PMD3            equ	99	;# 
  2748   000064                     PMD4            equ	100	;# 
  2749   000065                     PMD5            equ	101	;# 
  2750   000066                     PMD6            equ	102	;# 
  2751   000067                     PMD7            equ	103	;# 
  2752   000068                     PMD8            equ	104	;# 
  2753   00006A                     MD1CON0         equ	106	;# 
  2754   00006B                     MD1CON1         equ	107	;# 
  2755   00006C                     MD1SRC          equ	108	;# 
  2756   00006D                     MD1CARL         equ	109	;# 
  2757   00006E                     MD1CARH         equ	110	;# 
  2758   00006F                     CMOUT           equ	111	;# 
  2759   000070                     CM1CON0         equ	112	;# 
  2760   000071                     CM1CON1         equ	113	;# 
  2761   000072                     CM1NCH          equ	114	;# 
  2762   000073                     CM1PCH          equ	115	;# 
  2763   000074                     CM2CON0         equ	116	;# 
  2764   000075                     CM2CON1         equ	117	;# 
  2765   000076                     CM2NCH          equ	118	;# 
  2766   000077                     CM2PCH          equ	119	;# 
  2767   000078                     WDTCON0         equ	120	;# 
  2768   000079                     WDTCON1         equ	121	;# 
  2769   00007A                     WDTPS           equ	122	;# 
  2770   00007A                     WDTPSL          equ	122	;# 
  2771   00007B                     WDTPSH          equ	123	;# 
  2772   00007C                     WDTTMR          equ	124	;# 
  2773   00007D                     DAC1DAT         equ	125	;# 
  2774   00007D                     DAC1DATL        equ	125	;# 
  2775   00007F                     DAC1CON         equ	127	;# 
  2776   000080                     SPI1RXB         equ	128	;# 
  2777   000081                     SPI1TXB         equ	129	;# 
  2778   000082                     SPI1TCNT        equ	130	;# 
  2779   000082                     SPI1TCNTL       equ	130	;# 
  2780   000083                     SPI1TCNTH       equ	131	;# 
  2781   000084                     SPI1CON0        equ	132	;# 
  2782   000085                     SPI1CON1        equ	133	;# 
  2783   000086                     SPI1CON2        equ	134	;# 
  2784   000087                     SPI1STATUS      equ	135	;# 
  2785   000088                     SPI1TWIDTH      equ	136	;# 
  2786   000089                     SPI1BAUD        equ	137	;# 
  2787   00008A                     SPI1INTF        equ	138	;# 
  2788   00008B                     SPI1INTE        equ	139	;# 
  2789   00008C                     SPI1CLK         equ	140	;# 
  2790   00008D                     SPI2RXB         equ	141	;# 
  2791   00008E                     SPI2TXB         equ	142	;# 
  2792   00008F                     SPI2TCNT        equ	143	;# 
  2793   00008F                     SPI2TCNTL       equ	143	;# 
  2794   000090                     SPI2TCNTH       equ	144	;# 
  2795   000091                     SPI2CON0        equ	145	;# 
  2796   000092                     SPI2CON1        equ	146	;# 
  2797   000093                     SPI2CON2        equ	147	;# 
  2798   000094                     SPI2STATUS      equ	148	;# 
  2799   000095                     SPI2TWIDTH      equ	149	;# 
  2800   000096                     SPI2BAUD        equ	150	;# 
  2801   000097                     SPI2INTF        equ	151	;# 
  2802   000098                     SPI2INTE        equ	152	;# 
  2803   000099                     SPI2CLK         equ	153	;# 
  2804   0000AC                     ACTCON          equ	172	;# 
  2805   0000AD                     OSCCON1         equ	173	;# 
  2806   0000AE                     OSCCON2         equ	174	;# 
  2807   0000AF                     OSCCON3         equ	175	;# 
  2808   0000B0                     OSCTUNE         equ	176	;# 
  2809   0000B1                     OSCFRQ          equ	177	;# 
  2810   0000B1                     OSCFREQ         equ	177	;# 
  2811   0000B2                     OSCSTAT         equ	178	;# 
  2812   0000B2                     OSCSTAT1        equ	178	;# 
  2813   0000B3                     OSCEN           equ	179	;# 
  2814   0000B4                     PRLOCK          equ	180	;# 
  2815   0000B5                     SCANPR          equ	181	;# 
  2816   0000B6                     DMA1PR          equ	182	;# 
  2817   0000B7                     DMA2PR          equ	183	;# 
  2818   0000B8                     DMA3PR          equ	184	;# 
  2819   0000B9                     DMA4PR          equ	185	;# 
  2820   0000BA                     DMA5PR          equ	186	;# 
  2821   0000BB                     DMA6PR          equ	187	;# 
  2822   0000BE                     MAINPR          equ	190	;# 
  2823   0000BF                     ISRPR           equ	191	;# 
  2824   0000D4                     CLCDATA         equ	212	;# 
  2825   0000D5                     CLCSELECT       equ	213	;# 
  2826   0000D6                     CLCnCON         equ	214	;# 
  2827   0000D7                     CLCnPOL         equ	215	;# 
  2828   0000D8                     CLCnSEL0        equ	216	;# 
  2829   0000D9                     CLCnSEL1        equ	217	;# 
  2830   0000DA                     CLCnSEL2        equ	218	;# 
  2831   0000DB                     CLCnSEL3        equ	219	;# 
  2832   0000DC                     CLCnGLS0        equ	220	;# 
  2833   0000DD                     CLCnGLS1        equ	221	;# 
  2834   0000DE                     CLCnGLS2        equ	222	;# 
  2835   0000DF                     CLCnGLS3        equ	223	;# 
  2836   0000E8                     DMASELECT       equ	232	;# 
  2837   0000E9                     DMAnBUF         equ	233	;# 
  2838   0000EA                     DMAnDCNT        equ	234	;# 
  2839   0000EA                     DMAnDCNTL       equ	234	;# 
  2840   0000EB                     DMAnDCNTH       equ	235	;# 
  2841   0000EC                     DMAnDPTR        equ	236	;# 
  2842   0000EC                     DMAnDPTRL       equ	236	;# 
  2843   0000ED                     DMAnDPTRH       equ	237	;# 
  2844   0000EE                     DMAnDSZ         equ	238	;# 
  2845   0000EE                     DMAnDSZL        equ	238	;# 
  2846   0000EF                     DMAnDSZH        equ	239	;# 
  2847   0000F0                     DMAnDSA         equ	240	;# 
  2848   0000F0                     DMAnDSAL        equ	240	;# 
  2849   0000F1                     DMAnDSAH        equ	241	;# 
  2850   0000F2                     DMAnSCNT        equ	242	;# 
  2851   0000F2                     DMAnSCNTL       equ	242	;# 
  2852   0000F3                     DMAnSCNTH       equ	243	;# 
  2853   0000F4                     DMAnSPTR        equ	244	;# 
  2854   0000F4                     DMAnSPTRL       equ	244	;# 
  2855   0000F5                     DMAnSPTRH       equ	245	;# 
  2856   0000F6                     DMAnSPTRU       equ	246	;# 
  2857   0000F7                     DMAnSSZ         equ	247	;# 
  2858   0000F7                     DMAnSSZL        equ	247	;# 
  2859   0000F8                     DMAnSSZH        equ	248	;# 
  2860   0000F9                     DMAnSSA         equ	249	;# 
  2861   0000F9                     DMAnSSAL        equ	249	;# 
  2862   0000FA                     DMAnSSAH        equ	250	;# 
  2863   0000FB                     DMAnSSAU        equ	251	;# 
  2864   0000FC                     DMAnCON0        equ	252	;# 
  2865   0000FD                     DMAnCON1        equ	253	;# 
  2866   0000FE                     DMAnAIRQ        equ	254	;# 
  2867   0000FF                     DMAnSIRQ        equ	255	;# 
  2868   000200                     PPSLOCK         equ	512	;# 
  2869   000201                     RA0PPS          equ	513	;# 
  2870   000202                     RA1PPS          equ	514	;# 
  2871   000203                     RA2PPS          equ	515	;# 
  2872   000204                     RA3PPS          equ	516	;# 
  2873   000205                     RA4PPS          equ	517	;# 
  2874   000206                     RA5PPS          equ	518	;# 
  2875   000207                     RA6PPS          equ	519	;# 
  2876   000208                     RA7PPS          equ	520	;# 
  2877   000209                     RB0PPS          equ	521	;# 
  2878   00020A                     RB1PPS          equ	522	;# 
  2879   00020B                     RB2PPS          equ	523	;# 
  2880   00020C                     RB3PPS          equ	524	;# 
  2881   00020D                     RB4PPS          equ	525	;# 
  2882   00020E                     RB5PPS          equ	526	;# 
  2883   00020F                     RB6PPS          equ	527	;# 
  2884   000210                     RB7PPS          equ	528	;# 
  2885   000211                     RC0PPS          equ	529	;# 
  2886   000212                     RC1PPS          equ	530	;# 
  2887   000213                     RC2PPS          equ	531	;# 
  2888   000214                     RC3PPS          equ	532	;# 
  2889   000215                     RC4PPS          equ	533	;# 
  2890   000216                     RC5PPS          equ	534	;# 
  2891   000217                     RC6PPS          equ	535	;# 
  2892   000218                     RC7PPS          equ	536	;# 
  2893   000219                     RD0PPS          equ	537	;# 
  2894   00021A                     RD1PPS          equ	538	;# 
  2895   00021B                     RD2PPS          equ	539	;# 
  2896   00021C                     RD3PPS          equ	540	;# 
  2897   00021D                     RD4PPS          equ	541	;# 
  2898   00021E                     RD5PPS          equ	542	;# 
  2899   00021F                     RD6PPS          equ	543	;# 
  2900   000220                     RD7PPS          equ	544	;# 
  2901   000221                     RE0PPS          equ	545	;# 
  2902   000222                     RE1PPS          equ	546	;# 
  2903   000223                     RE2PPS          equ	547	;# 
  2904   000229                     RF0PPS          equ	553	;# 
  2905   00022A                     RF1PPS          equ	554	;# 
  2906   00022B                     RF2PPS          equ	555	;# 
  2907   00022C                     RF3PPS          equ	556	;# 
  2908   00022D                     RF4PPS          equ	557	;# 
  2909   00022E                     RF5PPS          equ	558	;# 
  2910   00022F                     RF6PPS          equ	559	;# 
  2911   000230                     RF7PPS          equ	560	;# 
  2912   00023E                     INT0PPS         equ	574	;# 
  2913   00023F                     INT1PPS         equ	575	;# 
  2914   000240                     INT2PPS         equ	576	;# 
  2915   000241                     T0CKIPPS        equ	577	;# 
  2916   000242                     T1CKIPPS        equ	578	;# 
  2917   000243                     T1GPPS          equ	579	;# 
  2918   000244                     T3CKIPPS        equ	580	;# 
  2919   000245                     T3GPPS          equ	581	;# 
  2920   000246                     T5CKIPPS        equ	582	;# 
  2921   000247                     T5GPPS          equ	583	;# 
  2922   000248                     T2INPPS         equ	584	;# 
  2923   000249                     T4INPPS         equ	585	;# 
  2924   00024A                     T6INPPS         equ	586	;# 
  2925   00024F                     CCP1PPS         equ	591	;# 
  2926   000250                     CCP2PPS         equ	592	;# 
  2927   000251                     CCP3PPS         equ	593	;# 
  2928   000253                     PWM1ERSPPS      equ	595	;# 
  2929   000254                     PWM2ERSPPS      equ	596	;# 
  2930   000255                     PWM3ERSPPS      equ	597	;# 
  2931   000257                     PWMIN0PPS       equ	599	;# 
  2932   000258                     PWMIN1PPS       equ	600	;# 
  2933   000259                     SMT1WINPPS      equ	601	;# 
  2934   00025A                     SMT1SIGPPS      equ	602	;# 
  2935   00025B                     CWG1PPS         equ	603	;# 
  2936   00025B                     CWG1INPPS       equ	603	;# 
  2937   00025C                     CWG2PPS         equ	604	;# 
  2938   00025C                     CWG2INPPS       equ	604	;# 
  2939   00025D                     CWG3PPS         equ	605	;# 
  2940   00025D                     CWG3INPPS       equ	605	;# 
  2941   00025E                     MD1CARLPPS      equ	606	;# 
  2942   00025E                     MDCARLPPS       equ	606	;# 
  2943   00025F                     MD1CARHPPS      equ	607	;# 
  2944   00025F                     MDCARHPPS       equ	607	;# 
  2945   000260                     MD1SRCPPS       equ	608	;# 
  2946   000260                     MDSRCPPS        equ	608	;# 
  2947   000261                     CLCIN0PPS       equ	609	;# 
  2948   000262                     CLCIN1PPS       equ	610	;# 
  2949   000263                     CLCIN2PPS       equ	611	;# 
  2950   000264                     CLCIN3PPS       equ	612	;# 
  2951   000265                     CLCIN4PPS       equ	613	;# 
  2952   000266                     CLCIN5PPS       equ	614	;# 
  2953   000267                     CLCIN6PPS       equ	615	;# 
  2954   000268                     CLCIN7PPS       equ	616	;# 
  2955   000269                     ADACTPPS        equ	617	;# 
  2956   00026A                     SPI1SCKPPS      equ	618	;# 
  2957   00026B                     SPI1SDIPPS      equ	619	;# 
  2958   00026C                     SPI1SSPPS       equ	620	;# 
  2959   00026D                     SPI2SCKPPS      equ	621	;# 
  2960   00026E                     SPI2SDIPPS      equ	622	;# 
  2961   00026F                     SPI2SSPPS       equ	623	;# 
  2962   000270                     I2C1SDAPPS      equ	624	;# 
  2963   000271                     I2C1SCLPPS      equ	625	;# 
  2964   000272                     U1RXPPS         equ	626	;# 
  2965   000273                     U1CTSPPS        equ	627	;# 
  2966   000274                     U2RXPPS         equ	628	;# 
  2967   000275                     U2CTSPPS        equ	629	;# 
  2968   000276                     U3RXPPS         equ	630	;# 
  2969   000277                     U3CTSPPS        equ	631	;# 
  2970   000278                     U4RXPPS         equ	632	;# 
  2971   000279                     U4CTSPPS        equ	633	;# 
  2972   00027A                     U5RXPPS         equ	634	;# 
  2973   00027B                     U5CTSPPS        equ	635	;# 
  2974   000286                     RC4I2C          equ	646	;# 
  2975   000287                     RC3I2C          equ	647	;# 
  2976   000288                     RB2I2C          equ	648	;# 
  2977   000289                     RB1I2C          equ	649	;# 
  2978   00028B                     I2C1RXB         equ	651	;# 
  2979   00028C                     I2C1TXB         equ	652	;# 
  2980   00028D                     I2C1CNT         equ	653	;# 
  2981   00028E                     I2C1ADB0        equ	654	;# 
  2982   00028F                     I2C1ADB1        equ	655	;# 
  2983   000290                     I2C1ADR0        equ	656	;# 
  2984   000291                     I2C1ADR1        equ	657	;# 
  2985   000292                     I2C1ADR2        equ	658	;# 
  2986   000293                     I2C1ADR3        equ	659	;# 
  2987   000294                     I2C1CON0        equ	660	;# 
  2988   000295                     I2C1CON1        equ	661	;# 
  2989   000296                     I2C1CON2        equ	662	;# 
  2990   000297                     I2C1ERR         equ	663	;# 
  2991   000298                     I2C1STAT0       equ	664	;# 
  2992   000299                     I2C1STAT1       equ	665	;# 
  2993   00029A                     I2C1PIR         equ	666	;# 
  2994   00029B                     I2C1PIE         equ	667	;# 
  2995   00029C                     I2C1CLK         equ	668	;# 
  2996   00029D                     I2C1BTO         equ	669	;# 
  2997   0002A1                     U1RXB           equ	673	;# 
  2998   0002A1                     U1RXBL          equ	673	;# 
  2999   0002A2                     U1RXCHK         equ	674	;# 
  3000   0002A3                     U1TXB           equ	675	;# 
  3001   0002A3                     U1TXBL          equ	675	;# 
  3002   0002A4                     U1TXCHK         equ	676	;# 
  3003   0002A5                     U1P1            equ	677	;# 
  3004   0002A5                     U1P1L           equ	677	;# 
  3005   0002A6                     U1P1H           equ	678	;# 
  3006   0002A7                     U1P2            equ	679	;# 
  3007   0002A7                     U1P2L           equ	679	;# 
  3008   0002A8                     U1P2H           equ	680	;# 
  3009   0002A9                     U1P3            equ	681	;# 
  3010   0002A9                     U1P3L           equ	681	;# 
  3011   0002AA                     U1P3H           equ	682	;# 
  3012   0002AB                     U1CON0          equ	683	;# 
  3013   0002AC                     U1CON1          equ	684	;# 
  3014   0002AD                     U1CON2          equ	685	;# 
  3015   0002AE                     U1BRG           equ	686	;# 
  3016   0002AE                     U1BRGL          equ	686	;# 
  3017   0002AF                     U1BRGH          equ	687	;# 
  3018   0002B0                     U1FIFO          equ	688	;# 
  3019   0002B1                     U1UIR           equ	689	;# 
  3020   0002B2                     U1ERRIR         equ	690	;# 
  3021   0002B3                     U1ERRIE         equ	691	;# 
  3022   0002B4                     U2RXB           equ	692	;# 
  3023   0002B4                     U2RXBL          equ	692	;# 
  3024   0002B6                     U2TXB           equ	694	;# 
  3025   0002B6                     U2TXBL          equ	694	;# 
  3026   0002B8                     U2P1            equ	696	;# 
  3027   0002B8                     U2P1L           equ	696	;# 
  3028   0002BA                     U2P2            equ	698	;# 
  3029   0002BA                     U2P2L           equ	698	;# 
  3030   0002BC                     U2P3            equ	700	;# 
  3031   0002BC                     U2P3L           equ	700	;# 
  3032   0002BE                     U2CON0          equ	702	;# 
  3033   0002BF                     U2CON1          equ	703	;# 
  3034   0002C0                     U2CON2          equ	704	;# 
  3035   0002C1                     U2BRG           equ	705	;# 
  3036   0002C1                     U2BRGL          equ	705	;# 
  3037   0002C2                     U2BRGH          equ	706	;# 
  3038   0002C3                     U2FIFO          equ	707	;# 
  3039   0002C4                     U2UIR           equ	708	;# 
  3040   0002C5                     U2ERRIR         equ	709	;# 
  3041   0002C6                     U2ERRIE         equ	710	;# 
  3042   0002C7                     U3RXB           equ	711	;# 
  3043   0002C7                     U3RXBL          equ	711	;# 
  3044   0002C9                     U3TXB           equ	713	;# 
  3045   0002C9                     U3TXBL          equ	713	;# 
  3046   0002CB                     U3P1            equ	715	;# 
  3047   0002CB                     U3P1L           equ	715	;# 
  3048   0002CD                     U3P2            equ	717	;# 
  3049   0002CD                     U3P2L           equ	717	;# 
  3050   0002CF                     U3P3            equ	719	;# 
  3051   0002CF                     U3P3L           equ	719	;# 
  3052   0002D1                     U3CON0          equ	721	;# 
  3053   0002D2                     U3CON1          equ	722	;# 
  3054   0002D3                     U3CON2          equ	723	;# 
  3055   0002D4                     U3BRG           equ	724	;# 
  3056   0002D4                     U3BRGL          equ	724	;# 
  3057   0002D5                     U3BRGH          equ	725	;# 
  3058   0002D6                     U3FIFO          equ	726	;# 
  3059   0002D7                     U3UIR           equ	727	;# 
  3060   0002D8                     U3ERRIR         equ	728	;# 
  3061   0002D9                     U3ERRIE         equ	729	;# 
  3062   0002DA                     U4RXB           equ	730	;# 
  3063   0002DA                     U4RXBL          equ	730	;# 
  3064   0002DC                     U4TXB           equ	732	;# 
  3065   0002DC                     U4TXBL          equ	732	;# 
  3066   0002DE                     U4P1            equ	734	;# 
  3067   0002DE                     U4P1L           equ	734	;# 
  3068   0002E0                     U4P2            equ	736	;# 
  3069   0002E0                     U4P2L           equ	736	;# 
  3070   0002E2                     U4P3            equ	738	;# 
  3071   0002E2                     U4P3L           equ	738	;# 
  3072   0002E4                     U4CON0          equ	740	;# 
  3073   0002E5                     U4CON1          equ	741	;# 
  3074   0002E6                     U4CON2          equ	742	;# 
  3075   0002E7                     U4BRG           equ	743	;# 
  3076   0002E7                     U4BRGL          equ	743	;# 
  3077   0002E8                     U4BRGH          equ	744	;# 
  3078   0002E9                     U4FIFO          equ	745	;# 
  3079   0002EA                     U4UIR           equ	746	;# 
  3080   0002EB                     U4ERRIR         equ	747	;# 
  3081   0002EC                     U4ERRIE         equ	748	;# 
  3082   0002ED                     U5RXB           equ	749	;# 
  3083   0002ED                     U5RXBL          equ	749	;# 
  3084   0002EF                     U5TXB           equ	751	;# 
  3085   0002EF                     U5TXBL          equ	751	;# 
  3086   0002F1                     U5P1            equ	753	;# 
  3087   0002F1                     U5P1L           equ	753	;# 
  3088   0002F3                     U5P2            equ	755	;# 
  3089   0002F3                     U5P2L           equ	755	;# 
  3090   0002F5                     U5P3            equ	757	;# 
  3091   0002F5                     U5P3L           equ	757	;# 
  3092   0002F7                     U5CON0          equ	759	;# 
  3093   0002F8                     U5CON1          equ	760	;# 
  3094   0002F9                     U5CON2          equ	761	;# 
  3095   0002FA                     U5BRG           equ	762	;# 
  3096   0002FA                     U5BRGL          equ	762	;# 
  3097   0002FB                     U5BRGH          equ	763	;# 
  3098   0002FC                     U5FIFO          equ	764	;# 
  3099   0002FD                     U5UIR           equ	765	;# 
  3100   0002FE                     U5ERRIR         equ	766	;# 
  3101   0002FF                     U5ERRIE         equ	767	;# 
  3102   000300                     SMT1TMR         equ	768	;# 
  3103   000300                     SMT1TMRL        equ	768	;# 
  3104   000301                     SMT1TMRH        equ	769	;# 
  3105   000302                     SMT1TMRU        equ	770	;# 
  3106   000303                     SMT1CPR         equ	771	;# 
  3107   000303                     SMT1CPRL        equ	771	;# 
  3108   000304                     SMT1CPRH        equ	772	;# 
  3109   000305                     SMT1CPRU        equ	773	;# 
  3110   000306                     SMT1CPW         equ	774	;# 
  3111   000306                     SMT1CPWL        equ	774	;# 
  3112   000307                     SMT1CPWH        equ	775	;# 
  3113   000308                     SMT1CPWU        equ	776	;# 
  3114   000309                     SMT1PR          equ	777	;# 
  3115   000309                     SMT1PRL         equ	777	;# 
  3116   00030A                     SMT1PRH         equ	778	;# 
  3117   00030B                     SMT1PRU         equ	779	;# 
  3118   00030C                     SMT1CON0        equ	780	;# 
  3119   00030D                     SMT1CON1        equ	781	;# 
  3120   00030E                     SMT1STAT        equ	782	;# 
  3121   00030F                     SMT1CLK         equ	783	;# 
  3122   000310                     SMT1SIG         equ	784	;# 
  3123   000311                     SMT1WIN         equ	785	;# 
  3124   000318                     TMR0L           equ	792	;# 
  3125   000318                     TMR0            equ	792	;# 
  3126   000319                     TMR0H           equ	793	;# 
  3127   000319                     PR0             equ	793	;# 
  3128   00031A                     T0CON0          equ	794	;# 
  3129   00031B                     T0CON1          equ	795	;# 
  3130   00031C                     TMR1            equ	796	;# 
  3131   00031C                     TMR1L           equ	796	;# 
  3132   00031D                     TMR1H           equ	797	;# 
  3133   00031E                     T1CON           equ	798	;# 
  3134   00031E                     TMR1CON         equ	798	;# 
  3135   00031F                     T1GCON          equ	799	;# 
  3136   00031F                     TMR1GCON        equ	799	;# 
  3137   000320                     T1GATE          equ	800	;# 
  3138   000320                     TMR1GATE        equ	800	;# 
  3139   000321                     T1CLK           equ	801	;# 
  3140   000321                     TMR1CLK         equ	801	;# 
  3141   000321                     PR1             equ	801	;# 
  3142   000322                     T2TMR           equ	802	;# 
  3143   000322                     TMR2            equ	802	;# 
  3144   000323                     T2PR            equ	803	;# 
  3145   000323                     PR2             equ	803	;# 
  3146   000324                     T2CON           equ	804	;# 
  3147   000325                     T2HLT           equ	805	;# 
  3148   000326                     T2CLKCON        equ	806	;# 
  3149   000326                     T2CLK           equ	806	;# 
  3150   000327                     T2RST           equ	807	;# 
  3151   000328                     TMR3            equ	808	;# 
  3152   000328                     TMR3L           equ	808	;# 
  3153   000329                     TMR3H           equ	809	;# 
  3154   00032A                     T3CON           equ	810	;# 
  3155   00032A                     TMR3CON         equ	810	;# 
  3156   00032B                     T3GCON          equ	811	;# 
  3157   00032B                     TMR3GCON        equ	811	;# 
  3158   00032C                     T3GATE          equ	812	;# 
  3159   00032C                     TMR3GATE        equ	812	;# 
  3160   00032D                     T3CLK           equ	813	;# 
  3161   00032D                     TMR3CLK         equ	813	;# 
  3162   00032D                     PR3             equ	813	;# 
  3163   00032E                     T4TMR           equ	814	;# 
  3164   00032E                     TMR4            equ	814	;# 
  3165   00032F                     T4PR            equ	815	;# 
  3166   00032F                     PR4             equ	815	;# 
  3167   000330                     T4CON           equ	816	;# 
  3168   000331                     T4HLT           equ	817	;# 
  3169   000332                     T4CLKCON        equ	818	;# 
  3170   000332                     T4CLK           equ	818	;# 
  3171   000333                     T4RST           equ	819	;# 
  3172   000334                     TMR5            equ	820	;# 
  3173   000334                     TMR5L           equ	820	;# 
  3174   000335                     TMR5H           equ	821	;# 
  3175   000336                     T5CON           equ	822	;# 
  3176   000336                     TMR5CON         equ	822	;# 
  3177   000337                     T5GCON          equ	823	;# 
  3178   000337                     TMR5GCON        equ	823	;# 
  3179   000338                     T5GATE          equ	824	;# 
  3180   000338                     TMR5GATE        equ	824	;# 
  3181   000339                     T5CLK           equ	825	;# 
  3182   000339                     TMR5CLK         equ	825	;# 
  3183   000339                     PR5             equ	825	;# 
  3184   00033A                     T6TMR           equ	826	;# 
  3185   00033A                     TMR6            equ	826	;# 
  3186   00033B                     T6PR            equ	827	;# 
  3187   00033B                     PR6             equ	827	;# 
  3188   00033C                     T6CON           equ	828	;# 
  3189   00033D                     T6HLT           equ	829	;# 
  3190   00033E                     T6CLKCON        equ	830	;# 
  3191   00033E                     T6CLK           equ	830	;# 
  3192   00033F                     T6RST           equ	831	;# 
  3193   000340                     CCPR1           equ	832	;# 
  3194   000340                     CCPR1L          equ	832	;# 
  3195   000341                     CCPR1H          equ	833	;# 
  3196   000342                     CCP1CON         equ	834	;# 
  3197   000343                     CCP1CAP         equ	835	;# 
  3198   000344                     CCPR2           equ	836	;# 
  3199   000344                     CCPR2L          equ	836	;# 
  3200   000345                     CCPR2H          equ	837	;# 
  3201   000346                     CCP2CON         equ	838	;# 
  3202   000347                     CCP2CAP         equ	839	;# 
  3203   000348                     CCPR3           equ	840	;# 
  3204   000348                     CCPR3L          equ	840	;# 
  3205   000349                     CCPR3H          equ	841	;# 
  3206   00034A                     CCP3CON         equ	842	;# 
  3207   00034B                     CCP3CAP         equ	843	;# 
  3208   00034C                     CCPTMRS0        equ	844	;# 
  3209   00034F                     CRCDATA         equ	847	;# 
  3210   00034F                     CRCDATL         equ	847	;# 
  3211   000350                     CRCDATH         equ	848	;# 
  3212   000351                     CRCACC          equ	849	;# 
  3213   000351                     CRCACCL         equ	849	;# 
  3214   000352                     CRCACCH         equ	850	;# 
  3215   000353                     CRCSHFT         equ	851	;# 
  3216   000353                     CRCSHIFTL       equ	851	;# 
  3217   000354                     CRCSHIFTH       equ	852	;# 
  3218   000355                     CRCXOR          equ	853	;# 
  3219   000355                     CRCXORL         equ	853	;# 
  3220   000356                     CRCXORH         equ	854	;# 
  3221   000357                     CRCCON0         equ	855	;# 
  3222   000358                     CRCCON1         equ	856	;# 
  3223   00035A                     SCANLADR        equ	858	;# 
  3224   00035A                     SCANLADRL       equ	858	;# 
  3225   00035B                     SCANLADRH       equ	859	;# 
  3226   00035C                     SCANLADRU       equ	860	;# 
  3227   00035D                     SCANHADR        equ	861	;# 
  3228   00035D                     SCANHADRL       equ	861	;# 
  3229   00035E                     SCANHADRH       equ	862	;# 
  3230   00035F                     SCANHADRU       equ	863	;# 
  3231   000360                     SCANCON0        equ	864	;# 
  3232   000361                     SCANTRIG        equ	865	;# 
  3233   000362                     IPR0            equ	866	;# 
  3234   000363                     IPR1            equ	867	;# 
  3235   000364                     IPR2            equ	868	;# 
  3236   000365                     IPR3            equ	869	;# 
  3237   000366                     IPR4            equ	870	;# 
  3238   000367                     IPR5            equ	871	;# 
  3239   000368                     IPR6            equ	872	;# 
  3240   000369                     IPR7            equ	873	;# 
  3241   00036A                     IPR8            equ	874	;# 
  3242   00036B                     IPR9            equ	875	;# 
  3243   00036C                     IPR10           equ	876	;# 
  3244   00036D                     IPR11           equ	877	;# 
  3245   00036E                     IPR12           equ	878	;# 
  3246   00036F                     IPR13           equ	879	;# 
  3247   000370                     IPR14           equ	880	;# 
  3248   000371                     IPR15           equ	881	;# 
  3249   000373                     STATUS_CSHAD    equ	883	;# 
  3250   000374                     WREG_CSHAD      equ	884	;# 
  3251   000375                     BSR_CSHAD       equ	885	;# 
  3252   000376                     SHADCON         equ	886	;# 
  3253   000377                     STATUS_SHAD     equ	887	;# 
  3254   000378                     WREG_SHAD       equ	888	;# 
  3255   000379                     BSR_SHAD        equ	889	;# 
  3256   00037A                     PCLATH_SHAD     equ	890	;# 
  3257   00037B                     PCLATU_SHAD     equ	891	;# 
  3258   00037C                     FSR0SH          equ	892	;# 
  3259   00037C                     FSR0L_SHAD      equ	892	;# 
  3260   00037D                     FSR0H_SHAD      equ	893	;# 
  3261   00037E                     FSR1SH          equ	894	;# 
  3262   00037E                     FSR1L_SHAD      equ	894	;# 
  3263   00037F                     FSR1H_SHAD      equ	895	;# 
  3264   000380                     FSR2SH          equ	896	;# 
  3265   000380                     FSR2L_SHAD      equ	896	;# 
  3266   000381                     FSR2H_SHAD      equ	897	;# 
  3267   000382                     PRODSH          equ	898	;# 
  3268   000382                     PRODL_SHAD      equ	898	;# 
  3269   000383                     PRODH_SHAD      equ	899	;# 
  3270   0003BC                     CWG1CLK         equ	956	;# 
  3271   0003BC                     CWG1CLKCON      equ	956	;# 
  3272   0003BD                     CWG1ISM         equ	957	;# 
  3273   0003BD                     CWG1DAT         equ	957	;# 
  3274   0003BE                     CWG1DBR         equ	958	;# 
  3275   0003BF                     CWG1DBF         equ	959	;# 
  3276   0003C0                     CWG1CON0        equ	960	;# 
  3277   0003C1                     CWG1CON1        equ	961	;# 
  3278   0003C2                     CWG1AS0         equ	962	;# 
  3279   0003C3                     CWG1AS1         equ	963	;# 
  3280   0003C4                     CWG1STR         equ	964	;# 
  3281   0003C5                     CWG2CLK         equ	965	;# 
  3282   0003C5                     CWG2CLKCON      equ	965	;# 
  3283   0003C6                     CWG2ISM         equ	966	;# 
  3284   0003C6                     CWG2DAT         equ	966	;# 
  3285   0003C7                     CWG2DBR         equ	967	;# 
  3286   0003C8                     CWG2DBF         equ	968	;# 
  3287   0003C9                     CWG2CON0        equ	969	;# 
  3288   0003CA                     CWG2CON1        equ	970	;# 
  3289   0003CB                     CWG2AS0         equ	971	;# 
  3290   0003CC                     CWG2AS1         equ	972	;# 
  3291   0003CD                     CWG2STR         equ	973	;# 
  3292   0003CE                     CWG3CLK         equ	974	;# 
  3293   0003CE                     CWG3CLKCON      equ	974	;# 
  3294   0003CF                     CWG3ISM         equ	975	;# 
  3295   0003CF                     CWG3DAT         equ	975	;# 
  3296   0003D0                     CWG3DBR         equ	976	;# 
  3297   0003D1                     CWG3DBF         equ	977	;# 
  3298   0003D2                     CWG3CON0        equ	978	;# 
  3299   0003D3                     CWG3CON1        equ	979	;# 
  3300   0003D4                     CWG3AS0         equ	980	;# 
  3301   0003D5                     CWG3AS1         equ	981	;# 
  3302   0003D6                     CWG3STR         equ	982	;# 
  3303   0003D7                     FVRCON          equ	983	;# 
  3304   0003D8                     ADCPCON         equ	984	;# 
  3305   0003D8                     ADCP            equ	984	;# 
  3306   0003D9                     ADLTH           equ	985	;# 
  3307   0003D9                     ADLTHL          equ	985	;# 
  3308   0003DA                     ADLTHH          equ	986	;# 
  3309   0003DB                     ADUTH           equ	987	;# 
  3310   0003DB                     ADUTHL          equ	987	;# 
  3311   0003DC                     ADUTHH          equ	988	;# 
  3312   0003DD                     ADERR           equ	989	;# 
  3313   0003DD                     ADERRL          equ	989	;# 
  3314   0003DE                     ADERRH          equ	990	;# 
  3315   0003DF                     ADSTPT          equ	991	;# 
  3316   0003DF                     ADSTPTL         equ	991	;# 
  3317   0003E0                     ADSTPTH         equ	992	;# 
  3318   0003E1                     ADFLTR          equ	993	;# 
  3319   0003E1                     ADFLTRL         equ	993	;# 
  3320   0003E2                     ADFLTRH         equ	994	;# 
  3321   0003E3                     ADACC           equ	995	;# 
  3322   0003E3                     ADACCL          equ	995	;# 
  3323   0003E4                     ADACCH          equ	996	;# 
  3324   0003E5                     ADACCU          equ	997	;# 
  3325   0003E6                     ADCNT           equ	998	;# 
  3326   0003E7                     ADRPT           equ	999	;# 
  3327   0003E8                     ADPREV          equ	1000	;# 
  3328   0003E8                     ADPREVL         equ	1000	;# 
  3329   0003E9                     ADPREVH         equ	1001	;# 
  3330   0003EA                     ADRES           equ	1002	;# 
  3331   0003EA                     ADRESL          equ	1002	;# 
  3332   0003EB                     ADRESH          equ	1003	;# 
  3333   0003EC                     ADPCH           equ	1004	;# 
  3334   0003EE                     ADACQ           equ	1006	;# 
  3335   0003EE                     ADACQL          equ	1006	;# 
  3336   0003EF                     ADACQH          equ	1007	;# 
  3337   0003F0                     ADCAP           equ	1008	;# 
  3338   0003F1                     ADPRE           equ	1009	;# 
  3339   0003F1                     ADPREL          equ	1009	;# 
  3340   0003F2                     ADPREH          equ	1010	;# 
  3341   0003F3                     ADCON0          equ	1011	;# 
  3342   0003F4                     ADCON1          equ	1012	;# 
  3343   0003F5                     ADCON2          equ	1013	;# 
  3344   0003F6                     ADCON3          equ	1014	;# 
  3345   0003F7                     ADSTAT          equ	1015	;# 
  3346   0003F8                     ADREF           equ	1016	;# 
  3347   0003F9                     ADACT           equ	1017	;# 
  3348   0003FA                     ADCLK           equ	1018	;# 
  3349   000400                     ANSELA          equ	1024	;# 
  3350   000401                     WPUA            equ	1025	;# 
  3351   000402                     ODCONA          equ	1026	;# 
  3352   000403                     SLRCONA         equ	1027	;# 
  3353   000404                     INLVLA          equ	1028	;# 
  3354   000405                     IOCAP           equ	1029	;# 
  3355   000406                     IOCAN           equ	1030	;# 
  3356   000407                     IOCAF           equ	1031	;# 
  3357   000408                     ANSELB          equ	1032	;# 
  3358   000409                     WPUB            equ	1033	;# 
  3359   00040A                     ODCONB          equ	1034	;# 
  3360   00040B                     SLRCONB         equ	1035	;# 
  3361   00040C                     INLVLB          equ	1036	;# 
  3362   00040D                     IOCBP           equ	1037	;# 
  3363   00040E                     IOCBN           equ	1038	;# 
  3364   00040F                     IOCBF           equ	1039	;# 
  3365   000410                     ANSELC          equ	1040	;# 
  3366   000411                     WPUC            equ	1041	;# 
  3367   000412                     ODCONC          equ	1042	;# 
  3368   000413                     SLRCONC         equ	1043	;# 
  3369   000414                     INLVLC          equ	1044	;# 
  3370   000415                     IOCCP           equ	1045	;# 
  3371   000416                     IOCCN           equ	1046	;# 
  3372   000417                     IOCCF           equ	1047	;# 
  3373   000418                     ANSELD          equ	1048	;# 
  3374   000419                     WPUD            equ	1049	;# 
  3375   00041A                     ODCOND          equ	1050	;# 
  3376   00041B                     SLRCOND         equ	1051	;# 
  3377   00041C                     INLVLD          equ	1052	;# 
  3378   000420                     ANSELE          equ	1056	;# 
  3379   000421                     WPUE            equ	1057	;# 
  3380   000422                     ODCONE          equ	1058	;# 
  3381   000423                     SLRCONE         equ	1059	;# 
  3382   000424                     INLVLE          equ	1060	;# 
  3383   000425                     IOCEP           equ	1061	;# 
  3384   000426                     IOCEN           equ	1062	;# 
  3385   000427                     IOCEF           equ	1063	;# 
  3386   000428                     ANSELF          equ	1064	;# 
  3387   000429                     WPUF            equ	1065	;# 
  3388   00042A                     ODCONF          equ	1066	;# 
  3389   00042B                     SLRCONF         equ	1067	;# 
  3390   00042C                     INLVLF          equ	1068	;# 
  3391   000440                     NCO1ACC         equ	1088	;# 
  3392   000440                     NCO1ACCL        equ	1088	;# 
  3393   000441                     NCO1ACCH        equ	1089	;# 
  3394   000442                     NCO1ACCU        equ	1090	;# 
  3395   000443                     NCO1INC         equ	1091	;# 
  3396   000443                     NCO1INCL        equ	1091	;# 
  3397   000444                     NCO1INCH        equ	1092	;# 
  3398   000445                     NCO1INCU        equ	1093	;# 
  3399   000446                     NCO1CON         equ	1094	;# 
  3400   000447                     NCO1CLK         equ	1095	;# 
  3401   000448                     NCO2ACC         equ	1096	;# 
  3402   000448                     NCO2ACCL        equ	1096	;# 
  3403   000449                     NCO2ACCH        equ	1097	;# 
  3404   00044A                     NCO2ACCU        equ	1098	;# 
  3405   00044B                     NCO2INC         equ	1099	;# 
  3406   00044B                     NCO2INCL        equ	1099	;# 
  3407   00044C                     NCO2INCH        equ	1100	;# 
  3408   00044D                     NCO2INCU        equ	1101	;# 
  3409   00044E                     NCO2CON         equ	1102	;# 
  3410   00044F                     NCO2CLK         equ	1103	;# 
  3411   000450                     NCO3ACC         equ	1104	;# 
  3412   000450                     NCO3ACCL        equ	1104	;# 
  3413   000451                     NCO3ACCH        equ	1105	;# 
  3414   000452                     NCO3ACCU        equ	1106	;# 
  3415   000453                     NCO3INC         equ	1107	;# 
  3416   000453                     NCO3INCL        equ	1107	;# 
  3417   000454                     NCO3INCH        equ	1108	;# 
  3418   000455                     NCO3INCU        equ	1109	;# 
  3419   000456                     NCO3CON         equ	1110	;# 
  3420   000457                     NCO3CLK         equ	1111	;# 
  3421   000459                     IVTLOCK         equ	1113	;# 
  3422   00045A                     IVTAD           equ	1114	;# 
  3423   00045A                     IVTADL          equ	1114	;# 
  3424   00045B                     IVTADH          equ	1115	;# 
  3425   00045C                     IVTADU          equ	1116	;# 
  3426   00045D                     IVTBASE         equ	1117	;# 
  3427   00045D                     IVTBASEL        equ	1117	;# 
  3428   00045E                     IVTBASEH        equ	1118	;# 
  3429   00045F                     IVTBASEU        equ	1119	;# 
  3430   000460                     PWM1ERS         equ	1120	;# 
  3431   000461                     PWM1CLK         equ	1121	;# 
  3432   000462                     PWM1LDS         equ	1122	;# 
  3433   000463                     PWM1PR          equ	1123	;# 
  3434   000463                     PWM1PRL         equ	1123	;# 
  3435   000464                     PWM1PRH         equ	1124	;# 
  3436   000465                     PWM1CPRE        equ	1125	;# 
  3437   000466                     PWM1PIPOS       equ	1126	;# 
  3438   000467                     PWM1GIR         equ	1127	;# 
  3439   000468                     PWM1GIE         equ	1128	;# 
  3440   000469                     PWM1CON         equ	1129	;# 
  3441   00046A                     PWM1S1CFG       equ	1130	;# 
  3442   00046B                     PWM1S1P1        equ	1131	;# 
  3443   00046B                     PWM1S1P1L       equ	1131	;# 
  3444   00046C                     PWM1S1P1H       equ	1132	;# 
  3445   00046D                     PWM1S1P2        equ	1133	;# 
  3446   00046D                     PWM1S1P2L       equ	1133	;# 
  3447   00046E                     PWM1S1P2H       equ	1134	;# 
  3448   00046F                     PWM2ERS         equ	1135	;# 
  3449   000470                     PWM2CLK         equ	1136	;# 
  3450   000471                     PWM2LDS         equ	1137	;# 
  3451   000472                     PWM2PR          equ	1138	;# 
  3452   000472                     PWM2PRL         equ	1138	;# 
  3453   000473                     PWM2PRH         equ	1139	;# 
  3454   000474                     PWM2CPRE        equ	1140	;# 
  3455   000475                     PWM2PIPOS       equ	1141	;# 
  3456   000476                     PWM2GIR         equ	1142	;# 
  3457   000477                     PWM2GIE         equ	1143	;# 
  3458   000478                     PWM2CON         equ	1144	;# 
  3459   000479                     PWM2S1CFG       equ	1145	;# 
  3460   00047A                     PWM2S1P1        equ	1146	;# 
  3461   00047A                     PWM2S1P1L       equ	1146	;# 
  3462   00047B                     PWM2S1P1H       equ	1147	;# 
  3463   00047C                     PWM2S1P2        equ	1148	;# 
  3464   00047C                     PWM2S1P2L       equ	1148	;# 
  3465   00047D                     PWM2S1P2H       equ	1149	;# 
  3466   00047E                     PWM3ERS         equ	1150	;# 
  3467   00047F                     PWM3CLK         equ	1151	;# 
  3468   000480                     PWM3LDS         equ	1152	;# 
  3469   000481                     PWM3PR          equ	1153	;# 
  3470   000481                     PWM3PRL         equ	1153	;# 
  3471   000482                     PWM3PRH         equ	1154	;# 
  3472   000483                     PWM3CPRE        equ	1155	;# 
  3473   000484                     PWM3PIPOS       equ	1156	;# 
  3474   000485                     PWM3GIR         equ	1157	;# 
  3475   000486                     PWM3GIE         equ	1158	;# 
  3476   000487                     PWM3CON         equ	1159	;# 
  3477   000488                     PWM3S1CFG       equ	1160	;# 
  3478   000489                     PWM3S1P1        equ	1161	;# 
  3479   000489                     PWM3S1P1L       equ	1161	;# 
  3480   00048A                     PWM3S1P1H       equ	1162	;# 
  3481   00048B                     PWM3S1P2        equ	1163	;# 
  3482   00048B                     PWM3S1P2L       equ	1163	;# 
  3483   00048C                     PWM3S1P2H       equ	1164	;# 
  3484   00049C                     PWMLOAD         equ	1180	;# 
  3485   00049D                     PWMEN           equ	1181	;# 
  3486   00049E                     PIE0            equ	1182	;# 
  3487   00049F                     PIE1            equ	1183	;# 
  3488   0004A0                     PIE2            equ	1184	;# 
  3489   0004A1                     PIE3            equ	1185	;# 
  3490   0004A2                     PIE4            equ	1186	;# 
  3491   0004A3                     PIE5            equ	1187	;# 
  3492   0004A4                     PIE6            equ	1188	;# 
  3493   0004A5                     PIE7            equ	1189	;# 
  3494   0004A6                     PIE8            equ	1190	;# 
  3495   0004A7                     PIE9            equ	1191	;# 
  3496   0004A8                     PIE10           equ	1192	;# 
  3497   0004A9                     PIE11           equ	1193	;# 
  3498   0004AA                     PIE12           equ	1194	;# 
  3499   0004AB                     PIE13           equ	1195	;# 
  3500   0004AC                     PIE14           equ	1196	;# 
  3501   0004AD                     PIE15           equ	1197	;# 
  3502   0004AE                     PIR0            equ	1198	;# 
  3503   0004AF                     PIR1            equ	1199	;# 
  3504   0004B0                     PIR2            equ	1200	;# 
  3505   0004B1                     PIR3            equ	1201	;# 
  3506   0004B2                     PIR4            equ	1202	;# 
  3507   0004B3                     PIR5            equ	1203	;# 
  3508   0004B4                     PIR6            equ	1204	;# 
  3509   0004B5                     PIR7            equ	1205	;# 
  3510   0004B6                     PIR8            equ	1206	;# 
  3511   0004B7                     PIR9            equ	1207	;# 
  3512   0004B8                     PIR10           equ	1208	;# 
  3513   0004B9                     PIR11           equ	1209	;# 
  3514   0004BA                     PIR12           equ	1210	;# 
  3515   0004BB                     PIR13           equ	1211	;# 
  3516   0004BC                     PIR14           equ	1212	;# 
  3517   0004BD                     PIR15           equ	1213	;# 
  3518   0004BE                     LATA            equ	1214	;# 
  3519   0004BF                     LATB            equ	1215	;# 
  3520   0004C0                     LATC            equ	1216	;# 
  3521   0004C1                     LATD            equ	1217	;# 
  3522   0004C2                     LATE            equ	1218	;# 
  3523   0004C3                     LATF            equ	1219	;# 
  3524   0004C6                     TRISA           equ	1222	;# 
  3525   0004C7                     TRISB           equ	1223	;# 
  3526   0004C8                     TRISC           equ	1224	;# 
  3527   0004C9                     TRISD           equ	1225	;# 
  3528   0004CA                     TRISE           equ	1226	;# 
  3529   0004CB                     TRISF           equ	1227	;# 
  3530   0004CE                     PORTA           equ	1230	;# 
  3531   0004CF                     PORTB           equ	1231	;# 
  3532   0004D0                     PORTC           equ	1232	;# 
  3533   0004D1                     PORTD           equ	1233	;# 
  3534   0004D2                     PORTE           equ	1234	;# 
  3535   0004D3                     PORTF           equ	1235	;# 
  3536   0004D6                     INTCON0         equ	1238	;# 
  3537   0004D7                     INTCON1         equ	1239	;# 
  3538   0004D8                     STATUS          equ	1240	;# 
  3539   0004D9                     FSR2            equ	1241	;# 
  3540   0004D9                     FSR2L           equ	1241	;# 
  3541   0004DA                     FSR2H           equ	1242	;# 
  3542   0004DB                     PLUSW2          equ	1243	;# 
  3543   0004DC                     PREINC2         equ	1244	;# 
  3544   0004DD                     POSTDEC2        equ	1245	;# 
  3545   0004DE                     POSTINC2        equ	1246	;# 
  3546   0004DF                     INDF2           equ	1247	;# 
  3547   0004E0                     BSR             equ	1248	;# 
  3548   0004E1                     FSR1            equ	1249	;# 
  3549   0004E1                     FSR1L           equ	1249	;# 
  3550   0004E2                     FSR1H           equ	1250	;# 
  3551   0004E3                     PLUSW1          equ	1251	;# 
  3552   0004E4                     PREINC1         equ	1252	;# 
  3553   0004E5                     POSTDEC1        equ	1253	;# 
  3554   0004E6                     POSTINC1        equ	1254	;# 
  3555   0004E7                     INDF1           equ	1255	;# 
  3556   0004E8                     WREG            equ	1256	;# 
  3557   0004E9                     FSR0            equ	1257	;# 
  3558   0004E9                     FSR0L           equ	1257	;# 
  3559   0004EA                     FSR0H           equ	1258	;# 
  3560   0004EB                     PLUSW0          equ	1259	;# 
  3561   0004EC                     PREINC0         equ	1260	;# 
  3562   0004ED                     POSTDEC0        equ	1261	;# 
  3563   0004EE                     POSTINC0        equ	1262	;# 
  3564   0004EF                     INDF0           equ	1263	;# 
  3565   0004F0                     PCON0           equ	1264	;# 
  3566   0004F1                     PCON1           equ	1265	;# 
  3567   0004F2                     CPUDOZE         equ	1266	;# 
  3568   0004F3                     PROD            equ	1267	;# 
  3569   0004F3                     PRODL           equ	1267	;# 
  3570   0004F4                     PRODH           equ	1268	;# 
  3571   0004F5                     TABLAT          equ	1269	;# 
  3572   0004F6                     TBLPTR          equ	1270	;# 
  3573   0004F6                     TBLPTRL         equ	1270	;# 
  3574   0004F7                     TBLPTRH         equ	1271	;# 
  3575   0004F8                     TBLPTRU         equ	1272	;# 
  3576   0004F9                     PCLAT           equ	1273	;# 
  3577   0004F9                     PCL             equ	1273	;# 
  3578   0004FA                     PCLATH          equ	1274	;# 
  3579   0004FB                     PCLATU          equ	1275	;# 
  3580   0004FC                     STKPTR          equ	1276	;# 
  3581   0004FD                     TOS             equ	1277	;# 
  3582   0004FD                     TOSL            equ	1277	;# 
  3583   0004FE                     TOSH            equ	1278	;# 
  3584   0004FF                     TOSU            equ	1279	;# 
  3585   000039                     CLKRCON         equ	57	;# 
  3586   00003A                     CLKRCLK         equ	58	;# 
  3587   000040                     NVMCON0         equ	64	;# 
  3588   000041                     NVMCON1         equ	65	;# 
  3589   000042                     NVMLOCK         equ	66	;# 
  3590   000043                     NVMADR          equ	67	;# 
  3591   000043                     NVMADRL         equ	67	;# 
  3592   000044                     NVMADRH         equ	68	;# 
  3593   000045                     NVMADRU         equ	69	;# 
  3594   000046                     NVMDAT          equ	70	;# 
  3595   000046                     NVMDATL         equ	70	;# 
  3596   000047                     NVMDATH         equ	71	;# 
  3597   000048                     VREGCON         equ	72	;# 
  3598   000049                     BORCON          equ	73	;# 
  3599   00004A                     HLVDCON0        equ	74	;# 
  3600   00004B                     HLVDCON1        equ	75	;# 
  3601   00004C                     ZCDCON          equ	76	;# 
  3602   000060                     PMD0            equ	96	;# 
  3603   000061                     PMD1            equ	97	;# 
  3604   000063                     PMD3            equ	99	;# 
  3605   000064                     PMD4            equ	100	;# 
  3606   000065                     PMD5            equ	101	;# 
  3607   000066                     PMD6            equ	102	;# 
  3608   000067                     PMD7            equ	103	;# 
  3609   000068                     PMD8            equ	104	;# 
  3610   00006A                     MD1CON0         equ	106	;# 
  3611   00006B                     MD1CON1         equ	107	;# 
  3612   00006C                     MD1SRC          equ	108	;# 
  3613   00006D                     MD1CARL         equ	109	;# 
  3614   00006E                     MD1CARH         equ	110	;# 
  3615   00006F                     CMOUT           equ	111	;# 
  3616   000070                     CM1CON0         equ	112	;# 
  3617   000071                     CM1CON1         equ	113	;# 
  3618   000072                     CM1NCH          equ	114	;# 
  3619   000073                     CM1PCH          equ	115	;# 
  3620   000074                     CM2CON0         equ	116	;# 
  3621   000075                     CM2CON1         equ	117	;# 
  3622   000076                     CM2NCH          equ	118	;# 
  3623   000077                     CM2PCH          equ	119	;# 
  3624   000078                     WDTCON0         equ	120	;# 
  3625   000079                     WDTCON1         equ	121	;# 
  3626   00007A                     WDTPS           equ	122	;# 
  3627   00007A                     WDTPSL          equ	122	;# 
  3628   00007B                     WDTPSH          equ	123	;# 
  3629   00007C                     WDTTMR          equ	124	;# 
  3630   00007D                     DAC1DAT         equ	125	;# 
  3631   00007D                     DAC1DATL        equ	125	;# 
  3632   00007F                     DAC1CON         equ	127	;# 
  3633   000080                     SPI1RXB         equ	128	;# 
  3634   000081                     SPI1TXB         equ	129	;# 
  3635   000082                     SPI1TCNT        equ	130	;# 
  3636   000082                     SPI1TCNTL       equ	130	;# 
  3637   000083                     SPI1TCNTH       equ	131	;# 
  3638   000084                     SPI1CON0        equ	132	;# 
  3639   000085                     SPI1CON1        equ	133	;# 
  3640   000086                     SPI1CON2        equ	134	;# 
  3641   000087                     SPI1STATUS      equ	135	;# 
  3642   000088                     SPI1TWIDTH      equ	136	;# 
  3643   000089                     SPI1BAUD        equ	137	;# 
  3644   00008A                     SPI1INTF        equ	138	;# 
  3645   00008B                     SPI1INTE        equ	139	;# 
  3646   00008C                     SPI1CLK         equ	140	;# 
  3647   00008D                     SPI2RXB         equ	141	;# 
  3648   00008E                     SPI2TXB         equ	142	;# 
  3649   00008F                     SPI2TCNT        equ	143	;# 
  3650   00008F                     SPI2TCNTL       equ	143	;# 
  3651   000090                     SPI2TCNTH       equ	144	;# 
  3652   000091                     SPI2CON0        equ	145	;# 
  3653   000092                     SPI2CON1        equ	146	;# 
  3654   000093                     SPI2CON2        equ	147	;# 
  3655   000094                     SPI2STATUS      equ	148	;# 
  3656   000095                     SPI2TWIDTH      equ	149	;# 
  3657   000096                     SPI2BAUD        equ	150	;# 
  3658   000097                     SPI2INTF        equ	151	;# 
  3659   000098                     SPI2INTE        equ	152	;# 
  3660   000099                     SPI2CLK         equ	153	;# 
  3661   0000AC                     ACTCON          equ	172	;# 
  3662   0000AD                     OSCCON1         equ	173	;# 
  3663   0000AE                     OSCCON2         equ	174	;# 
  3664   0000AF                     OSCCON3         equ	175	;# 
  3665   0000B0                     OSCTUNE         equ	176	;# 
  3666   0000B1                     OSCFRQ          equ	177	;# 
  3667   0000B1                     OSCFREQ         equ	177	;# 
  3668   0000B2                     OSCSTAT         equ	178	;# 
  3669   0000B2                     OSCSTAT1        equ	178	;# 
  3670   0000B3                     OSCEN           equ	179	;# 
  3671   0000B4                     PRLOCK          equ	180	;# 
  3672   0000B5                     SCANPR          equ	181	;# 
  3673   0000B6                     DMA1PR          equ	182	;# 
  3674   0000B7                     DMA2PR          equ	183	;# 
  3675   0000B8                     DMA3PR          equ	184	;# 
  3676   0000B9                     DMA4PR          equ	185	;# 
  3677   0000BA                     DMA5PR          equ	186	;# 
  3678   0000BB                     DMA6PR          equ	187	;# 
  3679   0000BE                     MAINPR          equ	190	;# 
  3680   0000BF                     ISRPR           equ	191	;# 
  3681   0000D4                     CLCDATA         equ	212	;# 
  3682   0000D5                     CLCSELECT       equ	213	;# 
  3683   0000D6                     CLCnCON         equ	214	;# 
  3684   0000D7                     CLCnPOL         equ	215	;# 
  3685   0000D8                     CLCnSEL0        equ	216	;# 
  3686   0000D9                     CLCnSEL1        equ	217	;# 
  3687   0000DA                     CLCnSEL2        equ	218	;# 
  3688   0000DB                     CLCnSEL3        equ	219	;# 
  3689   0000DC                     CLCnGLS0        equ	220	;# 
  3690   0000DD                     CLCnGLS1        equ	221	;# 
  3691   0000DE                     CLCnGLS2        equ	222	;# 
  3692   0000DF                     CLCnGLS3        equ	223	;# 
  3693   0000E8                     DMASELECT       equ	232	;# 
  3694   0000E9                     DMAnBUF         equ	233	;# 
  3695   0000EA                     DMAnDCNT        equ	234	;# 
  3696   0000EA                     DMAnDCNTL       equ	234	;# 
  3697   0000EB                     DMAnDCNTH       equ	235	;# 
  3698   0000EC                     DMAnDPTR        equ	236	;# 
  3699   0000EC                     DMAnDPTRL       equ	236	;# 
  3700   0000ED                     DMAnDPTRH       equ	237	;# 
  3701   0000EE                     DMAnDSZ         equ	238	;# 
  3702   0000EE                     DMAnDSZL        equ	238	;# 
  3703   0000EF                     DMAnDSZH        equ	239	;# 
  3704   0000F0                     DMAnDSA         equ	240	;# 
  3705   0000F0                     DMAnDSAL        equ	240	;# 
  3706   0000F1                     DMAnDSAH        equ	241	;# 
  3707   0000F2                     DMAnSCNT        equ	242	;# 
  3708   0000F2                     DMAnSCNTL       equ	242	;# 
  3709   0000F3                     DMAnSCNTH       equ	243	;# 
  3710   0000F4                     DMAnSPTR        equ	244	;# 
  3711   0000F4                     DMAnSPTRL       equ	244	;# 
  3712   0000F5                     DMAnSPTRH       equ	245	;# 
  3713   0000F6                     DMAnSPTRU       equ	246	;# 
  3714   0000F7                     DMAnSSZ         equ	247	;# 
  3715   0000F7                     DMAnSSZL        equ	247	;# 
  3716   0000F8                     DMAnSSZH        equ	248	;# 
  3717   0000F9                     DMAnSSA         equ	249	;# 
  3718   0000F9                     DMAnSSAL        equ	249	;# 
  3719   0000FA                     DMAnSSAH        equ	250	;# 
  3720   0000FB                     DMAnSSAU        equ	251	;# 
  3721   0000FC                     DMAnCON0        equ	252	;# 
  3722   0000FD                     DMAnCON1        equ	253	;# 
  3723   0000FE                     DMAnAIRQ        equ	254	;# 
  3724   0000FF                     DMAnSIRQ        equ	255	;# 
  3725   000200                     PPSLOCK         equ	512	;# 
  3726   000201                     RA0PPS          equ	513	;# 
  3727   000202                     RA1PPS          equ	514	;# 
  3728   000203                     RA2PPS          equ	515	;# 
  3729   000204                     RA3PPS          equ	516	;# 
  3730   000205                     RA4PPS          equ	517	;# 
  3731   000206                     RA5PPS          equ	518	;# 
  3732   000207                     RA6PPS          equ	519	;# 
  3733   000208                     RA7PPS          equ	520	;# 
  3734   000209                     RB0PPS          equ	521	;# 
  3735   00020A                     RB1PPS          equ	522	;# 
  3736   00020B                     RB2PPS          equ	523	;# 
  3737   00020C                     RB3PPS          equ	524	;# 
  3738   00020D                     RB4PPS          equ	525	;# 
  3739   00020E                     RB5PPS          equ	526	;# 
  3740   00020F                     RB6PPS          equ	527	;# 
  3741   000210                     RB7PPS          equ	528	;# 
  3742   000211                     RC0PPS          equ	529	;# 
  3743   000212                     RC1PPS          equ	530	;# 
  3744   000213                     RC2PPS          equ	531	;# 
  3745   000214                     RC3PPS          equ	532	;# 
  3746   000215                     RC4PPS          equ	533	;# 
  3747   000216                     RC5PPS          equ	534	;# 
  3748   000217                     RC6PPS          equ	535	;# 
  3749   000218                     RC7PPS          equ	536	;# 
  3750   000219                     RD0PPS          equ	537	;# 
  3751   00021A                     RD1PPS          equ	538	;# 
  3752   00021B                     RD2PPS          equ	539	;# 
  3753   00021C                     RD3PPS          equ	540	;# 
  3754   00021D                     RD4PPS          equ	541	;# 
  3755   00021E                     RD5PPS          equ	542	;# 
  3756   00021F                     RD6PPS          equ	543	;# 
  3757   000220                     RD7PPS          equ	544	;# 
  3758   000221                     RE0PPS          equ	545	;# 
  3759   000222                     RE1PPS          equ	546	;# 
  3760   000223                     RE2PPS          equ	547	;# 
  3761   000229                     RF0PPS          equ	553	;# 
  3762   00022A                     RF1PPS          equ	554	;# 
  3763   00022B                     RF2PPS          equ	555	;# 
  3764   00022C                     RF3PPS          equ	556	;# 
  3765   00022D                     RF4PPS          equ	557	;# 
  3766   00022E                     RF5PPS          equ	558	;# 
  3767   00022F                     RF6PPS          equ	559	;# 
  3768   000230                     RF7PPS          equ	560	;# 
  3769   00023E                     INT0PPS         equ	574	;# 
  3770   00023F                     INT1PPS         equ	575	;# 
  3771   000240                     INT2PPS         equ	576	;# 
  3772   000241                     T0CKIPPS        equ	577	;# 
  3773   000242                     T1CKIPPS        equ	578	;# 
  3774   000243                     T1GPPS          equ	579	;# 
  3775   000244                     T3CKIPPS        equ	580	;# 
  3776   000245                     T3GPPS          equ	581	;# 
  3777   000246                     T5CKIPPS        equ	582	;# 
  3778   000247                     T5GPPS          equ	583	;# 
  3779   000248                     T2INPPS         equ	584	;# 
  3780   000249                     T4INPPS         equ	585	;# 
  3781   00024A                     T6INPPS         equ	586	;# 
  3782   00024F                     CCP1PPS         equ	591	;# 
  3783   000250                     CCP2PPS         equ	592	;# 
  3784   000251                     CCP3PPS         equ	593	;# 
  3785   000253                     PWM1ERSPPS      equ	595	;# 
  3786   000254                     PWM2ERSPPS      equ	596	;# 
  3787   000255                     PWM3ERSPPS      equ	597	;# 
  3788   000257                     PWMIN0PPS       equ	599	;# 
  3789   000258                     PWMIN1PPS       equ	600	;# 
  3790   000259                     SMT1WINPPS      equ	601	;# 
  3791   00025A                     SMT1SIGPPS      equ	602	;# 
  3792   00025B                     CWG1PPS         equ	603	;# 
  3793   00025B                     CWG1INPPS       equ	603	;# 
  3794   00025C                     CWG2PPS         equ	604	;# 
  3795   00025C                     CWG2INPPS       equ	604	;# 
  3796   00025D                     CWG3PPS         equ	605	;# 
  3797   00025D                     CWG3INPPS       equ	605	;# 
  3798   00025E                     MD1CARLPPS      equ	606	;# 
  3799   00025E                     MDCARLPPS       equ	606	;# 
  3800   00025F                     MD1CARHPPS      equ	607	;# 
  3801   00025F                     MDCARHPPS       equ	607	;# 
  3802   000260                     MD1SRCPPS       equ	608	;# 
  3803   000260                     MDSRCPPS        equ	608	;# 
  3804   000261                     CLCIN0PPS       equ	609	;# 
  3805   000262                     CLCIN1PPS       equ	610	;# 
  3806   000263                     CLCIN2PPS       equ	611	;# 
  3807   000264                     CLCIN3PPS       equ	612	;# 
  3808   000265                     CLCIN4PPS       equ	613	;# 
  3809   000266                     CLCIN5PPS       equ	614	;# 
  3810   000267                     CLCIN6PPS       equ	615	;# 
  3811   000268                     CLCIN7PPS       equ	616	;# 
  3812   000269                     ADACTPPS        equ	617	;# 
  3813   00026A                     SPI1SCKPPS      equ	618	;# 
  3814   00026B                     SPI1SDIPPS      equ	619	;# 
  3815   00026C                     SPI1SSPPS       equ	620	;# 
  3816   00026D                     SPI2SCKPPS      equ	621	;# 
  3817   00026E                     SPI2SDIPPS      equ	622	;# 
  3818   00026F                     SPI2SSPPS       equ	623	;# 
  3819   000270                     I2C1SDAPPS      equ	624	;# 
  3820   000271                     I2C1SCLPPS      equ	625	;# 
  3821   000272                     U1RXPPS         equ	626	;# 
  3822   000273                     U1CTSPPS        equ	627	;# 
  3823   000274                     U2RXPPS         equ	628	;# 
  3824   000275                     U2CTSPPS        equ	629	;# 
  3825   000276                     U3RXPPS         equ	630	;# 
  3826   000277                     U3CTSPPS        equ	631	;# 
  3827   000278                     U4RXPPS         equ	632	;# 
  3828   000279                     U4CTSPPS        equ	633	;# 
  3829   00027A                     U5RXPPS         equ	634	;# 
  3830   00027B                     U5CTSPPS        equ	635	;# 
  3831   000286                     RC4I2C          equ	646	;# 
  3832   000287                     RC3I2C          equ	647	;# 
  3833   000288                     RB2I2C          equ	648	;# 
  3834   000289                     RB1I2C          equ	649	;# 
  3835   00028B                     I2C1RXB         equ	651	;# 
  3836   00028C                     I2C1TXB         equ	652	;# 
  3837   00028D                     I2C1CNT         equ	653	;# 
  3838   00028E                     I2C1ADB0        equ	654	;# 
  3839   00028F                     I2C1ADB1        equ	655	;# 
  3840   000290                     I2C1ADR0        equ	656	;# 
  3841   000291                     I2C1ADR1        equ	657	;# 
  3842   000292                     I2C1ADR2        equ	658	;# 
  3843   000293                     I2C1ADR3        equ	659	;# 
  3844   000294                     I2C1CON0        equ	660	;# 
  3845   000295                     I2C1CON1        equ	661	;# 
  3846   000296                     I2C1CON2        equ	662	;# 
  3847   000297                     I2C1ERR         equ	663	;# 
  3848   000298                     I2C1STAT0       equ	664	;# 
  3849   000299                     I2C1STAT1       equ	665	;# 
  3850   00029A                     I2C1PIR         equ	666	;# 
  3851   00029B                     I2C1PIE         equ	667	;# 
  3852   00029C                     I2C1CLK         equ	668	;# 
  3853   00029D                     I2C1BTO         equ	669	;# 
  3854   0002A1                     U1RXB           equ	673	;# 
  3855   0002A1                     U1RXBL          equ	673	;# 
  3856   0002A2                     U1RXCHK         equ	674	;# 
  3857   0002A3                     U1TXB           equ	675	;# 
  3858   0002A3                     U1TXBL          equ	675	;# 
  3859   0002A4                     U1TXCHK         equ	676	;# 
  3860   0002A5                     U1P1            equ	677	;# 
  3861   0002A5                     U1P1L           equ	677	;# 
  3862   0002A6                     U1P1H           equ	678	;# 
  3863   0002A7                     U1P2            equ	679	;# 
  3864   0002A7                     U1P2L           equ	679	;# 
  3865   0002A8                     U1P2H           equ	680	;# 
  3866   0002A9                     U1P3            equ	681	;# 
  3867   0002A9                     U1P3L           equ	681	;# 
  3868   0002AA                     U1P3H           equ	682	;# 
  3869   0002AB                     U1CON0          equ	683	;# 
  3870   0002AC                     U1CON1          equ	684	;# 
  3871   0002AD                     U1CON2          equ	685	;# 
  3872   0002AE                     U1BRG           equ	686	;# 
  3873   0002AE                     U1BRGL          equ	686	;# 
  3874   0002AF                     U1BRGH          equ	687	;# 
  3875   0002B0                     U1FIFO          equ	688	;# 
  3876   0002B1                     U1UIR           equ	689	;# 
  3877   0002B2                     U1ERRIR         equ	690	;# 
  3878   0002B3                     U1ERRIE         equ	691	;# 
  3879   0002B4                     U2RXB           equ	692	;# 
  3880   0002B4                     U2RXBL          equ	692	;# 
  3881   0002B6                     U2TXB           equ	694	;# 
  3882   0002B6                     U2TXBL          equ	694	;# 
  3883   0002B8                     U2P1            equ	696	;# 
  3884   0002B8                     U2P1L           equ	696	;# 
  3885   0002BA                     U2P2            equ	698	;# 
  3886   0002BA                     U2P2L           equ	698	;# 
  3887   0002BC                     U2P3            equ	700	;# 
  3888   0002BC                     U2P3L           equ	700	;# 
  3889   0002BE                     U2CON0          equ	702	;# 
  3890   0002BF                     U2CON1          equ	703	;# 
  3891   0002C0                     U2CON2          equ	704	;# 
  3892   0002C1                     U2BRG           equ	705	;# 
  3893   0002C1                     U2BRGL          equ	705	;# 
  3894   0002C2                     U2BRGH          equ	706	;# 
  3895   0002C3                     U2FIFO          equ	707	;# 
  3896   0002C4                     U2UIR           equ	708	;# 
  3897   0002C5                     U2ERRIR         equ	709	;# 
  3898   0002C6                     U2ERRIE         equ	710	;# 
  3899   0002C7                     U3RXB           equ	711	;# 
  3900   0002C7                     U3RXBL          equ	711	;# 
  3901   0002C9                     U3TXB           equ	713	;# 
  3902   0002C9                     U3TXBL          equ	713	;# 
  3903   0002CB                     U3P1            equ	715	;# 
  3904   0002CB                     U3P1L           equ	715	;# 
  3905   0002CD                     U3P2            equ	717	;# 
  3906   0002CD                     U3P2L           equ	717	;# 
  3907   0002CF                     U3P3            equ	719	;# 
  3908   0002CF                     U3P3L           equ	719	;# 
  3909   0002D1                     U3CON0          equ	721	;# 
  3910   0002D2                     U3CON1          equ	722	;# 
  3911   0002D3                     U3CON2          equ	723	;# 
  3912   0002D4                     U3BRG           equ	724	;# 
  3913   0002D4                     U3BRGL          equ	724	;# 
  3914   0002D5                     U3BRGH          equ	725	;# 
  3915   0002D6                     U3FIFO          equ	726	;# 
  3916   0002D7                     U3UIR           equ	727	;# 
  3917   0002D8                     U3ERRIR         equ	728	;# 
  3918   0002D9                     U3ERRIE         equ	729	;# 
  3919   0002DA                     U4RXB           equ	730	;# 
  3920   0002DA                     U4RXBL          equ	730	;# 
  3921   0002DC                     U4TXB           equ	732	;# 
  3922   0002DC                     U4TXBL          equ	732	;# 
  3923   0002DE                     U4P1            equ	734	;# 
  3924   0002DE                     U4P1L           equ	734	;# 
  3925   0002E0                     U4P2            equ	736	;# 
  3926   0002E0                     U4P2L           equ	736	;# 
  3927   0002E2                     U4P3            equ	738	;# 
  3928   0002E2                     U4P3L           equ	738	;# 
  3929   0002E4                     U4CON0          equ	740	;# 
  3930   0002E5                     U4CON1          equ	741	;# 
  3931   0002E6                     U4CON2          equ	742	;# 
  3932   0002E7                     U4BRG           equ	743	;# 
  3933   0002E7                     U4BRGL          equ	743	;# 
  3934   0002E8                     U4BRGH          equ	744	;# 
  3935   0002E9                     U4FIFO          equ	745	;# 
  3936   0002EA                     U4UIR           equ	746	;# 
  3937   0002EB                     U4ERRIR         equ	747	;# 
  3938   0002EC                     U4ERRIE         equ	748	;# 
  3939   0002ED                     U5RXB           equ	749	;# 
  3940   0002ED                     U5RXBL          equ	749	;# 
  3941   0002EF                     U5TXB           equ	751	;# 
  3942   0002EF                     U5TXBL          equ	751	;# 
  3943   0002F1                     U5P1            equ	753	;# 
  3944   0002F1                     U5P1L           equ	753	;# 
  3945   0002F3                     U5P2            equ	755	;# 
  3946   0002F3                     U5P2L           equ	755	;# 
  3947   0002F5                     U5P3            equ	757	;# 
  3948   0002F5                     U5P3L           equ	757	;# 
  3949   0002F7                     U5CON0          equ	759	;# 
  3950   0002F8                     U5CON1          equ	760	;# 
  3951   0002F9                     U5CON2          equ	761	;# 
  3952   0002FA                     U5BRG           equ	762	;# 
  3953   0002FA                     U5BRGL          equ	762	;# 
  3954   0002FB                     U5BRGH          equ	763	;# 
  3955   0002FC                     U5FIFO          equ	764	;# 
  3956   0002FD                     U5UIR           equ	765	;# 
  3957   0002FE                     U5ERRIR         equ	766	;# 
  3958   0002FF                     U5ERRIE         equ	767	;# 
  3959   000300                     SMT1TMR         equ	768	;# 
  3960   000300                     SMT1TMRL        equ	768	;# 
  3961   000301                     SMT1TMRH        equ	769	;# 
  3962   000302                     SMT1TMRU        equ	770	;# 
  3963   000303                     SMT1CPR         equ	771	;# 
  3964   000303                     SMT1CPRL        equ	771	;# 
  3965   000304                     SMT1CPRH        equ	772	;# 
  3966   000305                     SMT1CPRU        equ	773	;# 
  3967   000306                     SMT1CPW         equ	774	;# 
  3968   000306                     SMT1CPWL        equ	774	;# 
  3969   000307                     SMT1CPWH        equ	775	;# 
  3970   000308                     SMT1CPWU        equ	776	;# 
  3971   000309                     SMT1PR          equ	777	;# 
  3972   000309                     SMT1PRL         equ	777	;# 
  3973   00030A                     SMT1PRH         equ	778	;# 
  3974   00030B                     SMT1PRU         equ	779	;# 
  3975   00030C                     SMT1CON0        equ	780	;# 
  3976   00030D                     SMT1CON1        equ	781	;# 
  3977   00030E                     SMT1STAT        equ	782	;# 
  3978   00030F                     SMT1CLK         equ	783	;# 
  3979   000310                     SMT1SIG         equ	784	;# 
  3980   000311                     SMT1WIN         equ	785	;# 
  3981   000318                     TMR0L           equ	792	;# 
  3982   000318                     TMR0            equ	792	;# 
  3983   000319                     TMR0H           equ	793	;# 
  3984   000319                     PR0             equ	793	;# 
  3985   00031A                     T0CON0          equ	794	;# 
  3986   00031B                     T0CON1          equ	795	;# 
  3987   00031C                     TMR1            equ	796	;# 
  3988   00031C                     TMR1L           equ	796	;# 
  3989   00031D                     TMR1H           equ	797	;# 
  3990   00031E                     T1CON           equ	798	;# 
  3991   00031E                     TMR1CON         equ	798	;# 
  3992   00031F                     T1GCON          equ	799	;# 
  3993   00031F                     TMR1GCON        equ	799	;# 
  3994   000320                     T1GATE          equ	800	;# 
  3995   000320                     TMR1GATE        equ	800	;# 
  3996   000321                     T1CLK           equ	801	;# 
  3997   000321                     TMR1CLK         equ	801	;# 
  3998   000321                     PR1             equ	801	;# 
  3999   000322                     T2TMR           equ	802	;# 
  4000   000322                     TMR2            equ	802	;# 
  4001   000323                     T2PR            equ	803	;# 
  4002   000323                     PR2             equ	803	;# 
  4003   000324                     T2CON           equ	804	;# 
  4004   000325                     T2HLT           equ	805	;# 
  4005   000326                     T2CLKCON        equ	806	;# 
  4006   000326                     T2CLK           equ	806	;# 
  4007   000327                     T2RST           equ	807	;# 
  4008   000328                     TMR3            equ	808	;# 
  4009   000328                     TMR3L           equ	808	;# 
  4010   000329                     TMR3H           equ	809	;# 
  4011   00032A                     T3CON           equ	810	;# 
  4012   00032A                     TMR3CON         equ	810	;# 
  4013   00032B                     T3GCON          equ	811	;# 
  4014   00032B                     TMR3GCON        equ	811	;# 
  4015   00032C                     T3GATE          equ	812	;# 
  4016   00032C                     TMR3GATE        equ	812	;# 
  4017   00032D                     T3CLK           equ	813	;# 
  4018   00032D                     TMR3CLK         equ	813	;# 
  4019   00032D                     PR3             equ	813	;# 
  4020   00032E                     T4TMR           equ	814	;# 
  4021   00032E                     TMR4            equ	814	;# 
  4022   00032F                     T4PR            equ	815	;# 
  4023   00032F                     PR4             equ	815	;# 
  4024   000330                     T4CON           equ	816	;# 
  4025   000331                     T4HLT           equ	817	;# 
  4026   000332                     T4CLKCON        equ	818	;# 
  4027   000332                     T4CLK           equ	818	;# 
  4028   000333                     T4RST           equ	819	;# 
  4029   000334                     TMR5            equ	820	;# 
  4030   000334                     TMR5L           equ	820	;# 
  4031   000335                     TMR5H           equ	821	;# 
  4032   000336                     T5CON           equ	822	;# 
  4033   000336                     TMR5CON         equ	822	;# 
  4034   000337                     T5GCON          equ	823	;# 
  4035   000337                     TMR5GCON        equ	823	;# 
  4036   000338                     T5GATE          equ	824	;# 
  4037   000338                     TMR5GATE        equ	824	;# 
  4038   000339                     T5CLK           equ	825	;# 
  4039   000339                     TMR5CLK         equ	825	;# 
  4040   000339                     PR5             equ	825	;# 
  4041   00033A                     T6TMR           equ	826	;# 
  4042   00033A                     TMR6            equ	826	;# 
  4043   00033B                     T6PR            equ	827	;# 
  4044   00033B                     PR6             equ	827	;# 
  4045   00033C                     T6CON           equ	828	;# 
  4046   00033D                     T6HLT           equ	829	;# 
  4047   00033E                     T6CLKCON        equ	830	;# 
  4048   00033E                     T6CLK           equ	830	;# 
  4049   00033F                     T6RST           equ	831	;# 
  4050   000340                     CCPR1           equ	832	;# 
  4051   000340                     CCPR1L          equ	832	;# 
  4052   000341                     CCPR1H          equ	833	;# 
  4053   000342                     CCP1CON         equ	834	;# 
  4054   000343                     CCP1CAP         equ	835	;# 
  4055   000344                     CCPR2           equ	836	;# 
  4056   000344                     CCPR2L          equ	836	;# 
  4057   000345                     CCPR2H          equ	837	;# 
  4058   000346                     CCP2CON         equ	838	;# 
  4059   000347                     CCP2CAP         equ	839	;# 
  4060   000348                     CCPR3           equ	840	;# 
  4061   000348                     CCPR3L          equ	840	;# 
  4062   000349                     CCPR3H          equ	841	;# 
  4063   00034A                     CCP3CON         equ	842	;# 
  4064   00034B                     CCP3CAP         equ	843	;# 
  4065   00034C                     CCPTMRS0        equ	844	;# 
  4066   00034F                     CRCDATA         equ	847	;# 
  4067   00034F                     CRCDATL         equ	847	;# 
  4068   000350                     CRCDATH         equ	848	;# 
  4069   000351                     CRCACC          equ	849	;# 
  4070   000351                     CRCACCL         equ	849	;# 
  4071   000352                     CRCACCH         equ	850	;# 
  4072   000353                     CRCSHFT         equ	851	;# 
  4073   000353                     CRCSHIFTL       equ	851	;# 
  4074   000354                     CRCSHIFTH       equ	852	;# 
  4075   000355                     CRCXOR          equ	853	;# 
  4076   000355                     CRCXORL         equ	853	;# 
  4077   000356                     CRCXORH         equ	854	;# 
  4078   000357                     CRCCON0         equ	855	;# 
  4079   000358                     CRCCON1         equ	856	;# 
  4080   00035A                     SCANLADR        equ	858	;# 
  4081   00035A                     SCANLADRL       equ	858	;# 
  4082   00035B                     SCANLADRH       equ	859	;# 
  4083   00035C                     SCANLADRU       equ	860	;# 
  4084   00035D                     SCANHADR        equ	861	;# 
  4085   00035D                     SCANHADRL       equ	861	;# 
  4086   00035E                     SCANHADRH       equ	862	;# 
  4087   00035F                     SCANHADRU       equ	863	;# 
  4088   000360                     SCANCON0        equ	864	;# 
  4089   000361                     SCANTRIG        equ	865	;# 
  4090   000362                     IPR0            equ	866	;# 
  4091   000363                     IPR1            equ	867	;# 
  4092   000364                     IPR2            equ	868	;# 
  4093   000365                     IPR3            equ	869	;# 
  4094   000366                     IPR4            equ	870	;# 
  4095   000367                     IPR5            equ	871	;# 
  4096   000368                     IPR6            equ	872	;# 
  4097   000369                     IPR7            equ	873	;# 
  4098   00036A                     IPR8            equ	874	;# 
  4099   00036B                     IPR9            equ	875	;# 
  4100   00036C                     IPR10           equ	876	;# 
  4101   00036D                     IPR11           equ	877	;# 
  4102   00036E                     IPR12           equ	878	;# 
  4103   00036F                     IPR13           equ	879	;# 
  4104   000370                     IPR14           equ	880	;# 
  4105   000371                     IPR15           equ	881	;# 
  4106   000373                     STATUS_CSHAD    equ	883	;# 
  4107   000374                     WREG_CSHAD      equ	884	;# 
  4108   000375                     BSR_CSHAD       equ	885	;# 
  4109   000376                     SHADCON         equ	886	;# 
  4110   000377                     STATUS_SHAD     equ	887	;# 
  4111   000378                     WREG_SHAD       equ	888	;# 
  4112   000379                     BSR_SHAD        equ	889	;# 
  4113   00037A                     PCLATH_SHAD     equ	890	;# 
  4114   00037B                     PCLATU_SHAD     equ	891	;# 
  4115   00037C                     FSR0SH          equ	892	;# 
  4116   00037C                     FSR0L_SHAD      equ	892	;# 
  4117   00037D                     FSR0H_SHAD      equ	893	;# 
  4118   00037E                     FSR1SH          equ	894	;# 
  4119   00037E                     FSR1L_SHAD      equ	894	;# 
  4120   00037F                     FSR1H_SHAD      equ	895	;# 
  4121   000380                     FSR2SH          equ	896	;# 
  4122   000380                     FSR2L_SHAD      equ	896	;# 
  4123   000381                     FSR2H_SHAD      equ	897	;# 
  4124   000382                     PRODSH          equ	898	;# 
  4125   000382                     PRODL_SHAD      equ	898	;# 
  4126   000383                     PRODH_SHAD      equ	899	;# 
  4127   0003BC                     CWG1CLK         equ	956	;# 
  4128   0003BC                     CWG1CLKCON      equ	956	;# 
  4129   0003BD                     CWG1ISM         equ	957	;# 
  4130   0003BD                     CWG1DAT         equ	957	;# 
  4131   0003BE                     CWG1DBR         equ	958	;# 
  4132   0003BF                     CWG1DBF         equ	959	;# 
  4133   0003C0                     CWG1CON0        equ	960	;# 
  4134   0003C1                     CWG1CON1        equ	961	;# 
  4135   0003C2                     CWG1AS0         equ	962	;# 
  4136   0003C3                     CWG1AS1         equ	963	;# 
  4137   0003C4                     CWG1STR         equ	964	;# 
  4138   0003C5                     CWG2CLK         equ	965	;# 
  4139   0003C5                     CWG2CLKCON      equ	965	;# 
  4140   0003C6                     CWG2ISM         equ	966	;# 
  4141   0003C6                     CWG2DAT         equ	966	;# 
  4142   0003C7                     CWG2DBR         equ	967	;# 
  4143   0003C8                     CWG2DBF         equ	968	;# 
  4144   0003C9                     CWG2CON0        equ	969	;# 
  4145   0003CA                     CWG2CON1        equ	970	;# 
  4146   0003CB                     CWG2AS0         equ	971	;# 
  4147   0003CC                     CWG2AS1         equ	972	;# 
  4148   0003CD                     CWG2STR         equ	973	;# 
  4149   0003CE                     CWG3CLK         equ	974	;# 
  4150   0003CE                     CWG3CLKCON      equ	974	;# 
  4151   0003CF                     CWG3ISM         equ	975	;# 
  4152   0003CF                     CWG3DAT         equ	975	;# 
  4153   0003D0                     CWG3DBR         equ	976	;# 
  4154   0003D1                     CWG3DBF         equ	977	;# 
  4155   0003D2                     CWG3CON0        equ	978	;# 
  4156   0003D3                     CWG3CON1        equ	979	;# 
  4157   0003D4                     CWG3AS0         equ	980	;# 
  4158   0003D5                     CWG3AS1         equ	981	;# 
  4159   0003D6                     CWG3STR         equ	982	;# 
  4160   0003D7                     FVRCON          equ	983	;# 
  4161   0003D8                     ADCPCON         equ	984	;# 
  4162   0003D8                     ADCP            equ	984	;# 
  4163   0003D9                     ADLTH           equ	985	;# 
  4164   0003D9                     ADLTHL          equ	985	;# 
  4165   0003DA                     ADLTHH          equ	986	;# 
  4166   0003DB                     ADUTH           equ	987	;# 
  4167   0003DB                     ADUTHL          equ	987	;# 
  4168   0003DC                     ADUTHH          equ	988	;# 
  4169   0003DD                     ADERR           equ	989	;# 
  4170   0003DD                     ADERRL          equ	989	;# 
  4171   0003DE                     ADERRH          equ	990	;# 
  4172   0003DF                     ADSTPT          equ	991	;# 
  4173   0003DF                     ADSTPTL         equ	991	;# 
  4174   0003E0                     ADSTPTH         equ	992	;# 
  4175   0003E1                     ADFLTR          equ	993	;# 
  4176   0003E1                     ADFLTRL         equ	993	;# 
  4177   0003E2                     ADFLTRH         equ	994	;# 
  4178   0003E3                     ADACC           equ	995	;# 
  4179   0003E3                     ADACCL          equ	995	;# 
  4180   0003E4                     ADACCH          equ	996	;# 
  4181   0003E5                     ADACCU          equ	997	;# 
  4182   0003E6                     ADCNT           equ	998	;# 
  4183   0003E7                     ADRPT           equ	999	;# 
  4184   0003E8                     ADPREV          equ	1000	;# 
  4185   0003E8                     ADPREVL         equ	1000	;# 
  4186   0003E9                     ADPREVH         equ	1001	;# 
  4187   0003EA                     ADRES           equ	1002	;# 
  4188   0003EA                     ADRESL          equ	1002	;# 
  4189   0003EB                     ADRESH          equ	1003	;# 
  4190   0003EC                     ADPCH           equ	1004	;# 
  4191   0003EE                     ADACQ           equ	1006	;# 
  4192   0003EE                     ADACQL          equ	1006	;# 
  4193   0003EF                     ADACQH          equ	1007	;# 
  4194   0003F0                     ADCAP           equ	1008	;# 
  4195   0003F1                     ADPRE           equ	1009	;# 
  4196   0003F1                     ADPREL          equ	1009	;# 
  4197   0003F2                     ADPREH          equ	1010	;# 
  4198   0003F3                     ADCON0          equ	1011	;# 
  4199   0003F4                     ADCON1          equ	1012	;# 
  4200   0003F5                     ADCON2          equ	1013	;# 
  4201   0003F6                     ADCON3          equ	1014	;# 
  4202   0003F7                     ADSTAT          equ	1015	;# 
  4203   0003F8                     ADREF           equ	1016	;# 
  4204   0003F9                     ADACT           equ	1017	;# 
  4205   0003FA                     ADCLK           equ	1018	;# 
  4206   000400                     ANSELA          equ	1024	;# 
  4207   000401                     WPUA            equ	1025	;# 
  4208   000402                     ODCONA          equ	1026	;# 
  4209   000403                     SLRCONA         equ	1027	;# 
  4210   000404                     INLVLA          equ	1028	;# 
  4211   000405                     IOCAP           equ	1029	;# 
  4212   000406                     IOCAN           equ	1030	;# 
  4213   000407                     IOCAF           equ	1031	;# 
  4214   000408                     ANSELB          equ	1032	;# 
  4215   000409                     WPUB            equ	1033	;# 
  4216   00040A                     ODCONB          equ	1034	;# 
  4217   00040B                     SLRCONB         equ	1035	;# 
  4218   00040C                     INLVLB          equ	1036	;# 
  4219   00040D                     IOCBP           equ	1037	;# 
  4220   00040E                     IOCBN           equ	1038	;# 
  4221   00040F                     IOCBF           equ	1039	;# 
  4222   000410                     ANSELC          equ	1040	;# 
  4223   000411                     WPUC            equ	1041	;# 
  4224   000412                     ODCONC          equ	1042	;# 
  4225   000413                     SLRCONC         equ	1043	;# 
  4226   000414                     INLVLC          equ	1044	;# 
  4227   000415                     IOCCP           equ	1045	;# 
  4228   000416                     IOCCN           equ	1046	;# 
  4229   000417                     IOCCF           equ	1047	;# 
  4230   000418                     ANSELD          equ	1048	;# 
  4231   000419                     WPUD            equ	1049	;# 
  4232   00041A                     ODCOND          equ	1050	;# 
  4233   00041B                     SLRCOND         equ	1051	;# 
  4234   00041C                     INLVLD          equ	1052	;# 
  4235   000420                     ANSELE          equ	1056	;# 
  4236   000421                     WPUE            equ	1057	;# 
  4237   000422                     ODCONE          equ	1058	;# 
  4238   000423                     SLRCONE         equ	1059	;# 
  4239   000424                     INLVLE          equ	1060	;# 
  4240   000425                     IOCEP           equ	1061	;# 
  4241   000426                     IOCEN           equ	1062	;# 
  4242   000427                     IOCEF           equ	1063	;# 
  4243   000428                     ANSELF          equ	1064	;# 
  4244   000429                     WPUF            equ	1065	;# 
  4245   00042A                     ODCONF          equ	1066	;# 
  4246   00042B                     SLRCONF         equ	1067	;# 
  4247   00042C                     INLVLF          equ	1068	;# 
  4248   000440                     NCO1ACC         equ	1088	;# 
  4249   000440                     NCO1ACCL        equ	1088	;# 
  4250   000441                     NCO1ACCH        equ	1089	;# 
  4251   000442                     NCO1ACCU        equ	1090	;# 
  4252   000443                     NCO1INC         equ	1091	;# 
  4253   000443                     NCO1INCL        equ	1091	;# 
  4254   000444                     NCO1INCH        equ	1092	;# 
  4255   000445                     NCO1INCU        equ	1093	;# 
  4256   000446                     NCO1CON         equ	1094	;# 
  4257   000447                     NCO1CLK         equ	1095	;# 
  4258   000448                     NCO2ACC         equ	1096	;# 
  4259   000448                     NCO2ACCL        equ	1096	;# 
  4260   000449                     NCO2ACCH        equ	1097	;# 
  4261   00044A                     NCO2ACCU        equ	1098	;# 
  4262   00044B                     NCO2INC         equ	1099	;# 
  4263   00044B                     NCO2INCL        equ	1099	;# 
  4264   00044C                     NCO2INCH        equ	1100	;# 
  4265   00044D                     NCO2INCU        equ	1101	;# 
  4266   00044E                     NCO2CON         equ	1102	;# 
  4267   00044F                     NCO2CLK         equ	1103	;# 
  4268   000450                     NCO3ACC         equ	1104	;# 
  4269   000450                     NCO3ACCL        equ	1104	;# 
  4270   000451                     NCO3ACCH        equ	1105	;# 
  4271   000452                     NCO3ACCU        equ	1106	;# 
  4272   000453                     NCO3INC         equ	1107	;# 
  4273   000453                     NCO3INCL        equ	1107	;# 
  4274   000454                     NCO3INCH        equ	1108	;# 
  4275   000455                     NCO3INCU        equ	1109	;# 
  4276   000456                     NCO3CON         equ	1110	;# 
  4277   000457                     NCO3CLK         equ	1111	;# 
  4278   000459                     IVTLOCK         equ	1113	;# 
  4279   00045A                     IVTAD           equ	1114	;# 
  4280   00045A                     IVTADL          equ	1114	;# 
  4281   00045B                     IVTADH          equ	1115	;# 
  4282   00045C                     IVTADU          equ	1116	;# 
  4283   00045D                     IVTBASE         equ	1117	;# 
  4284   00045D                     IVTBASEL        equ	1117	;# 
  4285   00045E                     IVTBASEH        equ	1118	;# 
  4286   00045F                     IVTBASEU        equ	1119	;# 
  4287   000460                     PWM1ERS         equ	1120	;# 
  4288   000461                     PWM1CLK         equ	1121	;# 
  4289   000462                     PWM1LDS         equ	1122	;# 
  4290   000463                     PWM1PR          equ	1123	;# 
  4291   000463                     PWM1PRL         equ	1123	;# 
  4292   000464                     PWM1PRH         equ	1124	;# 
  4293   000465                     PWM1CPRE        equ	1125	;# 
  4294   000466                     PWM1PIPOS       equ	1126	;# 
  4295   000467                     PWM1GIR         equ	1127	;# 
  4296   000468                     PWM1GIE         equ	1128	;# 
  4297   000469                     PWM1CON         equ	1129	;# 
  4298   00046A                     PWM1S1CFG       equ	1130	;# 
  4299   00046B                     PWM1S1P1        equ	1131	;# 
  4300   00046B                     PWM1S1P1L       equ	1131	;# 
  4301   00046C                     PWM1S1P1H       equ	1132	;# 
  4302   00046D                     PWM1S1P2        equ	1133	;# 
  4303   00046D                     PWM1S1P2L       equ	1133	;# 
  4304   00046E                     PWM1S1P2H       equ	1134	;# 
  4305   00046F                     PWM2ERS         equ	1135	;# 
  4306   000470                     PWM2CLK         equ	1136	;# 
  4307   000471                     PWM2LDS         equ	1137	;# 
  4308   000472                     PWM2PR          equ	1138	;# 
  4309   000472                     PWM2PRL         equ	1138	;# 
  4310   000473                     PWM2PRH         equ	1139	;# 
  4311   000474                     PWM2CPRE        equ	1140	;# 
  4312   000475                     PWM2PIPOS       equ	1141	;# 
  4313   000476                     PWM2GIR         equ	1142	;# 
  4314   000477                     PWM2GIE         equ	1143	;# 
  4315   000478                     PWM2CON         equ	1144	;# 
  4316   000479                     PWM2S1CFG       equ	1145	;# 
  4317   00047A                     PWM2S1P1        equ	1146	;# 
  4318   00047A                     PWM2S1P1L       equ	1146	;# 
  4319   00047B                     PWM2S1P1H       equ	1147	;# 
  4320   00047C                     PWM2S1P2        equ	1148	;# 
  4321   00047C                     PWM2S1P2L       equ	1148	;# 
  4322   00047D                     PWM2S1P2H       equ	1149	;# 
  4323   00047E                     PWM3ERS         equ	1150	;# 
  4324   00047F                     PWM3CLK         equ	1151	;# 
  4325   000480                     PWM3LDS         equ	1152	;# 
  4326   000481                     PWM3PR          equ	1153	;# 
  4327   000481                     PWM3PRL         equ	1153	;# 
  4328   000482                     PWM3PRH         equ	1154	;# 
  4329   000483                     PWM3CPRE        equ	1155	;# 
  4330   000484                     PWM3PIPOS       equ	1156	;# 
  4331   000485                     PWM3GIR         equ	1157	;# 
  4332   000486                     PWM3GIE         equ	1158	;# 
  4333   000487                     PWM3CON         equ	1159	;# 
  4334   000488                     PWM3S1CFG       equ	1160	;# 
  4335   000489                     PWM3S1P1        equ	1161	;# 
  4336   000489                     PWM3S1P1L       equ	1161	;# 
  4337   00048A                     PWM3S1P1H       equ	1162	;# 
  4338   00048B                     PWM3S1P2        equ	1163	;# 
  4339   00048B                     PWM3S1P2L       equ	1163	;# 
  4340   00048C                     PWM3S1P2H       equ	1164	;# 
  4341   00049C                     PWMLOAD         equ	1180	;# 
  4342   00049D                     PWMEN           equ	1181	;# 
  4343   00049E                     PIE0            equ	1182	;# 
  4344   00049F                     PIE1            equ	1183	;# 
  4345   0004A0                     PIE2            equ	1184	;# 
  4346   0004A1                     PIE3            equ	1185	;# 
  4347   0004A2                     PIE4            equ	1186	;# 
  4348   0004A3                     PIE5            equ	1187	;# 
  4349   0004A4                     PIE6            equ	1188	;# 
  4350   0004A5                     PIE7            equ	1189	;# 
  4351   0004A6                     PIE8            equ	1190	;# 
  4352   0004A7                     PIE9            equ	1191	;# 
  4353   0004A8                     PIE10           equ	1192	;# 
  4354   0004A9                     PIE11           equ	1193	;# 
  4355   0004AA                     PIE12           equ	1194	;# 
  4356   0004AB                     PIE13           equ	1195	;# 
  4357   0004AC                     PIE14           equ	1196	;# 
  4358   0004AD                     PIE15           equ	1197	;# 
  4359   0004AE                     PIR0            equ	1198	;# 
  4360   0004AF                     PIR1            equ	1199	;# 
  4361   0004B0                     PIR2            equ	1200	;# 
  4362   0004B1                     PIR3            equ	1201	;# 
  4363   0004B2                     PIR4            equ	1202	;# 
  4364   0004B3                     PIR5            equ	1203	;# 
  4365   0004B4                     PIR6            equ	1204	;# 
  4366   0004B5                     PIR7            equ	1205	;# 
  4367   0004B6                     PIR8            equ	1206	;# 
  4368   0004B7                     PIR9            equ	1207	;# 
  4369   0004B8                     PIR10           equ	1208	;# 
  4370   0004B9                     PIR11           equ	1209	;# 
  4371   0004BA                     PIR12           equ	1210	;# 
  4372   0004BB                     PIR13           equ	1211	;# 
  4373   0004BC                     PIR14           equ	1212	;# 
  4374   0004BD                     PIR15           equ	1213	;# 
  4375   0004BE                     LATA            equ	1214	;# 
  4376   0004BF                     LATB            equ	1215	;# 
  4377   0004C0                     LATC            equ	1216	;# 
  4378   0004C1                     LATD            equ	1217	;# 
  4379   0004C2                     LATE            equ	1218	;# 
  4380   0004C3                     LATF            equ	1219	;# 
  4381   0004C6                     TRISA           equ	1222	;# 
  4382   0004C7                     TRISB           equ	1223	;# 
  4383   0004C8                     TRISC           equ	1224	;# 
  4384   0004C9                     TRISD           equ	1225	;# 
  4385   0004CA                     TRISE           equ	1226	;# 
  4386   0004CB                     TRISF           equ	1227	;# 
  4387   0004CE                     PORTA           equ	1230	;# 
  4388   0004CF                     PORTB           equ	1231	;# 
  4389   0004D0                     PORTC           equ	1232	;# 
  4390   0004D1                     PORTD           equ	1233	;# 
  4391   0004D2                     PORTE           equ	1234	;# 
  4392   0004D3                     PORTF           equ	1235	;# 
  4393   0004D6                     INTCON0         equ	1238	;# 
  4394   0004D7                     INTCON1         equ	1239	;# 
  4395   0004D8                     STATUS          equ	1240	;# 
  4396   0004D9                     FSR2            equ	1241	;# 
  4397   0004D9                     FSR2L           equ	1241	;# 
  4398   0004DA                     FSR2H           equ	1242	;# 
  4399   0004DB                     PLUSW2          equ	1243	;# 
  4400   0004DC                     PREINC2         equ	1244	;# 
  4401   0004DD                     POSTDEC2        equ	1245	;# 
  4402   0004DE                     POSTINC2        equ	1246	;# 
  4403   0004DF                     INDF2           equ	1247	;# 
  4404   0004E0                     BSR             equ	1248	;# 
  4405   0004E1                     FSR1            equ	1249	;# 
  4406   0004E1                     FSR1L           equ	1249	;# 
  4407   0004E2                     FSR1H           equ	1250	;# 
  4408   0004E3                     PLUSW1          equ	1251	;# 
  4409   0004E4                     PREINC1         equ	1252	;# 
  4410   0004E5                     POSTDEC1        equ	1253	;# 
  4411   0004E6                     POSTINC1        equ	1254	;# 
  4412   0004E7                     INDF1           equ	1255	;# 
  4413   0004E8                     WREG            equ	1256	;# 
  4414   0004E9                     FSR0            equ	1257	;# 
  4415   0004E9                     FSR0L           equ	1257	;# 
  4416   0004EA                     FSR0H           equ	1258	;# 
  4417   0004EB                     PLUSW0          equ	1259	;# 
  4418   0004EC                     PREINC0         equ	1260	;# 
  4419   0004ED                     POSTDEC0        equ	1261	;# 
  4420   0004EE                     POSTINC0        equ	1262	;# 
  4421   0004EF                     INDF0           equ	1263	;# 
  4422   0004F0                     PCON0           equ	1264	;# 
  4423   0004F1                     PCON1           equ	1265	;# 
  4424   0004F2                     CPUDOZE         equ	1266	;# 
  4425   0004F3                     PROD            equ	1267	;# 
  4426   0004F3                     PRODL           equ	1267	;# 
  4427   0004F4                     PRODH           equ	1268	;# 
  4428   0004F5                     TABLAT          equ	1269	;# 
  4429   0004F6                     TBLPTR          equ	1270	;# 
  4430   0004F6                     TBLPTRL         equ	1270	;# 
  4431   0004F7                     TBLPTRH         equ	1271	;# 
  4432   0004F8                     TBLPTRU         equ	1272	;# 
  4433   0004F9                     PCLAT           equ	1273	;# 
  4434   0004F9                     PCL             equ	1273	;# 
  4435   0004FA                     PCLATH          equ	1274	;# 
  4436   0004FB                     PCLATU          equ	1275	;# 
  4437   0004FC                     STKPTR          equ	1276	;# 
  4438   0004FD                     TOS             equ	1277	;# 
  4439   0004FD                     TOSL            equ	1277	;# 
  4440   0004FE                     TOSH            equ	1278	;# 
  4441   0004FF                     TOSU            equ	1279	;# 
  4442   000039                     CLKRCON         equ	57	;# 
  4443   00003A                     CLKRCLK         equ	58	;# 
  4444   000040                     NVMCON0         equ	64	;# 
  4445   000041                     NVMCON1         equ	65	;# 
  4446   000042                     NVMLOCK         equ	66	;# 
  4447   000043                     NVMADR          equ	67	;# 
  4448   000043                     NVMADRL         equ	67	;# 
  4449   000044                     NVMADRH         equ	68	;# 
  4450   000045                     NVMADRU         equ	69	;# 
  4451   000046                     NVMDAT          equ	70	;# 
  4452   000046                     NVMDATL         equ	70	;# 
  4453   000047                     NVMDATH         equ	71	;# 
  4454   000048                     VREGCON         equ	72	;# 
  4455   000049                     BORCON          equ	73	;# 
  4456   00004A                     HLVDCON0        equ	74	;# 
  4457   00004B                     HLVDCON1        equ	75	;# 
  4458   00004C                     ZCDCON          equ	76	;# 
  4459   000060                     PMD0            equ	96	;# 
  4460   000061                     PMD1            equ	97	;# 
  4461   000063                     PMD3            equ	99	;# 
  4462   000064                     PMD4            equ	100	;# 
  4463   000065                     PMD5            equ	101	;# 
  4464   000066                     PMD6            equ	102	;# 
  4465   000067                     PMD7            equ	103	;# 
  4466   000068                     PMD8            equ	104	;# 
  4467   00006A                     MD1CON0         equ	106	;# 
  4468   00006B                     MD1CON1         equ	107	;# 
  4469   00006C                     MD1SRC          equ	108	;# 
  4470   00006D                     MD1CARL         equ	109	;# 
  4471   00006E                     MD1CARH         equ	110	;# 
  4472   00006F                     CMOUT           equ	111	;# 
  4473   000070                     CM1CON0         equ	112	;# 
  4474   000071                     CM1CON1         equ	113	;# 
  4475   000072                     CM1NCH          equ	114	;# 
  4476   000073                     CM1PCH          equ	115	;# 
  4477   000074                     CM2CON0         equ	116	;# 
  4478   000075                     CM2CON1         equ	117	;# 
  4479   000076                     CM2NCH          equ	118	;# 
  4480   000077                     CM2PCH          equ	119	;# 
  4481   000078                     WDTCON0         equ	120	;# 
  4482   000079                     WDTCON1         equ	121	;# 
  4483   00007A                     WDTPS           equ	122	;# 
  4484   00007A                     WDTPSL          equ	122	;# 
  4485   00007B                     WDTPSH          equ	123	;# 
  4486   00007C                     WDTTMR          equ	124	;# 
  4487   00007D                     DAC1DAT         equ	125	;# 
  4488   00007D                     DAC1DATL        equ	125	;# 
  4489   00007F                     DAC1CON         equ	127	;# 
  4490   000080                     SPI1RXB         equ	128	;# 
  4491   000081                     SPI1TXB         equ	129	;# 
  4492   000082                     SPI1TCNT        equ	130	;# 
  4493   000082                     SPI1TCNTL       equ	130	;# 
  4494   000083                     SPI1TCNTH       equ	131	;# 
  4495   000084                     SPI1CON0        equ	132	;# 
  4496   000085                     SPI1CON1        equ	133	;# 
  4497   000086                     SPI1CON2        equ	134	;# 
  4498   000087                     SPI1STATUS      equ	135	;# 
  4499   000088                     SPI1TWIDTH      equ	136	;# 
  4500   000089                     SPI1BAUD        equ	137	;# 
  4501   00008A                     SPI1INTF        equ	138	;# 
  4502   00008B                     SPI1INTE        equ	139	;# 
  4503   00008C                     SPI1CLK         equ	140	;# 
  4504   00008D                     SPI2RXB         equ	141	;# 
  4505   00008E                     SPI2TXB         equ	142	;# 
  4506   00008F                     SPI2TCNT        equ	143	;# 
  4507   00008F                     SPI2TCNTL       equ	143	;# 
  4508   000090                     SPI2TCNTH       equ	144	;# 
  4509   000091                     SPI2CON0        equ	145	;# 
  4510   000092                     SPI2CON1        equ	146	;# 
  4511   000093                     SPI2CON2        equ	147	;# 
  4512   000094                     SPI2STATUS      equ	148	;# 
  4513   000095                     SPI2TWIDTH      equ	149	;# 
  4514   000096                     SPI2BAUD        equ	150	;# 
  4515   000097                     SPI2INTF        equ	151	;# 
  4516   000098                     SPI2INTE        equ	152	;# 
  4517   000099                     SPI2CLK         equ	153	;# 
  4518   0000AC                     ACTCON          equ	172	;# 
  4519   0000AD                     OSCCON1         equ	173	;# 
  4520   0000AE                     OSCCON2         equ	174	;# 
  4521   0000AF                     OSCCON3         equ	175	;# 
  4522   0000B0                     OSCTUNE         equ	176	;# 
  4523   0000B1                     OSCFRQ          equ	177	;# 
  4524   0000B1                     OSCFREQ         equ	177	;# 
  4525   0000B2                     OSCSTAT         equ	178	;# 
  4526   0000B2                     OSCSTAT1        equ	178	;# 
  4527   0000B3                     OSCEN           equ	179	;# 
  4528   0000B4                     PRLOCK          equ	180	;# 
  4529   0000B5                     SCANPR          equ	181	;# 
  4530   0000B6                     DMA1PR          equ	182	;# 
  4531   0000B7                     DMA2PR          equ	183	;# 
  4532   0000B8                     DMA3PR          equ	184	;# 
  4533   0000B9                     DMA4PR          equ	185	;# 
  4534   0000BA                     DMA5PR          equ	186	;# 
  4535   0000BB                     DMA6PR          equ	187	;# 
  4536   0000BE                     MAINPR          equ	190	;# 
  4537   0000BF                     ISRPR           equ	191	;# 
  4538   0000D4                     CLCDATA         equ	212	;# 
  4539   0000D5                     CLCSELECT       equ	213	;# 
  4540   0000D6                     CLCnCON         equ	214	;# 
  4541   0000D7                     CLCnPOL         equ	215	;# 
  4542   0000D8                     CLCnSEL0        equ	216	;# 
  4543   0000D9                     CLCnSEL1        equ	217	;# 
  4544   0000DA                     CLCnSEL2        equ	218	;# 
  4545   0000DB                     CLCnSEL3        equ	219	;# 
  4546   0000DC                     CLCnGLS0        equ	220	;# 
  4547   0000DD                     CLCnGLS1        equ	221	;# 
  4548   0000DE                     CLCnGLS2        equ	222	;# 
  4549   0000DF                     CLCnGLS3        equ	223	;# 
  4550   0000E8                     DMASELECT       equ	232	;# 
  4551   0000E9                     DMAnBUF         equ	233	;# 
  4552   0000EA                     DMAnDCNT        equ	234	;# 
  4553   0000EA                     DMAnDCNTL       equ	234	;# 
  4554   0000EB                     DMAnDCNTH       equ	235	;# 
  4555   0000EC                     DMAnDPTR        equ	236	;# 
  4556   0000EC                     DMAnDPTRL       equ	236	;# 
  4557   0000ED                     DMAnDPTRH       equ	237	;# 
  4558   0000EE                     DMAnDSZ         equ	238	;# 
  4559   0000EE                     DMAnDSZL        equ	238	;# 
  4560   0000EF                     DMAnDSZH        equ	239	;# 
  4561   0000F0                     DMAnDSA         equ	240	;# 
  4562   0000F0                     DMAnDSAL        equ	240	;# 
  4563   0000F1                     DMAnDSAH        equ	241	;# 
  4564   0000F2                     DMAnSCNT        equ	242	;# 
  4565   0000F2                     DMAnSCNTL       equ	242	;# 
  4566   0000F3                     DMAnSCNTH       equ	243	;# 
  4567   0000F4                     DMAnSPTR        equ	244	;# 
  4568   0000F4                     DMAnSPTRL       equ	244	;# 
  4569   0000F5                     DMAnSPTRH       equ	245	;# 
  4570   0000F6                     DMAnSPTRU       equ	246	;# 
  4571   0000F7                     DMAnSSZ         equ	247	;# 
  4572   0000F7                     DMAnSSZL        equ	247	;# 
  4573   0000F8                     DMAnSSZH        equ	248	;# 
  4574   0000F9                     DMAnSSA         equ	249	;# 
  4575   0000F9                     DMAnSSAL        equ	249	;# 
  4576   0000FA                     DMAnSSAH        equ	250	;# 
  4577   0000FB                     DMAnSSAU        equ	251	;# 
  4578   0000FC                     DMAnCON0        equ	252	;# 
  4579   0000FD                     DMAnCON1        equ	253	;# 
  4580   0000FE                     DMAnAIRQ        equ	254	;# 
  4581   0000FF                     DMAnSIRQ        equ	255	;# 
  4582   000200                     PPSLOCK         equ	512	;# 
  4583   000201                     RA0PPS          equ	513	;# 
  4584   000202                     RA1PPS          equ	514	;# 
  4585   000203                     RA2PPS          equ	515	;# 
  4586   000204                     RA3PPS          equ	516	;# 
  4587   000205                     RA4PPS          equ	517	;# 
  4588   000206                     RA5PPS          equ	518	;# 
  4589   000207                     RA6PPS          equ	519	;# 
  4590   000208                     RA7PPS          equ	520	;# 
  4591   000209                     RB0PPS          equ	521	;# 
  4592   00020A                     RB1PPS          equ	522	;# 
  4593   00020B                     RB2PPS          equ	523	;# 
  4594   00020C                     RB3PPS          equ	524	;# 
  4595   00020D                     RB4PPS          equ	525	;# 
  4596   00020E                     RB5PPS          equ	526	;# 
  4597   00020F                     RB6PPS          equ	527	;# 
  4598   000210                     RB7PPS          equ	528	;# 
  4599   000211                     RC0PPS          equ	529	;# 
  4600   000212                     RC1PPS          equ	530	;# 
  4601   000213                     RC2PPS          equ	531	;# 
  4602   000214                     RC3PPS          equ	532	;# 
  4603   000215                     RC4PPS          equ	533	;# 
  4604   000216                     RC5PPS          equ	534	;# 
  4605   000217                     RC6PPS          equ	535	;# 
  4606   000218                     RC7PPS          equ	536	;# 
  4607   000219                     RD0PPS          equ	537	;# 
  4608   00021A                     RD1PPS          equ	538	;# 
  4609   00021B                     RD2PPS          equ	539	;# 
  4610   00021C                     RD3PPS          equ	540	;# 
  4611   00021D                     RD4PPS          equ	541	;# 
  4612   00021E                     RD5PPS          equ	542	;# 
  4613   00021F                     RD6PPS          equ	543	;# 
  4614   000220                     RD7PPS          equ	544	;# 
  4615   000221                     RE0PPS          equ	545	;# 
  4616   000222                     RE1PPS          equ	546	;# 
  4617   000223                     RE2PPS          equ	547	;# 
  4618   000229                     RF0PPS          equ	553	;# 
  4619   00022A                     RF1PPS          equ	554	;# 
  4620   00022B                     RF2PPS          equ	555	;# 
  4621   00022C                     RF3PPS          equ	556	;# 
  4622   00022D                     RF4PPS          equ	557	;# 
  4623   00022E                     RF5PPS          equ	558	;# 
  4624   00022F                     RF6PPS          equ	559	;# 
  4625   000230                     RF7PPS          equ	560	;# 
  4626   00023E                     INT0PPS         equ	574	;# 
  4627   00023F                     INT1PPS         equ	575	;# 
  4628   000240                     INT2PPS         equ	576	;# 
  4629   000241                     T0CKIPPS        equ	577	;# 
  4630   000242                     T1CKIPPS        equ	578	;# 
  4631   000243                     T1GPPS          equ	579	;# 
  4632   000244                     T3CKIPPS        equ	580	;# 
  4633   000245                     T3GPPS          equ	581	;# 
  4634   000246                     T5CKIPPS        equ	582	;# 
  4635   000247                     T5GPPS          equ	583	;# 
  4636   000248                     T2INPPS         equ	584	;# 
  4637   000249                     T4INPPS         equ	585	;# 
  4638   00024A                     T6INPPS         equ	586	;# 
  4639   00024F                     CCP1PPS         equ	591	;# 
  4640   000250                     CCP2PPS         equ	592	;# 
  4641   000251                     CCP3PPS         equ	593	;# 
  4642   000253                     PWM1ERSPPS      equ	595	;# 
  4643   000254                     PWM2ERSPPS      equ	596	;# 
  4644   000255                     PWM3ERSPPS      equ	597	;# 
  4645   000257                     PWMIN0PPS       equ	599	;# 
  4646   000258                     PWMIN1PPS       equ	600	;# 
  4647   000259                     SMT1WINPPS      equ	601	;# 
  4648   00025A                     SMT1SIGPPS      equ	602	;# 
  4649   00025B                     CWG1PPS         equ	603	;# 
  4650   00025B                     CWG1INPPS       equ	603	;# 
  4651   00025C                     CWG2PPS         equ	604	;# 
  4652   00025C                     CWG2INPPS       equ	604	;# 
  4653   00025D                     CWG3PPS         equ	605	;# 
  4654   00025D                     CWG3INPPS       equ	605	;# 
  4655   00025E                     MD1CARLPPS      equ	606	;# 
  4656   00025E                     MDCARLPPS       equ	606	;# 
  4657   00025F                     MD1CARHPPS      equ	607	;# 
  4658   00025F                     MDCARHPPS       equ	607	;# 
  4659   000260                     MD1SRCPPS       equ	608	;# 
  4660   000260                     MDSRCPPS        equ	608	;# 
  4661   000261                     CLCIN0PPS       equ	609	;# 
  4662   000262                     CLCIN1PPS       equ	610	;# 
  4663   000263                     CLCIN2PPS       equ	611	;# 
  4664   000264                     CLCIN3PPS       equ	612	;# 
  4665   000265                     CLCIN4PPS       equ	613	;# 
  4666   000266                     CLCIN5PPS       equ	614	;# 
  4667   000267                     CLCIN6PPS       equ	615	;# 
  4668   000268                     CLCIN7PPS       equ	616	;# 
  4669   000269                     ADACTPPS        equ	617	;# 
  4670   00026A                     SPI1SCKPPS      equ	618	;# 
  4671   00026B                     SPI1SDIPPS      equ	619	;# 
  4672   00026C                     SPI1SSPPS       equ	620	;# 
  4673   00026D                     SPI2SCKPPS      equ	621	;# 
  4674   00026E                     SPI2SDIPPS      equ	622	;# 
  4675   00026F                     SPI2SSPPS       equ	623	;# 
  4676   000270                     I2C1SDAPPS      equ	624	;# 
  4677   000271                     I2C1SCLPPS      equ	625	;# 
  4678   000272                     U1RXPPS         equ	626	;# 
  4679   000273                     U1CTSPPS        equ	627	;# 
  4680   000274                     U2RXPPS         equ	628	;# 
  4681   000275                     U2CTSPPS        equ	629	;# 
  4682   000276                     U3RXPPS         equ	630	;# 
  4683   000277                     U3CTSPPS        equ	631	;# 
  4684   000278                     U4RXPPS         equ	632	;# 
  4685   000279                     U4CTSPPS        equ	633	;# 
  4686   00027A                     U5RXPPS         equ	634	;# 
  4687   00027B                     U5CTSPPS        equ	635	;# 
  4688   000286                     RC4I2C          equ	646	;# 
  4689   000287                     RC3I2C          equ	647	;# 
  4690   000288                     RB2I2C          equ	648	;# 
  4691   000289                     RB1I2C          equ	649	;# 
  4692   00028B                     I2C1RXB         equ	651	;# 
  4693   00028C                     I2C1TXB         equ	652	;# 
  4694   00028D                     I2C1CNT         equ	653	;# 
  4695   00028E                     I2C1ADB0        equ	654	;# 
  4696   00028F                     I2C1ADB1        equ	655	;# 
  4697   000290                     I2C1ADR0        equ	656	;# 
  4698   000291                     I2C1ADR1        equ	657	;# 
  4699   000292                     I2C1ADR2        equ	658	;# 
  4700   000293                     I2C1ADR3        equ	659	;# 
  4701   000294                     I2C1CON0        equ	660	;# 
  4702   000295                     I2C1CON1        equ	661	;# 
  4703   000296                     I2C1CON2        equ	662	;# 
  4704   000297                     I2C1ERR         equ	663	;# 
  4705   000298                     I2C1STAT0       equ	664	;# 
  4706   000299                     I2C1STAT1       equ	665	;# 
  4707   00029A                     I2C1PIR         equ	666	;# 
  4708   00029B                     I2C1PIE         equ	667	;# 
  4709   00029C                     I2C1CLK         equ	668	;# 
  4710   00029D                     I2C1BTO         equ	669	;# 
  4711   0002A1                     U1RXB           equ	673	;# 
  4712   0002A1                     U1RXBL          equ	673	;# 
  4713   0002A2                     U1RXCHK         equ	674	;# 
  4714   0002A3                     U1TXB           equ	675	;# 
  4715   0002A3                     U1TXBL          equ	675	;# 
  4716   0002A4                     U1TXCHK         equ	676	;# 
  4717   0002A5                     U1P1            equ	677	;# 
  4718   0002A5                     U1P1L           equ	677	;# 
  4719   0002A6                     U1P1H           equ	678	;# 
  4720   0002A7                     U1P2            equ	679	;# 
  4721   0002A7                     U1P2L           equ	679	;# 
  4722   0002A8                     U1P2H           equ	680	;# 
  4723   0002A9                     U1P3            equ	681	;# 
  4724   0002A9                     U1P3L           equ	681	;# 
  4725   0002AA                     U1P3H           equ	682	;# 
  4726   0002AB                     U1CON0          equ	683	;# 
  4727   0002AC                     U1CON1          equ	684	;# 
  4728   0002AD                     U1CON2          equ	685	;# 
  4729   0002AE                     U1BRG           equ	686	;# 
  4730   0002AE                     U1BRGL          equ	686	;# 
  4731   0002AF                     U1BRGH          equ	687	;# 
  4732   0002B0                     U1FIFO          equ	688	;# 
  4733   0002B1                     U1UIR           equ	689	;# 
  4734   0002B2                     U1ERRIR         equ	690	;# 
  4735   0002B3                     U1ERRIE         equ	691	;# 
  4736   0002B4                     U2RXB           equ	692	;# 
  4737   0002B4                     U2RXBL          equ	692	;# 
  4738   0002B6                     U2TXB           equ	694	;# 
  4739   0002B6                     U2TXBL          equ	694	;# 
  4740   0002B8                     U2P1            equ	696	;# 
  4741   0002B8                     U2P1L           equ	696	;# 
  4742   0002BA                     U2P2            equ	698	;# 
  4743   0002BA                     U2P2L           equ	698	;# 
  4744   0002BC                     U2P3            equ	700	;# 
  4745   0002BC                     U2P3L           equ	700	;# 
  4746   0002BE                     U2CON0          equ	702	;# 
  4747   0002BF                     U2CON1          equ	703	;# 
  4748   0002C0                     U2CON2          equ	704	;# 
  4749   0002C1                     U2BRG           equ	705	;# 
  4750   0002C1                     U2BRGL          equ	705	;# 
  4751   0002C2                     U2BRGH          equ	706	;# 
  4752   0002C3                     U2FIFO          equ	707	;# 
  4753   0002C4                     U2UIR           equ	708	;# 
  4754   0002C5                     U2ERRIR         equ	709	;# 
  4755   0002C6                     U2ERRIE         equ	710	;# 
  4756   0002C7                     U3RXB           equ	711	;# 
  4757   0002C7                     U3RXBL          equ	711	;# 
  4758   0002C9                     U3TXB           equ	713	;# 
  4759   0002C9                     U3TXBL          equ	713	;# 
  4760   0002CB                     U3P1            equ	715	;# 
  4761   0002CB                     U3P1L           equ	715	;# 
  4762   0002CD                     U3P2            equ	717	;# 
  4763   0002CD                     U3P2L           equ	717	;# 
  4764   0002CF                     U3P3            equ	719	;# 
  4765   0002CF                     U3P3L           equ	719	;# 
  4766   0002D1                     U3CON0          equ	721	;# 
  4767   0002D2                     U3CON1          equ	722	;# 
  4768   0002D3                     U3CON2          equ	723	;# 
  4769   0002D4                     U3BRG           equ	724	;# 
  4770   0002D4                     U3BRGL          equ	724	;# 
  4771   0002D5                     U3BRGH          equ	725	;# 
  4772   0002D6                     U3FIFO          equ	726	;# 
  4773   0002D7                     U3UIR           equ	727	;# 
  4774   0002D8                     U3ERRIR         equ	728	;# 
  4775   0002D9                     U3ERRIE         equ	729	;# 
  4776   0002DA                     U4RXB           equ	730	;# 
  4777   0002DA                     U4RXBL          equ	730	;# 
  4778   0002DC                     U4TXB           equ	732	;# 
  4779   0002DC                     U4TXBL          equ	732	;# 
  4780   0002DE                     U4P1            equ	734	;# 
  4781   0002DE                     U4P1L           equ	734	;# 
  4782   0002E0                     U4P2            equ	736	;# 
  4783   0002E0                     U4P2L           equ	736	;# 
  4784   0002E2                     U4P3            equ	738	;# 
  4785   0002E2                     U4P3L           equ	738	;# 
  4786   0002E4                     U4CON0          equ	740	;# 
  4787   0002E5                     U4CON1          equ	741	;# 
  4788   0002E6                     U4CON2          equ	742	;# 
  4789   0002E7                     U4BRG           equ	743	;# 
  4790   0002E7                     U4BRGL          equ	743	;# 
  4791   0002E8                     U4BRGH          equ	744	;# 
  4792   0002E9                     U4FIFO          equ	745	;# 
  4793   0002EA                     U4UIR           equ	746	;# 
  4794   0002EB                     U4ERRIR         equ	747	;# 
  4795   0002EC                     U4ERRIE         equ	748	;# 
  4796   0002ED                     U5RXB           equ	749	;# 
  4797   0002ED                     U5RXBL          equ	749	;# 
  4798   0002EF                     U5TXB           equ	751	;# 
  4799   0002EF                     U5TXBL          equ	751	;# 
  4800   0002F1                     U5P1            equ	753	;# 
  4801   0002F1                     U5P1L           equ	753	;# 
  4802   0002F3                     U5P2            equ	755	;# 
  4803   0002F3                     U5P2L           equ	755	;# 
  4804   0002F5                     U5P3            equ	757	;# 
  4805   0002F5                     U5P3L           equ	757	;# 
  4806   0002F7                     U5CON0          equ	759	;# 
  4807   0002F8                     U5CON1          equ	760	;# 
  4808   0002F9                     U5CON2          equ	761	;# 
  4809   0002FA                     U5BRG           equ	762	;# 
  4810   0002FA                     U5BRGL          equ	762	;# 
  4811   0002FB                     U5BRGH          equ	763	;# 
  4812   0002FC                     U5FIFO          equ	764	;# 
  4813   0002FD                     U5UIR           equ	765	;# 
  4814   0002FE                     U5ERRIR         equ	766	;# 
  4815   0002FF                     U5ERRIE         equ	767	;# 
  4816   000300                     SMT1TMR         equ	768	;# 
  4817   000300                     SMT1TMRL        equ	768	;# 
  4818   000301                     SMT1TMRH        equ	769	;# 
  4819   000302                     SMT1TMRU        equ	770	;# 
  4820   000303                     SMT1CPR         equ	771	;# 
  4821   000303                     SMT1CPRL        equ	771	;# 
  4822   000304                     SMT1CPRH        equ	772	;# 
  4823   000305                     SMT1CPRU        equ	773	;# 
  4824   000306                     SMT1CPW         equ	774	;# 
  4825   000306                     SMT1CPWL        equ	774	;# 
  4826   000307                     SMT1CPWH        equ	775	;# 
  4827   000308                     SMT1CPWU        equ	776	;# 
  4828   000309                     SMT1PR          equ	777	;# 
  4829   000309                     SMT1PRL         equ	777	;# 
  4830   00030A                     SMT1PRH         equ	778	;# 
  4831   00030B                     SMT1PRU         equ	779	;# 
  4832   00030C                     SMT1CON0        equ	780	;# 
  4833   00030D                     SMT1CON1        equ	781	;# 
  4834   00030E                     SMT1STAT        equ	782	;# 
  4835   00030F                     SMT1CLK         equ	783	;# 
  4836   000310                     SMT1SIG         equ	784	;# 
  4837   000311                     SMT1WIN         equ	785	;# 
  4838   000318                     TMR0L           equ	792	;# 
  4839   000318                     TMR0            equ	792	;# 
  4840   000319                     TMR0H           equ	793	;# 
  4841   000319                     PR0             equ	793	;# 
  4842   00031A                     T0CON0          equ	794	;# 
  4843   00031B                     T0CON1          equ	795	;# 
  4844   00031C                     TMR1            equ	796	;# 
  4845   00031C                     TMR1L           equ	796	;# 
  4846   00031D                     TMR1H           equ	797	;# 
  4847   00031E                     T1CON           equ	798	;# 
  4848   00031E                     TMR1CON         equ	798	;# 
  4849   00031F                     T1GCON          equ	799	;# 
  4850   00031F                     TMR1GCON        equ	799	;# 
  4851   000320                     T1GATE          equ	800	;# 
  4852   000320                     TMR1GATE        equ	800	;# 
  4853   000321                     T1CLK           equ	801	;# 
  4854   000321                     TMR1CLK         equ	801	;# 
  4855   000321                     PR1             equ	801	;# 
  4856   000322                     T2TMR           equ	802	;# 
  4857   000322                     TMR2            equ	802	;# 
  4858   000323                     T2PR            equ	803	;# 
  4859   000323                     PR2             equ	803	;# 
  4860   000324                     T2CON           equ	804	;# 
  4861   000325                     T2HLT           equ	805	;# 
  4862   000326                     T2CLKCON        equ	806	;# 
  4863   000326                     T2CLK           equ	806	;# 
  4864   000327                     T2RST           equ	807	;# 
  4865   000328                     TMR3            equ	808	;# 
  4866   000328                     TMR3L           equ	808	;# 
  4867   000329                     TMR3H           equ	809	;# 
  4868   00032A                     T3CON           equ	810	;# 
  4869   00032A                     TMR3CON         equ	810	;# 
  4870   00032B                     T3GCON          equ	811	;# 
  4871   00032B                     TMR3GCON        equ	811	;# 
  4872   00032C                     T3GATE          equ	812	;# 
  4873   00032C                     TMR3GATE        equ	812	;# 
  4874   00032D                     T3CLK           equ	813	;# 
  4875   00032D                     TMR3CLK         equ	813	;# 
  4876   00032D                     PR3             equ	813	;# 
  4877   00032E                     T4TMR           equ	814	;# 
  4878   00032E                     TMR4            equ	814	;# 
  4879   00032F                     T4PR            equ	815	;# 
  4880   00032F                     PR4             equ	815	;# 
  4881   000330                     T4CON           equ	816	;# 
  4882   000331                     T4HLT           equ	817	;# 
  4883   000332                     T4CLKCON        equ	818	;# 
  4884   000332                     T4CLK           equ	818	;# 
  4885   000333                     T4RST           equ	819	;# 
  4886   000334                     TMR5            equ	820	;# 
  4887   000334                     TMR5L           equ	820	;# 
  4888   000335                     TMR5H           equ	821	;# 
  4889   000336                     T5CON           equ	822	;# 
  4890   000336                     TMR5CON         equ	822	;# 
  4891   000337                     T5GCON          equ	823	;# 
  4892   000337                     TMR5GCON        equ	823	;# 
  4893   000338                     T5GATE          equ	824	;# 
  4894   000338                     TMR5GATE        equ	824	;# 
  4895   000339                     T5CLK           equ	825	;# 
  4896   000339                     TMR5CLK         equ	825	;# 
  4897   000339                     PR5             equ	825	;# 
  4898   00033A                     T6TMR           equ	826	;# 
  4899   00033A                     TMR6            equ	826	;# 
  4900   00033B                     T6PR            equ	827	;# 
  4901   00033B                     PR6             equ	827	;# 
  4902   00033C                     T6CON           equ	828	;# 
  4903   00033D                     T6HLT           equ	829	;# 
  4904   00033E                     T6CLKCON        equ	830	;# 
  4905   00033E                     T6CLK           equ	830	;# 
  4906   00033F                     T6RST           equ	831	;# 
  4907   000340                     CCPR1           equ	832	;# 
  4908   000340                     CCPR1L          equ	832	;# 
  4909   000341                     CCPR1H          equ	833	;# 
  4910   000342                     CCP1CON         equ	834	;# 
  4911   000343                     CCP1CAP         equ	835	;# 
  4912   000344                     CCPR2           equ	836	;# 
  4913   000344                     CCPR2L          equ	836	;# 
  4914   000345                     CCPR2H          equ	837	;# 
  4915   000346                     CCP2CON         equ	838	;# 
  4916   000347                     CCP2CAP         equ	839	;# 
  4917   000348                     CCPR3           equ	840	;# 
  4918   000348                     CCPR3L          equ	840	;# 
  4919   000349                     CCPR3H          equ	841	;# 
  4920   00034A                     CCP3CON         equ	842	;# 
  4921   00034B                     CCP3CAP         equ	843	;# 
  4922   00034C                     CCPTMRS0        equ	844	;# 
  4923   00034F                     CRCDATA         equ	847	;# 
  4924   00034F                     CRCDATL         equ	847	;# 
  4925   000350                     CRCDATH         equ	848	;# 
  4926   000351                     CRCACC          equ	849	;# 
  4927   000351                     CRCACCL         equ	849	;# 
  4928   000352                     CRCACCH         equ	850	;# 
  4929   000353                     CRCSHFT         equ	851	;# 
  4930   000353                     CRCSHIFTL       equ	851	;# 
  4931   000354                     CRCSHIFTH       equ	852	;# 
  4932   000355                     CRCXOR          equ	853	;# 
  4933   000355                     CRCXORL         equ	853	;# 
  4934   000356                     CRCXORH         equ	854	;# 
  4935   000357                     CRCCON0         equ	855	;# 
  4936   000358                     CRCCON1         equ	856	;# 
  4937   00035A                     SCANLADR        equ	858	;# 
  4938   00035A                     SCANLADRL       equ	858	;# 
  4939   00035B                     SCANLADRH       equ	859	;# 
  4940   00035C                     SCANLADRU       equ	860	;# 
  4941   00035D                     SCANHADR        equ	861	;# 
  4942   00035D                     SCANHADRL       equ	861	;# 
  4943   00035E                     SCANHADRH       equ	862	;# 
  4944   00035F                     SCANHADRU       equ	863	;# 
  4945   000360                     SCANCON0        equ	864	;# 
  4946   000361                     SCANTRIG        equ	865	;# 
  4947   000362                     IPR0            equ	866	;# 
  4948   000363                     IPR1            equ	867	;# 
  4949   000364                     IPR2            equ	868	;# 
  4950   000365                     IPR3            equ	869	;# 
  4951   000366                     IPR4            equ	870	;# 
  4952   000367                     IPR5            equ	871	;# 
  4953   000368                     IPR6            equ	872	;# 
  4954   000369                     IPR7            equ	873	;# 
  4955   00036A                     IPR8            equ	874	;# 
  4956   00036B                     IPR9            equ	875	;# 
  4957   00036C                     IPR10           equ	876	;# 
  4958   00036D                     IPR11           equ	877	;# 
  4959   00036E                     IPR12           equ	878	;# 
  4960   00036F                     IPR13           equ	879	;# 
  4961   000370                     IPR14           equ	880	;# 
  4962   000371                     IPR15           equ	881	;# 
  4963   000373                     STATUS_CSHAD    equ	883	;# 
  4964   000374                     WREG_CSHAD      equ	884	;# 
  4965   000375                     BSR_CSHAD       equ	885	;# 
  4966   000376                     SHADCON         equ	886	;# 
  4967   000377                     STATUS_SHAD     equ	887	;# 
  4968   000378                     WREG_SHAD       equ	888	;# 
  4969   000379                     BSR_SHAD        equ	889	;# 
  4970   00037A                     PCLATH_SHAD     equ	890	;# 
  4971   00037B                     PCLATU_SHAD     equ	891	;# 
  4972   00037C                     FSR0SH          equ	892	;# 
  4973   00037C                     FSR0L_SHAD      equ	892	;# 
  4974   00037D                     FSR0H_SHAD      equ	893	;# 
  4975   00037E                     FSR1SH          equ	894	;# 
  4976   00037E                     FSR1L_SHAD      equ	894	;# 
  4977   00037F                     FSR1H_SHAD      equ	895	;# 
  4978   000380                     FSR2SH          equ	896	;# 
  4979   000380                     FSR2L_SHAD      equ	896	;# 
  4980   000381                     FSR2H_SHAD      equ	897	;# 
  4981   000382                     PRODSH          equ	898	;# 
  4982   000382                     PRODL_SHAD      equ	898	;# 
  4983   000383                     PRODH_SHAD      equ	899	;# 
  4984   0003BC                     CWG1CLK         equ	956	;# 
  4985   0003BC                     CWG1CLKCON      equ	956	;# 
  4986   0003BD                     CWG1ISM         equ	957	;# 
  4987   0003BD                     CWG1DAT         equ	957	;# 
  4988   0003BE                     CWG1DBR         equ	958	;# 
  4989   0003BF                     CWG1DBF         equ	959	;# 
  4990   0003C0                     CWG1CON0        equ	960	;# 
  4991   0003C1                     CWG1CON1        equ	961	;# 
  4992   0003C2                     CWG1AS0         equ	962	;# 
  4993   0003C3                     CWG1AS1         equ	963	;# 
  4994   0003C4                     CWG1STR         equ	964	;# 
  4995   0003C5                     CWG2CLK         equ	965	;# 
  4996   0003C5                     CWG2CLKCON      equ	965	;# 
  4997   0003C6                     CWG2ISM         equ	966	;# 
  4998   0003C6                     CWG2DAT         equ	966	;# 
  4999   0003C7                     CWG2DBR         equ	967	;# 
  5000   0003C8                     CWG2DBF         equ	968	;# 
  5001   0003C9                     CWG2CON0        equ	969	;# 
  5002   0003CA                     CWG2CON1        equ	970	;# 
  5003   0003CB                     CWG2AS0         equ	971	;# 
  5004   0003CC                     CWG2AS1         equ	972	;# 
  5005   0003CD                     CWG2STR         equ	973	;# 
  5006   0003CE                     CWG3CLK         equ	974	;# 
  5007   0003CE                     CWG3CLKCON      equ	974	;# 
  5008   0003CF                     CWG3ISM         equ	975	;# 
  5009   0003CF                     CWG3DAT         equ	975	;# 
  5010   0003D0                     CWG3DBR         equ	976	;# 
  5011   0003D1                     CWG3DBF         equ	977	;# 
  5012   0003D2                     CWG3CON0        equ	978	;# 
  5013   0003D3                     CWG3CON1        equ	979	;# 
  5014   0003D4                     CWG3AS0         equ	980	;# 
  5015   0003D5                     CWG3AS1         equ	981	;# 
  5016   0003D6                     CWG3STR         equ	982	;# 
  5017   0003D7                     FVRCON          equ	983	;# 
  5018   0003D8                     ADCPCON         equ	984	;# 
  5019   0003D8                     ADCP            equ	984	;# 
  5020   0003D9                     ADLTH           equ	985	;# 
  5021   0003D9                     ADLTHL          equ	985	;# 
  5022   0003DA                     ADLTHH          equ	986	;# 
  5023   0003DB                     ADUTH           equ	987	;# 
  5024   0003DB                     ADUTHL          equ	987	;# 
  5025   0003DC                     ADUTHH          equ	988	;# 
  5026   0003DD                     ADERR           equ	989	;# 
  5027   0003DD                     ADERRL          equ	989	;# 
  5028   0003DE                     ADERRH          equ	990	;# 
  5029   0003DF                     ADSTPT          equ	991	;# 
  5030   0003DF                     ADSTPTL         equ	991	;# 
  5031   0003E0                     ADSTPTH         equ	992	;# 
  5032   0003E1                     ADFLTR          equ	993	;# 
  5033   0003E1                     ADFLTRL         equ	993	;# 
  5034   0003E2                     ADFLTRH         equ	994	;# 
  5035   0003E3                     ADACC           equ	995	;# 
  5036   0003E3                     ADACCL          equ	995	;# 
  5037   0003E4                     ADACCH          equ	996	;# 
  5038   0003E5                     ADACCU          equ	997	;# 
  5039   0003E6                     ADCNT           equ	998	;# 
  5040   0003E7                     ADRPT           equ	999	;# 
  5041   0003E8                     ADPREV          equ	1000	;# 
  5042   0003E8                     ADPREVL         equ	1000	;# 
  5043   0003E9                     ADPREVH         equ	1001	;# 
  5044   0003EA                     ADRES           equ	1002	;# 
  5045   0003EA                     ADRESL          equ	1002	;# 
  5046   0003EB                     ADRESH          equ	1003	;# 
  5047   0003EC                     ADPCH           equ	1004	;# 
  5048   0003EE                     ADACQ           equ	1006	;# 
  5049   0003EE                     ADACQL          equ	1006	;# 
  5050   0003EF                     ADACQH          equ	1007	;# 
  5051   0003F0                     ADCAP           equ	1008	;# 
  5052   0003F1                     ADPRE           equ	1009	;# 
  5053   0003F1                     ADPREL          equ	1009	;# 
  5054   0003F2                     ADPREH          equ	1010	;# 
  5055   0003F3                     ADCON0          equ	1011	;# 
  5056   0003F4                     ADCON1          equ	1012	;# 
  5057   0003F5                     ADCON2          equ	1013	;# 
  5058   0003F6                     ADCON3          equ	1014	;# 
  5059   0003F7                     ADSTAT          equ	1015	;# 
  5060   0003F8                     ADREF           equ	1016	;# 
  5061   0003F9                     ADACT           equ	1017	;# 
  5062   0003FA                     ADCLK           equ	1018	;# 
  5063   000400                     ANSELA          equ	1024	;# 
  5064   000401                     WPUA            equ	1025	;# 
  5065   000402                     ODCONA          equ	1026	;# 
  5066   000403                     SLRCONA         equ	1027	;# 
  5067   000404                     INLVLA          equ	1028	;# 
  5068   000405                     IOCAP           equ	1029	;# 
  5069   000406                     IOCAN           equ	1030	;# 
  5070   000407                     IOCAF           equ	1031	;# 
  5071   000408                     ANSELB          equ	1032	;# 
  5072   000409                     WPUB            equ	1033	;# 
  5073   00040A                     ODCONB          equ	1034	;# 
  5074   00040B                     SLRCONB         equ	1035	;# 
  5075   00040C                     INLVLB          equ	1036	;# 
  5076   00040D                     IOCBP           equ	1037	;# 
  5077   00040E                     IOCBN           equ	1038	;# 
  5078   00040F                     IOCBF           equ	1039	;# 
  5079   000410                     ANSELC          equ	1040	;# 
  5080   000411                     WPUC            equ	1041	;# 
  5081   000412                     ODCONC          equ	1042	;# 
  5082   000413                     SLRCONC         equ	1043	;# 
  5083   000414                     INLVLC          equ	1044	;# 
  5084   000415                     IOCCP           equ	1045	;# 
  5085   000416                     IOCCN           equ	1046	;# 
  5086   000417                     IOCCF           equ	1047	;# 
  5087   000418                     ANSELD          equ	1048	;# 
  5088   000419                     WPUD            equ	1049	;# 
  5089   00041A                     ODCOND          equ	1050	;# 
  5090   00041B                     SLRCOND         equ	1051	;# 
  5091   00041C                     INLVLD          equ	1052	;# 
  5092   000420                     ANSELE          equ	1056	;# 
  5093   000421                     WPUE            equ	1057	;# 
  5094   000422                     ODCONE          equ	1058	;# 
  5095   000423                     SLRCONE         equ	1059	;# 
  5096   000424                     INLVLE          equ	1060	;# 
  5097   000425                     IOCEP           equ	1061	;# 
  5098   000426                     IOCEN           equ	1062	;# 
  5099   000427                     IOCEF           equ	1063	;# 
  5100   000428                     ANSELF          equ	1064	;# 
  5101   000429                     WPUF            equ	1065	;# 
  5102   00042A                     ODCONF          equ	1066	;# 
  5103   00042B                     SLRCONF         equ	1067	;# 
  5104   00042C                     INLVLF          equ	1068	;# 
  5105   000440                     NCO1ACC         equ	1088	;# 
  5106   000440                     NCO1ACCL        equ	1088	;# 
  5107   000441                     NCO1ACCH        equ	1089	;# 
  5108   000442                     NCO1ACCU        equ	1090	;# 
  5109   000443                     NCO1INC         equ	1091	;# 
  5110   000443                     NCO1INCL        equ	1091	;# 
  5111   000444                     NCO1INCH        equ	1092	;# 
  5112   000445                     NCO1INCU        equ	1093	;# 
  5113   000446                     NCO1CON         equ	1094	;# 
  5114   000447                     NCO1CLK         equ	1095	;# 
  5115   000448                     NCO2ACC         equ	1096	;# 
  5116   000448                     NCO2ACCL        equ	1096	;# 
  5117   000449                     NCO2ACCH        equ	1097	;# 
  5118   00044A                     NCO2ACCU        equ	1098	;# 
  5119   00044B                     NCO2INC         equ	1099	;# 
  5120   00044B                     NCO2INCL        equ	1099	;# 
  5121   00044C                     NCO2INCH        equ	1100	;# 
  5122   00044D                     NCO2INCU        equ	1101	;# 
  5123   00044E                     NCO2CON         equ	1102	;# 
  5124   00044F                     NCO2CLK         equ	1103	;# 
  5125   000450                     NCO3ACC         equ	1104	;# 
  5126   000450                     NCO3ACCL        equ	1104	;# 
  5127   000451                     NCO3ACCH        equ	1105	;# 
  5128   000452                     NCO3ACCU        equ	1106	;# 
  5129   000453                     NCO3INC         equ	1107	;# 
  5130   000453                     NCO3INCL        equ	1107	;# 
  5131   000454                     NCO3INCH        equ	1108	;# 
  5132   000455                     NCO3INCU        equ	1109	;# 
  5133   000456                     NCO3CON         equ	1110	;# 
  5134   000457                     NCO3CLK         equ	1111	;# 
  5135   000459                     IVTLOCK         equ	1113	;# 
  5136   00045A                     IVTAD           equ	1114	;# 
  5137   00045A                     IVTADL          equ	1114	;# 
  5138   00045B                     IVTADH          equ	1115	;# 
  5139   00045C                     IVTADU          equ	1116	;# 
  5140   00045D                     IVTBASE         equ	1117	;# 
  5141   00045D                     IVTBASEL        equ	1117	;# 
  5142   00045E                     IVTBASEH        equ	1118	;# 
  5143   00045F                     IVTBASEU        equ	1119	;# 
  5144   000460                     PWM1ERS         equ	1120	;# 
  5145   000461                     PWM1CLK         equ	1121	;# 
  5146   000462                     PWM1LDS         equ	1122	;# 
  5147   000463                     PWM1PR          equ	1123	;# 
  5148   000463                     PWM1PRL         equ	1123	;# 
  5149   000464                     PWM1PRH         equ	1124	;# 
  5150   000465                     PWM1CPRE        equ	1125	;# 
  5151   000466                     PWM1PIPOS       equ	1126	;# 
  5152   000467                     PWM1GIR         equ	1127	;# 
  5153   000468                     PWM1GIE         equ	1128	;# 
  5154   000469                     PWM1CON         equ	1129	;# 
  5155   00046A                     PWM1S1CFG       equ	1130	;# 
  5156   00046B                     PWM1S1P1        equ	1131	;# 
  5157   00046B                     PWM1S1P1L       equ	1131	;# 
  5158   00046C                     PWM1S1P1H       equ	1132	;# 
  5159   00046D                     PWM1S1P2        equ	1133	;# 
  5160   00046D                     PWM1S1P2L       equ	1133	;# 
  5161   00046E                     PWM1S1P2H       equ	1134	;# 
  5162   00046F                     PWM2ERS         equ	1135	;# 
  5163   000470                     PWM2CLK         equ	1136	;# 
  5164   000471                     PWM2LDS         equ	1137	;# 
  5165   000472                     PWM2PR          equ	1138	;# 
  5166   000472                     PWM2PRL         equ	1138	;# 
  5167   000473                     PWM2PRH         equ	1139	;# 
  5168   000474                     PWM2CPRE        equ	1140	;# 
  5169   000475                     PWM2PIPOS       equ	1141	;# 
  5170   000476                     PWM2GIR         equ	1142	;# 
  5171   000477                     PWM2GIE         equ	1143	;# 
  5172   000478                     PWM2CON         equ	1144	;# 
  5173   000479                     PWM2S1CFG       equ	1145	;# 
  5174   00047A                     PWM2S1P1        equ	1146	;# 
  5175   00047A                     PWM2S1P1L       equ	1146	;# 
  5176   00047B                     PWM2S1P1H       equ	1147	;# 
  5177   00047C                     PWM2S1P2        equ	1148	;# 
  5178   00047C                     PWM2S1P2L       equ	1148	;# 
  5179   00047D                     PWM2S1P2H       equ	1149	;# 
  5180   00047E                     PWM3ERS         equ	1150	;# 
  5181   00047F                     PWM3CLK         equ	1151	;# 
  5182   000480                     PWM3LDS         equ	1152	;# 
  5183   000481                     PWM3PR          equ	1153	;# 
  5184   000481                     PWM3PRL         equ	1153	;# 
  5185   000482                     PWM3PRH         equ	1154	;# 
  5186   000483                     PWM3CPRE        equ	1155	;# 
  5187   000484                     PWM3PIPOS       equ	1156	;# 
  5188   000485                     PWM3GIR         equ	1157	;# 
  5189   000486                     PWM3GIE         equ	1158	;# 
  5190   000487                     PWM3CON         equ	1159	;# 
  5191   000488                     PWM3S1CFG       equ	1160	;# 
  5192   000489                     PWM3S1P1        equ	1161	;# 
  5193   000489                     PWM3S1P1L       equ	1161	;# 
  5194   00048A                     PWM3S1P1H       equ	1162	;# 
  5195   00048B                     PWM3S1P2        equ	1163	;# 
  5196   00048B                     PWM3S1P2L       equ	1163	;# 
  5197   00048C                     PWM3S1P2H       equ	1164	;# 
  5198   00049C                     PWMLOAD         equ	1180	;# 
  5199   00049D                     PWMEN           equ	1181	;# 
  5200   00049E                     PIE0            equ	1182	;# 
  5201   00049F                     PIE1            equ	1183	;# 
  5202   0004A0                     PIE2            equ	1184	;# 
  5203   0004A1                     PIE3            equ	1185	;# 
  5204   0004A2                     PIE4            equ	1186	;# 
  5205   0004A3                     PIE5            equ	1187	;# 
  5206   0004A4                     PIE6            equ	1188	;# 
  5207   0004A5                     PIE7            equ	1189	;# 
  5208   0004A6                     PIE8            equ	1190	;# 
  5209   0004A7                     PIE9            equ	1191	;# 
  5210   0004A8                     PIE10           equ	1192	;# 
  5211   0004A9                     PIE11           equ	1193	;# 
  5212   0004AA                     PIE12           equ	1194	;# 
  5213   0004AB                     PIE13           equ	1195	;# 
  5214   0004AC                     PIE14           equ	1196	;# 
  5215   0004AD                     PIE15           equ	1197	;# 
  5216   0004AE                     PIR0            equ	1198	;# 
  5217   0004AF                     PIR1            equ	1199	;# 
  5218   0004B0                     PIR2            equ	1200	;# 
  5219   0004B1                     PIR3            equ	1201	;# 
  5220   0004B2                     PIR4            equ	1202	;# 
  5221   0004B3                     PIR5            equ	1203	;# 
  5222   0004B4                     PIR6            equ	1204	;# 
  5223   0004B5                     PIR7            equ	1205	;# 
  5224   0004B6                     PIR8            equ	1206	;# 
  5225   0004B7                     PIR9            equ	1207	;# 
  5226   0004B8                     PIR10           equ	1208	;# 
  5227   0004B9                     PIR11           equ	1209	;# 
  5228   0004BA                     PIR12           equ	1210	;# 
  5229   0004BB                     PIR13           equ	1211	;# 
  5230   0004BC                     PIR14           equ	1212	;# 
  5231   0004BD                     PIR15           equ	1213	;# 
  5232   0004BE                     LATA            equ	1214	;# 
  5233   0004BF                     LATB            equ	1215	;# 
  5234   0004C0                     LATC            equ	1216	;# 
  5235   0004C1                     LATD            equ	1217	;# 
  5236   0004C2                     LATE            equ	1218	;# 
  5237   0004C3                     LATF            equ	1219	;# 
  5238   0004C6                     TRISA           equ	1222	;# 
  5239   0004C7                     TRISB           equ	1223	;# 
  5240   0004C8                     TRISC           equ	1224	;# 
  5241   0004C9                     TRISD           equ	1225	;# 
  5242   0004CA                     TRISE           equ	1226	;# 
  5243   0004CB                     TRISF           equ	1227	;# 
  5244   0004CE                     PORTA           equ	1230	;# 
  5245   0004CF                     PORTB           equ	1231	;# 
  5246   0004D0                     PORTC           equ	1232	;# 
  5247   0004D1                     PORTD           equ	1233	;# 
  5248   0004D2                     PORTE           equ	1234	;# 
  5249   0004D3                     PORTF           equ	1235	;# 
  5250   0004D6                     INTCON0         equ	1238	;# 
  5251   0004D7                     INTCON1         equ	1239	;# 
  5252   0004D8                     STATUS          equ	1240	;# 
  5253   0004D9                     FSR2            equ	1241	;# 
  5254   0004D9                     FSR2L           equ	1241	;# 
  5255   0004DA                     FSR2H           equ	1242	;# 
  5256   0004DB                     PLUSW2          equ	1243	;# 
  5257   0004DC                     PREINC2         equ	1244	;# 
  5258   0004DD                     POSTDEC2        equ	1245	;# 
  5259   0004DE                     POSTINC2        equ	1246	;# 
  5260   0004DF                     INDF2           equ	1247	;# 
  5261   0004E0                     BSR             equ	1248	;# 
  5262   0004E1                     FSR1            equ	1249	;# 
  5263   0004E1                     FSR1L           equ	1249	;# 
  5264   0004E2                     FSR1H           equ	1250	;# 
  5265   0004E3                     PLUSW1          equ	1251	;# 
  5266   0004E4                     PREINC1         equ	1252	;# 
  5267   0004E5                     POSTDEC1        equ	1253	;# 
  5268   0004E6                     POSTINC1        equ	1254	;# 
  5269   0004E7                     INDF1           equ	1255	;# 
  5270   0004E8                     WREG            equ	1256	;# 
  5271   0004E9                     FSR0            equ	1257	;# 
  5272   0004E9                     FSR0L           equ	1257	;# 
  5273   0004EA                     FSR0H           equ	1258	;# 
  5274   0004EB                     PLUSW0          equ	1259	;# 
  5275   0004EC                     PREINC0         equ	1260	;# 
  5276   0004ED                     POSTDEC0        equ	1261	;# 
  5277   0004EE                     POSTINC0        equ	1262	;# 
  5278   0004EF                     INDF0           equ	1263	;# 
  5279   0004F0                     PCON0           equ	1264	;# 
  5280   0004F1                     PCON1           equ	1265	;# 
  5281   0004F2                     CPUDOZE         equ	1266	;# 
  5282   0004F3                     PROD            equ	1267	;# 
  5283   0004F3                     PRODL           equ	1267	;# 
  5284   0004F4                     PRODH           equ	1268	;# 
  5285   0004F5                     TABLAT          equ	1269	;# 
  5286   0004F6                     TBLPTR          equ	1270	;# 
  5287   0004F6                     TBLPTRL         equ	1270	;# 
  5288   0004F7                     TBLPTRH         equ	1271	;# 
  5289   0004F8                     TBLPTRU         equ	1272	;# 
  5290   0004F9                     PCLAT           equ	1273	;# 
  5291   0004F9                     PCL             equ	1273	;# 
  5292   0004FA                     PCLATH          equ	1274	;# 
  5293   0004FB                     PCLATU          equ	1275	;# 
  5294   0004FC                     STKPTR          equ	1276	;# 
  5295   0004FD                     TOS             equ	1277	;# 
  5296   0004FD                     TOSL            equ	1277	;# 
  5297   0004FE                     TOSH            equ	1278	;# 
  5298   0004FF                     TOSU            equ	1279	;# 
  5299   000039                     CLKRCON         equ	57	;# 
  5300   00003A                     CLKRCLK         equ	58	;# 
  5301   000040                     NVMCON0         equ	64	;# 
  5302   000041                     NVMCON1         equ	65	;# 
  5303   000042                     NVMLOCK         equ	66	;# 
  5304   000043                     NVMADR          equ	67	;# 
  5305   000043                     NVMADRL         equ	67	;# 
  5306   000044                     NVMADRH         equ	68	;# 
  5307   000045                     NVMADRU         equ	69	;# 
  5308   000046                     NVMDAT          equ	70	;# 
  5309   000046                     NVMDATL         equ	70	;# 
  5310   000047                     NVMDATH         equ	71	;# 
  5311   000048                     VREGCON         equ	72	;# 
  5312   000049                     BORCON          equ	73	;# 
  5313   00004A                     HLVDCON0        equ	74	;# 
  5314   00004B                     HLVDCON1        equ	75	;# 
  5315   00004C                     ZCDCON          equ	76	;# 
  5316   000060                     PMD0            equ	96	;# 
  5317   000061                     PMD1            equ	97	;# 
  5318   000063                     PMD3            equ	99	;# 
  5319   000064                     PMD4            equ	100	;# 
  5320   000065                     PMD5            equ	101	;# 
  5321   000066                     PMD6            equ	102	;# 
  5322   000067                     PMD7            equ	103	;# 
  5323   000068                     PMD8            equ	104	;# 
  5324   00006A                     MD1CON0         equ	106	;# 
  5325   00006B                     MD1CON1         equ	107	;# 
  5326   00006C                     MD1SRC          equ	108	;# 
  5327   00006D                     MD1CARL         equ	109	;# 
  5328   00006E                     MD1CARH         equ	110	;# 
  5329   00006F                     CMOUT           equ	111	;# 
  5330   000070                     CM1CON0         equ	112	;# 
  5331   000071                     CM1CON1         equ	113	;# 
  5332   000072                     CM1NCH          equ	114	;# 
  5333   000073                     CM1PCH          equ	115	;# 
  5334   000074                     CM2CON0         equ	116	;# 
  5335   000075                     CM2CON1         equ	117	;# 
  5336   000076                     CM2NCH          equ	118	;# 
  5337   000077                     CM2PCH          equ	119	;# 
  5338   000078                     WDTCON0         equ	120	;# 
  5339   000079                     WDTCON1         equ	121	;# 
  5340   00007A                     WDTPS           equ	122	;# 
  5341   00007A                     WDTPSL          equ	122	;# 
  5342   00007B                     WDTPSH          equ	123	;# 
  5343   00007C                     WDTTMR          equ	124	;# 
  5344   00007D                     DAC1DAT         equ	125	;# 
  5345   00007D                     DAC1DATL        equ	125	;# 
  5346   00007F                     DAC1CON         equ	127	;# 
  5347   000080                     SPI1RXB         equ	128	;# 
  5348   000081                     SPI1TXB         equ	129	;# 
  5349   000082                     SPI1TCNT        equ	130	;# 
  5350   000082                     SPI1TCNTL       equ	130	;# 
  5351   000083                     SPI1TCNTH       equ	131	;# 
  5352   000084                     SPI1CON0        equ	132	;# 
  5353   000085                     SPI1CON1        equ	133	;# 
  5354   000086                     SPI1CON2        equ	134	;# 
  5355   000087                     SPI1STATUS      equ	135	;# 
  5356   000088                     SPI1TWIDTH      equ	136	;# 
  5357   000089                     SPI1BAUD        equ	137	;# 
  5358   00008A                     SPI1INTF        equ	138	;# 
  5359   00008B                     SPI1INTE        equ	139	;# 
  5360   00008C                     SPI1CLK         equ	140	;# 
  5361   00008D                     SPI2RXB         equ	141	;# 
  5362   00008E                     SPI2TXB         equ	142	;# 
  5363   00008F                     SPI2TCNT        equ	143	;# 
  5364   00008F                     SPI2TCNTL       equ	143	;# 
  5365   000090                     SPI2TCNTH       equ	144	;# 
  5366   000091                     SPI2CON0        equ	145	;# 
  5367   000092                     SPI2CON1        equ	146	;# 
  5368   000093                     SPI2CON2        equ	147	;# 
  5369   000094                     SPI2STATUS      equ	148	;# 
  5370   000095                     SPI2TWIDTH      equ	149	;# 
  5371   000096                     SPI2BAUD        equ	150	;# 
  5372   000097                     SPI2INTF        equ	151	;# 
  5373   000098                     SPI2INTE        equ	152	;# 
  5374   000099                     SPI2CLK         equ	153	;# 
  5375   0000AC                     ACTCON          equ	172	;# 
  5376   0000AD                     OSCCON1         equ	173	;# 
  5377   0000AE                     OSCCON2         equ	174	;# 
  5378   0000AF                     OSCCON3         equ	175	;# 
  5379   0000B0                     OSCTUNE         equ	176	;# 
  5380   0000B1                     OSCFRQ          equ	177	;# 
  5381   0000B1                     OSCFREQ         equ	177	;# 
  5382   0000B2                     OSCSTAT         equ	178	;# 
  5383   0000B2                     OSCSTAT1        equ	178	;# 
  5384   0000B3                     OSCEN           equ	179	;# 
  5385   0000B4                     PRLOCK          equ	180	;# 
  5386   0000B5                     SCANPR          equ	181	;# 
  5387   0000B6                     DMA1PR          equ	182	;# 
  5388   0000B7                     DMA2PR          equ	183	;# 
  5389   0000B8                     DMA3PR          equ	184	;# 
  5390   0000B9                     DMA4PR          equ	185	;# 
  5391   0000BA                     DMA5PR          equ	186	;# 
  5392   0000BB                     DMA6PR          equ	187	;# 
  5393   0000BE                     MAINPR          equ	190	;# 
  5394   0000BF                     ISRPR           equ	191	;# 
  5395   0000D4                     CLCDATA         equ	212	;# 
  5396   0000D5                     CLCSELECT       equ	213	;# 
  5397   0000D6                     CLCnCON         equ	214	;# 
  5398   0000D7                     CLCnPOL         equ	215	;# 
  5399   0000D8                     CLCnSEL0        equ	216	;# 
  5400   0000D9                     CLCnSEL1        equ	217	;# 
  5401   0000DA                     CLCnSEL2        equ	218	;# 
  5402   0000DB                     CLCnSEL3        equ	219	;# 
  5403   0000DC                     CLCnGLS0        equ	220	;# 
  5404   0000DD                     CLCnGLS1        equ	221	;# 
  5405   0000DE                     CLCnGLS2        equ	222	;# 
  5406   0000DF                     CLCnGLS3        equ	223	;# 
  5407   0000E8                     DMASELECT       equ	232	;# 
  5408   0000E9                     DMAnBUF         equ	233	;# 
  5409   0000EA                     DMAnDCNT        equ	234	;# 
  5410   0000EA                     DMAnDCNTL       equ	234	;# 
  5411   0000EB                     DMAnDCNTH       equ	235	;# 
  5412   0000EC                     DMAnDPTR        equ	236	;# 
  5413   0000EC                     DMAnDPTRL       equ	236	;# 
  5414   0000ED                     DMAnDPTRH       equ	237	;# 
  5415   0000EE                     DMAnDSZ         equ	238	;# 
  5416   0000EE                     DMAnDSZL        equ	238	;# 
  5417   0000EF                     DMAnDSZH        equ	239	;# 
  5418   0000F0                     DMAnDSA         equ	240	;# 
  5419   0000F0                     DMAnDSAL        equ	240	;# 
  5420   0000F1                     DMAnDSAH        equ	241	;# 
  5421   0000F2                     DMAnSCNT        equ	242	;# 
  5422   0000F2                     DMAnSCNTL       equ	242	;# 
  5423   0000F3                     DMAnSCNTH       equ	243	;# 
  5424   0000F4                     DMAnSPTR        equ	244	;# 
  5425   0000F4                     DMAnSPTRL       equ	244	;# 
  5426   0000F5                     DMAnSPTRH       equ	245	;# 
  5427   0000F6                     DMAnSPTRU       equ	246	;# 
  5428   0000F7                     DMAnSSZ         equ	247	;# 
  5429   0000F7                     DMAnSSZL        equ	247	;# 
  5430   0000F8                     DMAnSSZH        equ	248	;# 
  5431   0000F9                     DMAnSSA         equ	249	;# 
  5432   0000F9                     DMAnSSAL        equ	249	;# 
  5433   0000FA                     DMAnSSAH        equ	250	;# 
  5434   0000FB                     DMAnSSAU        equ	251	;# 
  5435   0000FC                     DMAnCON0        equ	252	;# 
  5436   0000FD                     DMAnCON1        equ	253	;# 
  5437   0000FE                     DMAnAIRQ        equ	254	;# 
  5438   0000FF                     DMAnSIRQ        equ	255	;# 
  5439   000200                     PPSLOCK         equ	512	;# 
  5440   000201                     RA0PPS          equ	513	;# 
  5441   000202                     RA1PPS          equ	514	;# 
  5442   000203                     RA2PPS          equ	515	;# 
  5443   000204                     RA3PPS          equ	516	;# 
  5444   000205                     RA4PPS          equ	517	;# 
  5445   000206                     RA5PPS          equ	518	;# 
  5446   000207                     RA6PPS          equ	519	;# 
  5447   000208                     RA7PPS          equ	520	;# 
  5448   000209                     RB0PPS          equ	521	;# 
  5449   00020A                     RB1PPS          equ	522	;# 
  5450   00020B                     RB2PPS          equ	523	;# 
  5451   00020C                     RB3PPS          equ	524	;# 
  5452   00020D                     RB4PPS          equ	525	;# 
  5453   00020E                     RB5PPS          equ	526	;# 
  5454   00020F                     RB6PPS          equ	527	;# 
  5455   000210                     RB7PPS          equ	528	;# 
  5456   000211                     RC0PPS          equ	529	;# 
  5457   000212                     RC1PPS          equ	530	;# 
  5458   000213                     RC2PPS          equ	531	;# 
  5459   000214                     RC3PPS          equ	532	;# 
  5460   000215                     RC4PPS          equ	533	;# 
  5461   000216                     RC5PPS          equ	534	;# 
  5462   000217                     RC6PPS          equ	535	;# 
  5463   000218                     RC7PPS          equ	536	;# 
  5464   000219                     RD0PPS          equ	537	;# 
  5465   00021A                     RD1PPS          equ	538	;# 
  5466   00021B                     RD2PPS          equ	539	;# 
  5467   00021C                     RD3PPS          equ	540	;# 
  5468   00021D                     RD4PPS          equ	541	;# 
  5469   00021E                     RD5PPS          equ	542	;# 
  5470   00021F                     RD6PPS          equ	543	;# 
  5471   000220                     RD7PPS          equ	544	;# 
  5472   000221                     RE0PPS          equ	545	;# 
  5473   000222                     RE1PPS          equ	546	;# 
  5474   000223                     RE2PPS          equ	547	;# 
  5475   000229                     RF0PPS          equ	553	;# 
  5476   00022A                     RF1PPS          equ	554	;# 
  5477   00022B                     RF2PPS          equ	555	;# 
  5478   00022C                     RF3PPS          equ	556	;# 
  5479   00022D                     RF4PPS          equ	557	;# 
  5480   00022E                     RF5PPS          equ	558	;# 
  5481   00022F                     RF6PPS          equ	559	;# 
  5482   000230                     RF7PPS          equ	560	;# 
  5483   00023E                     INT0PPS         equ	574	;# 
  5484   00023F                     INT1PPS         equ	575	;# 
  5485   000240                     INT2PPS         equ	576	;# 
  5486   000241                     T0CKIPPS        equ	577	;# 
  5487   000242                     T1CKIPPS        equ	578	;# 
  5488   000243                     T1GPPS          equ	579	;# 
  5489   000244                     T3CKIPPS        equ	580	;# 
  5490   000245                     T3GPPS          equ	581	;# 
  5491   000246                     T5CKIPPS        equ	582	;# 
  5492   000247                     T5GPPS          equ	583	;# 
  5493   000248                     T2INPPS         equ	584	;# 
  5494   000249                     T4INPPS         equ	585	;# 
  5495   00024A                     T6INPPS         equ	586	;# 
  5496   00024F                     CCP1PPS         equ	591	;# 
  5497   000250                     CCP2PPS         equ	592	;# 
  5498   000251                     CCP3PPS         equ	593	;# 
  5499   000253                     PWM1ERSPPS      equ	595	;# 
  5500   000254                     PWM2ERSPPS      equ	596	;# 
  5501   000255                     PWM3ERSPPS      equ	597	;# 
  5502   000257                     PWMIN0PPS       equ	599	;# 
  5503   000258                     PWMIN1PPS       equ	600	;# 
  5504   000259                     SMT1WINPPS      equ	601	;# 
  5505   00025A                     SMT1SIGPPS      equ	602	;# 
  5506   00025B                     CWG1PPS         equ	603	;# 
  5507   00025B                     CWG1INPPS       equ	603	;# 
  5508   00025C                     CWG2PPS         equ	604	;# 
  5509   00025C                     CWG2INPPS       equ	604	;# 
  5510   00025D                     CWG3PPS         equ	605	;# 
  5511   00025D                     CWG3INPPS       equ	605	;# 
  5512   00025E                     MD1CARLPPS      equ	606	;# 
  5513   00025E                     MDCARLPPS       equ	606	;# 
  5514   00025F                     MD1CARHPPS      equ	607	;# 
  5515   00025F                     MDCARHPPS       equ	607	;# 
  5516   000260                     MD1SRCPPS       equ	608	;# 
  5517   000260                     MDSRCPPS        equ	608	;# 
  5518   000261                     CLCIN0PPS       equ	609	;# 
  5519   000262                     CLCIN1PPS       equ	610	;# 
  5520   000263                     CLCIN2PPS       equ	611	;# 
  5521   000264                     CLCIN3PPS       equ	612	;# 
  5522   000265                     CLCIN4PPS       equ	613	;# 
  5523   000266                     CLCIN5PPS       equ	614	;# 
  5524   000267                     CLCIN6PPS       equ	615	;# 
  5525   000268                     CLCIN7PPS       equ	616	;# 
  5526   000269                     ADACTPPS        equ	617	;# 
  5527   00026A                     SPI1SCKPPS      equ	618	;# 
  5528   00026B                     SPI1SDIPPS      equ	619	;# 
  5529   00026C                     SPI1SSPPS       equ	620	;# 
  5530   00026D                     SPI2SCKPPS      equ	621	;# 
  5531   00026E                     SPI2SDIPPS      equ	622	;# 
  5532   00026F                     SPI2SSPPS       equ	623	;# 
  5533   000270                     I2C1SDAPPS      equ	624	;# 
  5534   000271                     I2C1SCLPPS      equ	625	;# 
  5535   000272                     U1RXPPS         equ	626	;# 
  5536   000273                     U1CTSPPS        equ	627	;# 
  5537   000274                     U2RXPPS         equ	628	;# 
  5538   000275                     U2CTSPPS        equ	629	;# 
  5539   000276                     U3RXPPS         equ	630	;# 
  5540   000277                     U3CTSPPS        equ	631	;# 
  5541   000278                     U4RXPPS         equ	632	;# 
  5542   000279                     U4CTSPPS        equ	633	;# 
  5543   00027A                     U5RXPPS         equ	634	;# 
  5544   00027B                     U5CTSPPS        equ	635	;# 
  5545   000286                     RC4I2C          equ	646	;# 
  5546   000287                     RC3I2C          equ	647	;# 
  5547   000288                     RB2I2C          equ	648	;# 
  5548   000289                     RB1I2C          equ	649	;# 
  5549   00028B                     I2C1RXB         equ	651	;# 
  5550   00028C                     I2C1TXB         equ	652	;# 
  5551   00028D                     I2C1CNT         equ	653	;# 
  5552   00028E                     I2C1ADB0        equ	654	;# 
  5553   00028F                     I2C1ADB1        equ	655	;# 
  5554   000290                     I2C1ADR0        equ	656	;# 
  5555   000291                     I2C1ADR1        equ	657	;# 
  5556   000292                     I2C1ADR2        equ	658	;# 
  5557   000293                     I2C1ADR3        equ	659	;# 
  5558   000294                     I2C1CON0        equ	660	;# 
  5559   000295                     I2C1CON1        equ	661	;# 
  5560   000296                     I2C1CON2        equ	662	;# 
  5561   000297                     I2C1ERR         equ	663	;# 
  5562   000298                     I2C1STAT0       equ	664	;# 
  5563   000299                     I2C1STAT1       equ	665	;# 
  5564   00029A                     I2C1PIR         equ	666	;# 
  5565   00029B                     I2C1PIE         equ	667	;# 
  5566   00029C                     I2C1CLK         equ	668	;# 
  5567   00029D                     I2C1BTO         equ	669	;# 
  5568   0002A1                     U1RXB           equ	673	;# 
  5569   0002A1                     U1RXBL          equ	673	;# 
  5570   0002A2                     U1RXCHK         equ	674	;# 
  5571   0002A3                     U1TXB           equ	675	;# 
  5572   0002A3                     U1TXBL          equ	675	;# 
  5573   0002A4                     U1TXCHK         equ	676	;# 
  5574   0002A5                     U1P1            equ	677	;# 
  5575   0002A5                     U1P1L           equ	677	;# 
  5576   0002A6                     U1P1H           equ	678	;# 
  5577   0002A7                     U1P2            equ	679	;# 
  5578   0002A7                     U1P2L           equ	679	;# 
  5579   0002A8                     U1P2H           equ	680	;# 
  5580   0002A9                     U1P3            equ	681	;# 
  5581   0002A9                     U1P3L           equ	681	;# 
  5582   0002AA                     U1P3H           equ	682	;# 
  5583   0002AB                     U1CON0          equ	683	;# 
  5584   0002AC                     U1CON1          equ	684	;# 
  5585   0002AD                     U1CON2          equ	685	;# 
  5586   0002AE                     U1BRG           equ	686	;# 
  5587   0002AE                     U1BRGL          equ	686	;# 
  5588   0002AF                     U1BRGH          equ	687	;# 
  5589   0002B0                     U1FIFO          equ	688	;# 
  5590   0002B1                     U1UIR           equ	689	;# 
  5591   0002B2                     U1ERRIR         equ	690	;# 
  5592   0002B3                     U1ERRIE         equ	691	;# 
  5593   0002B4                     U2RXB           equ	692	;# 
  5594   0002B4                     U2RXBL          equ	692	;# 
  5595   0002B6                     U2TXB           equ	694	;# 
  5596   0002B6                     U2TXBL          equ	694	;# 
  5597   0002B8                     U2P1            equ	696	;# 
  5598   0002B8                     U2P1L           equ	696	;# 
  5599   0002BA                     U2P2            equ	698	;# 
  5600   0002BA                     U2P2L           equ	698	;# 
  5601   0002BC                     U2P3            equ	700	;# 
  5602   0002BC                     U2P3L           equ	700	;# 
  5603   0002BE                     U2CON0          equ	702	;# 
  5604   0002BF                     U2CON1          equ	703	;# 
  5605   0002C0                     U2CON2          equ	704	;# 
  5606   0002C1                     U2BRG           equ	705	;# 
  5607   0002C1                     U2BRGL          equ	705	;# 
  5608   0002C2                     U2BRGH          equ	706	;# 
  5609   0002C3                     U2FIFO          equ	707	;# 
  5610   0002C4                     U2UIR           equ	708	;# 
  5611   0002C5                     U2ERRIR         equ	709	;# 
  5612   0002C6                     U2ERRIE         equ	710	;# 
  5613   0002C7                     U3RXB           equ	711	;# 
  5614   0002C7                     U3RXBL          equ	711	;# 
  5615   0002C9                     U3TXB           equ	713	;# 
  5616   0002C9                     U3TXBL          equ	713	;# 
  5617   0002CB                     U3P1            equ	715	;# 
  5618   0002CB                     U3P1L           equ	715	;# 
  5619   0002CD                     U3P2            equ	717	;# 
  5620   0002CD                     U3P2L           equ	717	;# 
  5621   0002CF                     U3P3            equ	719	;# 
  5622   0002CF                     U3P3L           equ	719	;# 
  5623   0002D1                     U3CON0          equ	721	;# 
  5624   0002D2                     U3CON1          equ	722	;# 
  5625   0002D3                     U3CON2          equ	723	;# 
  5626   0002D4                     U3BRG           equ	724	;# 
  5627   0002D4                     U3BRGL          equ	724	;# 
  5628   0002D5                     U3BRGH          equ	725	;# 
  5629   0002D6                     U3FIFO          equ	726	;# 
  5630   0002D7                     U3UIR           equ	727	;# 
  5631   0002D8                     U3ERRIR         equ	728	;# 
  5632   0002D9                     U3ERRIE         equ	729	;# 
  5633   0002DA                     U4RXB           equ	730	;# 
  5634   0002DA                     U4RXBL          equ	730	;# 
  5635   0002DC                     U4TXB           equ	732	;# 
  5636   0002DC                     U4TXBL          equ	732	;# 
  5637   0002DE                     U4P1            equ	734	;# 
  5638   0002DE                     U4P1L           equ	734	;# 
  5639   0002E0                     U4P2            equ	736	;# 
  5640   0002E0                     U4P2L           equ	736	;# 
  5641   0002E2                     U4P3            equ	738	;# 
  5642   0002E2                     U4P3L           equ	738	;# 
  5643   0002E4                     U4CON0          equ	740	;# 
  5644   0002E5                     U4CON1          equ	741	;# 
  5645   0002E6                     U4CON2          equ	742	;# 
  5646   0002E7                     U4BRG           equ	743	;# 
  5647   0002E7                     U4BRGL          equ	743	;# 
  5648   0002E8                     U4BRGH          equ	744	;# 
  5649   0002E9                     U4FIFO          equ	745	;# 
  5650   0002EA                     U4UIR           equ	746	;# 
  5651   0002EB                     U4ERRIR         equ	747	;# 
  5652   0002EC                     U4ERRIE         equ	748	;# 
  5653   0002ED                     U5RXB           equ	749	;# 
  5654   0002ED                     U5RXBL          equ	749	;# 
  5655   0002EF                     U5TXB           equ	751	;# 
  5656   0002EF                     U5TXBL          equ	751	;# 
  5657   0002F1                     U5P1            equ	753	;# 
  5658   0002F1                     U5P1L           equ	753	;# 
  5659   0002F3                     U5P2            equ	755	;# 
  5660   0002F3                     U5P2L           equ	755	;# 
  5661   0002F5                     U5P3            equ	757	;# 
  5662   0002F5                     U5P3L           equ	757	;# 
  5663   0002F7                     U5CON0          equ	759	;# 
  5664   0002F8                     U5CON1          equ	760	;# 
  5665   0002F9                     U5CON2          equ	761	;# 
  5666   0002FA                     U5BRG           equ	762	;# 
  5667   0002FA                     U5BRGL          equ	762	;# 
  5668   0002FB                     U5BRGH          equ	763	;# 
  5669   0002FC                     U5FIFO          equ	764	;# 
  5670   0002FD                     U5UIR           equ	765	;# 
  5671   0002FE                     U5ERRIR         equ	766	;# 
  5672   0002FF                     U5ERRIE         equ	767	;# 
  5673   000300                     SMT1TMR         equ	768	;# 
  5674   000300                     SMT1TMRL        equ	768	;# 
  5675   000301                     SMT1TMRH        equ	769	;# 
  5676   000302                     SMT1TMRU        equ	770	;# 
  5677   000303                     SMT1CPR         equ	771	;# 
  5678   000303                     SMT1CPRL        equ	771	;# 
  5679   000304                     SMT1CPRH        equ	772	;# 
  5680   000305                     SMT1CPRU        equ	773	;# 
  5681   000306                     SMT1CPW         equ	774	;# 
  5682   000306                     SMT1CPWL        equ	774	;# 
  5683   000307                     SMT1CPWH        equ	775	;# 
  5684   000308                     SMT1CPWU        equ	776	;# 
  5685   000309                     SMT1PR          equ	777	;# 
  5686   000309                     SMT1PRL         equ	777	;# 
  5687   00030A                     SMT1PRH         equ	778	;# 
  5688   00030B                     SMT1PRU         equ	779	;# 
  5689   00030C                     SMT1CON0        equ	780	;# 
  5690   00030D                     SMT1CON1        equ	781	;# 
  5691   00030E                     SMT1STAT        equ	782	;# 
  5692   00030F                     SMT1CLK         equ	783	;# 
  5693   000310                     SMT1SIG         equ	784	;# 
  5694   000311                     SMT1WIN         equ	785	;# 
  5695   000318                     TMR0L           equ	792	;# 
  5696   000318                     TMR0            equ	792	;# 
  5697   000319                     TMR0H           equ	793	;# 
  5698   000319                     PR0             equ	793	;# 
  5699   00031A                     T0CON0          equ	794	;# 
  5700   00031B                     T0CON1          equ	795	;# 
  5701   00031C                     TMR1            equ	796	;# 
  5702   00031C                     TMR1L           equ	796	;# 
  5703   00031D                     TMR1H           equ	797	;# 
  5704   00031E                     T1CON           equ	798	;# 
  5705   00031E                     TMR1CON         equ	798	;# 
  5706   00031F                     T1GCON          equ	799	;# 
  5707   00031F                     TMR1GCON        equ	799	;# 
  5708   000320                     T1GATE          equ	800	;# 
  5709   000320                     TMR1GATE        equ	800	;# 
  5710   000321                     T1CLK           equ	801	;# 
  5711   000321                     TMR1CLK         equ	801	;# 
  5712   000321                     PR1             equ	801	;# 
  5713   000322                     T2TMR           equ	802	;# 
  5714   000322                     TMR2            equ	802	;# 
  5715   000323                     T2PR            equ	803	;# 
  5716   000323                     PR2             equ	803	;# 
  5717   000324                     T2CON           equ	804	;# 
  5718   000325                     T2HLT           equ	805	;# 
  5719   000326                     T2CLKCON        equ	806	;# 
  5720   000326                     T2CLK           equ	806	;# 
  5721   000327                     T2RST           equ	807	;# 
  5722   000328                     TMR3            equ	808	;# 
  5723   000328                     TMR3L           equ	808	;# 
  5724   000329                     TMR3H           equ	809	;# 
  5725   00032A                     T3CON           equ	810	;# 
  5726   00032A                     TMR3CON         equ	810	;# 
  5727   00032B                     T3GCON          equ	811	;# 
  5728   00032B                     TMR3GCON        equ	811	;# 
  5729   00032C                     T3GATE          equ	812	;# 
  5730   00032C                     TMR3GATE        equ	812	;# 
  5731   00032D                     T3CLK           equ	813	;# 
  5732   00032D                     TMR3CLK         equ	813	;# 
  5733   00032D                     PR3             equ	813	;# 
  5734   00032E                     T4TMR           equ	814	;# 
  5735   00032E                     TMR4            equ	814	;# 
  5736   00032F                     T4PR            equ	815	;# 
  5737   00032F                     PR4             equ	815	;# 
  5738   000330                     T4CON           equ	816	;# 
  5739   000331                     T4HLT           equ	817	;# 
  5740   000332                     T4CLKCON        equ	818	;# 
  5741   000332                     T4CLK           equ	818	;# 
  5742   000333                     T4RST           equ	819	;# 
  5743   000334                     TMR5            equ	820	;# 
  5744   000334                     TMR5L           equ	820	;# 
  5745   000335                     TMR5H           equ	821	;# 
  5746   000336                     T5CON           equ	822	;# 
  5747   000336                     TMR5CON         equ	822	;# 
  5748   000337                     T5GCON          equ	823	;# 
  5749   000337                     TMR5GCON        equ	823	;# 
  5750   000338                     T5GATE          equ	824	;# 
  5751   000338                     TMR5GATE        equ	824	;# 
  5752   000339                     T5CLK           equ	825	;# 
  5753   000339                     TMR5CLK         equ	825	;# 
  5754   000339                     PR5             equ	825	;# 
  5755   00033A                     T6TMR           equ	826	;# 
  5756   00033A                     TMR6            equ	826	;# 
  5757   00033B                     T6PR            equ	827	;# 
  5758   00033B                     PR6             equ	827	;# 
  5759   00033C                     T6CON           equ	828	;# 
  5760   00033D                     T6HLT           equ	829	;# 
  5761   00033E                     T6CLKCON        equ	830	;# 
  5762   00033E                     T6CLK           equ	830	;# 
  5763   00033F                     T6RST           equ	831	;# 
  5764   000340                     CCPR1           equ	832	;# 
  5765   000340                     CCPR1L          equ	832	;# 
  5766   000341                     CCPR1H          equ	833	;# 
  5767   000342                     CCP1CON         equ	834	;# 
  5768   000343                     CCP1CAP         equ	835	;# 
  5769   000344                     CCPR2           equ	836	;# 
  5770   000344                     CCPR2L          equ	836	;# 
  5771   000345                     CCPR2H          equ	837	;# 
  5772   000346                     CCP2CON         equ	838	;# 
  5773   000347                     CCP2CAP         equ	839	;# 
  5774   000348                     CCPR3           equ	840	;# 
  5775   000348                     CCPR3L          equ	840	;# 
  5776   000349                     CCPR3H          equ	841	;# 
  5777   00034A                     CCP3CON         equ	842	;# 
  5778   00034B                     CCP3CAP         equ	843	;# 
  5779   00034C                     CCPTMRS0        equ	844	;# 
  5780   00034F                     CRCDATA         equ	847	;# 
  5781   00034F                     CRCDATL         equ	847	;# 
  5782   000350                     CRCDATH         equ	848	;# 
  5783   000351                     CRCACC          equ	849	;# 
  5784   000351                     CRCACCL         equ	849	;# 
  5785   000352                     CRCACCH         equ	850	;# 
  5786   000353                     CRCSHFT         equ	851	;# 
  5787   000353                     CRCSHIFTL       equ	851	;# 
  5788   000354                     CRCSHIFTH       equ	852	;# 
  5789   000355                     CRCXOR          equ	853	;# 
  5790   000355                     CRCXORL         equ	853	;# 
  5791   000356                     CRCXORH         equ	854	;# 
  5792   000357                     CRCCON0         equ	855	;# 
  5793   000358                     CRCCON1         equ	856	;# 
  5794   00035A                     SCANLADR        equ	858	;# 
  5795   00035A                     SCANLADRL       equ	858	;# 
  5796   00035B                     SCANLADRH       equ	859	;# 
  5797   00035C                     SCANLADRU       equ	860	;# 
  5798   00035D                     SCANHADR        equ	861	;# 
  5799   00035D                     SCANHADRL       equ	861	;# 
  5800   00035E                     SCANHADRH       equ	862	;# 
  5801   00035F                     SCANHADRU       equ	863	;# 
  5802   000360                     SCANCON0        equ	864	;# 
  5803   000361                     SCANTRIG        equ	865	;# 
  5804   000362                     IPR0            equ	866	;# 
  5805   000363                     IPR1            equ	867	;# 
  5806   000364                     IPR2            equ	868	;# 
  5807   000365                     IPR3            equ	869	;# 
  5808   000366                     IPR4            equ	870	;# 
  5809   000367                     IPR5            equ	871	;# 
  5810   000368                     IPR6            equ	872	;# 
  5811   000369                     IPR7            equ	873	;# 
  5812   00036A                     IPR8            equ	874	;# 
  5813   00036B                     IPR9            equ	875	;# 
  5814   00036C                     IPR10           equ	876	;# 
  5815   00036D                     IPR11           equ	877	;# 
  5816   00036E                     IPR12           equ	878	;# 
  5817   00036F                     IPR13           equ	879	;# 
  5818   000370                     IPR14           equ	880	;# 
  5819   000371                     IPR15           equ	881	;# 
  5820   000373                     STATUS_CSHAD    equ	883	;# 
  5821   000374                     WREG_CSHAD      equ	884	;# 
  5822   000375                     BSR_CSHAD       equ	885	;# 
  5823   000376                     SHADCON         equ	886	;# 
  5824   000377                     STATUS_SHAD     equ	887	;# 
  5825   000378                     WREG_SHAD       equ	888	;# 
  5826   000379                     BSR_SHAD        equ	889	;# 
  5827   00037A                     PCLATH_SHAD     equ	890	;# 
  5828   00037B                     PCLATU_SHAD     equ	891	;# 
  5829   00037C                     FSR0SH          equ	892	;# 
  5830   00037C                     FSR0L_SHAD      equ	892	;# 
  5831   00037D                     FSR0H_SHAD      equ	893	;# 
  5832   00037E                     FSR1SH          equ	894	;# 
  5833   00037E                     FSR1L_SHAD      equ	894	;# 
  5834   00037F                     FSR1H_SHAD      equ	895	;# 
  5835   000380                     FSR2SH          equ	896	;# 
  5836   000380                     FSR2L_SHAD      equ	896	;# 
  5837   000381                     FSR2H_SHAD      equ	897	;# 
  5838   000382                     PRODSH          equ	898	;# 
  5839   000382                     PRODL_SHAD      equ	898	;# 
  5840   000383                     PRODH_SHAD      equ	899	;# 
  5841   0003BC                     CWG1CLK         equ	956	;# 
  5842   0003BC                     CWG1CLKCON      equ	956	;# 
  5843   0003BD                     CWG1ISM         equ	957	;# 
  5844   0003BD                     CWG1DAT         equ	957	;# 
  5845   0003BE                     CWG1DBR         equ	958	;# 
  5846   0003BF                     CWG1DBF         equ	959	;# 
  5847   0003C0                     CWG1CON0        equ	960	;# 
  5848   0003C1                     CWG1CON1        equ	961	;# 
  5849   0003C2                     CWG1AS0         equ	962	;# 
  5850   0003C3                     CWG1AS1         equ	963	;# 
  5851   0003C4                     CWG1STR         equ	964	;# 
  5852   0003C5                     CWG2CLK         equ	965	;# 
  5853   0003C5                     CWG2CLKCON      equ	965	;# 
  5854   0003C6                     CWG2ISM         equ	966	;# 
  5855   0003C6                     CWG2DAT         equ	966	;# 
  5856   0003C7                     CWG2DBR         equ	967	;# 
  5857   0003C8                     CWG2DBF         equ	968	;# 
  5858   0003C9                     CWG2CON0        equ	969	;# 
  5859   0003CA                     CWG2CON1        equ	970	;# 
  5860   0003CB                     CWG2AS0         equ	971	;# 
  5861   0003CC                     CWG2AS1         equ	972	;# 
  5862   0003CD                     CWG2STR         equ	973	;# 
  5863   0003CE                     CWG3CLK         equ	974	;# 
  5864   0003CE                     CWG3CLKCON      equ	974	;# 
  5865   0003CF                     CWG3ISM         equ	975	;# 
  5866   0003CF                     CWG3DAT         equ	975	;# 
  5867   0003D0                     CWG3DBR         equ	976	;# 
  5868   0003D1                     CWG3DBF         equ	977	;# 
  5869   0003D2                     CWG3CON0        equ	978	;# 
  5870   0003D3                     CWG3CON1        equ	979	;# 
  5871   0003D4                     CWG3AS0         equ	980	;# 
  5872   0003D5                     CWG3AS1         equ	981	;# 
  5873   0003D6                     CWG3STR         equ	982	;# 
  5874   0003D7                     FVRCON          equ	983	;# 
  5875   0003D8                     ADCPCON         equ	984	;# 
  5876   0003D8                     ADCP            equ	984	;# 
  5877   0003D9                     ADLTH           equ	985	;# 
  5878   0003D9                     ADLTHL          equ	985	;# 
  5879   0003DA                     ADLTHH          equ	986	;# 
  5880   0003DB                     ADUTH           equ	987	;# 
  5881   0003DB                     ADUTHL          equ	987	;# 
  5882   0003DC                     ADUTHH          equ	988	;# 
  5883   0003DD                     ADERR           equ	989	;# 
  5884   0003DD                     ADERRL          equ	989	;# 
  5885   0003DE                     ADERRH          equ	990	;# 
  5886   0003DF                     ADSTPT          equ	991	;# 
  5887   0003DF                     ADSTPTL         equ	991	;# 
  5888   0003E0                     ADSTPTH         equ	992	;# 
  5889   0003E1                     ADFLTR          equ	993	;# 
  5890   0003E1                     ADFLTRL         equ	993	;# 
  5891   0003E2                     ADFLTRH         equ	994	;# 
  5892   0003E3                     ADACC           equ	995	;# 
  5893   0003E3                     ADACCL          equ	995	;# 
  5894   0003E4                     ADACCH          equ	996	;# 
  5895   0003E5                     ADACCU          equ	997	;# 
  5896   0003E6                     ADCNT           equ	998	;# 
  5897   0003E7                     ADRPT           equ	999	;# 
  5898   0003E8                     ADPREV          equ	1000	;# 
  5899   0003E8                     ADPREVL         equ	1000	;# 
  5900   0003E9                     ADPREVH         equ	1001	;# 
  5901   0003EA                     ADRES           equ	1002	;# 
  5902   0003EA                     ADRESL          equ	1002	;# 
  5903   0003EB                     ADRESH          equ	1003	;# 
  5904   0003EC                     ADPCH           equ	1004	;# 
  5905   0003EE                     ADACQ           equ	1006	;# 
  5906   0003EE                     ADACQL          equ	1006	;# 
  5907   0003EF                     ADACQH          equ	1007	;# 
  5908   0003F0                     ADCAP           equ	1008	;# 
  5909   0003F1                     ADPRE           equ	1009	;# 
  5910   0003F1                     ADPREL          equ	1009	;# 
  5911   0003F2                     ADPREH          equ	1010	;# 
  5912   0003F3                     ADCON0          equ	1011	;# 
  5913   0003F4                     ADCON1          equ	1012	;# 
  5914   0003F5                     ADCON2          equ	1013	;# 
  5915   0003F6                     ADCON3          equ	1014	;# 
  5916   0003F7                     ADSTAT          equ	1015	;# 
  5917   0003F8                     ADREF           equ	1016	;# 
  5918   0003F9                     ADACT           equ	1017	;# 
  5919   0003FA                     ADCLK           equ	1018	;# 
  5920   000400                     ANSELA          equ	1024	;# 
  5921   000401                     WPUA            equ	1025	;# 
  5922   000402                     ODCONA          equ	1026	;# 
  5923   000403                     SLRCONA         equ	1027	;# 
  5924   000404                     INLVLA          equ	1028	;# 
  5925   000405                     IOCAP           equ	1029	;# 
  5926   000406                     IOCAN           equ	1030	;# 
  5927   000407                     IOCAF           equ	1031	;# 
  5928   000408                     ANSELB          equ	1032	;# 
  5929   000409                     WPUB            equ	1033	;# 
  5930   00040A                     ODCONB          equ	1034	;# 
  5931   00040B                     SLRCONB         equ	1035	;# 
  5932   00040C                     INLVLB          equ	1036	;# 
  5933   00040D                     IOCBP           equ	1037	;# 
  5934   00040E                     IOCBN           equ	1038	;# 
  5935   00040F                     IOCBF           equ	1039	;# 
  5936   000410                     ANSELC          equ	1040	;# 
  5937   000411                     WPUC            equ	1041	;# 
  5938   000412                     ODCONC          equ	1042	;# 
  5939   000413                     SLRCONC         equ	1043	;# 
  5940   000414                     INLVLC          equ	1044	;# 
  5941   000415                     IOCCP           equ	1045	;# 
  5942   000416                     IOCCN           equ	1046	;# 
  5943   000417                     IOCCF           equ	1047	;# 
  5944   000418                     ANSELD          equ	1048	;# 
  5945   000419                     WPUD            equ	1049	;# 
  5946   00041A                     ODCOND          equ	1050	;# 
  5947   00041B                     SLRCOND         equ	1051	;# 
  5948   00041C                     INLVLD          equ	1052	;# 
  5949   000420                     ANSELE          equ	1056	;# 
  5950   000421                     WPUE            equ	1057	;# 
  5951   000422                     ODCONE          equ	1058	;# 
  5952   000423                     SLRCONE         equ	1059	;# 
  5953   000424                     INLVLE          equ	1060	;# 
  5954   000425                     IOCEP           equ	1061	;# 
  5955   000426                     IOCEN           equ	1062	;# 
  5956   000427                     IOCEF           equ	1063	;# 
  5957   000428                     ANSELF          equ	1064	;# 
  5958   000429                     WPUF            equ	1065	;# 
  5959   00042A                     ODCONF          equ	1066	;# 
  5960   00042B                     SLRCONF         equ	1067	;# 
  5961   00042C                     INLVLF          equ	1068	;# 
  5962   000440                     NCO1ACC         equ	1088	;# 
  5963   000440                     NCO1ACCL        equ	1088	;# 
  5964   000441                     NCO1ACCH        equ	1089	;# 
  5965   000442                     NCO1ACCU        equ	1090	;# 
  5966   000443                     NCO1INC         equ	1091	;# 
  5967   000443                     NCO1INCL        equ	1091	;# 
  5968   000444                     NCO1INCH        equ	1092	;# 
  5969   000445                     NCO1INCU        equ	1093	;# 
  5970   000446                     NCO1CON         equ	1094	;# 
  5971   000447                     NCO1CLK         equ	1095	;# 
  5972   000448                     NCO2ACC         equ	1096	;# 
  5973   000448                     NCO2ACCL        equ	1096	;# 
  5974   000449                     NCO2ACCH        equ	1097	;# 
  5975   00044A                     NCO2ACCU        equ	1098	;# 
  5976   00044B                     NCO2INC         equ	1099	;# 
  5977   00044B                     NCO2INCL        equ	1099	;# 
  5978   00044C                     NCO2INCH        equ	1100	;# 
  5979   00044D                     NCO2INCU        equ	1101	;# 
  5980   00044E                     NCO2CON         equ	1102	;# 
  5981   00044F                     NCO2CLK         equ	1103	;# 
  5982   000450                     NCO3ACC         equ	1104	;# 
  5983   000450                     NCO3ACCL        equ	1104	;# 
  5984   000451                     NCO3ACCH        equ	1105	;# 
  5985   000452                     NCO3ACCU        equ	1106	;# 
  5986   000453                     NCO3INC         equ	1107	;# 
  5987   000453                     NCO3INCL        equ	1107	;# 
  5988   000454                     NCO3INCH        equ	1108	;# 
  5989   000455                     NCO3INCU        equ	1109	;# 
  5990   000456                     NCO3CON         equ	1110	;# 
  5991   000457                     NCO3CLK         equ	1111	;# 
  5992   000459                     IVTLOCK         equ	1113	;# 
  5993   00045A                     IVTAD           equ	1114	;# 
  5994   00045A                     IVTADL          equ	1114	;# 
  5995   00045B                     IVTADH          equ	1115	;# 
  5996   00045C                     IVTADU          equ	1116	;# 
  5997   00045D                     IVTBASE         equ	1117	;# 
  5998   00045D                     IVTBASEL        equ	1117	;# 
  5999   00045E                     IVTBASEH        equ	1118	;# 
  6000   00045F                     IVTBASEU        equ	1119	;# 
  6001   000460                     PWM1ERS         equ	1120	;# 
  6002   000461                     PWM1CLK         equ	1121	;# 
  6003   000462                     PWM1LDS         equ	1122	;# 
  6004   000463                     PWM1PR          equ	1123	;# 
  6005   000463                     PWM1PRL         equ	1123	;# 
  6006   000464                     PWM1PRH         equ	1124	;# 
  6007   000465                     PWM1CPRE        equ	1125	;# 
  6008   000466                     PWM1PIPOS       equ	1126	;# 
  6009   000467                     PWM1GIR         equ	1127	;# 
  6010   000468                     PWM1GIE         equ	1128	;# 
  6011   000469                     PWM1CON         equ	1129	;# 
  6012   00046A                     PWM1S1CFG       equ	1130	;# 
  6013   00046B                     PWM1S1P1        equ	1131	;# 
  6014   00046B                     PWM1S1P1L       equ	1131	;# 
  6015   00046C                     PWM1S1P1H       equ	1132	;# 
  6016   00046D                     PWM1S1P2        equ	1133	;# 
  6017   00046D                     PWM1S1P2L       equ	1133	;# 
  6018   00046E                     PWM1S1P2H       equ	1134	;# 
  6019   00046F                     PWM2ERS         equ	1135	;# 
  6020   000470                     PWM2CLK         equ	1136	;# 
  6021   000471                     PWM2LDS         equ	1137	;# 
  6022   000472                     PWM2PR          equ	1138	;# 
  6023   000472                     PWM2PRL         equ	1138	;# 
  6024   000473                     PWM2PRH         equ	1139	;# 
  6025   000474                     PWM2CPRE        equ	1140	;# 
  6026   000475                     PWM2PIPOS       equ	1141	;# 
  6027   000476                     PWM2GIR         equ	1142	;# 
  6028   000477                     PWM2GIE         equ	1143	;# 
  6029   000478                     PWM2CON         equ	1144	;# 
  6030   000479                     PWM2S1CFG       equ	1145	;# 
  6031   00047A                     PWM2S1P1        equ	1146	;# 
  6032   00047A                     PWM2S1P1L       equ	1146	;# 
  6033   00047B                     PWM2S1P1H       equ	1147	;# 
  6034   00047C                     PWM2S1P2        equ	1148	;# 
  6035   00047C                     PWM2S1P2L       equ	1148	;# 
  6036   00047D                     PWM2S1P2H       equ	1149	;# 
  6037   00047E                     PWM3ERS         equ	1150	;# 
  6038   00047F                     PWM3CLK         equ	1151	;# 
  6039   000480                     PWM3LDS         equ	1152	;# 
  6040   000481                     PWM3PR          equ	1153	;# 
  6041   000481                     PWM3PRL         equ	1153	;# 
  6042   000482                     PWM3PRH         equ	1154	;# 
  6043   000483                     PWM3CPRE        equ	1155	;# 
  6044   000484                     PWM3PIPOS       equ	1156	;# 
  6045   000485                     PWM3GIR         equ	1157	;# 
  6046   000486                     PWM3GIE         equ	1158	;# 
  6047   000487                     PWM3CON         equ	1159	;# 
  6048   000488                     PWM3S1CFG       equ	1160	;# 
  6049   000489                     PWM3S1P1        equ	1161	;# 
  6050   000489                     PWM3S1P1L       equ	1161	;# 
  6051   00048A                     PWM3S1P1H       equ	1162	;# 
  6052   00048B                     PWM3S1P2        equ	1163	;# 
  6053   00048B                     PWM3S1P2L       equ	1163	;# 
  6054   00048C                     PWM3S1P2H       equ	1164	;# 
  6055   00049C                     PWMLOAD         equ	1180	;# 
  6056   00049D                     PWMEN           equ	1181	;# 
  6057   00049E                     PIE0            equ	1182	;# 
  6058   00049F                     PIE1            equ	1183	;# 
  6059   0004A0                     PIE2            equ	1184	;# 
  6060   0004A1                     PIE3            equ	1185	;# 
  6061   0004A2                     PIE4            equ	1186	;# 
  6062   0004A3                     PIE5            equ	1187	;# 
  6063   0004A4                     PIE6            equ	1188	;# 
  6064   0004A5                     PIE7            equ	1189	;# 
  6065   0004A6                     PIE8            equ	1190	;# 
  6066   0004A7                     PIE9            equ	1191	;# 
  6067   0004A8                     PIE10           equ	1192	;# 
  6068   0004A9                     PIE11           equ	1193	;# 
  6069   0004AA                     PIE12           equ	1194	;# 
  6070   0004AB                     PIE13           equ	1195	;# 
  6071   0004AC                     PIE14           equ	1196	;# 
  6072   0004AD                     PIE15           equ	1197	;# 
  6073   0004AE                     PIR0            equ	1198	;# 
  6074   0004AF                     PIR1            equ	1199	;# 
  6075   0004B0                     PIR2            equ	1200	;# 
  6076   0004B1                     PIR3            equ	1201	;# 
  6077   0004B2                     PIR4            equ	1202	;# 
  6078   0004B3                     PIR5            equ	1203	;# 
  6079   0004B4                     PIR6            equ	1204	;# 
  6080   0004B5                     PIR7            equ	1205	;# 
  6081   0004B6                     PIR8            equ	1206	;# 
  6082   0004B7                     PIR9            equ	1207	;# 
  6083   0004B8                     PIR10           equ	1208	;# 
  6084   0004B9                     PIR11           equ	1209	;# 
  6085   0004BA                     PIR12           equ	1210	;# 
  6086   0004BB                     PIR13           equ	1211	;# 
  6087   0004BC                     PIR14           equ	1212	;# 
  6088   0004BD                     PIR15           equ	1213	;# 
  6089   0004BE                     LATA            equ	1214	;# 
  6090   0004BF                     LATB            equ	1215	;# 
  6091   0004C0                     LATC            equ	1216	;# 
  6092   0004C1                     LATD            equ	1217	;# 
  6093   0004C2                     LATE            equ	1218	;# 
  6094   0004C3                     LATF            equ	1219	;# 
  6095   0004C6                     TRISA           equ	1222	;# 
  6096   0004C7                     TRISB           equ	1223	;# 
  6097   0004C8                     TRISC           equ	1224	;# 
  6098   0004C9                     TRISD           equ	1225	;# 
  6099   0004CA                     TRISE           equ	1226	;# 
  6100   0004CB                     TRISF           equ	1227	;# 
  6101   0004CE                     PORTA           equ	1230	;# 
  6102   0004CF                     PORTB           equ	1231	;# 
  6103   0004D0                     PORTC           equ	1232	;# 
  6104   0004D1                     PORTD           equ	1233	;# 
  6105   0004D2                     PORTE           equ	1234	;# 
  6106   0004D3                     PORTF           equ	1235	;# 
  6107   0004D6                     INTCON0         equ	1238	;# 
  6108   0004D7                     INTCON1         equ	1239	;# 
  6109   0004D8                     STATUS          equ	1240	;# 
  6110   0004D9                     FSR2            equ	1241	;# 
  6111   0004D9                     FSR2L           equ	1241	;# 
  6112   0004DA                     FSR2H           equ	1242	;# 
  6113   0004DB                     PLUSW2          equ	1243	;# 
  6114   0004DC                     PREINC2         equ	1244	;# 
  6115   0004DD                     POSTDEC2        equ	1245	;# 
  6116   0004DE                     POSTINC2        equ	1246	;# 
  6117   0004DF                     INDF2           equ	1247	;# 
  6118   0004E0                     BSR             equ	1248	;# 
  6119   0004E1                     FSR1            equ	1249	;# 
  6120   0004E1                     FSR1L           equ	1249	;# 
  6121   0004E2                     FSR1H           equ	1250	;# 
  6122   0004E3                     PLUSW1          equ	1251	;# 
  6123   0004E4                     PREINC1         equ	1252	;# 
  6124   0004E5                     POSTDEC1        equ	1253	;# 
  6125   0004E6                     POSTINC1        equ	1254	;# 
  6126   0004E7                     INDF1           equ	1255	;# 
  6127   0004E8                     WREG            equ	1256	;# 
  6128   0004E9                     FSR0            equ	1257	;# 
  6129   0004E9                     FSR0L           equ	1257	;# 
  6130   0004EA                     FSR0H           equ	1258	;# 
  6131   0004EB                     PLUSW0          equ	1259	;# 
  6132   0004EC                     PREINC0         equ	1260	;# 
  6133   0004ED                     POSTDEC0        equ	1261	;# 
  6134   0004EE                     POSTINC0        equ	1262	;# 
  6135   0004EF                     INDF0           equ	1263	;# 
  6136   0004F0                     PCON0           equ	1264	;# 
  6137   0004F1                     PCON1           equ	1265	;# 
  6138   0004F2                     CPUDOZE         equ	1266	;# 
  6139   0004F3                     PROD            equ	1267	;# 
  6140   0004F3                     PRODL           equ	1267	;# 
  6141   0004F4                     PRODH           equ	1268	;# 
  6142   0004F5                     TABLAT          equ	1269	;# 
  6143   0004F6                     TBLPTR          equ	1270	;# 
  6144   0004F6                     TBLPTRL         equ	1270	;# 
  6145   0004F7                     TBLPTRH         equ	1271	;# 
  6146   0004F8                     TBLPTRU         equ	1272	;# 
  6147   0004F9                     PCLAT           equ	1273	;# 
  6148   0004F9                     PCL             equ	1273	;# 
  6149   0004FA                     PCLATH          equ	1274	;# 
  6150   0004FB                     PCLATU          equ	1275	;# 
  6151   0004FC                     STKPTR          equ	1276	;# 
  6152   0004FD                     TOS             equ	1277	;# 
  6153   0004FD                     TOSL            equ	1277	;# 
  6154   0004FE                     TOSH            equ	1278	;# 
  6155   0004FF                     TOSU            equ	1279	;# 
  6156   000039                     CLKRCON         equ	57	;# 
  6157   00003A                     CLKRCLK         equ	58	;# 
  6158   000040                     NVMCON0         equ	64	;# 
  6159   000041                     NVMCON1         equ	65	;# 
  6160   000042                     NVMLOCK         equ	66	;# 
  6161   000043                     NVMADR          equ	67	;# 
  6162   000043                     NVMADRL         equ	67	;# 
  6163   000044                     NVMADRH         equ	68	;# 
  6164   000045                     NVMADRU         equ	69	;# 
  6165   000046                     NVMDAT          equ	70	;# 
  6166   000046                     NVMDATL         equ	70	;# 
  6167   000047                     NVMDATH         equ	71	;# 
  6168   000048                     VREGCON         equ	72	;# 
  6169   000049                     BORCON          equ	73	;# 
  6170   00004A                     HLVDCON0        equ	74	;# 
  6171   00004B                     HLVDCON1        equ	75	;# 
  6172   00004C                     ZCDCON          equ	76	;# 
  6173   000060                     PMD0            equ	96	;# 
  6174   000061                     PMD1            equ	97	;# 
  6175   000063                     PMD3            equ	99	;# 
  6176   000064                     PMD4            equ	100	;# 
  6177   000065                     PMD5            equ	101	;# 
  6178   000066                     PMD6            equ	102	;# 
  6179   000067                     PMD7            equ	103	;# 
  6180   000068                     PMD8            equ	104	;# 
  6181   00006A                     MD1CON0         equ	106	;# 
  6182   00006B                     MD1CON1         equ	107	;# 
  6183   00006C                     MD1SRC          equ	108	;# 
  6184   00006D                     MD1CARL         equ	109	;# 
  6185   00006E                     MD1CARH         equ	110	;# 
  6186   00006F                     CMOUT           equ	111	;# 
  6187   000070                     CM1CON0         equ	112	;# 
  6188   000071                     CM1CON1         equ	113	;# 
  6189   000072                     CM1NCH          equ	114	;# 
  6190   000073                     CM1PCH          equ	115	;# 
  6191   000074                     CM2CON0         equ	116	;# 
  6192   000075                     CM2CON1         equ	117	;# 
  6193   000076                     CM2NCH          equ	118	;# 
  6194   000077                     CM2PCH          equ	119	;# 
  6195   000078                     WDTCON0         equ	120	;# 
  6196   000079                     WDTCON1         equ	121	;# 
  6197   00007A                     WDTPS           equ	122	;# 
  6198   00007A                     WDTPSL          equ	122	;# 
  6199   00007B                     WDTPSH          equ	123	;# 
  6200   00007C                     WDTTMR          equ	124	;# 
  6201   00007D                     DAC1DAT         equ	125	;# 
  6202   00007D                     DAC1DATL        equ	125	;# 
  6203   00007F                     DAC1CON         equ	127	;# 
  6204   000080                     SPI1RXB         equ	128	;# 
  6205   000081                     SPI1TXB         equ	129	;# 
  6206   000082                     SPI1TCNT        equ	130	;# 
  6207   000082                     SPI1TCNTL       equ	130	;# 
  6208   000083                     SPI1TCNTH       equ	131	;# 
  6209   000084                     SPI1CON0        equ	132	;# 
  6210   000085                     SPI1CON1        equ	133	;# 
  6211   000086                     SPI1CON2        equ	134	;# 
  6212   000087                     SPI1STATUS      equ	135	;# 
  6213   000088                     SPI1TWIDTH      equ	136	;# 
  6214   000089                     SPI1BAUD        equ	137	;# 
  6215   00008A                     SPI1INTF        equ	138	;# 
  6216   00008B                     SPI1INTE        equ	139	;# 
  6217   00008C                     SPI1CLK         equ	140	;# 
  6218   00008D                     SPI2RXB         equ	141	;# 
  6219   00008E                     SPI2TXB         equ	142	;# 
  6220   00008F                     SPI2TCNT        equ	143	;# 
  6221   00008F                     SPI2TCNTL       equ	143	;# 
  6222   000090                     SPI2TCNTH       equ	144	;# 
  6223   000091                     SPI2CON0        equ	145	;# 
  6224   000092                     SPI2CON1        equ	146	;# 
  6225   000093                     SPI2CON2        equ	147	;# 
  6226   000094                     SPI2STATUS      equ	148	;# 
  6227   000095                     SPI2TWIDTH      equ	149	;# 
  6228   000096                     SPI2BAUD        equ	150	;# 
  6229   000097                     SPI2INTF        equ	151	;# 
  6230   000098                     SPI2INTE        equ	152	;# 
  6231   000099                     SPI2CLK         equ	153	;# 
  6232   0000AC                     ACTCON          equ	172	;# 
  6233   0000AD                     OSCCON1         equ	173	;# 
  6234   0000AE                     OSCCON2         equ	174	;# 
  6235   0000AF                     OSCCON3         equ	175	;# 
  6236   0000B0                     OSCTUNE         equ	176	;# 
  6237   0000B1                     OSCFRQ          equ	177	;# 
  6238   0000B1                     OSCFREQ         equ	177	;# 
  6239   0000B2                     OSCSTAT         equ	178	;# 
  6240   0000B2                     OSCSTAT1        equ	178	;# 
  6241   0000B3                     OSCEN           equ	179	;# 
  6242   0000B4                     PRLOCK          equ	180	;# 
  6243   0000B5                     SCANPR          equ	181	;# 
  6244   0000B6                     DMA1PR          equ	182	;# 
  6245   0000B7                     DMA2PR          equ	183	;# 
  6246   0000B8                     DMA3PR          equ	184	;# 
  6247   0000B9                     DMA4PR          equ	185	;# 
  6248   0000BA                     DMA5PR          equ	186	;# 
  6249   0000BB                     DMA6PR          equ	187	;# 
  6250   0000BE                     MAINPR          equ	190	;# 
  6251   0000BF                     ISRPR           equ	191	;# 
  6252   0000D4                     CLCDATA         equ	212	;# 
  6253   0000D5                     CLCSELECT       equ	213	;# 
  6254   0000D6                     CLCnCON         equ	214	;# 
  6255   0000D7                     CLCnPOL         equ	215	;# 
  6256   0000D8                     CLCnSEL0        equ	216	;# 
  6257   0000D9                     CLCnSEL1        equ	217	;# 
  6258   0000DA                     CLCnSEL2        equ	218	;# 
  6259   0000DB                     CLCnSEL3        equ	219	;# 
  6260   0000DC                     CLCnGLS0        equ	220	;# 
  6261   0000DD                     CLCnGLS1        equ	221	;# 
  6262   0000DE                     CLCnGLS2        equ	222	;# 
  6263   0000DF                     CLCnGLS3        equ	223	;# 
  6264   0000E8                     DMASELECT       equ	232	;# 
  6265   0000E9                     DMAnBUF         equ	233	;# 
  6266   0000EA                     DMAnDCNT        equ	234	;# 
  6267   0000EA                     DMAnDCNTL       equ	234	;# 
  6268   0000EB                     DMAnDCNTH       equ	235	;# 
  6269   0000EC                     DMAnDPTR        equ	236	;# 
  6270   0000EC                     DMAnDPTRL       equ	236	;# 
  6271   0000ED                     DMAnDPTRH       equ	237	;# 
  6272   0000EE                     DMAnDSZ         equ	238	;# 
  6273   0000EE                     DMAnDSZL        equ	238	;# 
  6274   0000EF                     DMAnDSZH        equ	239	;# 
  6275   0000F0                     DMAnDSA         equ	240	;# 
  6276   0000F0                     DMAnDSAL        equ	240	;# 
  6277   0000F1                     DMAnDSAH        equ	241	;# 
  6278   0000F2                     DMAnSCNT        equ	242	;# 
  6279   0000F2                     DMAnSCNTL       equ	242	;# 
  6280   0000F3                     DMAnSCNTH       equ	243	;# 
  6281   0000F4                     DMAnSPTR        equ	244	;# 
  6282   0000F4                     DMAnSPTRL       equ	244	;# 
  6283   0000F5                     DMAnSPTRH       equ	245	;# 
  6284   0000F6                     DMAnSPTRU       equ	246	;# 
  6285   0000F7                     DMAnSSZ         equ	247	;# 
  6286   0000F7                     DMAnSSZL        equ	247	;# 
  6287   0000F8                     DMAnSSZH        equ	248	;# 
  6288   0000F9                     DMAnSSA         equ	249	;# 
  6289   0000F9                     DMAnSSAL        equ	249	;# 
  6290   0000FA                     DMAnSSAH        equ	250	;# 
  6291   0000FB                     DMAnSSAU        equ	251	;# 
  6292   0000FC                     DMAnCON0        equ	252	;# 
  6293   0000FD                     DMAnCON1        equ	253	;# 
  6294   0000FE                     DMAnAIRQ        equ	254	;# 
  6295   0000FF                     DMAnSIRQ        equ	255	;# 
  6296   000200                     PPSLOCK         equ	512	;# 
  6297   000201                     RA0PPS          equ	513	;# 
  6298   000202                     RA1PPS          equ	514	;# 
  6299   000203                     RA2PPS          equ	515	;# 
  6300   000204                     RA3PPS          equ	516	;# 
  6301   000205                     RA4PPS          equ	517	;# 
  6302   000206                     RA5PPS          equ	518	;# 
  6303   000207                     RA6PPS          equ	519	;# 
  6304   000208                     RA7PPS          equ	520	;# 
  6305   000209                     RB0PPS          equ	521	;# 
  6306   00020A                     RB1PPS          equ	522	;# 
  6307   00020B                     RB2PPS          equ	523	;# 
  6308   00020C                     RB3PPS          equ	524	;# 
  6309   00020D                     RB4PPS          equ	525	;# 
  6310   00020E                     RB5PPS          equ	526	;# 
  6311   00020F                     RB6PPS          equ	527	;# 
  6312   000210                     RB7PPS          equ	528	;# 
  6313   000211                     RC0PPS          equ	529	;# 
  6314   000212                     RC1PPS          equ	530	;# 
  6315   000213                     RC2PPS          equ	531	;# 
  6316   000214                     RC3PPS          equ	532	;# 
  6317   000215                     RC4PPS          equ	533	;# 
  6318   000216                     RC5PPS          equ	534	;# 
  6319   000217                     RC6PPS          equ	535	;# 
  6320   000218                     RC7PPS          equ	536	;# 
  6321   000219                     RD0PPS          equ	537	;# 
  6322   00021A                     RD1PPS          equ	538	;# 
  6323   00021B                     RD2PPS          equ	539	;# 
  6324   00021C                     RD3PPS          equ	540	;# 
  6325   00021D                     RD4PPS          equ	541	;# 
  6326   00021E                     RD5PPS          equ	542	;# 
  6327   00021F                     RD6PPS          equ	543	;# 
  6328   000220                     RD7PPS          equ	544	;# 
  6329   000221                     RE0PPS          equ	545	;# 
  6330   000222                     RE1PPS          equ	546	;# 
  6331   000223                     RE2PPS          equ	547	;# 
  6332   000229                     RF0PPS          equ	553	;# 
  6333   00022A                     RF1PPS          equ	554	;# 
  6334   00022B                     RF2PPS          equ	555	;# 
  6335   00022C                     RF3PPS          equ	556	;# 
  6336   00022D                     RF4PPS          equ	557	;# 
  6337   00022E                     RF5PPS          equ	558	;# 
  6338   00022F                     RF6PPS          equ	559	;# 
  6339   000230                     RF7PPS          equ	560	;# 
  6340   00023E                     INT0PPS         equ	574	;# 
  6341   00023F                     INT1PPS         equ	575	;# 
  6342   000240                     INT2PPS         equ	576	;# 
  6343   000241                     T0CKIPPS        equ	577	;# 
  6344   000242                     T1CKIPPS        equ	578	;# 
  6345   000243                     T1GPPS          equ	579	;# 
  6346   000244                     T3CKIPPS        equ	580	;# 
  6347   000245                     T3GPPS          equ	581	;# 
  6348   000246                     T5CKIPPS        equ	582	;# 
  6349   000247                     T5GPPS          equ	583	;# 
  6350   000248                     T2INPPS         equ	584	;# 
  6351   000249                     T4INPPS         equ	585	;# 
  6352   00024A                     T6INPPS         equ	586	;# 
  6353   00024F                     CCP1PPS         equ	591	;# 
  6354   000250                     CCP2PPS         equ	592	;# 
  6355   000251                     CCP3PPS         equ	593	;# 
  6356   000253                     PWM1ERSPPS      equ	595	;# 
  6357   000254                     PWM2ERSPPS      equ	596	;# 
  6358   000255                     PWM3ERSPPS      equ	597	;# 
  6359   000257                     PWMIN0PPS       equ	599	;# 
  6360   000258                     PWMIN1PPS       equ	600	;# 
  6361   000259                     SMT1WINPPS      equ	601	;# 
  6362   00025A                     SMT1SIGPPS      equ	602	;# 
  6363   00025B                     CWG1PPS         equ	603	;# 
  6364   00025B                     CWG1INPPS       equ	603	;# 
  6365   00025C                     CWG2PPS         equ	604	;# 
  6366   00025C                     CWG2INPPS       equ	604	;# 
  6367   00025D                     CWG3PPS         equ	605	;# 
  6368   00025D                     CWG3INPPS       equ	605	;# 
  6369   00025E                     MD1CARLPPS      equ	606	;# 
  6370   00025E                     MDCARLPPS       equ	606	;# 
  6371   00025F                     MD1CARHPPS      equ	607	;# 
  6372   00025F                     MDCARHPPS       equ	607	;# 
  6373   000260                     MD1SRCPPS       equ	608	;# 
  6374   000260                     MDSRCPPS        equ	608	;# 
  6375   000261                     CLCIN0PPS       equ	609	;# 
  6376   000262                     CLCIN1PPS       equ	610	;# 
  6377   000263                     CLCIN2PPS       equ	611	;# 
  6378   000264                     CLCIN3PPS       equ	612	;# 
  6379   000265                     CLCIN4PPS       equ	613	;# 
  6380   000266                     CLCIN5PPS       equ	614	;# 
  6381   000267                     CLCIN6PPS       equ	615	;# 
  6382   000268                     CLCIN7PPS       equ	616	;# 
  6383   000269                     ADACTPPS        equ	617	;# 
  6384   00026A                     SPI1SCKPPS      equ	618	;# 
  6385   00026B                     SPI1SDIPPS      equ	619	;# 
  6386   00026C                     SPI1SSPPS       equ	620	;# 
  6387   00026D                     SPI2SCKPPS      equ	621	;# 
  6388   00026E                     SPI2SDIPPS      equ	622	;# 
  6389   00026F                     SPI2SSPPS       equ	623	;# 
  6390   000270                     I2C1SDAPPS      equ	624	;# 
  6391   000271                     I2C1SCLPPS      equ	625	;# 
  6392   000272                     U1RXPPS         equ	626	;# 
  6393   000273                     U1CTSPPS        equ	627	;# 
  6394   000274                     U2RXPPS         equ	628	;# 
  6395   000275                     U2CTSPPS        equ	629	;# 
  6396   000276                     U3RXPPS         equ	630	;# 
  6397   000277                     U3CTSPPS        equ	631	;# 
  6398   000278                     U4RXPPS         equ	632	;# 
  6399   000279                     U4CTSPPS        equ	633	;# 
  6400   00027A                     U5RXPPS         equ	634	;# 
  6401   00027B                     U5CTSPPS        equ	635	;# 
  6402   000286                     RC4I2C          equ	646	;# 
  6403   000287                     RC3I2C          equ	647	;# 
  6404   000288                     RB2I2C          equ	648	;# 
  6405   000289                     RB1I2C          equ	649	;# 
  6406   00028B                     I2C1RXB         equ	651	;# 
  6407   00028C                     I2C1TXB         equ	652	;# 
  6408   00028D                     I2C1CNT         equ	653	;# 
  6409   00028E                     I2C1ADB0        equ	654	;# 
  6410   00028F                     I2C1ADB1        equ	655	;# 
  6411   000290                     I2C1ADR0        equ	656	;# 
  6412   000291                     I2C1ADR1        equ	657	;# 
  6413   000292                     I2C1ADR2        equ	658	;# 
  6414   000293                     I2C1ADR3        equ	659	;# 
  6415   000294                     I2C1CON0        equ	660	;# 
  6416   000295                     I2C1CON1        equ	661	;# 
  6417   000296                     I2C1CON2        equ	662	;# 
  6418   000297                     I2C1ERR         equ	663	;# 
  6419   000298                     I2C1STAT0       equ	664	;# 
  6420   000299                     I2C1STAT1       equ	665	;# 
  6421   00029A                     I2C1PIR         equ	666	;# 
  6422   00029B                     I2C1PIE         equ	667	;# 
  6423   00029C                     I2C1CLK         equ	668	;# 
  6424   00029D                     I2C1BTO         equ	669	;# 
  6425   0002A1                     U1RXB           equ	673	;# 
  6426   0002A1                     U1RXBL          equ	673	;# 
  6427   0002A2                     U1RXCHK         equ	674	;# 
  6428   0002A3                     U1TXB           equ	675	;# 
  6429   0002A3                     U1TXBL          equ	675	;# 
  6430   0002A4                     U1TXCHK         equ	676	;# 
  6431   0002A5                     U1P1            equ	677	;# 
  6432   0002A5                     U1P1L           equ	677	;# 
  6433   0002A6                     U1P1H           equ	678	;# 
  6434   0002A7                     U1P2            equ	679	;# 
  6435   0002A7                     U1P2L           equ	679	;# 
  6436   0002A8                     U1P2H           equ	680	;# 
  6437   0002A9                     U1P3            equ	681	;# 
  6438   0002A9                     U1P3L           equ	681	;# 
  6439   0002AA                     U1P3H           equ	682	;# 
  6440   0002AB                     U1CON0          equ	683	;# 
  6441   0002AC                     U1CON1          equ	684	;# 
  6442   0002AD                     U1CON2          equ	685	;# 
  6443   0002AE                     U1BRG           equ	686	;# 
  6444   0002AE                     U1BRGL          equ	686	;# 
  6445   0002AF                     U1BRGH          equ	687	;# 
  6446   0002B0                     U1FIFO          equ	688	;# 
  6447   0002B1                     U1UIR           equ	689	;# 
  6448   0002B2                     U1ERRIR         equ	690	;# 
  6449   0002B3                     U1ERRIE         equ	691	;# 
  6450   0002B4                     U2RXB           equ	692	;# 
  6451   0002B4                     U2RXBL          equ	692	;# 
  6452   0002B6                     U2TXB           equ	694	;# 
  6453   0002B6                     U2TXBL          equ	694	;# 
  6454   0002B8                     U2P1            equ	696	;# 
  6455   0002B8                     U2P1L           equ	696	;# 
  6456   0002BA                     U2P2            equ	698	;# 
  6457   0002BA                     U2P2L           equ	698	;# 
  6458   0002BC                     U2P3            equ	700	;# 
  6459   0002BC                     U2P3L           equ	700	;# 
  6460   0002BE                     U2CON0          equ	702	;# 
  6461   0002BF                     U2CON1          equ	703	;# 
  6462   0002C0                     U2CON2          equ	704	;# 
  6463   0002C1                     U2BRG           equ	705	;# 
  6464   0002C1                     U2BRGL          equ	705	;# 
  6465   0002C2                     U2BRGH          equ	706	;# 
  6466   0002C3                     U2FIFO          equ	707	;# 
  6467   0002C4                     U2UIR           equ	708	;# 
  6468   0002C5                     U2ERRIR         equ	709	;# 
  6469   0002C6                     U2ERRIE         equ	710	;# 
  6470   0002C7                     U3RXB           equ	711	;# 
  6471   0002C7                     U3RXBL          equ	711	;# 
  6472   0002C9                     U3TXB           equ	713	;# 
  6473   0002C9                     U3TXBL          equ	713	;# 
  6474   0002CB                     U3P1            equ	715	;# 
  6475   0002CB                     U3P1L           equ	715	;# 
  6476   0002CD                     U3P2            equ	717	;# 
  6477   0002CD                     U3P2L           equ	717	;# 
  6478   0002CF                     U3P3            equ	719	;# 
  6479   0002CF                     U3P3L           equ	719	;# 
  6480   0002D1                     U3CON0          equ	721	;# 
  6481   0002D2                     U3CON1          equ	722	;# 
  6482   0002D3                     U3CON2          equ	723	;# 
  6483   0002D4                     U3BRG           equ	724	;# 
  6484   0002D4                     U3BRGL          equ	724	;# 
  6485   0002D5                     U3BRGH          equ	725	;# 
  6486   0002D6                     U3FIFO          equ	726	;# 
  6487   0002D7                     U3UIR           equ	727	;# 
  6488   0002D8                     U3ERRIR         equ	728	;# 
  6489   0002D9                     U3ERRIE         equ	729	;# 
  6490   0002DA                     U4RXB           equ	730	;# 
  6491   0002DA                     U4RXBL          equ	730	;# 
  6492   0002DC                     U4TXB           equ	732	;# 
  6493   0002DC                     U4TXBL          equ	732	;# 
  6494   0002DE                     U4P1            equ	734	;# 
  6495   0002DE                     U4P1L           equ	734	;# 
  6496   0002E0                     U4P2            equ	736	;# 
  6497   0002E0                     U4P2L           equ	736	;# 
  6498   0002E2                     U4P3            equ	738	;# 
  6499   0002E2                     U4P3L           equ	738	;# 
  6500   0002E4                     U4CON0          equ	740	;# 
  6501   0002E5                     U4CON1          equ	741	;# 
  6502   0002E6                     U4CON2          equ	742	;# 
  6503   0002E7                     U4BRG           equ	743	;# 
  6504   0002E7                     U4BRGL          equ	743	;# 
  6505   0002E8                     U4BRGH          equ	744	;# 
  6506   0002E9                     U4FIFO          equ	745	;# 
  6507   0002EA                     U4UIR           equ	746	;# 
  6508   0002EB                     U4ERRIR         equ	747	;# 
  6509   0002EC                     U4ERRIE         equ	748	;# 
  6510   0002ED                     U5RXB           equ	749	;# 
  6511   0002ED                     U5RXBL          equ	749	;# 
  6512   0002EF                     U5TXB           equ	751	;# 
  6513   0002EF                     U5TXBL          equ	751	;# 
  6514   0002F1                     U5P1            equ	753	;# 
  6515   0002F1                     U5P1L           equ	753	;# 
  6516   0002F3                     U5P2            equ	755	;# 
  6517   0002F3                     U5P2L           equ	755	;# 
  6518   0002F5                     U5P3            equ	757	;# 
  6519   0002F5                     U5P3L           equ	757	;# 
  6520   0002F7                     U5CON0          equ	759	;# 
  6521   0002F8                     U5CON1          equ	760	;# 
  6522   0002F9                     U5CON2          equ	761	;# 
  6523   0002FA                     U5BRG           equ	762	;# 
  6524   0002FA                     U5BRGL          equ	762	;# 
  6525   0002FB                     U5BRGH          equ	763	;# 
  6526   0002FC                     U5FIFO          equ	764	;# 
  6527   0002FD                     U5UIR           equ	765	;# 
  6528   0002FE                     U5ERRIR         equ	766	;# 
  6529   0002FF                     U5ERRIE         equ	767	;# 
  6530   000300                     SMT1TMR         equ	768	;# 
  6531   000300                     SMT1TMRL        equ	768	;# 
  6532   000301                     SMT1TMRH        equ	769	;# 
  6533   000302                     SMT1TMRU        equ	770	;# 
  6534   000303                     SMT1CPR         equ	771	;# 
  6535   000303                     SMT1CPRL        equ	771	;# 
  6536   000304                     SMT1CPRH        equ	772	;# 
  6537   000305                     SMT1CPRU        equ	773	;# 
  6538   000306                     SMT1CPW         equ	774	;# 
  6539   000306                     SMT1CPWL        equ	774	;# 
  6540   000307                     SMT1CPWH        equ	775	;# 
  6541   000308                     SMT1CPWU        equ	776	;# 
  6542   000309                     SMT1PR          equ	777	;# 
  6543   000309                     SMT1PRL         equ	777	;# 
  6544   00030A                     SMT1PRH         equ	778	;# 
  6545   00030B                     SMT1PRU         equ	779	;# 
  6546   00030C                     SMT1CON0        equ	780	;# 
  6547   00030D                     SMT1CON1        equ	781	;# 
  6548   00030E                     SMT1STAT        equ	782	;# 
  6549   00030F                     SMT1CLK         equ	783	;# 
  6550   000310                     SMT1SIG         equ	784	;# 
  6551   000311                     SMT1WIN         equ	785	;# 
  6552   000318                     TMR0L           equ	792	;# 
  6553   000318                     TMR0            equ	792	;# 
  6554   000319                     TMR0H           equ	793	;# 
  6555   000319                     PR0             equ	793	;# 
  6556   00031A                     T0CON0          equ	794	;# 
  6557   00031B                     T0CON1          equ	795	;# 
  6558   00031C                     TMR1            equ	796	;# 
  6559   00031C                     TMR1L           equ	796	;# 
  6560   00031D                     TMR1H           equ	797	;# 
  6561   00031E                     T1CON           equ	798	;# 
  6562   00031E                     TMR1CON         equ	798	;# 
  6563   00031F                     T1GCON          equ	799	;# 
  6564   00031F                     TMR1GCON        equ	799	;# 
  6565   000320                     T1GATE          equ	800	;# 
  6566   000320                     TMR1GATE        equ	800	;# 
  6567   000321                     T1CLK           equ	801	;# 
  6568   000321                     TMR1CLK         equ	801	;# 
  6569   000321                     PR1             equ	801	;# 
  6570   000322                     T2TMR           equ	802	;# 
  6571   000322                     TMR2            equ	802	;# 
  6572   000323                     T2PR            equ	803	;# 
  6573   000323                     PR2             equ	803	;# 
  6574   000324                     T2CON           equ	804	;# 
  6575   000325                     T2HLT           equ	805	;# 
  6576   000326                     T2CLKCON        equ	806	;# 
  6577   000326                     T2CLK           equ	806	;# 
  6578   000327                     T2RST           equ	807	;# 
  6579   000328                     TMR3            equ	808	;# 
  6580   000328                     TMR3L           equ	808	;# 
  6581   000329                     TMR3H           equ	809	;# 
  6582   00032A                     T3CON           equ	810	;# 
  6583   00032A                     TMR3CON         equ	810	;# 
  6584   00032B                     T3GCON          equ	811	;# 
  6585   00032B                     TMR3GCON        equ	811	;# 
  6586   00032C                     T3GATE          equ	812	;# 
  6587   00032C                     TMR3GATE        equ	812	;# 
  6588   00032D                     T3CLK           equ	813	;# 
  6589   00032D                     TMR3CLK         equ	813	;# 
  6590   00032D                     PR3             equ	813	;# 
  6591   00032E                     T4TMR           equ	814	;# 
  6592   00032E                     TMR4            equ	814	;# 
  6593   00032F                     T4PR            equ	815	;# 
  6594   00032F                     PR4             equ	815	;# 
  6595   000330                     T4CON           equ	816	;# 
  6596   000331                     T4HLT           equ	817	;# 
  6597   000332                     T4CLKCON        equ	818	;# 
  6598   000332                     T4CLK           equ	818	;# 
  6599   000333                     T4RST           equ	819	;# 
  6600   000334                     TMR5            equ	820	;# 
  6601   000334                     TMR5L           equ	820	;# 
  6602   000335                     TMR5H           equ	821	;# 
  6603   000336                     T5CON           equ	822	;# 
  6604   000336                     TMR5CON         equ	822	;# 
  6605   000337                     T5GCON          equ	823	;# 
  6606   000337                     TMR5GCON        equ	823	;# 
  6607   000338                     T5GATE          equ	824	;# 
  6608   000338                     TMR5GATE        equ	824	;# 
  6609   000339                     T5CLK           equ	825	;# 
  6610   000339                     TMR5CLK         equ	825	;# 
  6611   000339                     PR5             equ	825	;# 
  6612   00033A                     T6TMR           equ	826	;# 
  6613   00033A                     TMR6            equ	826	;# 
  6614   00033B                     T6PR            equ	827	;# 
  6615   00033B                     PR6             equ	827	;# 
  6616   00033C                     T6CON           equ	828	;# 
  6617   00033D                     T6HLT           equ	829	;# 
  6618   00033E                     T6CLKCON        equ	830	;# 
  6619   00033E                     T6CLK           equ	830	;# 
  6620   00033F                     T6RST           equ	831	;# 
  6621   000340                     CCPR1           equ	832	;# 
  6622   000340                     CCPR1L          equ	832	;# 
  6623   000341                     CCPR1H          equ	833	;# 
  6624   000342                     CCP1CON         equ	834	;# 
  6625   000343                     CCP1CAP         equ	835	;# 
  6626   000344                     CCPR2           equ	836	;# 
  6627   000344                     CCPR2L          equ	836	;# 
  6628   000345                     CCPR2H          equ	837	;# 
  6629   000346                     CCP2CON         equ	838	;# 
  6630   000347                     CCP2CAP         equ	839	;# 
  6631   000348                     CCPR3           equ	840	;# 
  6632   000348                     CCPR3L          equ	840	;# 
  6633   000349                     CCPR3H          equ	841	;# 
  6634   00034A                     CCP3CON         equ	842	;# 
  6635   00034B                     CCP3CAP         equ	843	;# 
  6636   00034C                     CCPTMRS0        equ	844	;# 
  6637   00034F                     CRCDATA         equ	847	;# 
  6638   00034F                     CRCDATL         equ	847	;# 
  6639   000350                     CRCDATH         equ	848	;# 
  6640   000351                     CRCACC          equ	849	;# 
  6641   000351                     CRCACCL         equ	849	;# 
  6642   000352                     CRCACCH         equ	850	;# 
  6643   000353                     CRCSHFT         equ	851	;# 
  6644   000353                     CRCSHIFTL       equ	851	;# 
  6645   000354                     CRCSHIFTH       equ	852	;# 
  6646   000355                     CRCXOR          equ	853	;# 
  6647   000355                     CRCXORL         equ	853	;# 
  6648   000356                     CRCXORH         equ	854	;# 
  6649   000357                     CRCCON0         equ	855	;# 
  6650   000358                     CRCCON1         equ	856	;# 
  6651   00035A                     SCANLADR        equ	858	;# 
  6652   00035A                     SCANLADRL       equ	858	;# 
  6653   00035B                     SCANLADRH       equ	859	;# 
  6654   00035C                     SCANLADRU       equ	860	;# 
  6655   00035D                     SCANHADR        equ	861	;# 
  6656   00035D                     SCANHADRL       equ	861	;# 
  6657   00035E                     SCANHADRH       equ	862	;# 
  6658   00035F                     SCANHADRU       equ	863	;# 
  6659   000360                     SCANCON0        equ	864	;# 
  6660   000361                     SCANTRIG        equ	865	;# 
  6661   000362                     IPR0            equ	866	;# 
  6662   000363                     IPR1            equ	867	;# 
  6663   000364                     IPR2            equ	868	;# 
  6664   000365                     IPR3            equ	869	;# 
  6665   000366                     IPR4            equ	870	;# 
  6666   000367                     IPR5            equ	871	;# 
  6667   000368                     IPR6            equ	872	;# 
  6668   000369                     IPR7            equ	873	;# 
  6669   00036A                     IPR8            equ	874	;# 
  6670   00036B                     IPR9            equ	875	;# 
  6671   00036C                     IPR10           equ	876	;# 
  6672   00036D                     IPR11           equ	877	;# 
  6673   00036E                     IPR12           equ	878	;# 
  6674   00036F                     IPR13           equ	879	;# 
  6675   000370                     IPR14           equ	880	;# 
  6676   000371                     IPR15           equ	881	;# 
  6677   000373                     STATUS_CSHAD    equ	883	;# 
  6678   000374                     WREG_CSHAD      equ	884	;# 
  6679   000375                     BSR_CSHAD       equ	885	;# 
  6680   000376                     SHADCON         equ	886	;# 
  6681   000377                     STATUS_SHAD     equ	887	;# 
  6682   000378                     WREG_SHAD       equ	888	;# 
  6683   000379                     BSR_SHAD        equ	889	;# 
  6684   00037A                     PCLATH_SHAD     equ	890	;# 
  6685   00037B                     PCLATU_SHAD     equ	891	;# 
  6686   00037C                     FSR0SH          equ	892	;# 
  6687   00037C                     FSR0L_SHAD      equ	892	;# 
  6688   00037D                     FSR0H_SHAD      equ	893	;# 
  6689   00037E                     FSR1SH          equ	894	;# 
  6690   00037E                     FSR1L_SHAD      equ	894	;# 
  6691   00037F                     FSR1H_SHAD      equ	895	;# 
  6692   000380                     FSR2SH          equ	896	;# 
  6693   000380                     FSR2L_SHAD      equ	896	;# 
  6694   000381                     FSR2H_SHAD      equ	897	;# 
  6695   000382                     PRODSH          equ	898	;# 
  6696   000382                     PRODL_SHAD      equ	898	;# 
  6697   000383                     PRODH_SHAD      equ	899	;# 
  6698   0003BC                     CWG1CLK         equ	956	;# 
  6699   0003BC                     CWG1CLKCON      equ	956	;# 
  6700   0003BD                     CWG1ISM         equ	957	;# 
  6701   0003BD                     CWG1DAT         equ	957	;# 
  6702   0003BE                     CWG1DBR         equ	958	;# 
  6703   0003BF                     CWG1DBF         equ	959	;# 
  6704   0003C0                     CWG1CON0        equ	960	;# 
  6705   0003C1                     CWG1CON1        equ	961	;# 
  6706   0003C2                     CWG1AS0         equ	962	;# 
  6707   0003C3                     CWG1AS1         equ	963	;# 
  6708   0003C4                     CWG1STR         equ	964	;# 
  6709   0003C5                     CWG2CLK         equ	965	;# 
  6710   0003C5                     CWG2CLKCON      equ	965	;# 
  6711   0003C6                     CWG2ISM         equ	966	;# 
  6712   0003C6                     CWG2DAT         equ	966	;# 
  6713   0003C7                     CWG2DBR         equ	967	;# 
  6714   0003C8                     CWG2DBF         equ	968	;# 
  6715   0003C9                     CWG2CON0        equ	969	;# 
  6716   0003CA                     CWG2CON1        equ	970	;# 
  6717   0003CB                     CWG2AS0         equ	971	;# 
  6718   0003CC                     CWG2AS1         equ	972	;# 
  6719   0003CD                     CWG2STR         equ	973	;# 
  6720   0003CE                     CWG3CLK         equ	974	;# 
  6721   0003CE                     CWG3CLKCON      equ	974	;# 
  6722   0003CF                     CWG3ISM         equ	975	;# 
  6723   0003CF                     CWG3DAT         equ	975	;# 
  6724   0003D0                     CWG3DBR         equ	976	;# 
  6725   0003D1                     CWG3DBF         equ	977	;# 
  6726   0003D2                     CWG3CON0        equ	978	;# 
  6727   0003D3                     CWG3CON1        equ	979	;# 
  6728   0003D4                     CWG3AS0         equ	980	;# 
  6729   0003D5                     CWG3AS1         equ	981	;# 
  6730   0003D6                     CWG3STR         equ	982	;# 
  6731   0003D7                     FVRCON          equ	983	;# 
  6732   0003D8                     ADCPCON         equ	984	;# 
  6733   0003D8                     ADCP            equ	984	;# 
  6734   0003D9                     ADLTH           equ	985	;# 
  6735   0003D9                     ADLTHL          equ	985	;# 
  6736   0003DA                     ADLTHH          equ	986	;# 
  6737   0003DB                     ADUTH           equ	987	;# 
  6738   0003DB                     ADUTHL          equ	987	;# 
  6739   0003DC                     ADUTHH          equ	988	;# 
  6740   0003DD                     ADERR           equ	989	;# 
  6741   0003DD                     ADERRL          equ	989	;# 
  6742   0003DE                     ADERRH          equ	990	;# 
  6743   0003DF                     ADSTPT          equ	991	;# 
  6744   0003DF                     ADSTPTL         equ	991	;# 
  6745   0003E0                     ADSTPTH         equ	992	;# 
  6746   0003E1                     ADFLTR          equ	993	;# 
  6747   0003E1                     ADFLTRL         equ	993	;# 
  6748   0003E2                     ADFLTRH         equ	994	;# 
  6749   0003E3                     ADACC           equ	995	;# 
  6750   0003E3                     ADACCL          equ	995	;# 
  6751   0003E4                     ADACCH          equ	996	;# 
  6752   0003E5                     ADACCU          equ	997	;# 
  6753   0003E6                     ADCNT           equ	998	;# 
  6754   0003E7                     ADRPT           equ	999	;# 
  6755   0003E8                     ADPREV          equ	1000	;# 
  6756   0003E8                     ADPREVL         equ	1000	;# 
  6757   0003E9                     ADPREVH         equ	1001	;# 
  6758   0003EA                     ADRES           equ	1002	;# 
  6759   0003EA                     ADRESL          equ	1002	;# 
  6760   0003EB                     ADRESH          equ	1003	;# 
  6761   0003EC                     ADPCH           equ	1004	;# 
  6762   0003EE                     ADACQ           equ	1006	;# 
  6763   0003EE                     ADACQL          equ	1006	;# 
  6764   0003EF                     ADACQH          equ	1007	;# 
  6765   0003F0                     ADCAP           equ	1008	;# 
  6766   0003F1                     ADPRE           equ	1009	;# 
  6767   0003F1                     ADPREL          equ	1009	;# 
  6768   0003F2                     ADPREH          equ	1010	;# 
  6769   0003F3                     ADCON0          equ	1011	;# 
  6770   0003F4                     ADCON1          equ	1012	;# 
  6771   0003F5                     ADCON2          equ	1013	;# 
  6772   0003F6                     ADCON3          equ	1014	;# 
  6773   0003F7                     ADSTAT          equ	1015	;# 
  6774   0003F8                     ADREF           equ	1016	;# 
  6775   0003F9                     ADACT           equ	1017	;# 
  6776   0003FA                     ADCLK           equ	1018	;# 
  6777   000400                     ANSELA          equ	1024	;# 
  6778   000401                     WPUA            equ	1025	;# 
  6779   000402                     ODCONA          equ	1026	;# 
  6780   000403                     SLRCONA         equ	1027	;# 
  6781   000404                     INLVLA          equ	1028	;# 
  6782   000405                     IOCAP           equ	1029	;# 
  6783   000406                     IOCAN           equ	1030	;# 
  6784   000407                     IOCAF           equ	1031	;# 
  6785   000408                     ANSELB          equ	1032	;# 
  6786   000409                     WPUB            equ	1033	;# 
  6787   00040A                     ODCONB          equ	1034	;# 
  6788   00040B                     SLRCONB         equ	1035	;# 
  6789   00040C                     INLVLB          equ	1036	;# 
  6790   00040D                     IOCBP           equ	1037	;# 
  6791   00040E                     IOCBN           equ	1038	;# 
  6792   00040F                     IOCBF           equ	1039	;# 
  6793   000410                     ANSELC          equ	1040	;# 
  6794   000411                     WPUC            equ	1041	;# 
  6795   000412                     ODCONC          equ	1042	;# 
  6796   000413                     SLRCONC         equ	1043	;# 
  6797   000414                     INLVLC          equ	1044	;# 
  6798   000415                     IOCCP           equ	1045	;# 
  6799   000416                     IOCCN           equ	1046	;# 
  6800   000417                     IOCCF           equ	1047	;# 
  6801   000418                     ANSELD          equ	1048	;# 
  6802   000419                     WPUD            equ	1049	;# 
  6803   00041A                     ODCOND          equ	1050	;# 
  6804   00041B                     SLRCOND         equ	1051	;# 
  6805   00041C                     INLVLD          equ	1052	;# 
  6806   000420                     ANSELE          equ	1056	;# 
  6807   000421                     WPUE            equ	1057	;# 
  6808   000422                     ODCONE          equ	1058	;# 
  6809   000423                     SLRCONE         equ	1059	;# 
  6810   000424                     INLVLE          equ	1060	;# 
  6811   000425                     IOCEP           equ	1061	;# 
  6812   000426                     IOCEN           equ	1062	;# 
  6813   000427                     IOCEF           equ	1063	;# 
  6814   000428                     ANSELF          equ	1064	;# 
  6815   000429                     WPUF            equ	1065	;# 
  6816   00042A                     ODCONF          equ	1066	;# 
  6817   00042B                     SLRCONF         equ	1067	;# 
  6818   00042C                     INLVLF          equ	1068	;# 
  6819   000440                     NCO1ACC         equ	1088	;# 
  6820   000440                     NCO1ACCL        equ	1088	;# 
  6821   000441                     NCO1ACCH        equ	1089	;# 
  6822   000442                     NCO1ACCU        equ	1090	;# 
  6823   000443                     NCO1INC         equ	1091	;# 
  6824   000443                     NCO1INCL        equ	1091	;# 
  6825   000444                     NCO1INCH        equ	1092	;# 
  6826   000445                     NCO1INCU        equ	1093	;# 
  6827   000446                     NCO1CON         equ	1094	;# 
  6828   000447                     NCO1CLK         equ	1095	;# 
  6829   000448                     NCO2ACC         equ	1096	;# 
  6830   000448                     NCO2ACCL        equ	1096	;# 
  6831   000449                     NCO2ACCH        equ	1097	;# 
  6832   00044A                     NCO2ACCU        equ	1098	;# 
  6833   00044B                     NCO2INC         equ	1099	;# 
  6834   00044B                     NCO2INCL        equ	1099	;# 
  6835   00044C                     NCO2INCH        equ	1100	;# 
  6836   00044D                     NCO2INCU        equ	1101	;# 
  6837   00044E                     NCO2CON         equ	1102	;# 
  6838   00044F                     NCO2CLK         equ	1103	;# 
  6839   000450                     NCO3ACC         equ	1104	;# 
  6840   000450                     NCO3ACCL        equ	1104	;# 
  6841   000451                     NCO3ACCH        equ	1105	;# 
  6842   000452                     NCO3ACCU        equ	1106	;# 
  6843   000453                     NCO3INC         equ	1107	;# 
  6844   000453                     NCO3INCL        equ	1107	;# 
  6845   000454                     NCO3INCH        equ	1108	;# 
  6846   000455                     NCO3INCU        equ	1109	;# 
  6847   000456                     NCO3CON         equ	1110	;# 
  6848   000457                     NCO3CLK         equ	1111	;# 
  6849   000459                     IVTLOCK         equ	1113	;# 
  6850   00045A                     IVTAD           equ	1114	;# 
  6851   00045A                     IVTADL          equ	1114	;# 
  6852   00045B                     IVTADH          equ	1115	;# 
  6853   00045C                     IVTADU          equ	1116	;# 
  6854   00045D                     IVTBASE         equ	1117	;# 
  6855   00045D                     IVTBASEL        equ	1117	;# 
  6856   00045E                     IVTBASEH        equ	1118	;# 
  6857   00045F                     IVTBASEU        equ	1119	;# 
  6858   000460                     PWM1ERS         equ	1120	;# 
  6859   000461                     PWM1CLK         equ	1121	;# 
  6860   000462                     PWM1LDS         equ	1122	;# 
  6861   000463                     PWM1PR          equ	1123	;# 
  6862   000463                     PWM1PRL         equ	1123	;# 
  6863   000464                     PWM1PRH         equ	1124	;# 
  6864   000465                     PWM1CPRE        equ	1125	;# 
  6865   000466                     PWM1PIPOS       equ	1126	;# 
  6866   000467                     PWM1GIR         equ	1127	;# 
  6867   000468                     PWM1GIE         equ	1128	;# 
  6868   000469                     PWM1CON         equ	1129	;# 
  6869   00046A                     PWM1S1CFG       equ	1130	;# 
  6870   00046B                     PWM1S1P1        equ	1131	;# 
  6871   00046B                     PWM1S1P1L       equ	1131	;# 
  6872   00046C                     PWM1S1P1H       equ	1132	;# 
  6873   00046D                     PWM1S1P2        equ	1133	;# 
  6874   00046D                     PWM1S1P2L       equ	1133	;# 
  6875   00046E                     PWM1S1P2H       equ	1134	;# 
  6876   00046F                     PWM2ERS         equ	1135	;# 
  6877   000470                     PWM2CLK         equ	1136	;# 
  6878   000471                     PWM2LDS         equ	1137	;# 
  6879   000472                     PWM2PR          equ	1138	;# 
  6880   000472                     PWM2PRL         equ	1138	;# 
  6881   000473                     PWM2PRH         equ	1139	;# 
  6882   000474                     PWM2CPRE        equ	1140	;# 
  6883   000475                     PWM2PIPOS       equ	1141	;# 
  6884   000476                     PWM2GIR         equ	1142	;# 
  6885   000477                     PWM2GIE         equ	1143	;# 
  6886   000478                     PWM2CON         equ	1144	;# 
  6887   000479                     PWM2S1CFG       equ	1145	;# 
  6888   00047A                     PWM2S1P1        equ	1146	;# 
  6889   00047A                     PWM2S1P1L       equ	1146	;# 
  6890   00047B                     PWM2S1P1H       equ	1147	;# 
  6891   00047C                     PWM2S1P2        equ	1148	;# 
  6892   00047C                     PWM2S1P2L       equ	1148	;# 
  6893   00047D                     PWM2S1P2H       equ	1149	;# 
  6894   00047E                     PWM3ERS         equ	1150	;# 
  6895   00047F                     PWM3CLK         equ	1151	;# 
  6896   000480                     PWM3LDS         equ	1152	;# 
  6897   000481                     PWM3PR          equ	1153	;# 
  6898   000481                     PWM3PRL         equ	1153	;# 
  6899   000482                     PWM3PRH         equ	1154	;# 
  6900   000483                     PWM3CPRE        equ	1155	;# 
  6901   000484                     PWM3PIPOS       equ	1156	;# 
  6902   000485                     PWM3GIR         equ	1157	;# 
  6903   000486                     PWM3GIE         equ	1158	;# 
  6904   000487                     PWM3CON         equ	1159	;# 
  6905   000488                     PWM3S1CFG       equ	1160	;# 
  6906   000489                     PWM3S1P1        equ	1161	;# 
  6907   000489                     PWM3S1P1L       equ	1161	;# 
  6908   00048A                     PWM3S1P1H       equ	1162	;# 
  6909   00048B                     PWM3S1P2        equ	1163	;# 
  6910   00048B                     PWM3S1P2L       equ	1163	;# 
  6911   00048C                     PWM3S1P2H       equ	1164	;# 
  6912   00049C                     PWMLOAD         equ	1180	;# 
  6913   00049D                     PWMEN           equ	1181	;# 
  6914   00049E                     PIE0            equ	1182	;# 
  6915   00049F                     PIE1            equ	1183	;# 
  6916   0004A0                     PIE2            equ	1184	;# 
  6917   0004A1                     PIE3            equ	1185	;# 
  6918   0004A2                     PIE4            equ	1186	;# 
  6919   0004A3                     PIE5            equ	1187	;# 
  6920   0004A4                     PIE6            equ	1188	;# 
  6921   0004A5                     PIE7            equ	1189	;# 
  6922   0004A6                     PIE8            equ	1190	;# 
  6923   0004A7                     PIE9            equ	1191	;# 
  6924   0004A8                     PIE10           equ	1192	;# 
  6925   0004A9                     PIE11           equ	1193	;# 
  6926   0004AA                     PIE12           equ	1194	;# 
  6927   0004AB                     PIE13           equ	1195	;# 
  6928   0004AC                     PIE14           equ	1196	;# 
  6929   0004AD                     PIE15           equ	1197	;# 
  6930   0004AE                     PIR0            equ	1198	;# 
  6931   0004AF                     PIR1            equ	1199	;# 
  6932   0004B0                     PIR2            equ	1200	;# 
  6933   0004B1                     PIR3            equ	1201	;# 
  6934   0004B2                     PIR4            equ	1202	;# 
  6935   0004B3                     PIR5            equ	1203	;# 
  6936   0004B4                     PIR6            equ	1204	;# 
  6937   0004B5                     PIR7            equ	1205	;# 
  6938   0004B6                     PIR8            equ	1206	;# 
  6939   0004B7                     PIR9            equ	1207	;# 
  6940   0004B8                     PIR10           equ	1208	;# 
  6941   0004B9                     PIR11           equ	1209	;# 
  6942   0004BA                     PIR12           equ	1210	;# 
  6943   0004BB                     PIR13           equ	1211	;# 
  6944   0004BC                     PIR14           equ	1212	;# 
  6945   0004BD                     PIR15           equ	1213	;# 
  6946   0004BE                     LATA            equ	1214	;# 
  6947   0004BF                     LATB            equ	1215	;# 
  6948   0004C0                     LATC            equ	1216	;# 
  6949   0004C1                     LATD            equ	1217	;# 
  6950   0004C2                     LATE            equ	1218	;# 
  6951   0004C3                     LATF            equ	1219	;# 
  6952   0004C6                     TRISA           equ	1222	;# 
  6953   0004C7                     TRISB           equ	1223	;# 
  6954   0004C8                     TRISC           equ	1224	;# 
  6955   0004C9                     TRISD           equ	1225	;# 
  6956   0004CA                     TRISE           equ	1226	;# 
  6957   0004CB                     TRISF           equ	1227	;# 
  6958   0004CE                     PORTA           equ	1230	;# 
  6959   0004CF                     PORTB           equ	1231	;# 
  6960   0004D0                     PORTC           equ	1232	;# 
  6961   0004D1                     PORTD           equ	1233	;# 
  6962   0004D2                     PORTE           equ	1234	;# 
  6963   0004D3                     PORTF           equ	1235	;# 
  6964   0004D6                     INTCON0         equ	1238	;# 
  6965   0004D7                     INTCON1         equ	1239	;# 
  6966   0004D8                     STATUS          equ	1240	;# 
  6967   0004D9                     FSR2            equ	1241	;# 
  6968   0004D9                     FSR2L           equ	1241	;# 
  6969   0004DA                     FSR2H           equ	1242	;# 
  6970   0004DB                     PLUSW2          equ	1243	;# 
  6971   0004DC                     PREINC2         equ	1244	;# 
  6972   0004DD                     POSTDEC2        equ	1245	;# 
  6973   0004DE                     POSTINC2        equ	1246	;# 
  6974   0004DF                     INDF2           equ	1247	;# 
  6975   0004E0                     BSR             equ	1248	;# 
  6976   0004E1                     FSR1            equ	1249	;# 
  6977   0004E1                     FSR1L           equ	1249	;# 
  6978   0004E2                     FSR1H           equ	1250	;# 
  6979   0004E3                     PLUSW1          equ	1251	;# 
  6980   0004E4                     PREINC1         equ	1252	;# 
  6981   0004E5                     POSTDEC1        equ	1253	;# 
  6982   0004E6                     POSTINC1        equ	1254	;# 
  6983   0004E7                     INDF1           equ	1255	;# 
  6984   0004E8                     WREG            equ	1256	;# 
  6985   0004E9                     FSR0            equ	1257	;# 
  6986   0004E9                     FSR0L           equ	1257	;# 
  6987   0004EA                     FSR0H           equ	1258	;# 
  6988   0004EB                     PLUSW0          equ	1259	;# 
  6989   0004EC                     PREINC0         equ	1260	;# 
  6990   0004ED                     POSTDEC0        equ	1261	;# 
  6991   0004EE                     POSTINC0        equ	1262	;# 
  6992   0004EF                     INDF0           equ	1263	;# 
  6993   0004F0                     PCON0           equ	1264	;# 
  6994   0004F1                     PCON1           equ	1265	;# 
  6995   0004F2                     CPUDOZE         equ	1266	;# 
  6996   0004F3                     PROD            equ	1267	;# 
  6997   0004F3                     PRODL           equ	1267	;# 
  6998   0004F4                     PRODH           equ	1268	;# 
  6999   0004F5                     TABLAT          equ	1269	;# 
  7000   0004F6                     TBLPTR          equ	1270	;# 
  7001   0004F6                     TBLPTRL         equ	1270	;# 
  7002   0004F7                     TBLPTRH         equ	1271	;# 
  7003   0004F8                     TBLPTRU         equ	1272	;# 
  7004   0004F9                     PCLAT           equ	1273	;# 
  7005   0004F9                     PCL             equ	1273	;# 
  7006   0004FA                     PCLATH          equ	1274	;# 
  7007   0004FB                     PCLATU          equ	1275	;# 
  7008   0004FC                     STKPTR          equ	1276	;# 
  7009   0004FD                     TOS             equ	1277	;# 
  7010   0004FD                     TOSL            equ	1277	;# 
  7011   0004FE                     TOSH            equ	1278	;# 
  7012   0004FF                     TOSU            equ	1279	;# 
  7013   000039                     CLKRCON         equ	57	;# 
  7014   00003A                     CLKRCLK         equ	58	;# 
  7015   000040                     NVMCON0         equ	64	;# 
  7016   000041                     NVMCON1         equ	65	;# 
  7017   000042                     NVMLOCK         equ	66	;# 
  7018   000043                     NVMADR          equ	67	;# 
  7019   000043                     NVMADRL         equ	67	;# 
  7020   000044                     NVMADRH         equ	68	;# 
  7021   000045                     NVMADRU         equ	69	;# 
  7022   000046                     NVMDAT          equ	70	;# 
  7023   000046                     NVMDATL         equ	70	;# 
  7024   000047                     NVMDATH         equ	71	;# 
  7025   000048                     VREGCON         equ	72	;# 
  7026   000049                     BORCON          equ	73	;# 
  7027   00004A                     HLVDCON0        equ	74	;# 
  7028   00004B                     HLVDCON1        equ	75	;# 
  7029   00004C                     ZCDCON          equ	76	;# 
  7030   000060                     PMD0            equ	96	;# 
  7031   000061                     PMD1            equ	97	;# 
  7032   000063                     PMD3            equ	99	;# 
  7033   000064                     PMD4            equ	100	;# 
  7034   000065                     PMD5            equ	101	;# 
  7035   000066                     PMD6            equ	102	;# 
  7036   000067                     PMD7            equ	103	;# 
  7037   000068                     PMD8            equ	104	;# 
  7038   00006A                     MD1CON0         equ	106	;# 
  7039   00006B                     MD1CON1         equ	107	;# 
  7040   00006C                     MD1SRC          equ	108	;# 
  7041   00006D                     MD1CARL         equ	109	;# 
  7042   00006E                     MD1CARH         equ	110	;# 
  7043   00006F                     CMOUT           equ	111	;# 
  7044   000070                     CM1CON0         equ	112	;# 
  7045   000071                     CM1CON1         equ	113	;# 
  7046   000072                     CM1NCH          equ	114	;# 
  7047   000073                     CM1PCH          equ	115	;# 
  7048   000074                     CM2CON0         equ	116	;# 
  7049   000075                     CM2CON1         equ	117	;# 
  7050   000076                     CM2NCH          equ	118	;# 
  7051   000077                     CM2PCH          equ	119	;# 
  7052   000078                     WDTCON0         equ	120	;# 
  7053   000079                     WDTCON1         equ	121	;# 
  7054   00007A                     WDTPS           equ	122	;# 
  7055   00007A                     WDTPSL          equ	122	;# 
  7056   00007B                     WDTPSH          equ	123	;# 
  7057   00007C                     WDTTMR          equ	124	;# 
  7058   00007D                     DAC1DAT         equ	125	;# 
  7059   00007D                     DAC1DATL        equ	125	;# 
  7060   00007F                     DAC1CON         equ	127	;# 
  7061   000080                     SPI1RXB         equ	128	;# 
  7062   000081                     SPI1TXB         equ	129	;# 
  7063   000082                     SPI1TCNT        equ	130	;# 
  7064   000082                     SPI1TCNTL       equ	130	;# 
  7065   000083                     SPI1TCNTH       equ	131	;# 
  7066   000084                     SPI1CON0        equ	132	;# 
  7067   000085                     SPI1CON1        equ	133	;# 
  7068   000086                     SPI1CON2        equ	134	;# 
  7069   000087                     SPI1STATUS      equ	135	;# 
  7070   000088                     SPI1TWIDTH      equ	136	;# 
  7071   000089                     SPI1BAUD        equ	137	;# 
  7072   00008A                     SPI1INTF        equ	138	;# 
  7073   00008B                     SPI1INTE        equ	139	;# 
  7074   00008C                     SPI1CLK         equ	140	;# 
  7075   00008D                     SPI2RXB         equ	141	;# 
  7076   00008E                     SPI2TXB         equ	142	;# 
  7077   00008F                     SPI2TCNT        equ	143	;# 
  7078   00008F                     SPI2TCNTL       equ	143	;# 
  7079   000090                     SPI2TCNTH       equ	144	;# 
  7080   000091                     SPI2CON0        equ	145	;# 
  7081   000092                     SPI2CON1        equ	146	;# 
  7082   000093                     SPI2CON2        equ	147	;# 
  7083   000094                     SPI2STATUS      equ	148	;# 
  7084   000095                     SPI2TWIDTH      equ	149	;# 
  7085   000096                     SPI2BAUD        equ	150	;# 
  7086   000097                     SPI2INTF        equ	151	;# 
  7087   000098                     SPI2INTE        equ	152	;# 
  7088   000099                     SPI2CLK         equ	153	;# 
  7089   0000AC                     ACTCON          equ	172	;# 
  7090   0000AD                     OSCCON1         equ	173	;# 
  7091   0000AE                     OSCCON2         equ	174	;# 
  7092   0000AF                     OSCCON3         equ	175	;# 
  7093   0000B0                     OSCTUNE         equ	176	;# 
  7094   0000B1                     OSCFRQ          equ	177	;# 
  7095   0000B1                     OSCFREQ         equ	177	;# 
  7096   0000B2                     OSCSTAT         equ	178	;# 
  7097   0000B2                     OSCSTAT1        equ	178	;# 
  7098   0000B3                     OSCEN           equ	179	;# 
  7099   0000B4                     PRLOCK          equ	180	;# 
  7100   0000B5                     SCANPR          equ	181	;# 
  7101   0000B6                     DMA1PR          equ	182	;# 
  7102   0000B7                     DMA2PR          equ	183	;# 
  7103   0000B8                     DMA3PR          equ	184	;# 
  7104   0000B9                     DMA4PR          equ	185	;# 
  7105   0000BA                     DMA5PR          equ	186	;# 
  7106   0000BB                     DMA6PR          equ	187	;# 
  7107   0000BE                     MAINPR          equ	190	;# 
  7108   0000BF                     ISRPR           equ	191	;# 
  7109   0000D4                     CLCDATA         equ	212	;# 
  7110   0000D5                     CLCSELECT       equ	213	;# 
  7111   0000D6                     CLCnCON         equ	214	;# 
  7112   0000D7                     CLCnPOL         equ	215	;# 
  7113   0000D8                     CLCnSEL0        equ	216	;# 
  7114   0000D9                     CLCnSEL1        equ	217	;# 
  7115   0000DA                     CLCnSEL2        equ	218	;# 
  7116   0000DB                     CLCnSEL3        equ	219	;# 
  7117   0000DC                     CLCnGLS0        equ	220	;# 
  7118   0000DD                     CLCnGLS1        equ	221	;# 
  7119   0000DE                     CLCnGLS2        equ	222	;# 
  7120   0000DF                     CLCnGLS3        equ	223	;# 
  7121   0000E8                     DMASELECT       equ	232	;# 
  7122   0000E9                     DMAnBUF         equ	233	;# 
  7123   0000EA                     DMAnDCNT        equ	234	;# 
  7124   0000EA                     DMAnDCNTL       equ	234	;# 
  7125   0000EB                     DMAnDCNTH       equ	235	;# 
  7126   0000EC                     DMAnDPTR        equ	236	;# 
  7127   0000EC                     DMAnDPTRL       equ	236	;# 
  7128   0000ED                     DMAnDPTRH       equ	237	;# 
  7129   0000EE                     DMAnDSZ         equ	238	;# 
  7130   0000EE                     DMAnDSZL        equ	238	;# 
  7131   0000EF                     DMAnDSZH        equ	239	;# 
  7132   0000F0                     DMAnDSA         equ	240	;# 
  7133   0000F0                     DMAnDSAL        equ	240	;# 
  7134   0000F1                     DMAnDSAH        equ	241	;# 
  7135   0000F2                     DMAnSCNT        equ	242	;# 
  7136   0000F2                     DMAnSCNTL       equ	242	;# 
  7137   0000F3                     DMAnSCNTH       equ	243	;# 
  7138   0000F4                     DMAnSPTR        equ	244	;# 
  7139   0000F4                     DMAnSPTRL       equ	244	;# 
  7140   0000F5                     DMAnSPTRH       equ	245	;# 
  7141   0000F6                     DMAnSPTRU       equ	246	;# 
  7142   0000F7                     DMAnSSZ         equ	247	;# 
  7143   0000F7                     DMAnSSZL        equ	247	;# 
  7144   0000F8                     DMAnSSZH        equ	248	;# 
  7145   0000F9                     DMAnSSA         equ	249	;# 
  7146   0000F9                     DMAnSSAL        equ	249	;# 
  7147   0000FA                     DMAnSSAH        equ	250	;# 
  7148   0000FB                     DMAnSSAU        equ	251	;# 
  7149   0000FC                     DMAnCON0        equ	252	;# 
  7150   0000FD                     DMAnCON1        equ	253	;# 
  7151   0000FE                     DMAnAIRQ        equ	254	;# 
  7152   0000FF                     DMAnSIRQ        equ	255	;# 
  7153   000200                     PPSLOCK         equ	512	;# 
  7154   000201                     RA0PPS          equ	513	;# 
  7155   000202                     RA1PPS          equ	514	;# 
  7156   000203                     RA2PPS          equ	515	;# 
  7157   000204                     RA3PPS          equ	516	;# 
  7158   000205                     RA4PPS          equ	517	;# 
  7159   000206                     RA5PPS          equ	518	;# 
  7160   000207                     RA6PPS          equ	519	;# 
  7161   000208                     RA7PPS          equ	520	;# 
  7162   000209                     RB0PPS          equ	521	;# 
  7163   00020A                     RB1PPS          equ	522	;# 
  7164   00020B                     RB2PPS          equ	523	;# 
  7165   00020C                     RB3PPS          equ	524	;# 
  7166   00020D                     RB4PPS          equ	525	;# 
  7167   00020E                     RB5PPS          equ	526	;# 
  7168   00020F                     RB6PPS          equ	527	;# 
  7169   000210                     RB7PPS          equ	528	;# 
  7170   000211                     RC0PPS          equ	529	;# 
  7171   000212                     RC1PPS          equ	530	;# 
  7172   000213                     RC2PPS          equ	531	;# 
  7173   000214                     RC3PPS          equ	532	;# 
  7174   000215                     RC4PPS          equ	533	;# 
  7175   000216                     RC5PPS          equ	534	;# 
  7176   000217                     RC6PPS          equ	535	;# 
  7177   000218                     RC7PPS          equ	536	;# 
  7178   000219                     RD0PPS          equ	537	;# 
  7179   00021A                     RD1PPS          equ	538	;# 
  7180   00021B                     RD2PPS          equ	539	;# 
  7181   00021C                     RD3PPS          equ	540	;# 
  7182   00021D                     RD4PPS          equ	541	;# 
  7183   00021E                     RD5PPS          equ	542	;# 
  7184   00021F                     RD6PPS          equ	543	;# 
  7185   000220                     RD7PPS          equ	544	;# 
  7186   000221                     RE0PPS          equ	545	;# 
  7187   000222                     RE1PPS          equ	546	;# 
  7188   000223                     RE2PPS          equ	547	;# 
  7189   000229                     RF0PPS          equ	553	;# 
  7190   00022A                     RF1PPS          equ	554	;# 
  7191   00022B                     RF2PPS          equ	555	;# 
  7192   00022C                     RF3PPS          equ	556	;# 
  7193   00022D                     RF4PPS          equ	557	;# 
  7194   00022E                     RF5PPS          equ	558	;# 
  7195   00022F                     RF6PPS          equ	559	;# 
  7196   000230                     RF7PPS          equ	560	;# 
  7197   00023E                     INT0PPS         equ	574	;# 
  7198   00023F                     INT1PPS         equ	575	;# 
  7199   000240                     INT2PPS         equ	576	;# 
  7200   000241                     T0CKIPPS        equ	577	;# 
  7201   000242                     T1CKIPPS        equ	578	;# 
  7202   000243                     T1GPPS          equ	579	;# 
  7203   000244                     T3CKIPPS        equ	580	;# 
  7204   000245                     T3GPPS          equ	581	;# 
  7205   000246                     T5CKIPPS        equ	582	;# 
  7206   000247                     T5GPPS          equ	583	;# 
  7207   000248                     T2INPPS         equ	584	;# 
  7208   000249                     T4INPPS         equ	585	;# 
  7209   00024A                     T6INPPS         equ	586	;# 
  7210   00024F                     CCP1PPS         equ	591	;# 
  7211   000250                     CCP2PPS         equ	592	;# 
  7212   000251                     CCP3PPS         equ	593	;# 
  7213   000253                     PWM1ERSPPS      equ	595	;# 
  7214   000254                     PWM2ERSPPS      equ	596	;# 
  7215   000255                     PWM3ERSPPS      equ	597	;# 
  7216   000257                     PWMIN0PPS       equ	599	;# 
  7217   000258                     PWMIN1PPS       equ	600	;# 
  7218   000259                     SMT1WINPPS      equ	601	;# 
  7219   00025A                     SMT1SIGPPS      equ	602	;# 
  7220   00025B                     CWG1PPS         equ	603	;# 
  7221   00025B                     CWG1INPPS       equ	603	;# 
  7222   00025C                     CWG2PPS         equ	604	;# 
  7223   00025C                     CWG2INPPS       equ	604	;# 
  7224   00025D                     CWG3PPS         equ	605	;# 
  7225   00025D                     CWG3INPPS       equ	605	;# 
  7226   00025E                     MD1CARLPPS      equ	606	;# 
  7227   00025E                     MDCARLPPS       equ	606	;# 
  7228   00025F                     MD1CARHPPS      equ	607	;# 
  7229   00025F                     MDCARHPPS       equ	607	;# 
  7230   000260                     MD1SRCPPS       equ	608	;# 
  7231   000260                     MDSRCPPS        equ	608	;# 
  7232   000261                     CLCIN0PPS       equ	609	;# 
  7233   000262                     CLCIN1PPS       equ	610	;# 
  7234   000263                     CLCIN2PPS       equ	611	;# 
  7235   000264                     CLCIN3PPS       equ	612	;# 
  7236   000265                     CLCIN4PPS       equ	613	;# 
  7237   000266                     CLCIN5PPS       equ	614	;# 
  7238   000267                     CLCIN6PPS       equ	615	;# 
  7239   000268                     CLCIN7PPS       equ	616	;# 
  7240   000269                     ADACTPPS        equ	617	;# 
  7241   00026A                     SPI1SCKPPS      equ	618	;# 
  7242   00026B                     SPI1SDIPPS      equ	619	;# 
  7243   00026C                     SPI1SSPPS       equ	620	;# 
  7244   00026D                     SPI2SCKPPS      equ	621	;# 
  7245   00026E                     SPI2SDIPPS      equ	622	;# 
  7246   00026F                     SPI2SSPPS       equ	623	;# 
  7247   000270                     I2C1SDAPPS      equ	624	;# 
  7248   000271                     I2C1SCLPPS      equ	625	;# 
  7249   000272                     U1RXPPS         equ	626	;# 
  7250   000273                     U1CTSPPS        equ	627	;# 
  7251   000274                     U2RXPPS         equ	628	;# 
  7252   000275                     U2CTSPPS        equ	629	;# 
  7253   000276                     U3RXPPS         equ	630	;# 
  7254   000277                     U3CTSPPS        equ	631	;# 
  7255   000278                     U4RXPPS         equ	632	;# 
  7256   000279                     U4CTSPPS        equ	633	;# 
  7257   00027A                     U5RXPPS         equ	634	;# 
  7258   00027B                     U5CTSPPS        equ	635	;# 
  7259   000286                     RC4I2C          equ	646	;# 
  7260   000287                     RC3I2C          equ	647	;# 
  7261   000288                     RB2I2C          equ	648	;# 
  7262   000289                     RB1I2C          equ	649	;# 
  7263   00028B                     I2C1RXB         equ	651	;# 
  7264   00028C                     I2C1TXB         equ	652	;# 
  7265   00028D                     I2C1CNT         equ	653	;# 
  7266   00028E                     I2C1ADB0        equ	654	;# 
  7267   00028F                     I2C1ADB1        equ	655	;# 
  7268   000290                     I2C1ADR0        equ	656	;# 
  7269   000291                     I2C1ADR1        equ	657	;# 
  7270   000292                     I2C1ADR2        equ	658	;# 
  7271   000293                     I2C1ADR3        equ	659	;# 
  7272   000294                     I2C1CON0        equ	660	;# 
  7273   000295                     I2C1CON1        equ	661	;# 
  7274   000296                     I2C1CON2        equ	662	;# 
  7275   000297                     I2C1ERR         equ	663	;# 
  7276   000298                     I2C1STAT0       equ	664	;# 
  7277   000299                     I2C1STAT1       equ	665	;# 
  7278   00029A                     I2C1PIR         equ	666	;# 
  7279   00029B                     I2C1PIE         equ	667	;# 
  7280   00029C                     I2C1CLK         equ	668	;# 
  7281   00029D                     I2C1BTO         equ	669	;# 
  7282   0002A1                     U1RXB           equ	673	;# 
  7283   0002A1                     U1RXBL          equ	673	;# 
  7284   0002A2                     U1RXCHK         equ	674	;# 
  7285   0002A3                     U1TXB           equ	675	;# 
  7286   0002A3                     U1TXBL          equ	675	;# 
  7287   0002A4                     U1TXCHK         equ	676	;# 
  7288   0002A5                     U1P1            equ	677	;# 
  7289   0002A5                     U1P1L           equ	677	;# 
  7290   0002A6                     U1P1H           equ	678	;# 
  7291   0002A7                     U1P2            equ	679	;# 
  7292   0002A7                     U1P2L           equ	679	;# 
  7293   0002A8                     U1P2H           equ	680	;# 
  7294   0002A9                     U1P3            equ	681	;# 
  7295   0002A9                     U1P3L           equ	681	;# 
  7296   0002AA                     U1P3H           equ	682	;# 
  7297   0002AB                     U1CON0          equ	683	;# 
  7298   0002AC                     U1CON1          equ	684	;# 
  7299   0002AD                     U1CON2          equ	685	;# 
  7300   0002AE                     U1BRG           equ	686	;# 
  7301   0002AE                     U1BRGL          equ	686	;# 
  7302   0002AF                     U1BRGH          equ	687	;# 
  7303   0002B0                     U1FIFO          equ	688	;# 
  7304   0002B1                     U1UIR           equ	689	;# 
  7305   0002B2                     U1ERRIR         equ	690	;# 
  7306   0002B3                     U1ERRIE         equ	691	;# 
  7307   0002B4                     U2RXB           equ	692	;# 
  7308   0002B4                     U2RXBL          equ	692	;# 
  7309   0002B6                     U2TXB           equ	694	;# 
  7310   0002B6                     U2TXBL          equ	694	;# 
  7311   0002B8                     U2P1            equ	696	;# 
  7312   0002B8                     U2P1L           equ	696	;# 
  7313   0002BA                     U2P2            equ	698	;# 
  7314   0002BA                     U2P2L           equ	698	;# 
  7315   0002BC                     U2P3            equ	700	;# 
  7316   0002BC                     U2P3L           equ	700	;# 
  7317   0002BE                     U2CON0          equ	702	;# 
  7318   0002BF                     U2CON1          equ	703	;# 
  7319   0002C0                     U2CON2          equ	704	;# 
  7320   0002C1                     U2BRG           equ	705	;# 
  7321   0002C1                     U2BRGL          equ	705	;# 
  7322   0002C2                     U2BRGH          equ	706	;# 
  7323   0002C3                     U2FIFO          equ	707	;# 
  7324   0002C4                     U2UIR           equ	708	;# 
  7325   0002C5                     U2ERRIR         equ	709	;# 
  7326   0002C6                     U2ERRIE         equ	710	;# 
  7327   0002C7                     U3RXB           equ	711	;# 
  7328   0002C7                     U3RXBL          equ	711	;# 
  7329   0002C9                     U3TXB           equ	713	;# 
  7330   0002C9                     U3TXBL          equ	713	;# 
  7331   0002CB                     U3P1            equ	715	;# 
  7332   0002CB                     U3P1L           equ	715	;# 
  7333   0002CD                     U3P2            equ	717	;# 
  7334   0002CD                     U3P2L           equ	717	;# 
  7335   0002CF                     U3P3            equ	719	;# 
  7336   0002CF                     U3P3L           equ	719	;# 
  7337   0002D1                     U3CON0          equ	721	;# 
  7338   0002D2                     U3CON1          equ	722	;# 
  7339   0002D3                     U3CON2          equ	723	;# 
  7340   0002D4                     U3BRG           equ	724	;# 
  7341   0002D4                     U3BRGL          equ	724	;# 
  7342   0002D5                     U3BRGH          equ	725	;# 
  7343   0002D6                     U3FIFO          equ	726	;# 
  7344   0002D7                     U3UIR           equ	727	;# 
  7345   0002D8                     U3ERRIR         equ	728	;# 
  7346   0002D9                     U3ERRIE         equ	729	;# 
  7347   0002DA                     U4RXB           equ	730	;# 
  7348   0002DA                     U4RXBL          equ	730	;# 
  7349   0002DC                     U4TXB           equ	732	;# 
  7350   0002DC                     U4TXBL          equ	732	;# 
  7351   0002DE                     U4P1            equ	734	;# 
  7352   0002DE                     U4P1L           equ	734	;# 
  7353   0002E0                     U4P2            equ	736	;# 
  7354   0002E0                     U4P2L           equ	736	;# 
  7355   0002E2                     U4P3            equ	738	;# 
  7356   0002E2                     U4P3L           equ	738	;# 
  7357   0002E4                     U4CON0          equ	740	;# 
  7358   0002E5                     U4CON1          equ	741	;# 
  7359   0002E6                     U4CON2          equ	742	;# 
  7360   0002E7                     U4BRG           equ	743	;# 
  7361   0002E7                     U4BRGL          equ	743	;# 
  7362   0002E8                     U4BRGH          equ	744	;# 
  7363   0002E9                     U4FIFO          equ	745	;# 
  7364   0002EA                     U4UIR           equ	746	;# 
  7365   0002EB                     U4ERRIR         equ	747	;# 
  7366   0002EC                     U4ERRIE         equ	748	;# 
  7367   0002ED                     U5RXB           equ	749	;# 
  7368   0002ED                     U5RXBL          equ	749	;# 
  7369   0002EF                     U5TXB           equ	751	;# 
  7370   0002EF                     U5TXBL          equ	751	;# 
  7371   0002F1                     U5P1            equ	753	;# 
  7372   0002F1                     U5P1L           equ	753	;# 
  7373   0002F3                     U5P2            equ	755	;# 
  7374   0002F3                     U5P2L           equ	755	;# 
  7375   0002F5                     U5P3            equ	757	;# 
  7376   0002F5                     U5P3L           equ	757	;# 
  7377   0002F7                     U5CON0          equ	759	;# 
  7378   0002F8                     U5CON1          equ	760	;# 
  7379   0002F9                     U5CON2          equ	761	;# 
  7380   0002FA                     U5BRG           equ	762	;# 
  7381   0002FA                     U5BRGL          equ	762	;# 
  7382   0002FB                     U5BRGH          equ	763	;# 
  7383   0002FC                     U5FIFO          equ	764	;# 
  7384   0002FD                     U5UIR           equ	765	;# 
  7385   0002FE                     U5ERRIR         equ	766	;# 
  7386   0002FF                     U5ERRIE         equ	767	;# 
  7387   000300                     SMT1TMR         equ	768	;# 
  7388   000300                     SMT1TMRL        equ	768	;# 
  7389   000301                     SMT1TMRH        equ	769	;# 
  7390   000302                     SMT1TMRU        equ	770	;# 
  7391   000303                     SMT1CPR         equ	771	;# 
  7392   000303                     SMT1CPRL        equ	771	;# 
  7393   000304                     SMT1CPRH        equ	772	;# 
  7394   000305                     SMT1CPRU        equ	773	;# 
  7395   000306                     SMT1CPW         equ	774	;# 
  7396   000306                     SMT1CPWL        equ	774	;# 
  7397   000307                     SMT1CPWH        equ	775	;# 
  7398   000308                     SMT1CPWU        equ	776	;# 
  7399   000309                     SMT1PR          equ	777	;# 
  7400   000309                     SMT1PRL         equ	777	;# 
  7401   00030A                     SMT1PRH         equ	778	;# 
  7402   00030B                     SMT1PRU         equ	779	;# 
  7403   00030C                     SMT1CON0        equ	780	;# 
  7404   00030D                     SMT1CON1        equ	781	;# 
  7405   00030E                     SMT1STAT        equ	782	;# 
  7406   00030F                     SMT1CLK         equ	783	;# 
  7407   000310                     SMT1SIG         equ	784	;# 
  7408   000311                     SMT1WIN         equ	785	;# 
  7409   000318                     TMR0L           equ	792	;# 
  7410   000318                     TMR0            equ	792	;# 
  7411   000319                     TMR0H           equ	793	;# 
  7412   000319                     PR0             equ	793	;# 
  7413   00031A                     T0CON0          equ	794	;# 
  7414   00031B                     T0CON1          equ	795	;# 
  7415   00031C                     TMR1            equ	796	;# 
  7416   00031C                     TMR1L           equ	796	;# 
  7417   00031D                     TMR1H           equ	797	;# 
  7418   00031E                     T1CON           equ	798	;# 
  7419   00031E                     TMR1CON         equ	798	;# 
  7420   00031F                     T1GCON          equ	799	;# 
  7421   00031F                     TMR1GCON        equ	799	;# 
  7422   000320                     T1GATE          equ	800	;# 
  7423   000320                     TMR1GATE        equ	800	;# 
  7424   000321                     T1CLK           equ	801	;# 
  7425   000321                     TMR1CLK         equ	801	;# 
  7426   000321                     PR1             equ	801	;# 
  7427   000322                     T2TMR           equ	802	;# 
  7428   000322                     TMR2            equ	802	;# 
  7429   000323                     T2PR            equ	803	;# 
  7430   000323                     PR2             equ	803	;# 
  7431   000324                     T2CON           equ	804	;# 
  7432   000325                     T2HLT           equ	805	;# 
  7433   000326                     T2CLKCON        equ	806	;# 
  7434   000326                     T2CLK           equ	806	;# 
  7435   000327                     T2RST           equ	807	;# 
  7436   000328                     TMR3            equ	808	;# 
  7437   000328                     TMR3L           equ	808	;# 
  7438   000329                     TMR3H           equ	809	;# 
  7439   00032A                     T3CON           equ	810	;# 
  7440   00032A                     TMR3CON         equ	810	;# 
  7441   00032B                     T3GCON          equ	811	;# 
  7442   00032B                     TMR3GCON        equ	811	;# 
  7443   00032C                     T3GATE          equ	812	;# 
  7444   00032C                     TMR3GATE        equ	812	;# 
  7445   00032D                     T3CLK           equ	813	;# 
  7446   00032D                     TMR3CLK         equ	813	;# 
  7447   00032D                     PR3             equ	813	;# 
  7448   00032E                     T4TMR           equ	814	;# 
  7449   00032E                     TMR4            equ	814	;# 
  7450   00032F                     T4PR            equ	815	;# 
  7451   00032F                     PR4             equ	815	;# 
  7452   000330                     T4CON           equ	816	;# 
  7453   000331                     T4HLT           equ	817	;# 
  7454   000332                     T4CLKCON        equ	818	;# 
  7455   000332                     T4CLK           equ	818	;# 
  7456   000333                     T4RST           equ	819	;# 
  7457   000334                     TMR5            equ	820	;# 
  7458   000334                     TMR5L           equ	820	;# 
  7459   000335                     TMR5H           equ	821	;# 
  7460   000336                     T5CON           equ	822	;# 
  7461   000336                     TMR5CON         equ	822	;# 
  7462   000337                     T5GCON          equ	823	;# 
  7463   000337                     TMR5GCON        equ	823	;# 
  7464   000338                     T5GATE          equ	824	;# 
  7465   000338                     TMR5GATE        equ	824	;# 
  7466   000339                     T5CLK           equ	825	;# 
  7467   000339                     TMR5CLK         equ	825	;# 
  7468   000339                     PR5             equ	825	;# 
  7469   00033A                     T6TMR           equ	826	;# 
  7470   00033A                     TMR6            equ	826	;# 
  7471   00033B                     T6PR            equ	827	;# 
  7472   00033B                     PR6             equ	827	;# 
  7473   00033C                     T6CON           equ	828	;# 
  7474   00033D                     T6HLT           equ	829	;# 
  7475   00033E                     T6CLKCON        equ	830	;# 
  7476   00033E                     T6CLK           equ	830	;# 
  7477   00033F                     T6RST           equ	831	;# 
  7478   000340                     CCPR1           equ	832	;# 
  7479   000340                     CCPR1L          equ	832	;# 
  7480   000341                     CCPR1H          equ	833	;# 
  7481   000342                     CCP1CON         equ	834	;# 
  7482   000343                     CCP1CAP         equ	835	;# 
  7483   000344                     CCPR2           equ	836	;# 
  7484   000344                     CCPR2L          equ	836	;# 
  7485   000345                     CCPR2H          equ	837	;# 
  7486   000346                     CCP2CON         equ	838	;# 
  7487   000347                     CCP2CAP         equ	839	;# 
  7488   000348                     CCPR3           equ	840	;# 
  7489   000348                     CCPR3L          equ	840	;# 
  7490   000349                     CCPR3H          equ	841	;# 
  7491   00034A                     CCP3CON         equ	842	;# 
  7492   00034B                     CCP3CAP         equ	843	;# 
  7493   00034C                     CCPTMRS0        equ	844	;# 
  7494   00034F                     CRCDATA         equ	847	;# 
  7495   00034F                     CRCDATL         equ	847	;# 
  7496   000350                     CRCDATH         equ	848	;# 
  7497   000351                     CRCACC          equ	849	;# 
  7498   000351                     CRCACCL         equ	849	;# 
  7499   000352                     CRCACCH         equ	850	;# 
  7500   000353                     CRCSHFT         equ	851	;# 
  7501   000353                     CRCSHIFTL       equ	851	;# 
  7502   000354                     CRCSHIFTH       equ	852	;# 
  7503   000355                     CRCXOR          equ	853	;# 
  7504   000355                     CRCXORL         equ	853	;# 
  7505   000356                     CRCXORH         equ	854	;# 
  7506   000357                     CRCCON0         equ	855	;# 
  7507   000358                     CRCCON1         equ	856	;# 
  7508   00035A                     SCANLADR        equ	858	;# 
  7509   00035A                     SCANLADRL       equ	858	;# 
  7510   00035B                     SCANLADRH       equ	859	;# 
  7511   00035C                     SCANLADRU       equ	860	;# 
  7512   00035D                     SCANHADR        equ	861	;# 
  7513   00035D                     SCANHADRL       equ	861	;# 
  7514   00035E                     SCANHADRH       equ	862	;# 
  7515   00035F                     SCANHADRU       equ	863	;# 
  7516   000360                     SCANCON0        equ	864	;# 
  7517   000361                     SCANTRIG        equ	865	;# 
  7518   000362                     IPR0            equ	866	;# 
  7519   000363                     IPR1            equ	867	;# 
  7520   000364                     IPR2            equ	868	;# 
  7521   000365                     IPR3            equ	869	;# 
  7522   000366                     IPR4            equ	870	;# 
  7523   000367                     IPR5            equ	871	;# 
  7524   000368                     IPR6            equ	872	;# 
  7525   000369                     IPR7            equ	873	;# 
  7526   00036A                     IPR8            equ	874	;# 
  7527   00036B                     IPR9            equ	875	;# 
  7528   00036C                     IPR10           equ	876	;# 
  7529   00036D                     IPR11           equ	877	;# 
  7530   00036E                     IPR12           equ	878	;# 
  7531   00036F                     IPR13           equ	879	;# 
  7532   000370                     IPR14           equ	880	;# 
  7533   000371                     IPR15           equ	881	;# 
  7534   000373                     STATUS_CSHAD    equ	883	;# 
  7535   000374                     WREG_CSHAD      equ	884	;# 
  7536   000375                     BSR_CSHAD       equ	885	;# 
  7537   000376                     SHADCON         equ	886	;# 
  7538   000377                     STATUS_SHAD     equ	887	;# 
  7539   000378                     WREG_SHAD       equ	888	;# 
  7540   000379                     BSR_SHAD        equ	889	;# 
  7541   00037A                     PCLATH_SHAD     equ	890	;# 
  7542   00037B                     PCLATU_SHAD     equ	891	;# 
  7543   00037C                     FSR0SH          equ	892	;# 
  7544   00037C                     FSR0L_SHAD      equ	892	;# 
  7545   00037D                     FSR0H_SHAD      equ	893	;# 
  7546   00037E                     FSR1SH          equ	894	;# 
  7547   00037E                     FSR1L_SHAD      equ	894	;# 
  7548   00037F                     FSR1H_SHAD      equ	895	;# 
  7549   000380                     FSR2SH          equ	896	;# 
  7550   000380                     FSR2L_SHAD      equ	896	;# 
  7551   000381                     FSR2H_SHAD      equ	897	;# 
  7552   000382                     PRODSH          equ	898	;# 
  7553   000382                     PRODL_SHAD      equ	898	;# 
  7554   000383                     PRODH_SHAD      equ	899	;# 
  7555   0003BC                     CWG1CLK         equ	956	;# 
  7556   0003BC                     CWG1CLKCON      equ	956	;# 
  7557   0003BD                     CWG1ISM         equ	957	;# 
  7558   0003BD                     CWG1DAT         equ	957	;# 
  7559   0003BE                     CWG1DBR         equ	958	;# 
  7560   0003BF                     CWG1DBF         equ	959	;# 
  7561   0003C0                     CWG1CON0        equ	960	;# 
  7562   0003C1                     CWG1CON1        equ	961	;# 
  7563   0003C2                     CWG1AS0         equ	962	;# 
  7564   0003C3                     CWG1AS1         equ	963	;# 
  7565   0003C4                     CWG1STR         equ	964	;# 
  7566   0003C5                     CWG2CLK         equ	965	;# 
  7567   0003C5                     CWG2CLKCON      equ	965	;# 
  7568   0003C6                     CWG2ISM         equ	966	;# 
  7569   0003C6                     CWG2DAT         equ	966	;# 
  7570   0003C7                     CWG2DBR         equ	967	;# 
  7571   0003C8                     CWG2DBF         equ	968	;# 
  7572   0003C9                     CWG2CON0        equ	969	;# 
  7573   0003CA                     CWG2CON1        equ	970	;# 
  7574   0003CB                     CWG2AS0         equ	971	;# 
  7575   0003CC                     CWG2AS1         equ	972	;# 
  7576   0003CD                     CWG2STR         equ	973	;# 
  7577   0003CE                     CWG3CLK         equ	974	;# 
  7578   0003CE                     CWG3CLKCON      equ	974	;# 
  7579   0003CF                     CWG3ISM         equ	975	;# 
  7580   0003CF                     CWG3DAT         equ	975	;# 
  7581   0003D0                     CWG3DBR         equ	976	;# 
  7582   0003D1                     CWG3DBF         equ	977	;# 
  7583   0003D2                     CWG3CON0        equ	978	;# 
  7584   0003D3                     CWG3CON1        equ	979	;# 
  7585   0003D4                     CWG3AS0         equ	980	;# 
  7586   0003D5                     CWG3AS1         equ	981	;# 
  7587   0003D6                     CWG3STR         equ	982	;# 
  7588   0003D7                     FVRCON          equ	983	;# 
  7589   0003D8                     ADCPCON         equ	984	;# 
  7590   0003D8                     ADCP            equ	984	;# 
  7591   0003D9                     ADLTH           equ	985	;# 
  7592   0003D9                     ADLTHL          equ	985	;# 
  7593   0003DA                     ADLTHH          equ	986	;# 
  7594   0003DB                     ADUTH           equ	987	;# 
  7595   0003DB                     ADUTHL          equ	987	;# 
  7596   0003DC                     ADUTHH          equ	988	;# 
  7597   0003DD                     ADERR           equ	989	;# 
  7598   0003DD                     ADERRL          equ	989	;# 
  7599   0003DE                     ADERRH          equ	990	;# 
  7600   0003DF                     ADSTPT          equ	991	;# 
  7601   0003DF                     ADSTPTL         equ	991	;# 
  7602   0003E0                     ADSTPTH         equ	992	;# 
  7603   0003E1                     ADFLTR          equ	993	;# 
  7604   0003E1                     ADFLTRL         equ	993	;# 
  7605   0003E2                     ADFLTRH         equ	994	;# 
  7606   0003E3                     ADACC           equ	995	;# 
  7607   0003E3                     ADACCL          equ	995	;# 
  7608   0003E4                     ADACCH          equ	996	;# 
  7609   0003E5                     ADACCU          equ	997	;# 
  7610   0003E6                     ADCNT           equ	998	;# 
  7611   0003E7                     ADRPT           equ	999	;# 
  7612   0003E8                     ADPREV          equ	1000	;# 
  7613   0003E8                     ADPREVL         equ	1000	;# 
  7614   0003E9                     ADPREVH         equ	1001	;# 
  7615   0003EA                     ADRES           equ	1002	;# 
  7616   0003EA                     ADRESL          equ	1002	;# 
  7617   0003EB                     ADRESH          equ	1003	;# 
  7618   0003EC                     ADPCH           equ	1004	;# 
  7619   0003EE                     ADACQ           equ	1006	;# 
  7620   0003EE                     ADACQL          equ	1006	;# 
  7621   0003EF                     ADACQH          equ	1007	;# 
  7622   0003F0                     ADCAP           equ	1008	;# 
  7623   0003F1                     ADPRE           equ	1009	;# 
  7624   0003F1                     ADPREL          equ	1009	;# 
  7625   0003F2                     ADPREH          equ	1010	;# 
  7626   0003F3                     ADCON0          equ	1011	;# 
  7627   0003F4                     ADCON1          equ	1012	;# 
  7628   0003F5                     ADCON2          equ	1013	;# 
  7629   0003F6                     ADCON3          equ	1014	;# 
  7630   0003F7                     ADSTAT          equ	1015	;# 
  7631   0003F8                     ADREF           equ	1016	;# 
  7632   0003F9                     ADACT           equ	1017	;# 
  7633   0003FA                     ADCLK           equ	1018	;# 
  7634   000400                     ANSELA          equ	1024	;# 
  7635   000401                     WPUA            equ	1025	;# 
  7636   000402                     ODCONA          equ	1026	;# 
  7637   000403                     SLRCONA         equ	1027	;# 
  7638   000404                     INLVLA          equ	1028	;# 
  7639   000405                     IOCAP           equ	1029	;# 
  7640   000406                     IOCAN           equ	1030	;# 
  7641   000407                     IOCAF           equ	1031	;# 
  7642   000408                     ANSELB          equ	1032	;# 
  7643   000409                     WPUB            equ	1033	;# 
  7644   00040A                     ODCONB          equ	1034	;# 
  7645   00040B                     SLRCONB         equ	1035	;# 
  7646   00040C                     INLVLB          equ	1036	;# 
  7647   00040D                     IOCBP           equ	1037	;# 
  7648   00040E                     IOCBN           equ	1038	;# 
  7649   00040F                     IOCBF           equ	1039	;# 
  7650   000410                     ANSELC          equ	1040	;# 
  7651   000411                     WPUC            equ	1041	;# 
  7652   000412                     ODCONC          equ	1042	;# 
  7653   000413                     SLRCONC         equ	1043	;# 
  7654   000414                     INLVLC          equ	1044	;# 
  7655   000415                     IOCCP           equ	1045	;# 
  7656   000416                     IOCCN           equ	1046	;# 
  7657   000417                     IOCCF           equ	1047	;# 
  7658   000418                     ANSELD          equ	1048	;# 
  7659   000419                     WPUD            equ	1049	;# 
  7660   00041A                     ODCOND          equ	1050	;# 
  7661   00041B                     SLRCOND         equ	1051	;# 
  7662   00041C                     INLVLD          equ	1052	;# 
  7663   000420                     ANSELE          equ	1056	;# 
  7664   000421                     WPUE            equ	1057	;# 
  7665   000422                     ODCONE          equ	1058	;# 
  7666   000423                     SLRCONE         equ	1059	;# 
  7667   000424                     INLVLE          equ	1060	;# 
  7668   000425                     IOCEP           equ	1061	;# 
  7669   000426                     IOCEN           equ	1062	;# 
  7670   000427                     IOCEF           equ	1063	;# 
  7671   000428                     ANSELF          equ	1064	;# 
  7672   000429                     WPUF            equ	1065	;# 
  7673   00042A                     ODCONF          equ	1066	;# 
  7674   00042B                     SLRCONF         equ	1067	;# 
  7675   00042C                     INLVLF          equ	1068	;# 
  7676   000440                     NCO1ACC         equ	1088	;# 
  7677   000440                     NCO1ACCL        equ	1088	;# 
  7678   000441                     NCO1ACCH        equ	1089	;# 
  7679   000442                     NCO1ACCU        equ	1090	;# 
  7680   000443                     NCO1INC         equ	1091	;# 
  7681   000443                     NCO1INCL        equ	1091	;# 
  7682   000444                     NCO1INCH        equ	1092	;# 
  7683   000445                     NCO1INCU        equ	1093	;# 
  7684   000446                     NCO1CON         equ	1094	;# 
  7685   000447                     NCO1CLK         equ	1095	;# 
  7686   000448                     NCO2ACC         equ	1096	;# 
  7687   000448                     NCO2ACCL        equ	1096	;# 
  7688   000449                     NCO2ACCH        equ	1097	;# 
  7689   00044A                     NCO2ACCU        equ	1098	;# 
  7690   00044B                     NCO2INC         equ	1099	;# 
  7691   00044B                     NCO2INCL        equ	1099	;# 
  7692   00044C                     NCO2INCH        equ	1100	;# 
  7693   00044D                     NCO2INCU        equ	1101	;# 
  7694   00044E                     NCO2CON         equ	1102	;# 
  7695   00044F                     NCO2CLK         equ	1103	;# 
  7696   000450                     NCO3ACC         equ	1104	;# 
  7697   000450                     NCO3ACCL        equ	1104	;# 
  7698   000451                     NCO3ACCH        equ	1105	;# 
  7699   000452                     NCO3ACCU        equ	1106	;# 
  7700   000453                     NCO3INC         equ	1107	;# 
  7701   000453                     NCO3INCL        equ	1107	;# 
  7702   000454                     NCO3INCH        equ	1108	;# 
  7703   000455                     NCO3INCU        equ	1109	;# 
  7704   000456                     NCO3CON         equ	1110	;# 
  7705   000457                     NCO3CLK         equ	1111	;# 
  7706   000459                     IVTLOCK         equ	1113	;# 
  7707   00045A                     IVTAD           equ	1114	;# 
  7708   00045A                     IVTADL          equ	1114	;# 
  7709   00045B                     IVTADH          equ	1115	;# 
  7710   00045C                     IVTADU          equ	1116	;# 
  7711   00045D                     IVTBASE         equ	1117	;# 
  7712   00045D                     IVTBASEL        equ	1117	;# 
  7713   00045E                     IVTBASEH        equ	1118	;# 
  7714   00045F                     IVTBASEU        equ	1119	;# 
  7715   000460                     PWM1ERS         equ	1120	;# 
  7716   000461                     PWM1CLK         equ	1121	;# 
  7717   000462                     PWM1LDS         equ	1122	;# 
  7718   000463                     PWM1PR          equ	1123	;# 
  7719   000463                     PWM1PRL         equ	1123	;# 
  7720   000464                     PWM1PRH         equ	1124	;# 
  7721   000465                     PWM1CPRE        equ	1125	;# 
  7722   000466                     PWM1PIPOS       equ	1126	;# 
  7723   000467                     PWM1GIR         equ	1127	;# 
  7724   000468                     PWM1GIE         equ	1128	;# 
  7725   000469                     PWM1CON         equ	1129	;# 
  7726   00046A                     PWM1S1CFG       equ	1130	;# 
  7727   00046B                     PWM1S1P1        equ	1131	;# 
  7728   00046B                     PWM1S1P1L       equ	1131	;# 
  7729   00046C                     PWM1S1P1H       equ	1132	;# 
  7730   00046D                     PWM1S1P2        equ	1133	;# 
  7731   00046D                     PWM1S1P2L       equ	1133	;# 
  7732   00046E                     PWM1S1P2H       equ	1134	;# 
  7733   00046F                     PWM2ERS         equ	1135	;# 
  7734   000470                     PWM2CLK         equ	1136	;# 
  7735   000471                     PWM2LDS         equ	1137	;# 
  7736   000472                     PWM2PR          equ	1138	;# 
  7737   000472                     PWM2PRL         equ	1138	;# 
  7738   000473                     PWM2PRH         equ	1139	;# 
  7739   000474                     PWM2CPRE        equ	1140	;# 
  7740   000475                     PWM2PIPOS       equ	1141	;# 
  7741   000476                     PWM2GIR         equ	1142	;# 
  7742   000477                     PWM2GIE         equ	1143	;# 
  7743   000478                     PWM2CON         equ	1144	;# 
  7744   000479                     PWM2S1CFG       equ	1145	;# 
  7745   00047A                     PWM2S1P1        equ	1146	;# 
  7746   00047A                     PWM2S1P1L       equ	1146	;# 
  7747   00047B                     PWM2S1P1H       equ	1147	;# 
  7748   00047C                     PWM2S1P2        equ	1148	;# 
  7749   00047C                     PWM2S1P2L       equ	1148	;# 
  7750   00047D                     PWM2S1P2H       equ	1149	;# 
  7751   00047E                     PWM3ERS         equ	1150	;# 
  7752   00047F                     PWM3CLK         equ	1151	;# 
  7753   000480                     PWM3LDS         equ	1152	;# 
  7754   000481                     PWM3PR          equ	1153	;# 
  7755   000481                     PWM3PRL         equ	1153	;# 
  7756   000482                     PWM3PRH         equ	1154	;# 
  7757   000483                     PWM3CPRE        equ	1155	;# 
  7758   000484                     PWM3PIPOS       equ	1156	;# 
  7759   000485                     PWM3GIR         equ	1157	;# 
  7760   000486                     PWM3GIE         equ	1158	;# 
  7761   000487                     PWM3CON         equ	1159	;# 
  7762   000488                     PWM3S1CFG       equ	1160	;# 
  7763   000489                     PWM3S1P1        equ	1161	;# 
  7764   000489                     PWM3S1P1L       equ	1161	;# 
  7765   00048A                     PWM3S1P1H       equ	1162	;# 
  7766   00048B                     PWM3S1P2        equ	1163	;# 
  7767   00048B                     PWM3S1P2L       equ	1163	;# 
  7768   00048C                     PWM3S1P2H       equ	1164	;# 
  7769   00049C                     PWMLOAD         equ	1180	;# 
  7770   00049D                     PWMEN           equ	1181	;# 
  7771   00049E                     PIE0            equ	1182	;# 
  7772   00049F                     PIE1            equ	1183	;# 
  7773   0004A0                     PIE2            equ	1184	;# 
  7774   0004A1                     PIE3            equ	1185	;# 
  7775   0004A2                     PIE4            equ	1186	;# 
  7776   0004A3                     PIE5            equ	1187	;# 
  7777   0004A4                     PIE6            equ	1188	;# 
  7778   0004A5                     PIE7            equ	1189	;# 
  7779   0004A6                     PIE8            equ	1190	;# 
  7780   0004A7                     PIE9            equ	1191	;# 
  7781   0004A8                     PIE10           equ	1192	;# 
  7782   0004A9                     PIE11           equ	1193	;# 
  7783   0004AA                     PIE12           equ	1194	;# 
  7784   0004AB                     PIE13           equ	1195	;# 
  7785   0004AC                     PIE14           equ	1196	;# 
  7786   0004AD                     PIE15           equ	1197	;# 
  7787   0004AE                     PIR0            equ	1198	;# 
  7788   0004AF                     PIR1            equ	1199	;# 
  7789   0004B0                     PIR2            equ	1200	;# 
  7790   0004B1                     PIR3            equ	1201	;# 
  7791   0004B2                     PIR4            equ	1202	;# 
  7792   0004B3                     PIR5            equ	1203	;# 
  7793   0004B4                     PIR6            equ	1204	;# 
  7794   0004B5                     PIR7            equ	1205	;# 
  7795   0004B6                     PIR8            equ	1206	;# 
  7796   0004B7                     PIR9            equ	1207	;# 
  7797   0004B8                     PIR10           equ	1208	;# 
  7798   0004B9                     PIR11           equ	1209	;# 
  7799   0004BA                     PIR12           equ	1210	;# 
  7800   0004BB                     PIR13           equ	1211	;# 
  7801   0004BC                     PIR14           equ	1212	;# 
  7802   0004BD                     PIR15           equ	1213	;# 
  7803   0004BE                     LATA            equ	1214	;# 
  7804   0004BF                     LATB            equ	1215	;# 
  7805   0004C0                     LATC            equ	1216	;# 
  7806   0004C1                     LATD            equ	1217	;# 
  7807   0004C2                     LATE            equ	1218	;# 
  7808   0004C3                     LATF            equ	1219	;# 
  7809   0004C6                     TRISA           equ	1222	;# 
  7810   0004C7                     TRISB           equ	1223	;# 
  7811   0004C8                     TRISC           equ	1224	;# 
  7812   0004C9                     TRISD           equ	1225	;# 
  7813   0004CA                     TRISE           equ	1226	;# 
  7814   0004CB                     TRISF           equ	1227	;# 
  7815   0004CE                     PORTA           equ	1230	;# 
  7816   0004CF                     PORTB           equ	1231	;# 
  7817   0004D0                     PORTC           equ	1232	;# 
  7818   0004D1                     PORTD           equ	1233	;# 
  7819   0004D2                     PORTE           equ	1234	;# 
  7820   0004D3                     PORTF           equ	1235	;# 
  7821   0004D6                     INTCON0         equ	1238	;# 
  7822   0004D7                     INTCON1         equ	1239	;# 
  7823   0004D8                     STATUS          equ	1240	;# 
  7824   0004D9                     FSR2            equ	1241	;# 
  7825   0004D9                     FSR2L           equ	1241	;# 
  7826   0004DA                     FSR2H           equ	1242	;# 
  7827   0004DB                     PLUSW2          equ	1243	;# 
  7828   0004DC                     PREINC2         equ	1244	;# 
  7829   0004DD                     POSTDEC2        equ	1245	;# 
  7830   0004DE                     POSTINC2        equ	1246	;# 
  7831   0004DF                     INDF2           equ	1247	;# 
  7832   0004E0                     BSR             equ	1248	;# 
  7833   0004E1                     FSR1            equ	1249	;# 
  7834   0004E1                     FSR1L           equ	1249	;# 
  7835   0004E2                     FSR1H           equ	1250	;# 
  7836   0004E3                     PLUSW1          equ	1251	;# 
  7837   0004E4                     PREINC1         equ	1252	;# 
  7838   0004E5                     POSTDEC1        equ	1253	;# 
  7839   0004E6                     POSTINC1        equ	1254	;# 
  7840   0004E7                     INDF1           equ	1255	;# 
  7841   0004E8                     WREG            equ	1256	;# 
  7842   0004E9                     FSR0            equ	1257	;# 
  7843   0004E9                     FSR0L           equ	1257	;# 
  7844   0004EA                     FSR0H           equ	1258	;# 
  7845   0004EB                     PLUSW0          equ	1259	;# 
  7846   0004EC                     PREINC0         equ	1260	;# 
  7847   0004ED                     POSTDEC0        equ	1261	;# 
  7848   0004EE                     POSTINC0        equ	1262	;# 
  7849   0004EF                     INDF0           equ	1263	;# 
  7850   0004F0                     PCON0           equ	1264	;# 
  7851   0004F1                     PCON1           equ	1265	;# 
  7852   0004F2                     CPUDOZE         equ	1266	;# 
  7853   0004F3                     PROD            equ	1267	;# 
  7854   0004F3                     PRODL           equ	1267	;# 
  7855   0004F4                     PRODH           equ	1268	;# 
  7856   0004F5                     TABLAT          equ	1269	;# 
  7857   0004F6                     TBLPTR          equ	1270	;# 
  7858   0004F6                     TBLPTRL         equ	1270	;# 
  7859   0004F7                     TBLPTRH         equ	1271	;# 
  7860   0004F8                     TBLPTRU         equ	1272	;# 
  7861   0004F9                     PCLAT           equ	1273	;# 
  7862   0004F9                     PCL             equ	1273	;# 
  7863   0004FA                     PCLATH          equ	1274	;# 
  7864   0004FB                     PCLATU          equ	1275	;# 
  7865   0004FC                     STKPTR          equ	1276	;# 
  7866   0004FD                     TOS             equ	1277	;# 
  7867   0004FD                     TOSL            equ	1277	;# 
  7868   0004FE                     TOSH            equ	1278	;# 
  7869   0004FF                     TOSU            equ	1279	;# 
  7870                           
  7871 ;; Function _SPI1_Deinitialize is unused but had its address taken
  7872   000000                     _SPI1_Deinitialize equ	0
  7873                           
  7874 ;; Function _SPI1_Close is unused but had its address taken
  7875   000000                     _SPI1_Close     equ	0
  7876                           
  7877 ;; Function _SPI1_BufferExchange is unused but had its address taken
  7878   000000                     _SPI1_BufferExchange equ	0
  7879                           
  7880 ;; Function _SPI1_BufferWrite is unused but had its address taken
  7881   000000                     _SPI1_BufferWrite equ	0
  7882                           
  7883 ;; Function _SPI1_BufferRead is unused but had its address taken
  7884   000000                     _SPI1_BufferRead equ	0
  7885                           
  7886 ;; Function _SPI1_ByteWrite is unused but had its address taken
  7887   000000                     _SPI1_ByteWrite equ	0
  7888                           
  7889 ;; Function _SPI1_ByteRead is unused but had its address taken
  7890   000000                     _SPI1_ByteRead  equ	0
  7891                           
  7892 ;; Function _SPI1_IsTxReady is unused but had its address taken
  7893   000000                     _SPI1_IsTxReady equ	0
  7894                           
  7895 ;; Function _SPI1_IsRxReady is unused but had its address taken
  7896   000000                     _SPI1_IsRxReady equ	0
  7897                           
  7898 ;; Function _INT0_DefaultInterruptHandler is unused but had its address taken
  7899   000000                     _INT0_DefaultInterruptHandler equ	0
  7900                           
  7901 ;; Function _INT1_DefaultInterruptHandler is unused but had its address taken
  7902   000000                     _INT1_DefaultInterruptHandler equ	0
  7903                           
  7904 ;; Function _INT2_DefaultInterruptHandler is unused but had its address taken
  7905   000000                     _INT2_DefaultInterruptHandler equ	0
  7906                           
  7907 ;; Function _TMR0_Stop is unused but had its address taken
  7908   000000                     _TMR0_Stop      equ	0
  7909                           
  7910 ;; Function _TMR0_Reload is unused but had its address taken
  7911   000000                     _TMR0_Reload    equ	0
  7912                           
  7913                           	psect	idataBANK5
  7914   01164E                     __pidataBANK5:
  7915                           	callstack 0
  7916                           
  7917                           ;initializer for sender@F17891
  7918   01164E  63                 	db	99
  7919   01164F  6F                 	db	111
  7920   011650  77                 	db	119
  7921   011651  61                 	db	97
  7922   011652  62                 	db	98
  7923   011653  75                 	db	117
  7924   011654  6E                 	db	110
  7925   011655  67                 	db	103
  7926   011656  61                 	db	97
  7927   011657  2E                 	db	46
  7928   011658  00                 	db	0
  7929   011659  00                 	db	0
  7930   01165A  00                 	db	0
  7931   01165B  00                 	db	0
  7932   01165C  00                 	db	0
  7933   01165D  00                 	db	0
  7934   01165E  00                 	db	0
  7935   01165F  00                 	db	0
  7936   011660  00                 	db	0
  7937   011661  00                 	db	0
  7938   011662  00                 	db	0
  7939   011663  00                 	db	0
  7940   011664  00                 	db	0
  7941   011665  00                 	db	0
  7942   011666  00                 	db	0
  7943   011667  00                 	db	0
  7944   011668  00                 	db	0
  7945   011669  00                 	db	0
  7946   01166A  00                 	db	0
  7947   01166B  00                 	db	0
  7948   01166C  00                 	db	0
  7949   01166D  00                 	db	0
  7950                           
  7951                           ;initializer for _rf24_datarates
  7952   01166E  31                 	db	49
  7953   01166F  4D                 	db	77
  7954   011670  62                 	db	98
  7955   011671  70                 	db	112
  7956   011672  73                 	db	115
  7957   011673  00                 	db	0
  7958   011674  00                 	db	0
  7959   011675  00                 	db	0
  7960   011676  32                 	db	50
  7961   011677  4D                 	db	77
  7962   011678  62                 	db	98
  7963   011679  70                 	db	112
  7964   01167A  73                 	db	115
  7965   01167B  00                 	db	0
  7966   01167C  00                 	db	0
  7967   01167D  00                 	db	0
  7968   01167E  32                 	db	50
  7969   01167F  35                 	db	53
  7970   011680  30                 	db	48
  7971   011681  4B                 	db	75
  7972   011682  62                 	db	98
  7973   011683  70                 	db	112
  7974   011684  73                 	db	115
  7975   011685  00                 	db	0
  7976                           
  7977                           	psect	idataBANK6
  7978   011974                     __pidataBANK6:
  7979                           	callstack 0
  7980                           
  7981                           ;initializer for _rf24_pa_dbm
  7982   011974  50                 	db	80
  7983   011975  41                 	db	65
  7984   011976  5F                 	db	95
  7985   011977  4D                 	db	77
  7986   011978  49                 	db	73
  7987   011979  4E                 	db	78
  7988   01197A  00                 	db	0
  7989   01197B  00                 	db	0
  7990   01197C  50                 	db	80
  7991   01197D  41                 	db	65
  7992   01197E  5F                 	db	95
  7993   01197F  4C                 	db	76
  7994   011980  4F                 	db	79
  7995   011981  57                 	db	87
  7996   011982  00                 	db	0
  7997   011983  00                 	db	0
  7998   011984  50                 	db	80
  7999   011985  41                 	db	65
  8000   011986  5F                 	db	95
  8001   011987  48                 	db	72
  8002   011988  49                 	db	73
  8003   011989  47                 	db	71
  8004   01198A  48                 	db	72
  8005   01198B  00                 	db	0
  8006   01198C  50                 	db	80
  8007   01198D  41                 	db	65
  8008   01198E  5F                 	db	95
  8009   01198F  4D                 	db	77
  8010   011990  41                 	db	65
  8011   011991  58                 	db	88
  8012   011992  00                 	db	0
  8013   011993  00                 	db	0
  8014                           
  8015                           	psect	mediumconst
  8016   00FE4E                     __pmediumconst:
  8017                           	callstack 0
  8018   00FE4E  00                 	db	0
  8019   00FE4F                     _SPI1_nrf24:
  8020                           	callstack 0
  8021   00FE4F  E2                 	db	low _SPI1_Initialize
  8022   00FE50  19                 	db	high _SPI1_Initialize
  8023   00FE51  01                 	db	low (_SPI1_Initialize shr (0+16))
  8024   00FE52  00                 	db	0
  8025   00FE53  00                 	db	0
  8026   00FE54  00                 	db	0
  8027   00FE55  0E                 	db	low _SPI1_Open
  8028   00FE56  0B                 	db	high _SPI1_Open
  8029   00FE57  01                 	db	low (_SPI1_Open shr (0+16))
  8030   00FE58  00                 	db	0
  8031   00FE59  00                 	db	0
  8032   00FE5A  00                 	db	0
  8033   00FE5B  00                 	db	0
  8034   00FE5C  00                 	db	0
  8035   00FE5D  00                 	db	0
  8036   00FE5E  00                 	db	0
  8037   00FE5F  00                 	db	0
  8038   00FE60  00                 	db	0
  8039   00FE61  00                 	db	0
  8040   00FE62  00                 	db	0
  8041   00FE63  00                 	db	0
  8042   00FE64  6A                 	db	low _SPI1_ByteExchange
  8043   00FE65  18                 	db	high _SPI1_ByteExchange
  8044   00FE66  01                 	db	low (_SPI1_ByteExchange shr (0+16))
  8045   00FE67  00                 	db	0
  8046   00FE68  00                 	db	0
  8047   00FE69  00                 	db	0
  8048   00FE6A  00                 	db	0
  8049   00FE6B  00                 	db	0
  8050   00FE6C  00                 	db	0
  8051   00FE6D  00                 	db	0
  8052   00FE6E  00                 	db	0
  8053   00FE6F  00                 	db	0
  8054   00FE70  00                 	db	0
  8055   00FE71  00                 	db	0
  8056   00FE72  00                 	db	0
  8057   00FE73  00                 	db	0
  8058   00FE74  00                 	db	0
  8059   00FE75  00                 	db	0
  8060   00FE76  00                 	db	0
  8061   00FE77  00                 	db	0
  8062   00FE78  00                 	db	0
  8063   00FE79                     __end_of_SPI1_nrf24:
  8064                           	callstack 0
  8065   00FE79                     _Timer0:
  8066                           	callstack 0
  8067   00FE79  96                 	db	low _TMR0_Initialize
  8068   00FE7A  18                 	db	high _TMR0_Initialize
  8069   00FE7B  01                 	db	low (_TMR0_Initialize shr (0+16))
  8070   00FE7C  7E                 	db	low _TMR0_Start
  8071   00FE7D  1A                 	db	high _TMR0_Start
  8072   00FE7E  01                 	db	low (_TMR0_Start shr (0+16))
  8073   00FE7F  00                 	db	0
  8074   00FE80  00                 	db	0
  8075   00FE81  00                 	db	0
  8076   00FE82  00                 	db	0
  8077   00FE83  00                 	db	0
  8078   00FE84  00                 	db	0
  8079   00FE85  3A                 	db	low _TMR0_OverflowCallbackRegister
  8080   00FE86  1A                 	db	high _TMR0_OverflowCallbackRegister
  8081   00FE87  01                 	db	low (_TMR0_OverflowCallbackRegister shr (0+16))
  8082   00FE88  00                 	db	0
  8083   00FE89  00                 	db	0
  8084   00FE8A  00                 	db	0
  8085   00FE8B                     __end_of_Timer0:
  8086                           	callstack 0
  8087   00FE8B                     _spi1_configuration:
  8088                           	callstack 0
  8089   00FE8B  02                 	db	2
  8090   00FE8C  C0                 	db	192
  8091   00FE8D  00                 	db	0
  8092   00FE8E  FF                 	db	255
  8093   00FE8F  00                 	db	0
  8094   00FE90  02                 	db	2
  8095   00FE91  C0                 	db	192
  8096   00FE92  00                 	db	0
  8097   00FE93  FF                 	db	255
  8098   00FE94  00                 	db	0
  8099   00FE95  02                 	db	2
  8100   00FE96  40                 	db	64
  8101   00FE97  00                 	db	0
  8102   00FE98  00                 	db	0
  8103   00FE99  00                 	db	0
  8104   00FE9A                     __end_of_spi1_configuration:
  8105                           	callstack 0
  8106   00FE9A                     _rf24_crclength:
  8107                           	callstack 0
  8108   00FE9A  44                 	db	68
  8109   00FE9B  69                 	db	105
  8110   00FE9C  73                 	db	115
  8111   00FE9D  61                 	db	97
  8112   00FE9E  62                 	db	98
  8113   00FE9F  6C                 	db	108
  8114   00FEA0  65                 	db	101
  8115   00FEA1  64                 	db	100
  8116   00FEA2  00                 	db	0
  8117   00FEA3  00                 	db	0
  8118   00FEA4  38                 	db	56
  8119   00FEA5  20                 	db	32
  8120   00FEA6  62                 	db	98
  8121   00FEA7  69                 	db	105
  8122   00FEA8  74                 	db	116
  8123   00FEA9  73                 	db	115
  8124   00FEAA  00                 	db	0
  8125   00FEAB  00                 	db	0
  8126   00FEAC  00                 	db	0
  8127   00FEAD  00                 	db	0
  8128   00FEAE  31                 	db	49
  8129   00FEAF  36                 	db	54
  8130   00FEB0  20                 	db	32
  8131   00FEB1  62                 	db	98
  8132   00FEB2  69                 	db	105
  8133   00FEB3  74                 	db	116
  8134   00FEB4  73                 	db	115
  8135   00FEB5  00                 	db	0
  8136   00FEB6  00                 	db	0
  8137   00FEB7  00                 	db	0
  8138   00FEB8                     __end_of_rf24_crclength:
  8139                           	callstack 0
  8140   00FEB8                     STR_17:
  8141   00FEB8  53                 	db	83	;'S'
  8142   00FEB9  54                 	db	84	;'T'
  8143   00FEBA  41                 	db	65	;'A'
  8144   00FEBB  54                 	db	84	;'T'
  8145   00FEBC  55                 	db	85	;'U'
  8146   00FEBD  53                 	db	83	;'S'
  8147   00FEBE  09                 	db	9
  8148   00FEBF  09                 	db	9
  8149   00FEC0  20                 	db	32
  8150   00FEC1  3D                 	db	61	;'='
  8151   00FEC2  20                 	db	32
  8152   00FEC3  30                 	db	48	;'0'
  8153   00FEC4  78                 	db	120	;'x'
  8154   00FEC5  25                 	db	37
  8155   00FEC6  30                 	db	48	;'0'
  8156   00FEC7  32                 	db	50	;'2'
  8157   00FEC8  78                 	db	120	;'x'
  8158   00FEC9  20                 	db	32
  8159   00FECA  52                 	db	82	;'R'
  8160   00FECB  58                 	db	88	;'X'
  8161   00FECC  5F                 	db	95	;'_'
  8162   00FECD  44                 	db	68	;'D'
  8163   00FECE  52                 	db	82	;'R'
  8164   00FECF  3D                 	db	61	;'='
  8165   00FED0  25                 	db	37
  8166   00FED1  78                 	db	120	;'x'
  8167   00FED2  20                 	db	32
  8168   00FED3  54                 	db	84	;'T'
  8169   00FED4  58                 	db	88	;'X'
  8170   00FED5  5F                 	db	95	;'_'
  8171   00FED6  44                 	db	68	;'D'
  8172   00FED7  53                 	db	83	;'S'
  8173   00FED8  3D                 	db	61	;'='
  8174   00FED9  25                 	db	37
  8175   00FEDA  78                 	db	120	;'x'
  8176   00FEDB  20                 	db	32
  8177   00FEDC  4D                 	db	77	;'M'
  8178   00FEDD  41                 	db	65	;'A'
  8179   00FEDE  58                 	db	88	;'X'
  8180   00FEDF  5F                 	db	95	;'_'
  8181   00FEE0  52                 	db	82	;'R'
  8182   00FEE1  54                 	db	84	;'T'
  8183   00FEE2  3D                 	db	61	;'='
  8184   00FEE3  25                 	db	37
  8185   00FEE4  78                 	db	120	;'x'
  8186   00FEE5  20                 	db	32
  8187   00FEE6  52                 	db	82	;'R'
  8188   00FEE7  58                 	db	88	;'X'
  8189   00FEE8  5F                 	db	95	;'_'
  8190   00FEE9  50                 	db	80	;'P'
  8191   00FEEA  5F                 	db	95	;'_'
  8192   00FEEB  4E                 	db	78	;'N'
  8193   00FEEC  4F                 	db	79	;'O'
  8194   00FEED  3D                 	db	61	;'='
  8195   00FEEE  25                 	db	37
  8196   00FEEF  78                 	db	120	;'x'
  8197   00FEF0  20                 	db	32
  8198   00FEF1  54                 	db	84	;'T'
  8199   00FEF2  58                 	db	88	;'X'
  8200   00FEF3  5F                 	db	95	;'_'
  8201   00FEF4  46                 	db	70	;'F'
  8202   00FEF5  55                 	db	85	;'U'
  8203   00FEF6  4C                 	db	76	;'L'
  8204   00FEF7  4C                 	db	76	;'L'
  8205   00FEF8  3D                 	db	61	;'='
  8206   00FEF9  25                 	db	37
  8207   00FEFA  78                 	db	120	;'x'
  8208   00FEFB  0D                 	db	13
  8209   00FEFC  0A                 	db	10
  8210   00FEFD  00                 	db	0
  8211   00FEFE                     STR_2:
  8212   00FEFE  3D                 	db	61	;'='
  8213   00FEFF  3D                 	db	61	;'='
  8214   00FF00  3D                 	db	61	;'='
  8215   00FF01  3D                 	db	61	;'='
  8216   00FF02  3D                 	db	61	;'='
  8217   00FF03  3D                 	db	61	;'='
  8218   00FF04  3D                 	db	61	;'='
  8219   00FF05  3D                 	db	61	;'='
  8220   00FF06  3D                 	db	61	;'='
  8221   00FF07  3D                 	db	61	;'='
  8222   00FF08  3D                 	db	61	;'='
  8223   00FF09  3D                 	db	61	;'='
  8224   00FF0A  3D                 	db	61	;'='
  8225   00FF0B  3D                 	db	61	;'='
  8226   00FF0C  3D                 	db	61	;'='
  8227   00FF0D  3D                 	db	61	;'='
  8228   00FF0E  20                 	db	32
  8229   00FF0F  4E                 	db	78	;'N'
  8230   00FF10  52                 	db	82	;'R'
  8231   00FF11  46                 	db	70	;'F'
  8232   00FF12  20                 	db	32
  8233   00FF13  43                 	db	67	;'C'
  8234   00FF14  6F                 	db	111	;'o'
  8235   00FF15  6E                 	db	110	;'n'
  8236   00FF16  66                 	db	102	;'f'
  8237   00FF17  69                 	db	105	;'i'
  8238   00FF18  67                 	db	103	;'g'
  8239   00FF19  75                 	db	117	;'u'
  8240   00FF1A  72                 	db	114	;'r'
  8241   00FF1B  61                 	db	97	;'a'
  8242   00FF1C  74                 	db	116	;'t'
  8243   00FF1D  69                 	db	105	;'i'
  8244   00FF1E  6F                 	db	111	;'o'
  8245   00FF1F  6E                 	db	110	;'n'
  8246   00FF20  20                 	db	32
  8247   00FF21  3D                 	db	61	;'='
  8248   00FF22  3D                 	db	61	;'='
  8249   00FF23  3D                 	db	61	;'='
  8250   00FF24  3D                 	db	61	;'='
  8251   00FF25  3D                 	db	61	;'='
  8252   00FF26  3D                 	db	61	;'='
  8253   00FF27  3D                 	db	61	;'='
  8254   00FF28  3D                 	db	61	;'='
  8255   00FF29  3D                 	db	61	;'='
  8256   00FF2A  3D                 	db	61	;'='
  8257   00FF2B  3D                 	db	61	;'='
  8258   00FF2C  3D                 	db	61	;'='
  8259   00FF2D  3D                 	db	61	;'='
  8260   00FF2E  3D                 	db	61	;'='
  8261   00FF2F  3D                 	db	61	;'='
  8262   00FF30  3D                 	db	61	;'='
  8263   00FF31  0A                 	db	10
  8264   00FF32  00                 	db	0
  8265   00FF33                     STR_16:
  8266   00FF33  52                 	db	82	;'R'
  8267   00FF34  65                 	db	101	;'e'
  8268   00FF35  74                 	db	116	;'t'
  8269   00FF36  72                 	db	114	;'r'
  8270   00FF37  61                 	db	97	;'a'
  8271   00FF38  6E                 	db	110	;'n'
  8272   00FF39  73                 	db	115	;'s'
  8273   00FF3A  6D                 	db	109	;'m'
  8274   00FF3B  69                 	db	105	;'i'
  8275   00FF3C  74                 	db	116	;'t'
  8276   00FF3D  09                 	db	9
  8277   00FF3E  20                 	db	32
  8278   00FF3F  3D                 	db	61	;'='
  8279   00FF40  20                 	db	32
  8280   00FF41  25                 	db	37
  8281   00FF42  64                 	db	100	;'d'
  8282   00FF43  20                 	db	32
  8283   00FF44  75                 	db	117	;'u'
  8284   00FF45  73                 	db	115	;'s'
  8285   00FF46  0A                 	db	10
  8286   00FF47  00                 	db	0
  8287   00FF48                     STR_14:
  8288   00FF48  43                 	db	67	;'C'
  8289   00FF49  52                 	db	82	;'R'
  8290   00FF4A  43                 	db	67	;'C'
  8291   00FF4B  20                 	db	32
  8292   00FF4C  4C                 	db	76	;'L'
  8293   00FF4D  65                 	db	101	;'e'
  8294   00FF4E  6E                 	db	110	;'n'
  8295   00FF4F  67                 	db	103	;'g'
  8296   00FF50  74                 	db	116	;'t'
  8297   00FF51  68                 	db	104	;'h'
  8298   00FF52  09                 	db	9
  8299   00FF53  20                 	db	32
  8300   00FF54  3D                 	db	61	;'='
  8301   00FF55  20                 	db	32
  8302   00FF56  25                 	db	37
  8303   00FF57  73                 	db	115	;'s'
  8304   00FF58  0A                 	db	10
  8305   00FF59  00                 	db	0
  8306   00FF5A                     STR_13:
  8307   00FF5A  44                 	db	68	;'D'
  8308   00FF5B  61                 	db	97	;'a'
  8309   00FF5C  74                 	db	116	;'t'
  8310   00FF5D  61                 	db	97	;'a'
  8311   00FF5E  20                 	db	32
  8312   00FF5F  52                 	db	82	;'R'
  8313   00FF60  61                 	db	97	;'a'
  8314   00FF61  74                 	db	116	;'t'
  8315   00FF62  65                 	db	101	;'e'
  8316   00FF63  09                 	db	9
  8317   00FF64  20                 	db	32
  8318   00FF65  3D                 	db	61	;'='
  8319   00FF66  20                 	db	32
  8320   00FF67  25                 	db	37
  8321   00FF68  73                 	db	115	;'s'
  8322   00FF69  0A                 	db	10
  8323   00FF6A  00                 	db	0
  8324   00FF6B                     STR_15:
  8325   00FF6B  50                 	db	80	;'P'
  8326   00FF6C  41                 	db	65	;'A'
  8327   00FF6D  20                 	db	32
  8328   00FF6E  50                 	db	80	;'P'
  8329   00FF6F  6F                 	db	111	;'o'
  8330   00FF70  77                 	db	119	;'w'
  8331   00FF71  65                 	db	101	;'e'
  8332   00FF72  72                 	db	114	;'r'
  8333   00FF73  09                 	db	9
  8334   00FF74  20                 	db	32
  8335   00FF75  3D                 	db	61	;'='
  8336   00FF76  20                 	db	32
  8337   00FF77  25                 	db	37
  8338   00FF78  73                 	db	115	;'s'
  8339   00FF79  0A                 	db	10
  8340   00FF7A  00                 	db	0
  8341   00FF7B                     STR_12:
  8342   00FF7B  44                 	db	68	;'D'
  8343   00FF7C  59                 	db	89	;'Y'
  8344   00FF7D  4E                 	db	78	;'N'
  8345   00FF7E  50                 	db	80	;'P'
  8346   00FF7F  44                 	db	68	;'D'
  8347   00FF80  2F                 	db	47
  8348   00FF81  46                 	db	70	;'F'
  8349   00FF82  45                 	db	69	;'E'
  8350   00FF83  41                 	db	65	;'A'
  8351   00FF84  54                 	db	84	;'T'
  8352   00FF85  55                 	db	85	;'U'
  8353   00FF86  52                 	db	82	;'R'
  8354   00FF87  45                 	db	69	;'E'
  8355   00FF88  00                 	db	0
  8356   00FF89                     STR_3:
  8357   00FF89  52                 	db	82	;'R'
  8358   00FF8A  58                 	db	88	;'X'
  8359   00FF8B  5F                 	db	95	;'_'
  8360   00FF8C  41                 	db	65	;'A'
  8361   00FF8D  44                 	db	68	;'D'
  8362   00FF8E  44                 	db	68	;'D'
  8363   00FF8F  52                 	db	82	;'R'
  8364   00FF90  5F                 	db	95	;'_'
  8365   00FF91  50                 	db	80	;'P'
  8366   00FF92  30                 	db	48	;'0'
  8367   00FF93  2D                 	db	45
  8368   00FF94  31                 	db	49	;'1'
  8369   00FF95  00                 	db	0
  8370   00FF96                     STR_4:
  8371   00FF96  52                 	db	82	;'R'
  8372   00FF97  58                 	db	88	;'X'
  8373   00FF98  5F                 	db	95	;'_'
  8374   00FF99  41                 	db	65	;'A'
  8375   00FF9A  44                 	db	68	;'D'
  8376   00FF9B  44                 	db	68	;'D'
  8377   00FF9C  52                 	db	82	;'R'
  8378   00FF9D  5F                 	db	95	;'_'
  8379   00FF9E  50                 	db	80	;'P'
  8380   00FF9F  32                 	db	50	;'2'
  8381   00FFA0  2D                 	db	45
  8382   00FFA1  35                 	db	53	;'5'
  8383   00FFA2  00                 	db	0
  8384   00FFA3                     STR_6:
  8385   00FFA3  52                 	db	82	;'R'
  8386   00FFA4  58                 	db	88	;'X'
  8387   00FFA5  5F                 	db	95	;'_'
  8388   00FFA6  50                 	db	80	;'P'
  8389   00FFA7  57                 	db	87	;'W'
  8390   00FFA8  5F                 	db	95	;'_'
  8391   00FFA9  50                 	db	80	;'P'
  8392   00FFAA  30                 	db	48	;'0'
  8393   00FFAB  2D                 	db	45
  8394   00FFAC  36                 	db	54	;'6'
  8395   00FFAD  00                 	db	0
  8396   00FFAE                     STR_8:
  8397   00FFAE  45                 	db	69	;'E'
  8398   00FFAF  4E                 	db	78	;'N'
  8399   00FFB0  5F                 	db	95	;'_'
  8400   00FFB1  52                 	db	82	;'R'
  8401   00FFB2  58                 	db	88	;'X'
  8402   00FFB3  41                 	db	65	;'A'
  8403   00FFB4  44                 	db	68	;'D'
  8404   00FFB5  44                 	db	68	;'D'
  8405   00FFB6  52                 	db	82	;'R'
  8406   00FFB7  00                 	db	0
  8407   00FFB8                     STR_5:
  8408   00FFB8  54                 	db	84	;'T'
  8409   00FFB9  58                 	db	88	;'X'
  8410   00FFBA  5F                 	db	95	;'_'
  8411   00FFBB  41                 	db	65	;'A'
  8412   00FFBC  44                 	db	68	;'D'
  8413   00FFBD  44                 	db	68	;'D'
  8414   00FFBE  52                 	db	82	;'R'
  8415   00FFBF  09                 	db	9
  8416   00FFC0  00                 	db	0
  8417   00FFC1                     STR_10:
  8418   00FFC1  52                 	db	82	;'R'
  8419   00FFC2  46                 	db	70	;'F'
  8420   00FFC3  5F                 	db	95	;'_'
  8421   00FFC4  53                 	db	83	;'S'
  8422   00FFC5  45                 	db	69	;'E'
  8423   00FFC6  54                 	db	84	;'T'
  8424   00FFC7  55                 	db	85	;'U'
  8425   00FFC8  50                 	db	80	;'P'
  8426   00FFC9  00                 	db	0
  8427   00FFCA                     STR_11:
  8428   00FFCA  43                 	db	67	;'C'
  8429   00FFCB  4F                 	db	79	;'O'
  8430   00FFCC  4E                 	db	78	;'N'
  8431   00FFCD  46                 	db	70	;'F'
  8432   00FFCE  49                 	db	73	;'I'
  8433   00FFCF  47                 	db	71	;'G'
  8434   00FFD0  09                 	db	9
  8435   00FFD1  00                 	db	0
  8436   00FFD2                     STR_23:
  8437   00FFD2  20                 	db	32
  8438   00FFD3  30                 	db	48	;'0'
  8439   00FFD4  78                 	db	120	;'x'
  8440   00FFD5  25                 	db	37
  8441   00FFD6  30                 	db	48	;'0'
  8442   00FFD7  32                 	db	50	;'2'
  8443   00FFD8  78                 	db	120	;'x'
  8444   00FFD9  00                 	db	0
  8445   00FFDA                     STR_25:
  8446   00FFDA  28                 	db	40
  8447   00FFDB  6E                 	db	110	;'n'
  8448   00FFDC  75                 	db	117	;'u'
  8449   00FFDD  6C                 	db	108	;'l'
  8450   00FFDE  6C                 	db	108	;'l'
  8451   00FFDF  29                 	db	41
  8452   00FFE0  00                 	db	0
  8453   00FFE1                     STR_7:
  8454   00FFE1  45                 	db	69	;'E'
  8455   00FFE2  4E                 	db	78	;'N'
  8456   00FFE3  5F                 	db	95	;'_'
  8457   00FFE4  41                 	db	65	;'A'
  8458   00FFE5  41                 	db	65	;'A'
  8459   00FFE6  09                 	db	9
  8460   00FFE7  00                 	db	0
  8461   00FFE8                     STR_9:
  8462   00FFE8  52                 	db	82	;'R'
  8463   00FFE9  46                 	db	70	;'F'
  8464   00FFEA  5F                 	db	95	;'_'
  8465   00FFEB  43                 	db	67	;'C'
  8466   00FFEC  48                 	db	72	;'H'
  8467   00FFED  09                 	db	9
  8468   00FFEE  00                 	db	0
  8469   00FFEF                     STR_18:
  8470   00FFEF  25                 	db	37
  8471   00FFF0  73                 	db	115	;'s'
  8472   00FFF1  09                 	db	9
  8473   00FFF2  20                 	db	32
  8474   00FFF3  3D                 	db	61	;'='
  8475   00FFF4  00                 	db	0
  8476   00FFF5                     STR_1:
  8477   00FFF5  46                 	db	70	;'F'
  8478   00FFF6  47                 	db	71	;'G'
  8479   00FFF7  48                 	db	72	;'H'
  8480   00FFF8  49                 	db	73	;'I'
  8481   00FFF9  4A                 	db	74	;'J'
  8482   00FFFA  00                 	db	0
  8483   00FFFB                     STR_19:
  8484   00FFFB  20                 	db	32
  8485   00FFFC  30                 	db	48	;'0'
  8486   00FFFD  78                 	db	120	;'x'
  8487   00FFFE  00                 	db	0
  8488   00FFD5                     STR_20          equ	STR_23+3
  8489   00FFEF                     STR_22          equ	STR_18
  8490   00FEFB                     STR_21          equ	STR_17+67
  8491   00FEFB                     STR_24          equ	STR_17+67
  8492   00FFFF  00                 	db	0	; dummy byte at the end
  8493   000003                     __activetblptr  equ	3
  8494                           
  8495                           	psect	nvBANK5
  8496   0005EF                     __pnvBANK5:
  8497                           	callstack 0
  8498   0005EF                     _TMR0_OverflowCallback:
  8499                           	callstack 0
  8500   0005EF                     	ds	3
  8501   0005F2                     _INT2_InterruptHandler:
  8502                           	callstack 0
  8503   0005F2                     	ds	3
  8504   0005F5                     _INT1_InterruptHandler:
  8505                           	callstack 0
  8506   0005F5                     	ds	3
  8507   0005F8                     _INT0_InterruptHandler:
  8508                           	callstack 0
  8509   0005F8                     	ds	3
  8510   0000AC                     _ACTCON         set	172
  8511   0000B0                     _OSCTUNE        set	176
  8512   0000B1                     _OSCFRQ         set	177
  8513   0000B3                     _OSCEN          set	179
  8514   0000AF                     _OSCCON3        set	175
  8515   0000AD                     _OSCCON1        set	173
  8516   000080                     _SPI1RXB        set	128
  8517   000081                     _SPI1TXB        set	129
  8518   000082                     _SPI1TCNTL      set	130
  8519   000083                     _SPI1TCNTH      set	131
  8520   00008A                     _SPI1INTFbits   set	138
  8521   000084                     _SPI1CON0bits   set	132
  8522   000087                     _SPI1STATUSbits set	135
  8523   00008C                     _SPI1CLK        set	140
  8524   000089                     _SPI1BAUD       set	137
  8525   000086                     _SPI1CON2       set	134
  8526   000085                     _SPI1CON1       set	133
  8527   000084                     _SPI1CON0       set	132
  8528   000217                     _RC6PPS         set	535
  8529   00026A                     _SPI1SCKPPS     set	618
  8530   000215                     _RC4PPS         set	533
  8531   00026B                     _SPI1SDIPPS     set	619
  8532   000286                     _RC4I2C         set	646
  8533   000287                     _RC3I2C         set	647
  8534   000288                     _RB2I2C         set	648
  8535   000289                     _RB1I2C         set	649
  8536   00031A                     _T0CON0bits     set	794
  8537   00031A                     _T0CON0         set	794
  8538   00031B                     _T0CON1         set	795
  8539   000318                     _TMR0L          set	792
  8540   000319                     _TMR0H          set	793
  8541   000427                     _IOCEF          set	1063
  8542   000426                     _IOCEN          set	1062
  8543   000425                     _IOCEP          set	1061
  8544   000417                     _IOCCF          set	1047
  8545   000416                     _IOCCN          set	1046
  8546   000415                     _IOCCP          set	1045
  8547   00040F                     _IOCBF          set	1039
  8548   00040E                     _IOCBN          set	1038
  8549   00040D                     _IOCBP          set	1037
  8550   000407                     _IOCAF          set	1031
  8551   000406                     _IOCAN          set	1030
  8552   000405                     _IOCAP          set	1029
  8553   00042C                     _INLVLF         set	1068
  8554   000424                     _INLVLE         set	1060
  8555   00041C                     _INLVLD         set	1052
  8556   000414                     _INLVLC         set	1044
  8557   00040C                     _INLVLB         set	1036
  8558   000404                     _INLVLA         set	1028
  8559   00042B                     _SLRCONF        set	1067
  8560   000423                     _SLRCONE        set	1059
  8561   00041B                     _SLRCOND        set	1051
  8562   000413                     _SLRCONC        set	1043
  8563   00040B                     _SLRCONB        set	1035
  8564   000403                     _SLRCONA        set	1027
  8565   000429                     _WPUF           set	1065
  8566   000421                     _WPUE           set	1057
  8567   000419                     _WPUD           set	1049
  8568   000411                     _WPUC           set	1041
  8569   000409                     _WPUB           set	1033
  8570   000401                     _WPUA           set	1025
  8571   000428                     _ANSELF         set	1064
  8572   000420                     _ANSELE         set	1056
  8573   000418                     _ANSELD         set	1048
  8574   000410                     _ANSELC         set	1040
  8575   000408                     _ANSELB         set	1032
  8576   000400                     _ANSELA         set	1024
  8577   00042A                     _ODCONF         set	1066
  8578   000422                     _ODCONE         set	1058
  8579   00041A                     _ODCOND         set	1050
  8580   000412                     _ODCONC         set	1042
  8581   00040A                     _ODCONB         set	1034
  8582   000402                     _ODCONA         set	1026
  8583   0004C0                     _LATCbits       set	1216
  8584   0004C3                     _LATFbits       set	1219
  8585   0004B8                     _PIR10bits      set	1208
  8586   0004B4                     _PIR6bits       set	1204
  8587   0004AF                     _PIR1bits       set	1199
  8588   0004D6                     _INTCON0bits    set	1238
  8589   0004CB                     _TRISF          set	1227
  8590   0004CA                     _TRISE          set	1226
  8591   0004C9                     _TRISD          set	1225
  8592   0004C8                     _TRISC          set	1224
  8593   0004C7                     _TRISB          set	1223
  8594   0004C6                     _TRISA          set	1222
  8595   0004C3                     _LATF           set	1219
  8596   0004C2                     _LATE           set	1218
  8597   0004C1                     _LATD           set	1217
  8598   0004C0                     _LATC           set	1216
  8599   0004BF                     _LATB           set	1215
  8600   0004BE                     _LATA           set	1214
  8601   0004B1                     _PIR3bits       set	1201
  8602   0004C8                     _TRISCbits      set	1224
  8603   0004A1                     _PIE3bits       set	1185
  8604                           
  8605                           ; #config settings
  8606                           
  8607                           	psect	cinit
  8608   0113BA                     __pcinit:
  8609                           	callstack 0
  8610   0113BA                     start_initialization:
  8611                           	callstack 0
  8612   0113BA                     __initialization:
  8613                           	callstack 0
  8614                           
  8615                           ; Initialize objects allocated to BANK6 (32 bytes)
  8616                           ; load TBLPTR registers with __pidataBANK6
  8617   0113BA  0E74               	movlw	low __pidataBANK6
  8618   0113BC  6EF6               	movwf	tblptrl,c
  8619   0113BE  0E19               	movlw	high __pidataBANK6
  8620   0113C0  6EF7               	movwf	tblptrh,c
  8621   0113C2  0E01               	movlw	low (__pidataBANK6 shr (0+16))
  8622   0113C4  6EF8               	movwf	tblptru,c
  8623   0113C6  EE01  F200         	lfsr	0,__pdataBANK6
  8624   0113CA  EE10 F020          	lfsr	1,32
  8625   0113CE                     copy_data0:
  8626   0113CE  0009               	tblrd		*+
  8627   0113D0  C4F5 F4EE          	movff	tablat,postinc0
  8628   0113D4  50E5               	movf	postdec1,w,c
  8629   0113D6  50E1               	movf	fsr1l,w,c
  8630   0113D8  E1FA               	bnz	copy_data0
  8631                           
  8632                           ; Initialize objects allocated to BANK5 (56 bytes)
  8633                           ; load TBLPTR registers with __pidataBANK5
  8634   0113DA  0E4E               	movlw	low __pidataBANK5
  8635   0113DC  6EF6               	movwf	tblptrl,c
  8636   0113DE  0E16               	movlw	high __pidataBANK5
  8637   0113E0  6EF7               	movwf	tblptrh,c
  8638   0113E2  0E01               	movlw	low (__pidataBANK5 shr (0+16))
  8639   0113E4  6EF8               	movwf	tblptru,c
  8640   0113E6  EE01  F160         	lfsr	0,__pdataBANK5
  8641   0113EA  EE10 F038          	lfsr	1,56
  8642   0113EE                     copy_data1:
  8643   0113EE  0009               	tblrd		*+
  8644   0113F0  C4F5 F4EE          	movff	tablat,postinc0
  8645   0113F4  50E5               	movf	postdec1,w,c
  8646   0113F6  50E1               	movf	fsr1l,w,c
  8647   0113F8  E1FA               	bnz	copy_data1
  8648                           
  8649                           ; Clear objects allocated to BANK5 (34 bytes)
  8650   0113FA  EE01  F1CD         	lfsr	0,__pbssBANK5
  8651   0113FE  0E22               	movlw	34
  8652   011400                     clear_0:
  8653   011400  6AEE               	clrf	postinc0,c
  8654   011402  06E8               	decf	wreg,f,c
  8655   011404  E1FD               	bnz	clear_0
  8656                           
  8657                           ; Clear objects allocated to COMRAM (3 bytes)
  8658   011406  6A5C               	clrf	(__pbssCOMRAM+2)& (0+255),c
  8659   011408  6A5B               	clrf	(__pbssCOMRAM+1)& (0+255),c
  8660   01140A  6A5A               	clrf	__pbssCOMRAM& (0+255),c
  8661                           
  8662                           ;
  8663                           ; Setup IVTBASE
  8664                           ;
  8665   00045D                     IVTBASEL        equ	1117
  8666   00045E                     IVTBASEH        equ	1118
  8667   00045F                     IVTBASEU        equ	1119
  8668   01140C  0104               	movlb	4
  8669   01140E  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  8670   011410  6F5D               	movwf	93,b
  8671   011412  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  8672   011414  6F5E               	movwf	94,b
  8673   011416  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  8674   011418  6F5F               	movwf	95,b
  8675   01141A                     end_of_initialization:
  8676                           	callstack 0
  8677   01141A                     __end_of__initialization:
  8678                           	callstack 0
  8679   01141A  0100               	movlb	0
  8680   01141C  EFF3  F08B         	goto	_main	;jump to C main() function
  8681                           
  8682                           	psect	bssCOMRAM
  8683   00055A                     __pbssCOMRAM:
  8684                           	callstack 0
  8685   00055A                     _width:
  8686                           	callstack 0
  8687   00055A                     	ds	2
  8688   00055C                     _flags:
  8689                           	callstack 0
  8690   00055C                     	ds	1
  8691                           
  8692                           	psect	bssBANK5
  8693   0005CD                     __pbssBANK5:
  8694                           	callstack 0
  8695   0005CD                     _prec:
  8696                           	callstack 0
  8697   0005CD                     	ds	2
  8698   0005CF                     _dbuf:
  8699                           	callstack 0
  8700   0005CF                     	ds	32
  8701                           
  8702                           	psect	dataBANK5
  8703   000560                     __pdataBANK5:
  8704                           	callstack 0
  8705   000560                     sender@F17891:
  8706                           	callstack 0
  8707   000560                     	ds	32
  8708   000580                     _rf24_datarates:
  8709                           	callstack 0
  8710   000580                     	ds	24
  8711                           
  8712                           	psect	dataBANK6
  8713   000600                     __pdataBANK6:
  8714                           	callstack 0
  8715   000600                     _rf24_pa_dbm:
  8716                           	callstack 0
  8717   000600                     	ds	32
  8718                           
  8719                           	psect	cstackBANK5
  8720   000598                     __pcstackBANK5:
  8721                           	callstack 0
  8722   000598                     Nrf24_print_address_register@buffer:
  8723                           	callstack 0
  8724                           
  8725                           ; 5 bytes @ 0x0
  8726   000598                     	ds	5
  8727   00059D                     Nrf24_print_address_register@i:
  8728                           	callstack 0
  8729                           
  8730                           ; 2 bytes @ 0x5
  8731   00059D                     	ds	2
  8732   00059F                     ??_Nrf24_printDetails:
  8733                           
  8734                           ; 1 bytes @ 0x7
  8735   00059F                     	ds	4
  8736   0005A3                     Nrf24_printDetails@delay:
  8737                           	callstack 0
  8738                           
  8739                           ; 2 bytes @ 0xB
  8740   0005A3                     	ds	2
  8741   0005A5                     Nrf24_printDetails@retransmit:
  8742                           	callstack 0
  8743                           
  8744                           ; 1 bytes @ 0xD
  8745   0005A5                     	ds	1
  8746   0005A6                     sender@pvParameters:
  8747                           	callstack 0
  8748                           
  8749                           ; 2 bytes @ 0xE
  8750   0005A6                     	ds	2
  8751   0005A8                     sender@buf:
  8752                           	callstack 0
  8753                           
  8754                           ; 32 bytes @ 0x10
  8755   0005A8                     	ds	32
  8756   0005C8                     sender@ret:
  8757                           	callstack 0
  8758                           
  8759                           ; 2 bytes @ 0x30
  8760   0005C8                     	ds	2
  8761   0005CA                     sender@nrf:
  8762                           	callstack 0
  8763                           
  8764                           ; 3 bytes @ 0x32
  8765   0005CA                     	ds	3
  8766                           
  8767                           	psect	cstackCOMRAM
  8768   000501                     __pcstackCOMRAM:
  8769                           	callstack 0
  8770   000501                     ??_led_toggle:
  8771                           
  8772                           ; 1 bytes @ 0x0
  8773   000501                     	ds	1
  8774   000502                     ??_INTERRUPT_InterruptManager:
  8775                           
  8776                           ; 1 bytes @ 0x1
  8777   000502                     	ds	2
  8778   000504                     ?___awdiv:
  8779                           	callstack 0
  8780   000504                     ?___awmod:
  8781                           	callstack 0
  8782   000504                     ?_read_prec_or_width:
  8783                           	callstack 0
  8784   000504                     SPI1_Open@spiConfigIndex:
  8785                           	callstack 0
  8786   000504                     SPI1_ByteExchange@byteData:
  8787                           	callstack 0
  8788   000504                     DELAY_milliseconds@milliseconds:
  8789                           	callstack 0
  8790   000504                     DELAY_microseconds@microseconds:
  8791                           	callstack 0
  8792   000504                     ___awdiv@dividend:
  8793                           	callstack 0
  8794   000504                     ___awmod@dividend:
  8795                           	callstack 0
  8796   000504                     read_prec_or_width@fmt:
  8797                           	callstack 0
  8798   000504                     fputc@c:
  8799                           	callstack 0
  8800   000504                     INT0_SetInterruptHandler@InterruptHandler:
  8801                           	callstack 0
  8802   000504                     INT1_SetInterruptHandler@InterruptHandler:
  8803                           	callstack 0
  8804   000504                     INT2_SetInterruptHandler@InterruptHandler:
  8805                           	callstack 0
  8806   000504                     TMR0_OverflowCallbackRegister@CallbackHandler:
  8807                           	callstack 0
  8808   000504                     
  8809                           ; 1 bytes @ 0x3
  8810   000504                     	ds	1
  8811   000505                     SPI1_ByteExchange@returnValue:
  8812                           	callstack 0
  8813   000505                     Nrf24_init@dev:
  8814                           	callstack 0
  8815                           
  8816                           ; 2 bytes @ 0x4
  8817   000505                     	ds	1
  8818   000506                     Nrf24_configRegister@value:
  8819                           	callstack 0
  8820   000506                     SPI_read_buff@buffer:
  8821                           	callstack 0
  8822   000506                     SPI_write_buff@buffer:
  8823                           	callstack 0
  8824   000506                     Nrf24_flushRx@dev:
  8825                           	callstack 0
  8826   000506                     ___awdiv@divisor:
  8827                           	callstack 0
  8828   000506                     ___awmod@divisor:
  8829                           	callstack 0
  8830   000506                     read_prec_or_width@ap:
  8831                           	callstack 0
  8832   000506                     fputc@fp:
  8833                           	callstack 0
  8834   000506                     ??_DELAY_milliseconds:
  8835   000506                     
  8836                           ; 1 bytes @ 0x5
  8837   000506                     	ds	1
  8838   000507                     Nrf24_configRegister@reg:
  8839                           	callstack 0
  8840   000507                     
  8841                           ; 1 bytes @ 0x6
  8842   000507                     	ds	1
  8843   000508                     SPI_read_buff@bytes:
  8844                           	callstack 0
  8845   000508                     SPI_write_buff@bytes:
  8846                           	callstack 0
  8847   000508                     ___awdiv@counter:
  8848                           	callstack 0
  8849   000508                     ___awmod@counter:
  8850                           	callstack 0
  8851   000508                     Nrf24_powerUpRx@dev:
  8852                           	callstack 0
  8853   000508                     Nrf24_powerUpTx@dev:
  8854                           	callstack 0
  8855   000508                     ??_fputc:
  8856   000508                     ??_read_prec_or_width:
  8857                           
  8858                           ; 1 bytes @ 0x7
  8859   000508                     	ds	1
  8860   000509                     SPI_read_buff@i:
  8861                           	callstack 0
  8862   000509                     SPI_write_buff@i:
  8863                           	callstack 0
  8864   000509                     ___awdiv@sign:
  8865                           	callstack 0
  8866   000509                     ___awmod@sign:
  8867                           	callstack 0
  8868   000509                     
  8869                           ; 1 bytes @ 0x8
  8870   000509                     	ds	1
  8871   00050A                     ?_abs:
  8872                           	callstack 0
  8873   00050A                     read_prec_or_width@c:
  8874                           	callstack 0
  8875   00050A                     Nrf24_readRegister@value:
  8876                           	callstack 0
  8877   00050A                     Nrf24_writeRegister@value:
  8878                           	callstack 0
  8879   00050A                     ___awdiv@quotient:
  8880                           	callstack 0
  8881   00050A                     abs@a:
  8882                           	callstack 0
  8883   00050A                     
  8884                           ; 1 bytes @ 0x9
  8885   00050A                     	ds	1
  8886   00050B                     read_prec_or_width@n:
  8887                           	callstack 0
  8888                           
  8889                           ; 2 bytes @ 0xA
  8890   00050B                     	ds	1
  8891   00050C                     Nrf24_readRegister@len:
  8892                           	callstack 0
  8893   00050C                     Nrf24_writeRegister@len:
  8894                           	callstack 0
  8895   00050C                     ??_abs:
  8896                           
  8897                           ; 1 bytes @ 0xB
  8898   00050C                     	ds	1
  8899   00050D                     Nrf24_readRegister@reg:
  8900                           	callstack 0
  8901   00050D                     Nrf24_writeRegister@reg:
  8902                           	callstack 0
  8903   00050D                     stoa@fp:
  8904                           	callstack 0
  8905   00050D                     fputs@s:
  8906                           	callstack 0
  8907   00050D                     
  8908                           ; 1 bytes @ 0xC
  8909   00050D                     	ds	1
  8910   00050E                     ?_Nrf24_setTADDR:
  8911                           	callstack 0
  8912   00050E                     Nrf24_setTADDR@dev:
  8913                           	callstack 0
  8914   00050E                     Nrf24_getStatus@dev:
  8915                           	callstack 0
  8916   00050E                     Nrf24_SetSpeedDataRates@dev:
  8917                           	callstack 0
  8918   00050E                     Nrf24_setRetransmitDelay@dev:
  8919                           	callstack 0
  8920   00050E                     Nrf24_getDataRate@dev:
  8921                           	callstack 0
  8922   00050E                     Nrf24_getCRCLength@dev:
  8923                           	callstack 0
  8924   00050E                     Nrf24_getPALevel@dev:
  8925                           	callstack 0
  8926   00050E                     Nrf24_getRetransmitDelay@dev:
  8927                           	callstack 0
  8928                           
  8929                           ; 2 bytes @ 0xD
  8930   00050E                     	ds	1
  8931   00050F                     stoa@s:
  8932                           	callstack 0
  8933   00050F                     fputs@fp:
  8934                           	callstack 0
  8935                           
  8936                           ; 2 bytes @ 0xE
  8937   00050F                     	ds	1
  8938   000510                     Nrf24_getStatus@rv:
  8939                           	callstack 0
  8940   000510                     Nrf24_SetSpeedDataRates@val:
  8941                           	callstack 0
  8942   000510                     Nrf24_setRetransmitDelay@val:
  8943                           	callstack 0
  8944   000510                     Nrf24_getDataRate@result:
  8945                           	callstack 0
  8946   000510                     Nrf24_getCRCLength@result:
  8947                           	callstack 0
  8948   000510                     Nrf24_getPALevel@level:
  8949                           	callstack 0
  8950   000510                     Nrf24_getRetransmitDelay@value:
  8951                           	callstack 0
  8952   000510                     Nrf24_setTADDR@adr:
  8953                           	callstack 0
  8954   000510                     
  8955                           ; 1 bytes @ 0xF
  8956   000510                     	ds	1
  8957   000511                     Nrf24_SetSpeedDataRates@value:
  8958                           	callstack 0
  8959   000511                     Nrf24_setRetransmitDelay@value:
  8960                           	callstack 0
  8961   000511                     Nrf24_getDataRate@dr:
  8962                           	callstack 0
  8963   000511                     Nrf24_getCRCLength@AA:
  8964                           	callstack 0
  8965   000511                     fputs@c:
  8966                           	callstack 0
  8967   000511                     Nrf24_config@dev:
  8968                           	callstack 0
  8969   000511                     Nrf24_send@dev:
  8970                           	callstack 0
  8971   000511                     Nrf24_isSend@dev:
  8972                           	callstack 0
  8973   000511                     ??_stoa:
  8974                           
  8975                           ; 1 bytes @ 0x10
  8976   000511                     	ds	1
  8977   000512                     Nrf24_getCRCLength@config:
  8978                           	callstack 0
  8979   000512                     AdvancedSettings@dev:
  8980                           	callstack 0
  8981   000512                     fputs@i:
  8982                           	callstack 0
  8983   000512                     ??_Nrf24_setTADDR:
  8984                           
  8985                           ; 1 bytes @ 0x11
  8986   000512                     	ds	1
  8987   000513                     Nrf24_config@channel:
  8988                           	callstack 0
  8989   000513                     Nrf24_send@value:
  8990                           	callstack 0
  8991   000513                     Nrf24_isSend@timeout:
  8992                           	callstack 0
  8993   000513                     stoa@p:
  8994                           	callstack 0
  8995                           
  8996                           ; 2 bytes @ 0x12
  8997   000513                     	ds	1
  8998   000514                     Nrf24_config@payload:
  8999                           	callstack 0
  9000   000514                     pad@fp:
  9001                           	callstack 0
  9002   000514                     
  9003                           ; 1 bytes @ 0x13
  9004   000514                     	ds	1
  9005   000515                     stoa@w:
  9006                           	callstack 0
  9007   000515                     Nrf24_setTADDR@buffer:
  9008                           	callstack 0
  9009   000515                     ??_Nrf24_send:
  9010   000515                     ??_Nrf24_isSend:
  9011                           
  9012                           ; 1 bytes @ 0x14
  9013   000515                     	ds	1
  9014   000516                     Nrf24_send@status:
  9015                           	callstack 0
  9016   000516                     pad@buf:
  9017                           	callstack 0
  9018                           
  9019                           ; 2 bytes @ 0x15
  9020   000516                     	ds	1
  9021   000517                     stoa@cp:
  9022                           	callstack 0
  9023                           
  9024                           ; 2 bytes @ 0x16
  9025   000517                     	ds	1
  9026   000518                     pad@p:
  9027                           	callstack 0
  9028                           
  9029                           ; 2 bytes @ 0x17
  9030   000518                     	ds	1
  9031   000519                     stoa@l:
  9032                           	callstack 0
  9033   000519                     Nrf24_isSend@i:
  9034                           	callstack 0
  9035                           
  9036                           ; 4 bytes @ 0x18
  9037   000519                     	ds	1
  9038   00051A                     Nrf24_setTADDR@ret:
  9039                           	callstack 0
  9040   00051A                     ??_pad:
  9041                           
  9042                           ; 1 bytes @ 0x19
  9043   00051A                     	ds	1
  9044   00051B                     pad@i:
  9045                           	callstack 0
  9046                           
  9047                           ; 2 bytes @ 0x1A
  9048   00051B                     	ds	1
  9049   00051C                     Nrf24_setTADDR@i:
  9050                           	callstack 0
  9051                           
  9052                           ; 2 bytes @ 0x1B
  9053   00051C                     	ds	1
  9054   00051D                     Nrf24_isSend@status:
  9055                           	callstack 0
  9056   00051D                     dtoa@fp:
  9057                           	callstack 0
  9058   00051D                     xtoa@fp:
  9059                           	callstack 0
  9060                           
  9061                           ; 2 bytes @ 0x1C
  9062   00051D                     	ds	2
  9063   00051F                     dtoa@d:
  9064                           	callstack 0
  9065   00051F                     xtoa@d:
  9066                           	callstack 0
  9067                           
  9068                           ; 2 bytes @ 0x1E
  9069   00051F                     	ds	2
  9070   000521                     _dtoa$1908:
  9071                           	callstack 0
  9072   000521                     ??_xtoa:
  9073                           
  9074                           ; 1 bytes @ 0x20
  9075   000521                     	ds	2
  9076   000523                     dtoa@p:
  9077                           	callstack 0
  9078                           
  9079                           ; 1 bytes @ 0x22
  9080   000523                     	ds	1
  9081   000524                     xtoa@p:
  9082                           	callstack 0
  9083   000524                     dtoa@w:
  9084                           	callstack 0
  9085                           
  9086                           ; 2 bytes @ 0x23
  9087   000524                     	ds	1
  9088   000525                     xtoa@w:
  9089                           	callstack 0
  9090                           
  9091                           ; 2 bytes @ 0x24
  9092   000525                     	ds	1
  9093   000526                     dtoa@s:
  9094                           	callstack 0
  9095                           
  9096                           ; 1 bytes @ 0x25
  9097   000526                     	ds	1
  9098   000527                     xtoa@c:
  9099                           	callstack 0
  9100   000527                     dtoa@i:
  9101                           	callstack 0
  9102                           
  9103                           ; 2 bytes @ 0x26
  9104   000527                     	ds	1
  9105   000528                     xtoa@i:
  9106                           	callstack 0
  9107                           
  9108                           ; 2 bytes @ 0x27
  9109   000528                     	ds	2
  9110   00052A                     vfpfcnvrt@fp:
  9111                           	callstack 0
  9112                           
  9113                           ; 2 bytes @ 0x29
  9114   00052A                     	ds	2
  9115   00052C                     vfpfcnvrt@fmt:
  9116                           	callstack 0
  9117                           
  9118                           ; 2 bytes @ 0x2B
  9119   00052C                     	ds	2
  9120   00052E                     vfpfcnvrt@ap:
  9121                           	callstack 0
  9122                           
  9123                           ; 2 bytes @ 0x2D
  9124   00052E                     	ds	2
  9125   000530                     ??_vfpfcnvrt:
  9126                           
  9127                           ; 1 bytes @ 0x2F
  9128   000530                     	ds	2
  9129   000532                     vfpfcnvrt@convarg:
  9130                           	callstack 0
  9131                           
  9132                           ; 4 bytes @ 0x31
  9133   000532                     	ds	4
  9134   000536                     vfpfcnvrt@done:
  9135                           	callstack 0
  9136                           
  9137                           ; 1 bytes @ 0x35
  9138   000536                     	ds	1
  9139   000537                     vfpfcnvrt@cp:
  9140                           	callstack 0
  9141                           
  9142                           ; 2 bytes @ 0x36
  9143   000537                     	ds	2
  9144   000539                     ?_vfprintf:
  9145                           	callstack 0
  9146   000539                     vfprintf@fp:
  9147                           	callstack 0
  9148                           
  9149                           ; 2 bytes @ 0x38
  9150   000539                     	ds	2
  9151   00053B                     vfprintf@fmt:
  9152                           	callstack 0
  9153                           
  9154                           ; 2 bytes @ 0x3A
  9155   00053B                     	ds	2
  9156   00053D                     vfprintf@ap:
  9157                           	callstack 0
  9158                           
  9159                           ; 2 bytes @ 0x3C
  9160   00053D                     	ds	2
  9161   00053F                     vfprintf@cfmt:
  9162                           	callstack 0
  9163   00053F                     
  9164                           ; 1 bytes @ 0x3E
  9165   00053F                     	ds	2
  9166   000541                     ?_printf:
  9167                           	callstack 0
  9168   000541                     printf@fmt:
  9169                           	callstack 0
  9170                           
  9171                           ; 2 bytes @ 0x40
  9172   000541                     	ds	14
  9173   00054F                     printf@ap:
  9174                           	callstack 0
  9175   00054F                     
  9176                           ; 1 bytes @ 0x4E
  9177   00054F                     	ds	2
  9178   000551                     Nrf24_print_address_register@dev:
  9179                           	callstack 0
  9180   000551                     Nrf24_print_byte_register@dev:
  9181                           	callstack 0
  9182   000551                     ??_Nrf24_print_status:
  9183                           
  9184                           ; 1 bytes @ 0x50
  9185   000551                     	ds	1
  9186   000552                     Nrf24_print_status@status:
  9187                           	callstack 0
  9188                           
  9189                           ; 1 bytes @ 0x51
  9190   000552                     	ds	1
  9191   000553                     Nrf24_print_address_register@name:
  9192                           	callstack 0
  9193   000553                     Nrf24_print_byte_register@name:
  9194                           	callstack 0
  9195                           
  9196                           ; 2 bytes @ 0x52
  9197   000553                     	ds	2
  9198   000555                     Nrf24_print_address_register@reg:
  9199                           	callstack 0
  9200   000555                     Nrf24_print_byte_register@reg:
  9201                           	callstack 0
  9202                           
  9203                           ; 1 bytes @ 0x54
  9204   000555                     	ds	1
  9205   000556                     Nrf24_print_address_register@qty:
  9206                           	callstack 0
  9207   000556                     Nrf24_print_byte_register@qty:
  9208                           	callstack 0
  9209                           
  9210                           ; 1 bytes @ 0x55
  9211   000556                     	ds	1
  9212   000557                     Nrf24_print_byte_register@buffer:
  9213                           	callstack 0
  9214   000557                     ??_Nrf24_print_address_register:
  9215   000557                     
  9216                           ; 1 bytes @ 0x56
  9217   000557                     	ds	1
  9218   000558                     Nrf24_printDetails@dev:
  9219                           	callstack 0
  9220                           
  9221                           ; 2 bytes @ 0x57
  9222   000558                     	ds	2
  9223   00055A                     
  9224                           ; 1 bytes @ 0x59
  9225 ;;
  9226 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  9227 ;;
  9228 ;; *************** function _main *****************
  9229 ;; Defined at:
  9230 ;;		line 112 in file "main.c"
  9231 ;; Parameters:    Size  Location     Type
  9232 ;;		None
  9233 ;; Auto vars:     Size  Location     Type
  9234 ;;		None
  9235 ;; Return value:  Size  Location     Type
  9236 ;;                  1    wreg      void 
  9237 ;; Registers used:
  9238 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9239 ;; Tracked objects:
  9240 ;;		On entry : 0/0
  9241 ;;		On exit  : 0/0
  9242 ;;		Unchanged: 0/0
  9243 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  9244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9248 ;;Total ram usage:        0 bytes
  9249 ;; Hardware stack levels required when called: 14
  9250 ;; This function calls:
  9251 ;;		_SYSTEM_Initialize
  9252 ;;		_TMR0_OverflowCallbackRegister
  9253 ;;		_TMR0_Start
  9254 ;;		_sender
  9255 ;; This function is called by:
  9256 ;;		Startup code after reset
  9257 ;; This function uses a non-reentrant model
  9258 ;;
  9259                           
  9260                           	psect	text0
  9261   0117E6                     __ptext0:
  9262                           	callstack 0
  9263   0117E6                     _main:
  9264                           	callstack 113
  9265   0117E6                     
  9266                           ;main.c: 114:     SYSTEM_Initialize();
  9267   0117E6  EC08  F08D         	call	_SYSTEM_Initialize	;wreg free
  9268   0117EA                     
  9269                           ;main.c: 115:     (INTCON0bits.GIE = 1);
  9270   0117EA  8ED6               	bsf	214,7,c	;volatile
  9271                           
  9272                           ;main.c: 116:     TMR0_OverflowCallbackRegister(led_toggle);
  9273   0117EC  0EBE               	movlw	low _led_toggle
  9274   0117EE  6E04               	movwf	TMR0_OverflowCallbackRegister@CallbackHandler^(0+1280),c
  9275   0117F0  0E18               	movlw	high _led_toggle
  9276   0117F2  6E05               	movwf	(TMR0_OverflowCallbackRegister@CallbackHandler+1)^(0+1280),c
  9277   0117F4  0E01               	movlw	low (_led_toggle shr (0+16))
  9278   0117F6  6E06               	movwf	(TMR0_OverflowCallbackRegister@CallbackHandler+2)^(0+1280),c
  9279   0117F8  EC1D  F08D         	call	_TMR0_OverflowCallbackRegister	;wreg free
  9280   0117FC                     
  9281                           ;main.c: 117:     TMR0_Start();
  9282   0117FC  EC3F  F08D         	call	_TMR0_Start	;wreg free
  9283   011800                     
  9284                           ;main.c: 125:     sender(((void*)0));
  9285   011800  0E00               	movlw	0
  9286   011802  0105               	movlb	5	; () banked
  9287   011804  6FA6               	movwf	sender@pvParameters& (0+255),b
  9288   011806  0E00               	movlw	0
  9289   011808  6FA7               	movwf	(sender@pvParameters+1)& (0+255),b
  9290   01180A  ECEC  F085         	call	_sender	;wreg free
  9291   01180E  EF0D  F000         	goto	start
  9292   011812                     __end_of_main:
  9293                           	callstack 0
  9294                           
  9295 ;; *************** function _sender *****************
  9296 ;; Defined at:
  9297 ;;		line 82 in file "main.c"
  9298 ;; Parameters:    Size  Location     Type
  9299 ;;  pvParameters    2   14[BANK5 ] PTR void 
  9300 ;;		 -> NULL(0), 
  9301 ;; Auto vars:     Size  Location     Type
  9302 ;;  buf            32   16[BANK5 ] unsigned char [32]
  9303 ;;  nrf             3   50[BANK5 ] struct .
  9304 ;;  ret             2   48[BANK5 ] int 
  9305 ;;  channel         1    0        unsigned char 
  9306 ;;  payload         1    0        unsigned char 
  9307 ;; Return value:  Size  Location     Type
  9308 ;;                  1    wreg      void 
  9309 ;; Registers used:
  9310 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9311 ;; Tracked objects:
  9312 ;;		On entry : 0/0
  9313 ;;		On exit  : 0/0
  9314 ;;		Unchanged: 0/0
  9315 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  9316 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9317 ;;      Locals:         0      37       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9319 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9320 ;;Total ram usage:       39 bytes
  9321 ;; Hardware stack levels used: 1
  9322 ;; Hardware stack levels required when called: 13
  9323 ;; This function calls:
  9324 ;;		_AdvancedSettings
  9325 ;;		_DELAY_milliseconds
  9326 ;;		_Nrf24_config
  9327 ;;		_Nrf24_init
  9328 ;;		_Nrf24_isSend
  9329 ;;		_Nrf24_printDetails
  9330 ;;		_Nrf24_send
  9331 ;;		_Nrf24_setTADDR
  9332 ;; This function is called by:
  9333 ;;		_main
  9334 ;; This function uses a non-reentrant model
  9335 ;;
  9336                           
  9337                           	psect	text1
  9338   010BD8                     __ptext1:
  9339                           	callstack 0
  9340   010BD8                     _sender:
  9341                           	callstack 113
  9342   010BD8                     
  9343                           ;main.c: 82: void sender(void *pvParameters);main.c: 83: {;main.c: 84:  NRF24_t nrf;;mai
      +                          n.c: 85:  Nrf24_init(&nrf);
  9344   010BD8  0ECA               	movlw	low sender@nrf
  9345   010BDA  6E05               	movwf	Nrf24_init@dev^(0+1280),c
  9346   010BDC  0E05               	movlw	high sender@nrf
  9347   010BDE  6E06               	movwf	(Nrf24_init@dev+1)^(0+1280),c
  9348   010BE0  EC09  F08C         	call	_Nrf24_init	;wreg free
  9349   010BE4                     
  9350                           ;main.c: 88:  Nrf24_config(&nrf, channel, payload);
  9351   010BE4  0ECA               	movlw	low sender@nrf
  9352   010BE6  6E11               	movwf	Nrf24_config@dev^(0+1280),c
  9353   010BE8  0E05               	movlw	high sender@nrf
  9354   010BEA  6E12               	movwf	(Nrf24_config@dev+1)^(0+1280),c
  9355   010BEC  0E73               	movlw	115
  9356   010BEE  6E13               	movwf	Nrf24_config@channel^(0+1280),c
  9357   010BF0  0E20               	movlw	32
  9358   010BF2  6E14               	movwf	Nrf24_config@payload^(0+1280),c
  9359   010BF4  EC34  F089         	call	_Nrf24_config	;wreg free
  9360   010BF8                     
  9361                           ;main.c: 91:  int ret = Nrf24_setTADDR(&nrf, (uint8_t *)"FGHIJ");
  9362   010BF8  0ECA               	movlw	low sender@nrf
  9363   010BFA  6E0E               	movwf	Nrf24_setTADDR@dev^(0+1280),c
  9364   010BFC  0E05               	movlw	high sender@nrf
  9365   010BFE  6E0F               	movwf	(Nrf24_setTADDR@dev+1)^(0+1280),c
  9366   010C00  0EF5               	movlw	low STR_1
  9367   010C02  6E10               	movwf	Nrf24_setTADDR@adr^(0+1280),c
  9368   010C04  0EFF               	movlw	high STR_1
  9369   010C06  6E11               	movwf	(Nrf24_setTADDR@adr+1)^(0+1280),c
  9370   010C08  EC60  F087         	call	_Nrf24_setTADDR	;wreg free
  9371   010C0C  C50E  F5C8         	movff	?_Nrf24_setTADDR,sender@ret
  9372   010C10  C50F  F5C9         	movff	?_Nrf24_setTADDR+1,sender@ret+1
  9373   010C14                     
  9374                           ;main.c: 92:  if (ret != 0) {
  9375   010C14  0105               	movlb	5	; () banked
  9376   010C16  51C8               	movf	sender@ret& (0+255),w,b
  9377   010C18  11C9               	iorwf	(sender@ret+1)& (0+255),w,b
  9378   010C1A  B4D8               	btfsc	status,2,c
  9379   010C1C  EF12  F086         	goto	u3431
  9380   010C20  EF14  F086         	goto	u3430
  9381   010C24                     u3431:
  9382   010C24  EF1C  F086         	goto	l4245
  9383   010C28                     u3430:
  9384   010C28                     l4243:
  9385   010C28  0E00               	movlw	0
  9386   010C2A  6E05               	movwf	(DELAY_milliseconds@milliseconds+1)^(0+1280),c
  9387   010C2C  0E01               	movlw	1
  9388   010C2E  6E04               	movwf	DELAY_milliseconds@milliseconds^(0+1280),c
  9389   010C30  ECC3  F08B         	call	_DELAY_milliseconds	;wreg free
  9390   010C34  EF14  F086         	goto	l4243
  9391   010C38                     l4245:
  9392                           
  9393                           ; BSR set to: 5
  9394                           ;main.c: 97:  AdvancedSettings(&nrf);
  9395   010C38  0ECA               	movlw	low sender@nrf
  9396   010C3A  6E12               	movwf	AdvancedSettings@dev^(0+1280),c
  9397   010C3C  0E05               	movlw	high sender@nrf
  9398   010C3E  6E13               	movwf	(AdvancedSettings@dev+1)^(0+1280),c
  9399   010C40  ECA9  F08C         	call	_AdvancedSettings	;wreg free
  9400   010C44                     
  9401                           ;main.c: 101:  Nrf24_printDetails(&nrf);
  9402   010C44  0ECA               	movlw	low sender@nrf
  9403   010C46  6E58               	movwf	Nrf24_printDetails@dev^(0+1280),c
  9404   010C48  0E05               	movlw	high sender@nrf
  9405   010C4A  6E59               	movwf	(Nrf24_printDetails@dev+1)^(0+1280),c
  9406   010C4C  ECC7  F081         	call	_Nrf24_printDetails	;wreg free
  9407   010C50                     
  9408                           ;main.c: 103:  uint8_t buf[32] = "cowabunga.";
  9409   010C50  EE21  F160         	lfsr	2,sender@F17891
  9410   010C54  EE11  F1A8         	lfsr	1,sender@buf
  9411   010C58  0E1F               	movlw	31
  9412   010C5A                     u3441:
  9413   010C5A  C4DB F4E3          	movff	plusw2,plusw1
  9414   010C5E  06E8               	decf	wreg,f,c
  9415   010C60  E2FC               	bc	u3441
  9416   010C62                     l4251:
  9417                           
  9418                           ;main.c: 105:   Nrf24_send(&nrf, buf);
  9419   010C62  0ECA               	movlw	low sender@nrf
  9420   010C64  6E11               	movwf	Nrf24_send@dev^(0+1280),c
  9421   010C66  0E05               	movlw	high sender@nrf
  9422   010C68  6E12               	movwf	(Nrf24_send@dev+1)^(0+1280),c
  9423   010C6A  0EA8               	movlw	low sender@buf
  9424   010C6C  6E13               	movwf	Nrf24_send@value^(0+1280),c
  9425   010C6E  0E05               	movlw	high sender@buf
  9426   010C70  6E14               	movwf	(Nrf24_send@value+1)^(0+1280),c
  9427   010C72  EC58  F088         	call	_Nrf24_send	;wreg free
  9428   010C76                     
  9429                           ;main.c: 106:   Nrf24_isSend(&nrf, 1000);
  9430   010C76  0ECA               	movlw	low sender@nrf
  9431   010C78  6E11               	movwf	Nrf24_isSend@dev^(0+1280),c
  9432   010C7A  0E05               	movlw	high sender@nrf
  9433   010C7C  6E12               	movwf	(Nrf24_isSend@dev+1)^(0+1280),c
  9434   010C7E  0E03               	movlw	3
  9435   010C80  6E14               	movwf	(Nrf24_isSend@timeout+1)^(0+1280),c
  9436   010C82  0EE8               	movlw	232
  9437   010C84  6E13               	movwf	Nrf24_isSend@timeout^(0+1280),c
  9438   010C86  ECAF  F086         	call	_Nrf24_isSend	;wreg free
  9439   010C8A                     
  9440                           ;main.c: 107:   DELAY_milliseconds(1);
  9441   010C8A  0E00               	movlw	0
  9442   010C8C  6E05               	movwf	(DELAY_milliseconds@milliseconds+1)^(0+1280),c
  9443   010C8E  0E01               	movlw	1
  9444   010C90  6E04               	movwf	DELAY_milliseconds@milliseconds^(0+1280),c
  9445   010C92  ECC3  F08B         	call	_DELAY_milliseconds	;wreg free
  9446   010C96  EF31  F086         	goto	l4251
  9447   010C9A  0012               	return		;funcret
  9448   010C9C                     __end_of_sender:
  9449                           	callstack 0
  9450                           
  9451 ;; *************** function _Nrf24_setTADDR *****************
  9452 ;; Defined at:
  9453 ;;		line 115 in file "mirf.c"
  9454 ;; Parameters:    Size  Location     Type
  9455 ;;  dev             2   13[COMRAM] PTR struct .
  9456 ;;		 -> sender@nrf(3), 
  9457 ;;  adr             2   15[COMRAM] PTR unsigned char 
  9458 ;;		 -> STR_1(6), 
  9459 ;; Auto vars:     Size  Location     Type
  9460 ;;  i               2   27[COMRAM] int 
  9461 ;;  buffer          5   20[COMRAM] unsigned char [5]
  9462 ;;  ret             2   25[COMRAM] int 
  9463 ;; Return value:  Size  Location     Type
  9464 ;;                  2   13[COMRAM] int 
  9465 ;; Registers used:
  9466 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9467 ;; Tracked objects:
  9468 ;;		On entry : 0/0
  9469 ;;		On exit  : 0/0
  9470 ;;		Unchanged: 0/0
  9471 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  9472 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9473 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9474 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9475 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9476 ;;Total ram usage:       16 bytes
  9477 ;; Hardware stack levels used: 1
  9478 ;; Hardware stack levels required when called: 6
  9479 ;; This function calls:
  9480 ;;		_Nrf24_readRegister
  9481 ;;		_Nrf24_writeRegister
  9482 ;; This function is called by:
  9483 ;;		_sender
  9484 ;; This function uses a non-reentrant model
  9485 ;;
  9486                           
  9487                           	psect	text2
  9488   010EC0                     __ptext2:
  9489                           	callstack 0
  9490   010EC0                     _Nrf24_setTADDR:
  9491                           	callstack 119
  9492   010EC0                     
  9493                           ;mirf.c: 115: int Nrf24_setTADDR(NRF24_t * dev, uint8_t * adr);mirf.c: 116: {;mirf.c: 11
      +                          7:  int ret = 0;
  9494   010EC0  0E00               	movlw	0
  9495   010EC2  6E1B               	movwf	(Nrf24_setTADDR@ret+1)^(0+1280),c
  9496   010EC4  0E00               	movlw	0
  9497   010EC6  6E1A               	movwf	Nrf24_setTADDR@ret^(0+1280),c
  9498   010EC8                     
  9499                           ;mirf.c: 118:  Nrf24_writeRegister(0x0A, adr, 5);
  9500   010EC8  C510  F50A         	movff	Nrf24_setTADDR@adr,Nrf24_writeRegister@value
  9501   010ECC  C511  F50B         	movff	Nrf24_setTADDR@adr+1,Nrf24_writeRegister@value+1
  9502   010ED0  0E05               	movlw	5
  9503   010ED2  6E0C               	movwf	Nrf24_writeRegister@len^(0+1280),c
  9504   010ED4  0E0A               	movlw	10
  9505   010ED6  EC91  F08B         	call	_Nrf24_writeRegister
  9506   010EDA                     
  9507                           ;mirf.c: 119:  Nrf24_writeRegister(0x10, adr, 5);
  9508   010EDA  C510  F50A         	movff	Nrf24_setTADDR@adr,Nrf24_writeRegister@value
  9509   010EDE  C511  F50B         	movff	Nrf24_setTADDR@adr+1,Nrf24_writeRegister@value+1
  9510   010EE2  0E05               	movlw	5
  9511   010EE4  6E0C               	movwf	Nrf24_writeRegister@len^(0+1280),c
  9512   010EE6  0E10               	movlw	16
  9513   010EE8  EC91  F08B         	call	_Nrf24_writeRegister
  9514   010EEC                     
  9515                           ;mirf.c: 120:  uint8_t buffer[5];;mirf.c: 121:  Nrf24_readRegister(0x0A, buffer, sizeof(
      +                          buffer));
  9516   010EEC  0E15               	movlw	low Nrf24_setTADDR@buffer
  9517   010EEE  6E0A               	movwf	Nrf24_readRegister@value^(0+1280),c
  9518   010EF0  0E05               	movlw	high Nrf24_setTADDR@buffer
  9519   010EF2  6E0B               	movwf	(Nrf24_readRegister@value+1)^(0+1280),c
  9520   010EF4  0E05               	movlw	5
  9521   010EF6  6E0C               	movwf	Nrf24_readRegister@len^(0+1280),c
  9522   010EF8  0E0A               	movlw	10
  9523   010EFA  ECDB  F08B         	call	_Nrf24_readRegister
  9524   010EFE                     
  9525                           ;mirf.c: 122:  for (int i=0;i<5;i++) {
  9526   010EFE  0E00               	movlw	0
  9527   010F00  6E1D               	movwf	(Nrf24_setTADDR@i+1)^(0+1280),c
  9528   010F02  0E00               	movlw	0
  9529   010F04  6E1C               	movwf	Nrf24_setTADDR@i^(0+1280),c
  9530   010F06                     l4165:
  9531                           
  9532                           ;mirf.c: 123:   if (adr[i] != buffer[i]) ret = -1;
  9533   010F06  0E15               	movlw	low Nrf24_setTADDR@buffer
  9534   010F08  241C               	addwf	Nrf24_setTADDR@i^(0+1280),w,c
  9535   010F0A  6ED9               	movwf	fsr2l,c
  9536   010F0C  0E05               	movlw	high Nrf24_setTADDR@buffer
  9537   010F0E  201D               	addwfc	(Nrf24_setTADDR@i+1)^(0+1280),w,c
  9538   010F10  6EDA               	movwf	fsr2h,c
  9539   010F12  501C               	movf	Nrf24_setTADDR@i^(0+1280),w,c
  9540   010F14  2410               	addwf	Nrf24_setTADDR@adr^(0+1280),w,c
  9541   010F16  6E13               	movwf	(??_Nrf24_setTADDR+1)^(0+1280),c
  9542   010F18  501D               	movf	(Nrf24_setTADDR@i+1)^(0+1280),w,c
  9543   010F1A  2011               	addwfc	(Nrf24_setTADDR@adr+1)^(0+1280),w,c
  9544   010F1C  6E14               	movwf	(??_Nrf24_setTADDR+2)^(0+1280),c
  9545   010F1E  C513  F4F6         	movff	??_Nrf24_setTADDR+1,tblptrl
  9546   010F22  C514  F4F7         	movff	??_Nrf24_setTADDR+2,tblptrh
  9547   010F26                     	if	0	;tblptru may be non-zero
  9548   010F26                     	endif
  9549   010F26                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9550   010F26  0E00               	movlw	low (__mediumconst shr (0+16))
  9551   010F28  6EF8               	movwf	tblptru,c
  9552   010F2A                     	endif
  9553   010F2A  50DE               	movf	postinc2,w,c
  9554   010F2C  0009               	tblrd		*+
  9555   010F2E  18F5               	xorwf	tablat,w,c
  9556   010F30  B4D8               	btfsc	status,2,c
  9557   010F32  EF9D  F087         	goto	u3351
  9558   010F36  EF9F  F087         	goto	u3350
  9559   010F3A                     u3351:
  9560   010F3A  EFA1  F087         	goto	l4169
  9561   010F3E                     u3350:
  9562   010F3E  681A               	setf	Nrf24_setTADDR@ret^(0+1280),c
  9563   010F40  681B               	setf	(Nrf24_setTADDR@ret+1)^(0+1280),c
  9564   010F42                     l4169:
  9565                           
  9566                           ;mirf.c: 124:  }
  9567   010F42  4A1C               	infsnz	Nrf24_setTADDR@i^(0+1280),f,c
  9568   010F44  2A1D               	incf	(Nrf24_setTADDR@i+1)^(0+1280),f,c
  9569   010F46  BE1D               	btfsc	(Nrf24_setTADDR@i+1)^(0+1280),7,c
  9570   010F48  EFAF  F087         	goto	u3361
  9571   010F4C  501D               	movf	(Nrf24_setTADDR@i+1)^(0+1280),w,c
  9572   010F4E  E109               	bnz	u3360
  9573   010F50  0E05               	movlw	5
  9574   010F52  5C1C               	subwf	Nrf24_setTADDR@i^(0+1280),w,c
  9575   010F54  A0D8               	btfss	status,0,c
  9576   010F56  EFAF  F087         	goto	u3361
  9577   010F5A  EFB1  F087         	goto	u3360
  9578   010F5E                     u3361:
  9579   010F5E  EF83  F087         	goto	l4165
  9580   010F62                     u3360:
  9581   010F62                     
  9582                           ;mirf.c: 125:  return ret;
  9583   010F62  C51A  F50E         	movff	Nrf24_setTADDR@ret,?_Nrf24_setTADDR
  9584   010F66  C51B  F50F         	movff	Nrf24_setTADDR@ret+1,?_Nrf24_setTADDR+1
  9585   010F6A  0012               	return		;funcret
  9586   010F6C                     __end_of_Nrf24_setTADDR:
  9587                           	callstack 0
  9588                           
  9589 ;; *************** function _Nrf24_writeRegister *****************
  9590 ;; Defined at:
  9591 ;;		line 218 in file "mirf.c"
  9592 ;; Parameters:    Size  Location     Type
  9593 ;;  reg             1    wreg     unsigned char 
  9594 ;;  value           2    9[COMRAM] PTR unsigned char 
  9595 ;;		 -> STR_1(6), 
  9596 ;;  len             1   11[COMRAM] unsigned char 
  9597 ;; Auto vars:     Size  Location     Type
  9598 ;;  reg             1   12[COMRAM] unsigned char 
  9599 ;; Return value:  Size  Location     Type
  9600 ;;                  1    wreg      void 
  9601 ;; Registers used:
  9602 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9603 ;; Tracked objects:
  9604 ;;		On entry : 0/0
  9605 ;;		On exit  : 0/0
  9606 ;;		Unchanged: 0/0
  9607 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  9608 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9609 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9611 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9612 ;;Total ram usage:        4 bytes
  9613 ;; Hardware stack levels used: 1
  9614 ;; Hardware stack levels required when called: 5
  9615 ;; This function calls:
  9616 ;;		_SPI1_ByteExchange
  9617 ;;		_SPI_write_buff
  9618 ;; This function is called by:
  9619 ;;		_Nrf24_setTADDR
  9620 ;;		_Nrf24_setRADDR
  9621 ;; This function uses a non-reentrant model
  9622 ;;
  9623                           
  9624                           	psect	text3
  9625   011722                     __ptext3:
  9626                           	callstack 0
  9627   011722                     _Nrf24_writeRegister:
  9628                           	callstack 119
  9629                           
  9630                           ;incstack = 0
  9631                           ;Nrf24_writeRegister@reg stored from wreg
  9632   011722  6E0D               	movwf	Nrf24_writeRegister@reg^(0+1280),c
  9633   011724                     
  9634                           ;mirf.c: 218: void Nrf24_writeRegister(uint8_t reg, uint8_t * value, uint8_t len);mirf.c
      +                          : 219: {;mirf.c: 220:     if(len) {
  9635   011724  500C               	movf	Nrf24_writeRegister@len^(0+1280),w,c
  9636   011726  B4D8               	btfsc	status,2,c
  9637   011728  EF98  F08B         	goto	u3181
  9638   01172C  EF9A  F08B         	goto	u3180
  9639   011730                     u3181:
  9640   011730  EFA9  F08B         	goto	l641
  9641   011734                     u3180:
  9642   011734  92C0               	bcf	192,1,c	;volatile
  9643   011736                     
  9644                           ;mirf.c: 222:         SPI1_ByteExchange(0x20 | (0x1F & reg));
  9645   011736  500D               	movf	Nrf24_writeRegister@reg^(0+1280),w,c
  9646   011738  0B1F               	andlw	31
  9647   01173A  0920               	iorlw	32
  9648   01173C  EC35  F08C         	call	_SPI1_ByteExchange
  9649   011740                     
  9650                           ;mirf.c: 223:         SPI_write_buff(value, len);
  9651   011740  C50A  F506         	movff	Nrf24_writeRegister@value,SPI_write_buff@buffer
  9652   011744  C50B  F507         	movff	Nrf24_writeRegister@value+1,SPI_write_buff@buffer+1
  9653   011748  C50C  F508         	movff	Nrf24_writeRegister@len,SPI_write_buff@bytes
  9654   01174C  EC3F  F08A         	call	_SPI_write_buff	;wreg free
  9655   011750  82C0               	bsf	192,1,c	;volatile
  9656   011752                     l641:
  9657   011752  0012               	return		;funcret
  9658   011754                     __end_of_Nrf24_writeRegister:
  9659                           	callstack 0
  9660                           
  9661 ;; *************** function _Nrf24_send *****************
  9662 ;; Defined at:
  9663 ;;		line 230 in file "mirf.c"
  9664 ;; Parameters:    Size  Location     Type
  9665 ;;  dev             2   16[COMRAM] PTR struct .
  9666 ;;		 -> sender@nrf(3), 
  9667 ;;  value           2   18[COMRAM] PTR unsigned char 
  9668 ;;		 -> sender@buf(32), 
  9669 ;; Auto vars:     Size  Location     Type
  9670 ;;  status          1   21[COMRAM] unsigned char 
  9671 ;; Return value:  Size  Location     Type
  9672 ;;                  1    wreg      void 
  9673 ;; Registers used:
  9674 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9675 ;; Tracked objects:
  9676 ;;		On entry : 0/0
  9677 ;;		On exit  : 0/0
  9678 ;;		Unchanged: 0/0
  9679 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  9680 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9681 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9682 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9683 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9684 ;;Total ram usage:        6 bytes
  9685 ;; Hardware stack levels used: 1
  9686 ;; Hardware stack levels required when called: 7
  9687 ;; This function calls:
  9688 ;;		_Nrf24_getStatus
  9689 ;;		_Nrf24_powerUpTx
  9690 ;;		_SPI1_ByteExchange
  9691 ;;		_SPI_write_buff
  9692 ;; This function is called by:
  9693 ;;		_sender
  9694 ;; This function uses a non-reentrant model
  9695 ;;
  9696                           
  9697                           	psect	text4
  9698   0110B0                     __ptext4:
  9699                           	callstack 0
  9700   0110B0                     _Nrf24_send:
  9701                           	callstack 118
  9702   0110B0  C511  F50E         	movff	Nrf24_send@dev,Nrf24_getStatus@dev
  9703   0110B4  C512  F50F         	movff	Nrf24_send@dev+1,Nrf24_getStatus@dev+1
  9704   0110B8  ECFD  F08C         	call	_Nrf24_getStatus	;wreg free
  9705                           
  9706                           ;mirf.c: 234:  while (dev->PTX)
  9707   0110BC  EF79  F088         	goto	l4189
  9708   0110C0                     l4183:
  9709                           
  9710                           ;mirf.c: 235:  {;mirf.c: 236:   status = Nrf24_getStatus(dev);
  9711   0110C0  C511  F50E         	movff	Nrf24_send@dev,Nrf24_getStatus@dev
  9712   0110C4  C512  F50F         	movff	Nrf24_send@dev+1,Nrf24_getStatus@dev+1
  9713   0110C8  ECFD  F08C         	call	_Nrf24_getStatus	;wreg free
  9714   0110CC  6E16               	movwf	Nrf24_send@status^(0+1280),c
  9715   0110CE                     
  9716                           ;mirf.c: 237:   if ((status & ((1 << 5) | (1 << 4))))
  9717   0110CE  C516  F515         	movff	Nrf24_send@status,??_Nrf24_send
  9718   0110D2  0E30               	movlw	48
  9719   0110D4  1615               	andwf	??_Nrf24_send^(0+1280),f,c
  9720   0110D6  B4D8               	btfsc	status,2,c
  9721   0110D8  EF70  F088         	goto	u3371
  9722   0110DC  EF72  F088         	goto	u3370
  9723   0110E0                     u3371:
  9724   0110E0  EF79  F088         	goto	l4189
  9725   0110E4                     u3370:
  9726   0110E4                     
  9727                           ;mirf.c: 238:   {;mirf.c: 239:    dev->PTX = 0;
  9728   0110E4  C511  F4D9         	movff	Nrf24_send@dev,fsr2l
  9729   0110E8  C512  F4DA         	movff	Nrf24_send@dev+1,fsr2h
  9730   0110EC  6ADF               	clrf	indf2,c
  9731                           
  9732                           ;mirf.c: 240:    break;
  9733   0110EE  EF85  F088         	goto	l648
  9734   0110F2                     l4189:
  9735                           
  9736                           ;mirf.c: 234:  while (dev->PTX)
  9737   0110F2  C511  F4D9         	movff	Nrf24_send@dev,fsr2l
  9738   0110F6  C512  F4DA         	movff	Nrf24_send@dev+1,fsr2h
  9739   0110FA  50DF               	movf	indf2,w,c
  9740   0110FC  A4D8               	btfss	status,2,c
  9741   0110FE  EF83  F088         	goto	u3381
  9742   011102  EF85  F088         	goto	u3380
  9743   011106                     u3381:
  9744   011106  EF60  F088         	goto	l4183
  9745   01110A                     u3380:
  9746   01110A                     l648:
  9747   01110A  94C0               	bcf	192,2,c	;volatile
  9748   01110C                     
  9749                           ;mirf.c: 244:  Nrf24_powerUpTx(dev);
  9750   01110C  C511  F508         	movff	Nrf24_send@dev,Nrf24_powerUpTx@dev
  9751   011110  C512  F509         	movff	Nrf24_send@dev+1,Nrf24_powerUpTx@dev+1
  9752   011114  EC98  F08C         	call	_Nrf24_powerUpTx	;wreg free
  9753   011118  92C0               	bcf	192,1,c	;volatile
  9754   01111A                     
  9755                           ;mirf.c: 246:  SPI1_ByteExchange(0xE1);
  9756   01111A  0EE1               	movlw	225
  9757   01111C  EC35  F08C         	call	_SPI1_ByteExchange
  9758   011120  82C0               	bsf	192,1,c	;volatile
  9759   011122  92C0               	bcf	192,1,c	;volatile
  9760   011124                     
  9761                           ;mirf.c: 249:  SPI1_ByteExchange(0xA0);
  9762   011124  0EA0               	movlw	160
  9763   011126  EC35  F08C         	call	_SPI1_ByteExchange
  9764   01112A                     
  9765                           ;mirf.c: 250:  SPI_write_buff(value, dev->payload);
  9766   01112A  C513  F506         	movff	Nrf24_send@value,SPI_write_buff@buffer
  9767   01112E  C514  F507         	movff	Nrf24_send@value+1,SPI_write_buff@buffer+1
  9768   011132  EE20 F002          	lfsr	2,2
  9769   011136  5011               	movf	Nrf24_send@dev^(0+1280),w,c
  9770   011138  26D9               	addwf	fsr2l,f,c
  9771   01113A  5012               	movf	(Nrf24_send@dev+1)^(0+1280),w,c
  9772   01113C  22DA               	addwfc	fsr2h,f,c
  9773   01113E  50DF               	movf	indf2,w,c
  9774   011140  6E08               	movwf	SPI_write_buff@bytes^(0+1280),c
  9775   011142  EC3F  F08A         	call	_SPI_write_buff	;wreg free
  9776   011146  82C0               	bsf	192,1,c	;volatile
  9777   011148  84C0               	bsf	192,2,c	;volatile
  9778   01114A  0012               	return		;funcret
  9779   01114C                     __end_of_Nrf24_send:
  9780                           	callstack 0
  9781                           
  9782 ;; *************** function _SPI_write_buff *****************
  9783 ;; Defined at:
  9784 ;;		line 54 in file "mirf.c"
  9785 ;; Parameters:    Size  Location     Type
  9786 ;;  buffer          2    5[COMRAM] PTR unsigned char 
  9787 ;;		 -> sender@buf(32), STR_1(6), 
  9788 ;;  bytes           1    7[COMRAM] unsigned char 
  9789 ;; Auto vars:     Size  Location     Type
  9790 ;;  i               1    8[COMRAM] unsigned char 
  9791 ;; Return value:  Size  Location     Type
  9792 ;;                  1    wreg      void 
  9793 ;; Registers used:
  9794 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9795 ;; Tracked objects:
  9796 ;;		On entry : 0/0
  9797 ;;		On exit  : 0/0
  9798 ;;		Unchanged: 0/0
  9799 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  9800 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9801 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9803 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9804 ;;Total ram usage:        4 bytes
  9805 ;; Hardware stack levels used: 1
  9806 ;; Hardware stack levels required when called: 4
  9807 ;; This function calls:
  9808 ;;		_DELAY_microseconds
  9809 ;;		_SPI1_ByteExchange
  9810 ;; This function is called by:
  9811 ;;		_Nrf24_writeRegister
  9812 ;;		_Nrf24_send
  9813 ;; This function uses a non-reentrant model
  9814 ;;
  9815                           
  9816                           	psect	text5
  9817   01147E                     __ptext5:
  9818                           	callstack 0
  9819   01147E                     _SPI_write_buff:
  9820                           	callstack 119
  9821   01147E  92C0               	bcf	192,1,c	;volatile
  9822   011480                     
  9823                           ;mirf.c: 56:     unsigned char i;;mirf.c: 57:     for (i = 0; i < bytes; i++) {
  9824   011480  6A09               	clrf	SPI_write_buff@i^(0+1280),c
  9825   011482  EF5F  F08A         	goto	l3971
  9826   011486                     l3963:
  9827                           
  9828                           ;mirf.c: 58:         SPI1_ByteExchange(*buffer);
  9829   011486  C506  F4F6         	movff	SPI_write_buff@buffer,tblptrl
  9830   01148A  C507  F4F7         	movff	SPI_write_buff@buffer+1,tblptrh
  9831   01148E  0E00               	movlw	low (__mediumconst shr (0+16))
  9832   011490  6EF8               	movwf	tblptru,c
  9833   011492  0E25               	movlw	(high __ramtop+-1)
  9834   011494  64F7               	cpfsgt	tblptrh,c
  9835   011496  D003               	bra	u3137
  9836   011498  0008               	tblrd		*
  9837   01149A  50F5               	movf	tablat,w,c
  9838   01149C  D005               	bra	u3130
  9839   01149E                     u3137:
  9840   01149E  C4F6 F4E9          	movff	tblptrl,fsr0l
  9841   0114A2  C4F7 F4EA          	movff	tblptrh,fsr0h
  9842   0114A6  50EF               	movf	indf0,w,c
  9843   0114A8                     u3130:
  9844   0114A8  EC35  F08C         	call	_SPI1_ByteExchange
  9845   0114AC                     
  9846                           ;mirf.c: 59:         buffer++;
  9847   0114AC  4A06               	infsnz	SPI_write_buff@buffer^(0+1280),f,c
  9848   0114AE  2A07               	incf	(SPI_write_buff@buffer+1)^(0+1280),f,c
  9849   0114B0                     
  9850                           ;mirf.c: 60:         DELAY_microseconds(10);
  9851   0114B0  0E00               	movlw	0
  9852   0114B2  6E05               	movwf	(DELAY_microseconds@microseconds+1)^(0+1280),c
  9853   0114B4  0E0A               	movlw	10
  9854   0114B6  6E04               	movwf	DELAY_microseconds@microseconds^(0+1280),c
  9855   0114B8  EC6A  F08A         	call	_DELAY_microseconds	;wreg free
  9856   0114BC                     
  9857                           ;mirf.c: 61:     }
  9858   0114BC  2A09               	incf	SPI_write_buff@i^(0+1280),f,c
  9859   0114BE                     l3971:
  9860   0114BE  5008               	movf	SPI_write_buff@bytes^(0+1280),w,c
  9861   0114C0  5C09               	subwf	SPI_write_buff@i^(0+1280),w,c
  9862   0114C2  A0D8               	btfss	status,0,c
  9863   0114C4  EF66  F08A         	goto	u3141
  9864   0114C8  EF68  F08A         	goto	u3140
  9865   0114CC                     u3141:
  9866   0114CC  EF43  F08A         	goto	l3963
  9867   0114D0                     u3140:
  9868   0114D0  82C0               	bsf	192,1,c	;volatile
  9869   0114D2  0012               	return		;funcret
  9870   0114D4                     __end_of_SPI_write_buff:
  9871                           	callstack 0
  9872                           
  9873 ;; *************** function _DELAY_microseconds *****************
  9874 ;; Defined at:
  9875 ;;		line 43 in file "mcc_generated_files/timer/src/delay.c"
  9876 ;; Parameters:    Size  Location     Type
  9877 ;;  microseconds    2    3[COMRAM] unsigned short 
  9878 ;; Auto vars:     Size  Location     Type
  9879 ;;		None
  9880 ;; Return value:  Size  Location     Type
  9881 ;;                  1    wreg      void 
  9882 ;; Registers used:
  9883 ;;		wreg, status,2, status,0
  9884 ;; Tracked objects:
  9885 ;;		On entry : 0/0
  9886 ;;		On exit  : 0/0
  9887 ;;		Unchanged: 0/0
  9888 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  9889 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9892 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9893 ;;Total ram usage:        2 bytes
  9894 ;; Hardware stack levels used: 1
  9895 ;; Hardware stack levels required when called: 3
  9896 ;; This function calls:
  9897 ;;		Nothing
  9898 ;; This function is called by:
  9899 ;;		_SPI_write_buff
  9900 ;; This function uses a non-reentrant model
  9901 ;;
  9902                           
  9903                           	psect	text6
  9904   0114D4                     __ptext6:
  9905                           	callstack 0
  9906   0114D4                     _DELAY_microseconds:
  9907                           	callstack 119
  9908   0114D4                     
  9909                           ;mcc_generated_files/timer/src/delay.c: 44:     while( microseconds >= 32)
  9910   0114D4  EF74  F08A         	goto	l3049
  9911   0114D8                     l3045:
  9912                           
  9913                           ;mcc_generated_files/timer/src/delay.c: 45:     {;mcc_generated_files/timer/src/delay.c:
      +                           46:         _delay((unsigned long)((32)*(64000000U/4000000.0)));
  9914   0114D8  0EAA               	movlw	170
  9915   0114DA                     u3547:
  9916   0114DA  2EE8               	decfsz	wreg,f,c
  9917   0114DC  D7FE               	bra	u3547
  9918   0114DE  D000               	nop2	
  9919   0114E0                     
  9920                           ;mcc_generated_files/timer/src/delay.c: 47:         microseconds -= 32;
  9921   0114E0  0E20               	movlw	32
  9922   0114E2  5E04               	subwf	DELAY_microseconds@microseconds^(0+1280),f,c
  9923   0114E4  0E00               	movlw	0
  9924   0114E6  5A05               	subwfb	(DELAY_microseconds@microseconds+1)^(0+1280),f,c
  9925   0114E8                     l3049:
  9926                           
  9927                           ;mcc_generated_files/timer/src/delay.c: 44:     while( microseconds >= 32)
  9928   0114E8  5005               	movf	(DELAY_microseconds@microseconds+1)^(0+1280),w,c
  9929   0114EA  E107               	bnz	u1911
  9930   0114EC  0E20               	movlw	32
  9931   0114EE  5C04               	subwf	DELAY_microseconds@microseconds^(0+1280),w,c
  9932   0114F0  B0D8               	btfsc	status,0,c
  9933   0114F2  EF7D  F08A         	goto	u1911
  9934   0114F6  EF7F  F08A         	goto	u1910
  9935   0114FA                     u1911:
  9936   0114FA  EF6C  F08A         	goto	l3045
  9937   0114FE                     u1910:
  9938   0114FE  EF85  F08A         	goto	l3053
  9939   011502                     l3051:
  9940                           
  9941                           ;mcc_generated_files/timer/src/delay.c: 51:     {;mcc_generated_files/timer/src/delay.c:
      +                           52:         _delay((unsigned long)((1)*(64000000U/4000000.0)));
  9942   011502  0E05               	movlw	5
  9943   011504                     u3557:
  9944   011504  2EE8               	decfsz	wreg,f,c
  9945   011506  D7FE               	bra	u3557
  9946   011508  0000               	nop	
  9947   01150A                     l3053:
  9948                           
  9949                           ;mcc_generated_files/timer/src/delay.c: 50:     while(microseconds--)
  9950   01150A  0604               	decf	DELAY_microseconds@microseconds^(0+1280),f,c
  9951   01150C  A0D8               	btfss	status,0,c
  9952   01150E  0605               	decf	(DELAY_microseconds@microseconds+1)^(0+1280),f,c
  9953   011510  2804               	incf	DELAY_microseconds@microseconds^(0+1280),w,c
  9954   011512  E106               	bnz	u1921
  9955   011514  2805               	incf	(DELAY_microseconds@microseconds+1)^(0+1280),w,c
  9956   011516  A4D8               	btfss	status,2,c
  9957   011518  EF90  F08A         	goto	u1921
  9958   01151C  EF92  F08A         	goto	u1920
  9959   011520                     u1921:
  9960   011520  EF81  F08A         	goto	l3051
  9961   011524                     u1920:
  9962   011524  0012               	return		;funcret
  9963   011526                     __end_of_DELAY_microseconds:
  9964                           	callstack 0
  9965                           
  9966 ;; *************** function _Nrf24_powerUpTx *****************
  9967 ;; Defined at:
  9968 ;;		line 318 in file "mirf.c"
  9969 ;; Parameters:    Size  Location     Type
  9970 ;;  dev             2    7[COMRAM] PTR struct .
  9971 ;;		 -> sender@nrf(3), 
  9972 ;; Auto vars:     Size  Location     Type
  9973 ;;		None
  9974 ;; Return value:  Size  Location     Type
  9975 ;;                  1    wreg      void 
  9976 ;; Registers used:
  9977 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9978 ;; Tracked objects:
  9979 ;;		On entry : 0/0
  9980 ;;		On exit  : 0/0
  9981 ;;		Unchanged: 0/0
  9982 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  9983 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9986 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9987 ;;Total ram usage:        2 bytes
  9988 ;; Hardware stack levels used: 1
  9989 ;; Hardware stack levels required when called: 5
  9990 ;; This function calls:
  9991 ;;		_Nrf24_configRegister
  9992 ;; This function is called by:
  9993 ;;		_Nrf24_send
  9994 ;; This function uses a non-reentrant model
  9995 ;;
  9996                           
  9997                           	psect	text7
  9998   011930                     __ptext7:
  9999                           	callstack 0
 10000   011930                     _Nrf24_powerUpTx:
 10001                           	callstack 119
 10002   011930                     
 10003                           ;mirf.c: 319:  dev->PTX = 1;
 10004   011930  C508  F4D9         	movff	Nrf24_powerUpTx@dev,fsr2l
 10005   011934  C509  F4DA         	movff	Nrf24_powerUpTx@dev+1,fsr2h
 10006   011938  0E01               	movlw	1
 10007   01193A  6EDF               	movwf	indf2,c
 10008   01193C                     
 10009                           ;mirf.c: 320:  Nrf24_configRegister(0x00, ((1<<5) | (1<<3) | (0<<2) ) | ( (1 << 1) | (0 
      +                          << 0) ) );
 10010   01193C  0E2A               	movlw	42
 10011   01193E  6E06               	movwf	Nrf24_configRegister@value^(0+1280),c
 10012   011940  0E00               	movlw	0
 10013   011942  ECE5  F08C         	call	_Nrf24_configRegister
 10014   011946                     
 10015                           ;mirf.c: 321:  Nrf24_configRegister(0x07, (1 << 5) | (1 << 4));
 10016   011946  0E30               	movlw	48
 10017   011948  6E06               	movwf	Nrf24_configRegister@value^(0+1280),c
 10018   01194A  0E07               	movlw	7
 10019   01194C  ECE5  F08C         	call	_Nrf24_configRegister
 10020   011950  0012               	return		;funcret
 10021   011952                     __end_of_Nrf24_powerUpTx:
 10022                           	callstack 0
 10023                           
 10024 ;; *************** function _Nrf24_printDetails *****************
 10025 ;; Defined at:
 10026 ;;		line 374 in file "mirf.c"
 10027 ;; Parameters:    Size  Location     Type
 10028 ;;  dev             2   87[COMRAM] PTR struct .
 10029 ;;		 -> sender@nrf(3), 
 10030 ;; Auto vars:     Size  Location     Type
 10031 ;;  delay           2   11[BANK5 ] short 
 10032 ;;  retransmit      1   13[BANK5 ] unsigned char 
 10033 ;; Return value:  Size  Location     Type
 10034 ;;                  1    wreg      void 
 10035 ;; Registers used:
 10036 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10037 ;; Tracked objects:
 10038 ;;		On entry : 0/0
 10039 ;;		On exit  : 0/0
 10040 ;;		Unchanged: 0/0
 10041 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 10042 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10043 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10044 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10045 ;;      Totals:         2       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10046 ;;Total ram usage:        9 bytes
 10047 ;; Hardware stack levels used: 1
 10048 ;; Hardware stack levels required when called: 12
 10049 ;; This function calls:
 10050 ;;		_Nrf24_getCRCLength
 10051 ;;		_Nrf24_getDataRate
 10052 ;;		_Nrf24_getPALevel
 10053 ;;		_Nrf24_getRetransmitDelay
 10054 ;;		_Nrf24_getStatus
 10055 ;;		_Nrf24_print_address_register
 10056 ;;		_Nrf24_print_byte_register
 10057 ;;		_Nrf24_print_status
 10058 ;;		_printf
 10059 ;; This function is called by:
 10060 ;;		_sender
 10061 ;; This function uses a non-reentrant model
 10062 ;;
 10063                           
 10064                           	psect	text8
 10065   01038E                     __ptext8:
 10066                           	callstack 0
 10067   01038E                     _Nrf24_printDetails:
 10068                           	callstack 113
 10069   01038E                     
 10070                           ;mirf.c: 374: void Nrf24_printDetails(NRF24_t * dev);mirf.c: 375: {;mirf.c: 376:  printf
      +                          ("================ NRF Configuration ================\n");
 10071   01038E  0EFE               	movlw	low STR_2
 10072   010390  6E41               	movwf	printf@fmt^(0+1280),c
 10073   010392  0EFE               	movlw	high STR_2
 10074   010394  6E42               	movwf	(printf@fmt+1)^(0+1280),c
 10075   010396  EC73  F08C         	call	_printf	;wreg free
 10076                           
 10077                           ;mirf.c: 378:  Nrf24_print_status(Nrf24_getStatus(dev));
 10078   01039A  C558  F50E         	movff	Nrf24_printDetails@dev,Nrf24_getStatus@dev
 10079   01039E  C559  F50F         	movff	Nrf24_printDetails@dev+1,Nrf24_getStatus@dev+1
 10080   0103A2  ECFD  F08C         	call	_Nrf24_getStatus	;wreg free
 10081   0103A6  ECF4  F088         	call	_Nrf24_print_status
 10082                           
 10083                           ;mirf.c: 380:  Nrf24_print_address_register(dev, "RX_ADDR_P0-1", 0x0A, 2);
 10084   0103AA  C558  F551         	movff	Nrf24_printDetails@dev,Nrf24_print_address_register@dev
 10085   0103AE  C559  F552         	movff	Nrf24_printDetails@dev+1,Nrf24_print_address_register@dev+1
 10086   0103B2  0E89               	movlw	low STR_3
 10087   0103B4  6E53               	movwf	Nrf24_print_address_register@name^(0+1280),c
 10088   0103B6  0EFF               	movlw	high STR_3
 10089   0103B8  6E54               	movwf	(Nrf24_print_address_register@name+1)^(0+1280),c
 10090   0103BA  0E0A               	movlw	10
 10091   0103BC  6E55               	movwf	Nrf24_print_address_register@reg^(0+1280),c
 10092   0103BE  0E02               	movlw	2
 10093   0103C0  6E56               	movwf	Nrf24_print_address_register@qty^(0+1280),c
 10094   0103C2  ECB6  F087         	call	_Nrf24_print_address_register	;wreg free
 10095                           
 10096                           ;mirf.c: 381:  Nrf24_print_byte_register(dev, "RX_ADDR_P2-5", 0x0C, 4);
 10097   0103C6  C558  F551         	movff	Nrf24_printDetails@dev,Nrf24_print_byte_register@dev
 10098   0103CA  C559  F552         	movff	Nrf24_printDetails@dev+1,Nrf24_print_byte_register@dev+1
 10099   0103CE  0E96               	movlw	low STR_4
 10100   0103D0  6E53               	movwf	Nrf24_print_byte_register@name^(0+1280),c
 10101   0103D2  0EFF               	movlw	high STR_4
 10102   0103D4  6E54               	movwf	(Nrf24_print_byte_register@name+1)^(0+1280),c
 10103   0103D6  0E0C               	movlw	12
 10104   0103D8  6E55               	movwf	Nrf24_print_byte_register@reg^(0+1280),c
 10105   0103DA  0E04               	movlw	4
 10106   0103DC  6E56               	movwf	Nrf24_print_byte_register@qty^(0+1280),c
 10107   0103DE  EC10  F08A         	call	_Nrf24_print_byte_register	;wreg free
 10108                           
 10109                           ;mirf.c: 382:  Nrf24_print_address_register(dev, "TX_ADDR\t", 0x10, 1);
 10110   0103E2  C558  F551         	movff	Nrf24_printDetails@dev,Nrf24_print_address_register@dev
 10111   0103E6  C559  F552         	movff	Nrf24_printDetails@dev+1,Nrf24_print_address_register@dev+1
 10112   0103EA  0EB8               	movlw	low STR_5
 10113   0103EC  6E53               	movwf	Nrf24_print_address_register@name^(0+1280),c
 10114   0103EE  0EFF               	movlw	high STR_5
 10115   0103F0  6E54               	movwf	(Nrf24_print_address_register@name+1)^(0+1280),c
 10116   0103F2  0E10               	movlw	16
 10117   0103F4  6E55               	movwf	Nrf24_print_address_register@reg^(0+1280),c
 10118   0103F6  0E01               	movlw	1
 10119   0103F8  6E56               	movwf	Nrf24_print_address_register@qty^(0+1280),c
 10120   0103FA  ECB6  F087         	call	_Nrf24_print_address_register	;wreg free
 10121                           
 10122                           ;mirf.c: 384:  Nrf24_print_byte_register(dev, "RX_PW_P0-6", 0x11, 6);
 10123   0103FE  C558  F551         	movff	Nrf24_printDetails@dev,Nrf24_print_byte_register@dev
 10124   010402  C559  F552         	movff	Nrf24_printDetails@dev+1,Nrf24_print_byte_register@dev+1
 10125   010406  0EA3               	movlw	low STR_6
 10126   010408  6E53               	movwf	Nrf24_print_byte_register@name^(0+1280),c
 10127   01040A  0EFF               	movlw	high STR_6
 10128   01040C  6E54               	movwf	(Nrf24_print_byte_register@name+1)^(0+1280),c
 10129   01040E  0E11               	movlw	17
 10130   010410  6E55               	movwf	Nrf24_print_byte_register@reg^(0+1280),c
 10131   010412  0E06               	movlw	6
 10132   010414  6E56               	movwf	Nrf24_print_byte_register@qty^(0+1280),c
 10133   010416  EC10  F08A         	call	_Nrf24_print_byte_register	;wreg free
 10134                           
 10135                           ;mirf.c: 385:  Nrf24_print_byte_register(dev, "EN_AA\t", 0x01, 1);
 10136   01041A  C558  F551         	movff	Nrf24_printDetails@dev,Nrf24_print_byte_register@dev
 10137   01041E  C559  F552         	movff	Nrf24_printDetails@dev+1,Nrf24_print_byte_register@dev+1
 10138   010422  0EE1               	movlw	low STR_7
 10139   010424  6E53               	movwf	Nrf24_print_byte_register@name^(0+1280),c
 10140   010426  0EFF               	movlw	high STR_7
 10141   010428  6E54               	movwf	(Nrf24_print_byte_register@name+1)^(0+1280),c
 10142   01042A  0E01               	movlw	1
 10143   01042C  6E55               	movwf	Nrf24_print_byte_register@reg^(0+1280),c
 10144   01042E  0E01               	movlw	1
 10145   010430  6E56               	movwf	Nrf24_print_byte_register@qty^(0+1280),c
 10146   010432  EC10  F08A         	call	_Nrf24_print_byte_register	;wreg free
 10147                           
 10148                           ;mirf.c: 386:  Nrf24_print_byte_register(dev, "EN_RXADDR", 0x02, 1);
 10149   010436  C558  F551         	movff	Nrf24_printDetails@dev,Nrf24_print_byte_register@dev
 10150   01043A  C559  F552         	movff	Nrf24_printDetails@dev+1,Nrf24_print_byte_register@dev+1
 10151   01043E  0EAE               	movlw	low STR_8
 10152   010440  6E53               	movwf	Nrf24_print_byte_register@name^(0+1280),c
 10153   010442  0EFF               	movlw	high STR_8
 10154   010444  6E54               	movwf	(Nrf24_print_byte_register@name+1)^(0+1280),c
 10155   010446  0E02               	movlw	2
 10156   010448  6E55               	movwf	Nrf24_print_byte_register@reg^(0+1280),c
 10157   01044A  0E01               	movlw	1
 10158   01044C  6E56               	movwf	Nrf24_print_byte_register@qty^(0+1280),c
 10159   01044E  EC10  F08A         	call	_Nrf24_print_byte_register	;wreg free
 10160                           
 10161                           ;mirf.c: 387:  Nrf24_print_byte_register(dev, "RF_CH\t", 0x05, 1);
 10162   010452  C558  F551         	movff	Nrf24_printDetails@dev,Nrf24_print_byte_register@dev
 10163   010456  C559  F552         	movff	Nrf24_printDetails@dev+1,Nrf24_print_byte_register@dev+1
 10164   01045A  0EE8               	movlw	low STR_9
 10165   01045C  6E53               	movwf	Nrf24_print_byte_register@name^(0+1280),c
 10166   01045E  0EFF               	movlw	high STR_9
 10167   010460  6E54               	movwf	(Nrf24_print_byte_register@name+1)^(0+1280),c
 10168   010462  0E05               	movlw	5
 10169   010464  6E55               	movwf	Nrf24_print_byte_register@reg^(0+1280),c
 10170   010466  0E01               	movlw	1
 10171   010468  6E56               	movwf	Nrf24_print_byte_register@qty^(0+1280),c
 10172   01046A  EC10  F08A         	call	_Nrf24_print_byte_register	;wreg free
 10173                           
 10174                           ;mirf.c: 388:  Nrf24_print_byte_register(dev, "RF_SETUP", 0x06, 1);
 10175   01046E  C558  F551         	movff	Nrf24_printDetails@dev,Nrf24_print_byte_register@dev
 10176   010472  C559  F552         	movff	Nrf24_printDetails@dev+1,Nrf24_print_byte_register@dev+1
 10177   010476  0EC1               	movlw	low STR_10
 10178   010478  6E53               	movwf	Nrf24_print_byte_register@name^(0+1280),c
 10179   01047A  0EFF               	movlw	high STR_10
 10180   01047C  6E54               	movwf	(Nrf24_print_byte_register@name+1)^(0+1280),c
 10181   01047E  0E06               	movlw	6
 10182   010480  6E55               	movwf	Nrf24_print_byte_register@reg^(0+1280),c
 10183   010482  0E01               	movlw	1
 10184   010484  6E56               	movwf	Nrf24_print_byte_register@qty^(0+1280),c
 10185   010486  EC10  F08A         	call	_Nrf24_print_byte_register	;wreg free
 10186                           
 10187                           ;mirf.c: 389:  Nrf24_print_byte_register(dev, "CONFIG\t", 0x00, 1);
 10188   01048A  C558  F551         	movff	Nrf24_printDetails@dev,Nrf24_print_byte_register@dev
 10189   01048E  C559  F552         	movff	Nrf24_printDetails@dev+1,Nrf24_print_byte_register@dev+1
 10190   010492  0ECA               	movlw	low STR_11
 10191   010494  6E53               	movwf	Nrf24_print_byte_register@name^(0+1280),c
 10192   010496  0EFF               	movlw	high STR_11
 10193   010498  6E54               	movwf	(Nrf24_print_byte_register@name+1)^(0+1280),c
 10194   01049A  0E00               	movlw	0
 10195   01049C  6E55               	movwf	Nrf24_print_byte_register@reg^(0+1280),c
 10196   01049E  0E01               	movlw	1
 10197   0104A0  6E56               	movwf	Nrf24_print_byte_register@qty^(0+1280),c
 10198   0104A2  EC10  F08A         	call	_Nrf24_print_byte_register	;wreg free
 10199                           
 10200                           ;mirf.c: 390:  Nrf24_print_byte_register(dev, "DYNPD/FEATURE", 0x1C, 2);
 10201   0104A6  C558  F551         	movff	Nrf24_printDetails@dev,Nrf24_print_byte_register@dev
 10202   0104AA  C559  F552         	movff	Nrf24_printDetails@dev+1,Nrf24_print_byte_register@dev+1
 10203   0104AE  0E7B               	movlw	low STR_12
 10204   0104B0  6E53               	movwf	Nrf24_print_byte_register@name^(0+1280),c
 10205   0104B2  0EFF               	movlw	high STR_12
 10206   0104B4  6E54               	movwf	(Nrf24_print_byte_register@name+1)^(0+1280),c
 10207   0104B6  0E1C               	movlw	28
 10208   0104B8  6E55               	movwf	Nrf24_print_byte_register@reg^(0+1280),c
 10209   0104BA  0E02               	movlw	2
 10210   0104BC  6E56               	movwf	Nrf24_print_byte_register@qty^(0+1280),c
 10211   0104BE  EC10  F08A         	call	_Nrf24_print_byte_register	;wreg free
 10212                           
 10213                           ;mirf.c: 391:  printf("Data Rate\t = %s\n",rf24_datarates[Nrf24_getDataRate(dev)]);
 10214   0104C2  0E5A               	movlw	low STR_13
 10215   0104C4  6E41               	movwf	printf@fmt^(0+1280),c
 10216   0104C6  0EFF               	movlw	high STR_13
 10217   0104C8  6E42               	movwf	(printf@fmt+1)^(0+1280),c
 10218   0104CA  C558  F50E         	movff	Nrf24_printDetails@dev,Nrf24_getDataRate@dev
 10219   0104CE  C559  F50F         	movff	Nrf24_printDetails@dev+1,Nrf24_getDataRate@dev+1
 10220   0104D2  ECBC  F08A         	call	_Nrf24_getDataRate	;wreg free
 10221   0104D6  0105               	movlb	5	; () banked
 10222   0104D8  6F9F               	movwf	??_Nrf24_printDetails& (0+255),b
 10223   0104DA  519F               	movf	??_Nrf24_printDetails& (0+255),w,b
 10224   0104DC  0D08               	mullw	8
 10225   0104DE  0E80               	movlw	low _rf24_datarates
 10226   0104E0  24F3               	addwf	243,w,c
 10227   0104E2  6E43               	movwf	(?_printf+2)^(0+1280),c
 10228   0104E4  0E05               	movlw	high _rf24_datarates
 10229   0104E6  20F4               	addwfc	prodh,w,c
 10230   0104E8  6E44               	movwf	(?_printf+3)^(0+1280),c
 10231   0104EA  EC73  F08C         	call	_printf	;wreg free
 10232                           
 10233                           ;mirf.c: 392:  printf("CRC Length\t = %s\n", rf24_crclength[Nrf24_getCRCLength(dev)]);
 10234   0104EE  0E48               	movlw	low STR_14
 10235   0104F0  6E41               	movwf	printf@fmt^(0+1280),c
 10236   0104F2  0EFF               	movlw	high STR_14
 10237   0104F4  6E42               	movwf	(printf@fmt+1)^(0+1280),c
 10238   0104F6  C558  F50E         	movff	Nrf24_printDetails@dev,Nrf24_getCRCLength@dev
 10239   0104FA  C559  F50F         	movff	Nrf24_printDetails@dev+1,Nrf24_getCRCLength@dev+1
 10240   0104FE  ECA9  F089         	call	_Nrf24_getCRCLength	;wreg free
 10241   010502  0105               	movlb	5	; () banked
 10242   010504  6F9F               	movwf	??_Nrf24_printDetails& (0+255),b
 10243   010506  519F               	movf	??_Nrf24_printDetails& (0+255),w,b
 10244   010508  0D0A               	mullw	10
 10245   01050A  0E9A               	movlw	low _rf24_crclength
 10246   01050C  24F3               	addwf	243,w,c
 10247   01050E  6E43               	movwf	(?_printf+2)^(0+1280),c
 10248   010510  0EFE               	movlw	high _rf24_crclength
 10249   010512  20F4               	addwfc	prodh,w,c
 10250   010514  6E44               	movwf	(?_printf+3)^(0+1280),c
 10251   010516  EC73  F08C         	call	_printf	;wreg free
 10252                           
 10253                           ;mirf.c: 393:  printf("PA Power\t = %s\n", rf24_pa_dbm[Nrf24_getPALevel(dev)]);
 10254   01051A  0E6B               	movlw	low STR_15
 10255   01051C  6E41               	movwf	printf@fmt^(0+1280),c
 10256   01051E  0EFF               	movlw	high STR_15
 10257   010520  6E42               	movwf	(printf@fmt+1)^(0+1280),c
 10258   010522  C558  F50E         	movff	Nrf24_printDetails@dev,Nrf24_getPALevel@dev
 10259   010526  C559  F50F         	movff	Nrf24_printDetails@dev+1,Nrf24_getPALevel@dev+1
 10260   01052A  ECCA  F08C         	call	_Nrf24_getPALevel	;wreg free
 10261   01052E  0105               	movlb	5	; () banked
 10262   010530  6F9F               	movwf	??_Nrf24_printDetails& (0+255),b
 10263   010532  519F               	movf	??_Nrf24_printDetails& (0+255),w,b
 10264   010534  0D08               	mullw	8
 10265   010536  0E00               	movlw	low _rf24_pa_dbm
 10266   010538  24F3               	addwf	243,w,c
 10267   01053A  6E43               	movwf	(?_printf+2)^(0+1280),c
 10268   01053C  0E06               	movlw	high _rf24_pa_dbm
 10269   01053E  20F4               	addwfc	prodh,w,c
 10270   010540  6E44               	movwf	(?_printf+3)^(0+1280),c
 10271   010542  EC73  F08C         	call	_printf	;wreg free
 10272   010546                     
 10273                           ;mirf.c: 394:  uint8_t retransmit = Nrf24_getRetransmitDelay(dev);
 10274   010546  C558  F50E         	movff	Nrf24_printDetails@dev,Nrf24_getRetransmitDelay@dev
 10275   01054A  C559  F50F         	movff	Nrf24_printDetails@dev+1,Nrf24_getRetransmitDelay@dev+1
 10276   01054E  ECD9  F08C         	call	_Nrf24_getRetransmitDelay	;wreg free
 10277   010552  0105               	movlb	5	; () banked
 10278   010554  6FA5               	movwf	Nrf24_printDetails@retransmit& (0+255),b
 10279   010556                     
 10280                           ; BSR set to: 5
 10281                           ;mirf.c: 395:  int16_t delay = (retransmit+1)*250;
 10282   010556  51A5               	movf	Nrf24_printDetails@retransmit& (0+255),w,b
 10283   010558  6F9F               	movwf	??_Nrf24_printDetails& (0+255),b
 10284   01055A  6BA0               	clrf	(??_Nrf24_printDetails+1)& (0+255),b
 10285   01055C  0E01               	movlw	1
 10286   01055E  279F               	addwf	??_Nrf24_printDetails& (0+255),f,b
 10287   010560  0E00               	movlw	0
 10288   010562  23A0               	addwfc	(??_Nrf24_printDetails+1)& (0+255),f,b
 10289   010564  0EFA               	movlw	250
 10290   010566  039F               	mulwf	??_Nrf24_printDetails& (0+255),b
 10291   010568  C4F3 F5A1          	movff	prodl,??_Nrf24_printDetails+2
 10292   01056C  C4F4 F5A2          	movff	prodh,??_Nrf24_printDetails+3
 10293   010570  03A0               	mulwf	(??_Nrf24_printDetails+1)& (0+255),b
 10294   010572  50F3               	movf	prodl,w,c
 10295   010574  27A2               	addwf	(??_Nrf24_printDetails+3)& (0+255),f,b
 10296   010576  C5A1  F5A3         	movff	??_Nrf24_printDetails+2,Nrf24_printDetails@delay
 10297   01057A  C5A2  F5A4         	movff	??_Nrf24_printDetails+3,Nrf24_printDetails@delay+1
 10298   01057E                     
 10299                           ; BSR set to: 5
 10300                           ;mirf.c: 396:  printf("Retransmit\t = %d us\n", delay);
 10301   01057E  0E33               	movlw	low STR_16
 10302   010580  6E41               	movwf	printf@fmt^(0+1280),c
 10303   010582  0EFF               	movlw	high STR_16
 10304   010584  6E42               	movwf	(printf@fmt+1)^(0+1280),c
 10305   010586  C5A3  F543         	movff	Nrf24_printDetails@delay,?_printf+2
 10306   01058A  C5A4  F544         	movff	Nrf24_printDetails@delay+1,?_printf+3
 10307   01058E  EC73  F08C         	call	_printf	;wreg free
 10308   010592  0012               	return		;funcret
 10309   010594                     __end_of_Nrf24_printDetails:
 10310                           	callstack 0
 10311                           
 10312 ;; *************** function _Nrf24_print_status *****************
 10313 ;; Defined at:
 10314 ;;		line 401 in file "mirf.c"
 10315 ;; Parameters:    Size  Location     Type
 10316 ;;  status          1    wreg     unsigned char 
 10317 ;; Auto vars:     Size  Location     Type
 10318 ;;  status          1   81[COMRAM] unsigned char 
 10319 ;; Return value:  Size  Location     Type
 10320 ;;                  1    wreg      void 
 10321 ;; Registers used:
 10322 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10323 ;; Tracked objects:
 10324 ;;		On entry : 0/0
 10325 ;;		On exit  : 0/0
 10326 ;;		Unchanged: 0/0
 10327 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 10328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10329 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10330 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10331 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10332 ;;Total ram usage:        2 bytes
 10333 ;; Hardware stack levels used: 1
 10334 ;; Hardware stack levels required when called: 11
 10335 ;; This function calls:
 10336 ;;		_printf
 10337 ;; This function is called by:
 10338 ;;		_Nrf24_printDetails
 10339 ;; This function uses a non-reentrant model
 10340 ;;
 10341                           
 10342                           	psect	text9
 10343   0111E8                     __ptext9:
 10344                           	callstack 0
 10345   0111E8                     _Nrf24_print_status:
 10346                           	callstack 113
 10347                           
 10348                           ;incstack = 0
 10349                           ;Nrf24_print_status@status stored from wreg
 10350   0111E8  6E52               	movwf	Nrf24_print_status@status^(0+1280),c
 10351   0111EA                     
 10352                           ;mirf.c: 401: void Nrf24_print_status(uint8_t status);mirf.c: 402: {;mirf.c: 403:  print
      +                          f("STATUS\t\t = 0x%02x RX_DR=%x TX_DS=%x MAX_RT=%x RX_P_NO=%x TX_FULL=%x\r\n", status, (
      +                          status & (1<<(6))) ? 1 : 0,
 10353   0111EA  0EB8               	movlw	low STR_17
 10354   0111EC  6E41               	movwf	printf@fmt^(0+1280),c
 10355   0111EE  0EFE               	movlw	high STR_17
 10356   0111F0  6E42               	movwf	(printf@fmt+1)^(0+1280),c
 10357   0111F2  C552  F543         	movff	Nrf24_print_status@status,?_printf+2
 10358   0111F6  6A44               	clrf	(?_printf+3)^(0+1280),c
 10359   0111F8  BC52               	btfsc	Nrf24_print_status@status^(0+1280),6,c
 10360   0111FA  EF01  F089         	goto	u3191
 10361   0111FE  EF04  F089         	goto	u3190
 10362   011202                     u3191:
 10363   011202  0E01               	movlw	1
 10364   011204  EF05  F089         	goto	u3200
 10365   011208                     u3190:
 10366   011208  0E00               	movlw	0
 10367   01120A                     u3200:
 10368   01120A  6E45               	movwf	(?_printf+4)^(0+1280),c
 10369   01120C  6A46               	clrf	(?_printf+5)^(0+1280),c
 10370   01120E  BA52               	btfsc	Nrf24_print_status@status^(0+1280),5,c
 10371   011210  EF0C  F089         	goto	u3211
 10372   011214  EF0F  F089         	goto	u3210
 10373   011218                     u3211:
 10374   011218  0E01               	movlw	1
 10375   01121A  EF10  F089         	goto	u3220
 10376   01121E                     u3210:
 10377   01121E  0E00               	movlw	0
 10378   011220                     u3220:
 10379   011220  6E47               	movwf	(?_printf+6)^(0+1280),c
 10380   011222  6A48               	clrf	(?_printf+7)^(0+1280),c
 10381   011224  B852               	btfsc	Nrf24_print_status@status^(0+1280),4,c
 10382   011226  EF17  F089         	goto	u3231
 10383   01122A  EF1A  F089         	goto	u3230
 10384   01122E                     u3231:
 10385   01122E  0E01               	movlw	1
 10386   011230  EF1B  F089         	goto	u3240
 10387   011234                     u3230:
 10388   011234  0E00               	movlw	0
 10389   011236                     u3240:
 10390   011236  6E49               	movwf	(?_printf+8)^(0+1280),c
 10391   011238  6A4A               	clrf	(?_printf+9)^(0+1280),c
 10392   01123A  C552  F551         	movff	Nrf24_print_status@status,??_Nrf24_print_status
 10393   01123E  90D8               	bcf	status,0,c
 10394   011240  3251               	rrcf	??_Nrf24_print_status^(0+1280),f,c
 10395   011242  0E07               	movlw	7
 10396   011244  1651               	andwf	??_Nrf24_print_status^(0+1280),f,c
 10397   011246  5051               	movf	??_Nrf24_print_status^(0+1280),w,c
 10398   011248  6E4B               	movwf	(?_printf+10)^(0+1280),c
 10399   01124A  6A4C               	clrf	(?_printf+11)^(0+1280),c
 10400   01124C  B052               	btfsc	Nrf24_print_status@status^(0+1280),0,c
 10401   01124E  EF2B  F089         	goto	u3251
 10402   011252  EF2E  F089         	goto	u3250
 10403   011256                     u3251:
 10404   011256  0E01               	movlw	1
 10405   011258  EF2F  F089         	goto	u3260
 10406   01125C                     u3250:
 10407   01125C  0E00               	movlw	0
 10408   01125E                     u3260:
 10409   01125E  6E4D               	movwf	(?_printf+12)^(0+1280),c
 10410   011260  6A4E               	clrf	(?_printf+13)^(0+1280),c
 10411   011262  EC73  F08C         	call	_printf	;wreg free
 10412   011266  0012               	return		;funcret
 10413   011268                     __end_of_Nrf24_print_status:
 10414                           	callstack 0
 10415                           
 10416 ;; *************** function _Nrf24_print_byte_register *****************
 10417 ;; Defined at:
 10418 ;;		line 423 in file "mirf.c"
 10419 ;; Parameters:    Size  Location     Type
 10420 ;;  dev             2   80[COMRAM] PTR struct .
 10421 ;;		 -> sender@nrf(3), 
 10422 ;;  name            2   82[COMRAM] PTR const unsigned char 
 10423 ;;		 -> STR_12(14), STR_11(8), STR_10(9), STR_9(7), 
 10424 ;;		 -> STR_8(10), STR_7(7), STR_6(11), STR_4(13), 
 10425 ;;  reg             1   84[COMRAM] unsigned char 
 10426 ;;  qty             1   85[COMRAM] unsigned char 
 10427 ;; Auto vars:     Size  Location     Type
 10428 ;;  buffer          1   86[COMRAM] unsigned char [1]
 10429 ;; Return value:  Size  Location     Type
 10430 ;;                  1    wreg      void 
 10431 ;; Registers used:
 10432 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10433 ;; Tracked objects:
 10434 ;;		On entry : 0/0
 10435 ;;		On exit  : 0/0
 10436 ;;		Unchanged: 0/0
 10437 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 10438 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10439 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10441 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10442 ;;Total ram usage:        7 bytes
 10443 ;; Hardware stack levels used: 1
 10444 ;; Hardware stack levels required when called: 11
 10445 ;; This function calls:
 10446 ;;		_Nrf24_readRegister
 10447 ;;		_printf
 10448 ;; This function is called by:
 10449 ;;		_Nrf24_printDetails
 10450 ;; This function uses a non-reentrant model
 10451 ;;
 10452                           
 10453                           	psect	text10
 10454   011420                     __ptext10:
 10455                           	callstack 0
 10456   011420                     _Nrf24_print_byte_register:
 10457                           	callstack 113
 10458   011420                     
 10459                           ;mirf.c: 423: void Nrf24_print_byte_register(NRF24_t * dev, const char* name, uint8_t re
      +                          g, uint8_t qty);mirf.c: 424: {;mirf.c: 425:  printf("%s\t =", name);
 10460   011420  0EEF               	movlw	low STR_18
 10461   011422  6E41               	movwf	printf@fmt^(0+1280),c
 10462   011424  0EFF               	movlw	high STR_18
 10463   011426  6E42               	movwf	(printf@fmt+1)^(0+1280),c
 10464   011428  C553  F543         	movff	Nrf24_print_byte_register@name,?_printf+2
 10465   01142C  C554  F544         	movff	Nrf24_print_byte_register@name+1,?_printf+3
 10466   011430  EC73  F08C         	call	_printf	;wreg free
 10467                           
 10468                           ;mirf.c: 426:  while (qty--) {
 10469   011434  EF2F  F08A         	goto	l4083
 10470   011438                     l4077:
 10471                           
 10472                           ;mirf.c: 427:   uint8_t buffer[1];;mirf.c: 428:   Nrf24_readRegister(reg++, buffer, 1);
 10473   011438  0E57               	movlw	low Nrf24_print_byte_register@buffer
 10474   01143A  6E0A               	movwf	Nrf24_readRegister@value^(0+1280),c
 10475   01143C  0E05               	movlw	high Nrf24_print_byte_register@buffer
 10476   01143E  6E0B               	movwf	(Nrf24_readRegister@value+1)^(0+1280),c
 10477   011440  0E01               	movlw	1
 10478   011442  6E0C               	movwf	Nrf24_readRegister@len^(0+1280),c
 10479   011444  5055               	movf	Nrf24_print_byte_register@reg^(0+1280),w,c
 10480   011446  ECDB  F08B         	call	_Nrf24_readRegister
 10481   01144A  2A55               	incf	Nrf24_print_byte_register@reg^(0+1280),f,c
 10482   01144C                     
 10483                           ;mirf.c: 429:   printf(" 0x%02x", buffer[0]);
 10484   01144C  0ED2               	movlw	low STR_23
 10485   01144E  6E41               	movwf	printf@fmt^(0+1280),c
 10486   011450  0EFF               	movlw	high STR_23
 10487   011452  6E42               	movwf	(printf@fmt+1)^(0+1280),c
 10488   011454  C557  F543         	movff	Nrf24_print_byte_register@buffer,?_printf+2
 10489   011458  6A44               	clrf	(?_printf+3)^(0+1280),c
 10490   01145A  EC73  F08C         	call	_printf	;wreg free
 10491   01145E                     l4083:
 10492                           
 10493                           ;mirf.c: 426:  while (qty--) {
 10494   01145E  0656               	decf	Nrf24_print_byte_register@qty^(0+1280),f,c
 10495   011460  2856               	incf	Nrf24_print_byte_register@qty^(0+1280),w,c
 10496   011462  A4D8               	btfss	status,2,c
 10497   011464  EF36  F08A         	goto	u3291
 10498   011468  EF38  F08A         	goto	u3290
 10499   01146C                     u3291:
 10500   01146C  EF1C  F08A         	goto	l4077
 10501   011470                     u3290:
 10502   011470                     
 10503                           ;mirf.c: 431:  printf("\r\n");
 10504   011470  0EFB               	movlw	low (STR_17+67)
 10505   011472  6E41               	movwf	printf@fmt^(0+1280),c
 10506   011474  0EFE               	movlw	high (STR_17+67)
 10507   011476  6E42               	movwf	(printf@fmt+1)^(0+1280),c
 10508   011478  EC73  F08C         	call	_printf	;wreg free
 10509   01147C  0012               	return		;funcret
 10510   01147E                     __end_of_Nrf24_print_byte_register:
 10511                           	callstack 0
 10512                           
 10513 ;; *************** function _Nrf24_print_address_register *****************
 10514 ;; Defined at:
 10515 ;;		line 407 in file "mirf.c"
 10516 ;; Parameters:    Size  Location     Type
 10517 ;;  dev             2   80[COMRAM] PTR struct .
 10518 ;;		 -> sender@nrf(3), 
 10519 ;;  name            2   82[COMRAM] PTR const unsigned char 
 10520 ;;		 -> STR_5(9), STR_3(13), 
 10521 ;;  reg             1   84[COMRAM] unsigned char 
 10522 ;;  qty             1   85[COMRAM] unsigned char 
 10523 ;; Auto vars:     Size  Location     Type
 10524 ;;  i               2    5[BANK5 ] int 
 10525 ;;  buffer          5    0[BANK5 ] unsigned char [5]
 10526 ;; Return value:  Size  Location     Type
 10527 ;;                  1    wreg      void 
 10528 ;; Registers used:
 10529 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10530 ;; Tracked objects:
 10531 ;;		On entry : 0/0
 10532 ;;		On exit  : 0/0
 10533 ;;		Unchanged: 0/0
 10534 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 10535 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10536 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10537 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10538 ;;      Totals:         7       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10539 ;;Total ram usage:       14 bytes
 10540 ;; Hardware stack levels used: 1
 10541 ;; Hardware stack levels required when called: 11
 10542 ;; This function calls:
 10543 ;;		_Nrf24_readRegister
 10544 ;;		_printf
 10545 ;; This function is called by:
 10546 ;;		_Nrf24_printDetails
 10547 ;; This function uses a non-reentrant model
 10548 ;;
 10549                           
 10550                           	psect	text11
 10551   010F6C                     __ptext11:
 10552                           	callstack 0
 10553   010F6C                     _Nrf24_print_address_register:
 10554                           	callstack 113
 10555   010F6C                     
 10556                           ;mirf.c: 407: void Nrf24_print_address_register(NRF24_t * dev, const char* name, uint8_t
      +                           reg, uint8_t qty);mirf.c: 408: {;mirf.c: 409:  printf("%s\t =",name);
 10557   010F6C  0EEF               	movlw	low STR_18
 10558   010F6E  6E41               	movwf	printf@fmt^(0+1280),c
 10559   010F70  0EFF               	movlw	high STR_18
 10560   010F72  6E42               	movwf	(printf@fmt+1)^(0+1280),c
 10561   010F74  C553  F543         	movff	Nrf24_print_address_register@name,?_printf+2
 10562   010F78  C554  F544         	movff	Nrf24_print_address_register@name+1,?_printf+3
 10563   010F7C  EC73  F08C         	call	_printf	;wreg free
 10564                           
 10565                           ;mirf.c: 410:  while (qty--) {
 10566   010F80  EFF9  F087         	goto	l4071
 10567   010F84                     l4053:
 10568                           
 10569                           ;mirf.c: 411:   uint8_t buffer[5];;mirf.c: 412:   Nrf24_readRegister(reg++, buffer, size
      +                          of(buffer));
 10570   010F84  0E98               	movlw	low Nrf24_print_address_register@buffer
 10571   010F86  6E0A               	movwf	Nrf24_readRegister@value^(0+1280),c
 10572   010F88  0E05               	movlw	high Nrf24_print_address_register@buffer
 10573   010F8A  6E0B               	movwf	(Nrf24_readRegister@value+1)^(0+1280),c
 10574   010F8C  0E05               	movlw	5
 10575   010F8E  6E0C               	movwf	Nrf24_readRegister@len^(0+1280),c
 10576   010F90  5055               	movf	Nrf24_print_address_register@reg^(0+1280),w,c
 10577   010F92  ECDB  F08B         	call	_Nrf24_readRegister
 10578   010F96  2A55               	incf	Nrf24_print_address_register@reg^(0+1280),f,c
 10579   010F98                     
 10580                           ;mirf.c: 414:   printf(" 0x");
 10581   010F98  0EFB               	movlw	low STR_19
 10582   010F9A  6E41               	movwf	printf@fmt^(0+1280),c
 10583   010F9C  0EFF               	movlw	high STR_19
 10584   010F9E  6E42               	movwf	(printf@fmt+1)^(0+1280),c
 10585   010FA0  EC73  F08C         	call	_printf	;wreg free
 10586   010FA4                     
 10587                           ;mirf.c: 416:   for(int i=0;i<5;i++) {
 10588   010FA4  0E00               	movlw	0
 10589   010FA6  0105               	movlb	5	; () banked
 10590   010FA8  6F9E               	movwf	(Nrf24_print_address_register@i+1)& (0+255),b
 10591   010FAA  0E00               	movlw	0
 10592   010FAC  6F9D               	movwf	Nrf24_print_address_register@i& (0+255),b
 10593   010FAE                     l4065:
 10594                           
 10595                           ; BSR set to: 5
 10596                           ;mirf.c: 417:    printf("%02x", buffer[i]);
 10597   010FAE  0ED5               	movlw	low (STR_23+3)
 10598   010FB0  6E41               	movwf	printf@fmt^(0+1280),c
 10599   010FB2  0EFF               	movlw	high (STR_23+3)
 10600   010FB4  6E42               	movwf	(printf@fmt+1)^(0+1280),c
 10601   010FB6  0E98               	movlw	low Nrf24_print_address_register@buffer
 10602   010FB8  259D               	addwf	Nrf24_print_address_register@i& (0+255),w,b
 10603   010FBA  6ED9               	movwf	fsr2l,c
 10604   010FBC  0E05               	movlw	high Nrf24_print_address_register@buffer
 10605   010FBE  219E               	addwfc	(Nrf24_print_address_register@i+1)& (0+255),w,b
 10606   010FC0  6EDA               	movwf	fsr2h,c
 10607   010FC2  50DF               	movf	indf2,w,c
 10608   010FC4  6E57               	movwf	??_Nrf24_print_address_register^(0+1280),c
 10609   010FC6  5057               	movf	??_Nrf24_print_address_register^(0+1280),w,c
 10610   010FC8  6E43               	movwf	(?_printf+2)^(0+1280),c
 10611   010FCA  6A44               	clrf	(?_printf+3)^(0+1280),c
 10612   010FCC  EC73  F08C         	call	_printf	;wreg free
 10613   010FD0                     
 10614                           ;mirf.c: 418:   }
 10615   010FD0  0105               	movlb	5	; () banked
 10616   010FD2  4B9D               	infsnz	Nrf24_print_address_register@i& (0+255),f,b
 10617   010FD4  2B9E               	incf	(Nrf24_print_address_register@i+1)& (0+255),f,b
 10618   010FD6                     
 10619                           ; BSR set to: 5
 10620   010FD6  BF9E               	btfsc	(Nrf24_print_address_register@i+1)& (0+255),7,b
 10621   010FD8  EFF7  F087         	goto	u3271
 10622   010FDC  519E               	movf	(Nrf24_print_address_register@i+1)& (0+255),w,b
 10623   010FDE  E109               	bnz	u3270
 10624   010FE0  0E05               	movlw	5
 10625   010FE2  5D9D               	subwf	Nrf24_print_address_register@i& (0+255),w,b
 10626   010FE4  A0D8               	btfss	status,0,c
 10627   010FE6  EFF7  F087         	goto	u3271
 10628   010FEA  EFF9  F087         	goto	u3270
 10629   010FEE                     u3271:
 10630   010FEE  EFD7  F087         	goto	l4065
 10631   010FF2                     u3270:
 10632   010FF2                     l4071:
 10633                           
 10634                           ;mirf.c: 410:  while (qty--) {
 10635   010FF2  0656               	decf	Nrf24_print_address_register@qty^(0+1280),f,c
 10636   010FF4  2856               	incf	Nrf24_print_address_register@qty^(0+1280),w,c
 10637   010FF6  A4D8               	btfss	status,2,c
 10638   010FF8  EF00  F088         	goto	u3281
 10639   010FFC  EF02  F088         	goto	u3280
 10640   011000                     u3281:
 10641   011000  EFC2  F087         	goto	l4053
 10642   011004                     u3280:
 10643   011004                     
 10644                           ;mirf.c: 420:  printf("\r\n");
 10645   011004  0EFB               	movlw	low (STR_17+67)
 10646   011006  6E41               	movwf	printf@fmt^(0+1280),c
 10647   011008  0EFE               	movlw	high (STR_17+67)
 10648   01100A  6E42               	movwf	(printf@fmt+1)^(0+1280),c
 10649   01100C  EC73  F08C         	call	_printf	;wreg free
 10650   011010  0012               	return		;funcret
 10651   011012                     __end_of_Nrf24_print_address_register:
 10652                           	callstack 0
 10653                           
 10654 ;; *************** function _printf *****************
 10655 ;; Defined at:
 10656 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\printf.c"
 10657 ;; Parameters:    Size  Location     Type
 10658 ;;  fmt             2   64[COMRAM] PTR const unsigned char 
 10659 ;;		 -> STR_24(3), STR_23(8), STR_22(6), STR_21(3), 
 10660 ;;		 -> STR_20(5), STR_19(4), STR_18(6), STR_17(70), 
 10661 ;;		 -> STR_16(21), STR_15(16), STR_14(18), STR_13(17), 
 10662 ;;		 -> STR_2(53), 
 10663 ;; Auto vars:     Size  Location     Type
 10664 ;;  ap              2   78[COMRAM] PTR void [1]
 10665 ;;		 -> ?_printf(2), 
 10666 ;;  ret             2    0        int 
 10667 ;; Return value:  Size  Location     Type
 10668 ;;                  2   64[COMRAM] int 
 10669 ;; Registers used:
 10670 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10671 ;; Tracked objects:
 10672 ;;		On entry : 0/0
 10673 ;;		On exit  : 0/0
 10674 ;;		Unchanged: 0/0
 10675 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 10676 ;;      Params:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10677 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10679 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10680 ;;Total ram usage:       16 bytes
 10681 ;; Hardware stack levels used: 1
 10682 ;; Hardware stack levels required when called: 10
 10683 ;; This function calls:
 10684 ;;		_vfprintf
 10685 ;; This function is called by:
 10686 ;;		_Nrf24_printDetails
 10687 ;;		_Nrf24_print_status
 10688 ;;		_Nrf24_print_address_register
 10689 ;;		_Nrf24_print_byte_register
 10690 ;; This function uses a non-reentrant model
 10691 ;;
 10692                           
 10693                           	psect	text12
 10694   0118E6                     __ptext12:
 10695                           	callstack 0
 10696   0118E6                     _printf:
 10697                           	callstack 114
 10698   0118E6  0E43               	movlw	low (?_printf+2)
 10699   0118E8  6E4F               	movwf	printf@ap^(0+1280),c
 10700   0118EA  0E05               	movlw	high (?_printf+2)
 10701   0118EC  6E50               	movwf	(printf@ap+1)^(0+1280),c
 10702   0118EE  0E00               	movlw	0
 10703   0118F0  6E39               	movwf	vfprintf@fp^(0+1280),c
 10704   0118F2  0E00               	movlw	0
 10705   0118F4  6E3A               	movwf	(vfprintf@fp+1)^(0+1280),c
 10706   0118F6  C541  F53B         	movff	printf@fmt,vfprintf@fmt
 10707   0118FA  C542  F53C         	movff	printf@fmt+1,vfprintf@fmt+1
 10708   0118FE  0E4F               	movlw	low printf@ap
 10709   011900  6E3D               	movwf	vfprintf@ap^(0+1280),c
 10710   011902  0E05               	movlw	high printf@ap
 10711   011904  6E3E               	movwf	(vfprintf@ap+1)^(0+1280),c
 10712   011906  EC93  F08A         	call	_vfprintf	;wreg free
 10713   01190A  0012               	return		;funcret
 10714   01190C                     __end_of_printf:
 10715                           	callstack 0
 10716                           
 10717 ;; *************** function _vfprintf *****************
 10718 ;; Defined at:
 10719 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 10720 ;; Parameters:    Size  Location     Type
 10721 ;;  fp              2   56[COMRAM] PTR struct _IO_FILE
 10722 ;;		 -> NULL(0), 
 10723 ;;  fmt             2   58[COMRAM] PTR const unsigned char 
 10724 ;;		 -> STR_24(3), STR_23(8), STR_22(6), STR_21(3), 
 10725 ;;		 -> STR_20(5), STR_19(4), STR_18(6), STR_17(70), 
 10726 ;;		 -> STR_16(21), STR_15(16), STR_14(18), STR_13(17), 
 10727 ;;		 -> STR_2(53), 
 10728 ;;  ap              2   60[COMRAM] PTR PTR void 
 10729 ;;		 -> printf@ap(2), 
 10730 ;; Auto vars:     Size  Location     Type
 10731 ;;  cfmt            2   62[COMRAM] PTR unsigned char 
 10732 ;;		 -> STR_24(3), STR_23(8), STR_22(6), STR_21(3), 
 10733 ;;		 -> STR_20(5), STR_19(4), STR_18(6), STR_17(70), 
 10734 ;;		 -> STR_16(21), STR_15(16), STR_14(18), STR_13(17), 
 10735 ;;		 -> STR_2(53), 
 10736 ;; Return value:  Size  Location     Type
 10737 ;;                  2   56[COMRAM] int 
 10738 ;; Registers used:
 10739 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10740 ;; Tracked objects:
 10741 ;;		On entry : 0/0
 10742 ;;		On exit  : 0/0
 10743 ;;		Unchanged: 0/0
 10744 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 10745 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10746 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10748 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10749 ;;Total ram usage:        8 bytes
 10750 ;; Hardware stack levels used: 1
 10751 ;; Hardware stack levels required when called: 9
 10752 ;; This function calls:
 10753 ;;		_vfpfcnvrt
 10754 ;; This function is called by:
 10755 ;;		_printf
 10756 ;; This function uses a non-reentrant model
 10757 ;;
 10758                           
 10759                           	psect	text13
 10760   011526                     __ptext13:
 10761                           	callstack 0
 10762   011526                     _vfprintf:
 10763                           	callstack 114
 10764   011526                     
 10765                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
 10766   011526  C53B  F53F         	movff	vfprintf@fmt,vfprintf@cfmt
 10767   01152A  C53C  F540         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
 10768                           
 10769                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
 10770   01152E  EFA7  F08A         	goto	l3957
 10771   011532                     l3955:
 10772                           
 10773                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
 10774   011532  C539  F52A         	movff	vfprintf@fp,vfpfcnvrt@fp
 10775   011536  C53A  F52B         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
 10776   01153A  0E3F               	movlw	low vfprintf@cfmt
 10777   01153C  6E2C               	movwf	vfpfcnvrt@fmt^(0+1280),c
 10778   01153E  0E05               	movlw	high vfprintf@cfmt
 10779   011540  6E2D               	movwf	(vfpfcnvrt@fmt+1)^(0+1280),c
 10780   011542  C53D  F52E         	movff	vfprintf@ap,vfpfcnvrt@ap
 10781   011546  C53E  F52F         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
 10782   01154A  EC00  F080         	call	_vfpfcnvrt	;wreg free
 10783   01154E                     l3957:
 10784                           
 10785                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
 10786   01154E  C53F  F4F6         	movff	vfprintf@cfmt,tblptrl
 10787   011552  C540  F4F7         	movff	vfprintf@cfmt+1,tblptrh
 10788   011556                     	if	0	;tblptru may be non-zero
 10789   011556                     	endif
 10790   011556                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10791   011556  0E00               	movlw	low (__mediumconst shr (0+16))
 10792   011558  6EF8               	movwf	tblptru,c
 10793   01155A                     	endif
 10794   01155A  0008               	tblrd		*
 10795   01155C  50F5               	movf	tablat,w,c
 10796   01155E  0900               	iorlw	0
 10797   011560  A4D8               	btfss	status,2,c
 10798   011562  EFB5  F08A         	goto	u3121
 10799   011566  EFB7  F08A         	goto	u3120
 10800   01156A                     u3121:
 10801   01156A  EF99  F08A         	goto	l3955
 10802   01156E                     u3120:
 10803   01156E                     
 10804                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1835:  return 0;
 10805   01156E  0E00               	movlw	0
 10806   011570  6E3A               	movwf	(?_vfprintf+1)^(0+1280),c
 10807   011572  0E00               	movlw	0
 10808   011574  6E39               	movwf	?_vfprintf^(0+1280),c
 10809   011576  0012               	return		;funcret
 10810   011578                     __end_of_vfprintf:
 10811                           	callstack 0
 10812                           
 10813 ;; *************** function _vfpfcnvrt *****************
 10814 ;; Defined at:
 10815 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 10816 ;; Parameters:    Size  Location     Type
 10817 ;;  fp              2   41[COMRAM] PTR struct _IO_FILE
 10818 ;;		 -> NULL(0), 
 10819 ;;  fmt             2   43[COMRAM] PTR PTR unsigned char 
 10820 ;;		 -> vfprintf@cfmt(2), 
 10821 ;;  ap              2   45[COMRAM] PTR PTR void 
 10822 ;;		 -> printf@ap(2), 
 10823 ;; Auto vars:     Size  Location     Type
 10824 ;;  convarg         4   49[COMRAM] struct .
 10825 ;;  cp              2   54[COMRAM] PTR unsigned char 
 10826 ;;		 -> STR_24(3), STR_23(8), STR_22(6), STR_21(3), 
 10827 ;;		 -> STR_20(5), STR_19(4), STR_18(6), STR_17(70), 
 10828 ;;		 -> STR_16(21), STR_15(16), STR_14(18), STR_13(17), 
 10829 ;;		 -> STR_2(53), 
 10830 ;;  done            1   53[COMRAM] _Bool 
 10831 ;;  c               1    0        unsigned char 
 10832 ;; Return value:  Size  Location     Type
 10833 ;;                  1    wreg      void 
 10834 ;; Registers used:
 10835 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10836 ;; Tracked objects:
 10837 ;;		On entry : 0/0
 10838 ;;		On exit  : 0/0
 10839 ;;		Unchanged: 0/0
 10840 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 10841 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10842 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10843 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10844 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10845 ;;Total ram usage:       15 bytes
 10846 ;; Hardware stack levels used: 1
 10847 ;; Hardware stack levels required when called: 8
 10848 ;; This function calls:
 10849 ;;		_dtoa
 10850 ;;		_fputc
 10851 ;;		_read_prec_or_width
 10852 ;;		_stoa
 10853 ;;		_xtoa
 10854 ;; This function is called by:
 10855 ;;		_vfprintf
 10856 ;; This function uses a non-reentrant model
 10857 ;;
 10858                           
 10859                           	psect	text14
 10860   010000                     __ptext14:
 10861                           	callstack 0
 10862   010000                     _vfpfcnvrt:
 10863                           	callstack 114
 10864   010000                     
 10865                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
 10866   010000  C52C  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 10867   010004  C52D  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10868   010008  C4DE F4F6          	movff	postinc2,tblptrl
 10869   01000C  C4DD F4F7          	movff	postdec2,tblptrh
 10870   010010                     	if	0	;tblptru may be non-zero
 10871   010010                     	endif
 10872   010010                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10873   010010  0E00               	movlw	low (__mediumconst shr (0+16))
 10874   010012  6EF8               	movwf	tblptru,c
 10875   010014                     	endif
 10876   010014  0008               	tblrd		*
 10877   010016  50F5               	movf	tablat,w,c
 10878   010018  0A25               	xorlw	37
 10879   01001A  A4D8               	btfss	status,2,c
 10880   01001C  EF12  F080         	goto	u3001
 10881   010020  EF14  F080         	goto	u3000
 10882   010024                     u3001:
 10883   010024  EFB0  F081         	goto	l3939
 10884   010028                     u3000:
 10885   010028                     
 10886                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
 10887   010028  C52C  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 10888   01002C  C52D  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10889   010030  2ADE               	incf	postinc2,f,c
 10890   010032  0E00               	movlw	0
 10891   010034  22DD               	addwfc	postdec2,f,c
 10892   010036                     
 10893                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
 10894   010036  0E00               	movlw	0
 10895   010038  6E5B               	movwf	(_width+1)^(0+1280),c
 10896   01003A  0E00               	movlw	0
 10897   01003C  6E5A               	movwf	_width^(0+1280),c
 10898   01003E  C55A  F55C         	movff	_width,_flags
 10899   010042                     
 10900                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
 10901   010042  0105               	movlb	5	; () banked
 10902   010044  69CD               	setf	_prec& (0+255),b
 10903   010046  69CE               	setf	(_prec+1)& (0+255),b
 10904   010048                     
 10905                           ; BSR set to: 5
 10906                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
 10907   010048  6A36               	clrf	vfpfcnvrt@done^(0+1280),c
 10908                           
 10909                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
 10910   01004A  EF47  F080         	goto	l3881
 10911   01004E                     l3871:
 10912                           
 10913                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
 10914   01004E  825C               	bsf	_flags^(0+1280),1,c
 10915   010050                     
 10916                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
 10917   010050  C52C  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 10918   010054  C52D  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10919   010058  2ADE               	incf	postinc2,f,c
 10920   01005A  0E00               	movlw	0
 10921   01005C  22DD               	addwfc	postdec2,f,c
 10922                           
 10923                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
 10924   01005E  EF47  F080         	goto	l3881
 10925   010062                     l3875:
 10926                           
 10927                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
 10928   010062  0E01               	movlw	1
 10929   010064  6E36               	movwf	vfpfcnvrt@done^(0+1280),c
 10930                           
 10931                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
 10932   010066  EF47  F080         	goto	l3881
 10933   01006A                     l3879:
 10934   01006A  C52C  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 10935   01006E  C52D  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10936   010072  C4DE F4F6          	movff	postinc2,tblptrl
 10937   010076  C4DD F4F7          	movff	postdec2,tblptrh
 10938   01007A                     	if	0	;tblptru may be non-zero
 10939   01007A                     	endif
 10940   01007A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10941   01007A  0E00               	movlw	low (__mediumconst shr (0+16))
 10942   01007C  6EF8               	movwf	tblptru,c
 10943   01007E                     	endif
 10944   01007E  0008               	tblrd		*
 10945   010080  50F5               	movf	tablat,w,c
 10946                           
 10947                           ; Switch size 1, requested type "simple"
 10948                           ; Number of cases is 1, Range of values is 48 to 48
 10949                           ; switch strategies available:
 10950                           ; Name         Instructions Cycles
 10951                           ; simple_byte            4     3 (average)
 10952                           ;	Chosen strategy is simple_byte
 10953   010082  0A30               	xorlw	48	; case 48
 10954   010084  B4D8               	btfsc	status,2,c
 10955   010086  EF27  F080         	goto	l3871
 10956   01008A  EF31  F080         	goto	l3875
 10957   01008E                     l3881:
 10958                           
 10959                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
 10960   01008E  5036               	movf	vfpfcnvrt@done^(0+1280),w,c
 10961   010090  B4D8               	btfsc	status,2,c
 10962   010092  EF4D  F080         	goto	u3011
 10963   010096  EF4F  F080         	goto	u3010
 10964   01009A                     u3011:
 10965   01009A  EF35  F080         	goto	l3879
 10966   01009E                     u3010:
 10967   01009E                     
 10968                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
 10969   01009E  C52C  F504         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
 10970   0100A2  C52D  F505         	movff	vfpfcnvrt@fmt+1,read_prec_or_width@fmt+1
 10971   0100A6  C52E  F506         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
 10972   0100AA  C52F  F507         	movff	vfpfcnvrt@ap+1,read_prec_or_width@ap+1
 10973   0100AE  ECBC  F084         	call	_read_prec_or_width	;wreg free
 10974   0100B2  C504  F55A         	movff	?_read_prec_or_width,_width
 10975   0100B6  C505  F55B         	movff	?_read_prec_or_width+1,_width+1
 10976   0100BA                     
 10977                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
 10978   0100BA  BE5B               	btfsc	(_width+1)^(0+1280),7,c
 10979   0100BC  EF64  F080         	goto	u3020
 10980   0100C0  EF62  F080         	goto	u3021
 10981   0100C4                     u3021:
 10982   0100C4  EF69  F080         	goto	l3889
 10983   0100C8                     u3020:
 10984   0100C8                     
 10985                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
 10986   0100C8  805C               	bsf	_flags^(0+1280),0,c
 10987                           
 10988                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
 10989   0100CA  6C5A               	negf	_width^(0+1280),c
 10990   0100CC  1E5B               	comf	(_width+1)^(0+1280),f,c
 10991   0100CE  B0D8               	btfsc	status,0,c
 10992   0100D0  2A5B               	incf	(_width+1)^(0+1280),f,c
 10993   0100D2                     l3889:
 10994                           
 10995                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
 10996   0100D2  C52C  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 10997   0100D6  C52D  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10998   0100DA  C4DE F537          	movff	postinc2,vfpfcnvrt@cp
 10999   0100DE  C4DD F538          	movff	postdec2,vfpfcnvrt@cp+1
 11000   0100E2                     
 11001                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
 11002   0100E2  C537  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 11003   0100E6  C538  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 11004   0100EA                     	if	0	;tblptru may be non-zero
 11005   0100EA                     	endif
 11006   0100EA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11007   0100EA  0E00               	movlw	low (__mediumconst shr (0+16))
 11008   0100EC  6EF8               	movwf	tblptru,c
 11009   0100EE                     	endif
 11010   0100EE  0008               	tblrd		*
 11011   0100F0  50F5               	movf	tablat,w,c
 11012   0100F2  0A64               	xorlw	100
 11013   0100F4  B4D8               	btfsc	status,2,c
 11014   0100F6  EF7F  F080         	goto	u3031
 11015   0100FA  EF81  F080         	goto	u3030
 11016   0100FE                     u3031:
 11017   0100FE  EF91  F080         	goto	l3895
 11018   010102                     u3030:
 11019   010102  C537  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 11020   010106  C538  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 11021   01010A                     	if	0	;tblptru may be non-zero
 11022   01010A                     	endif
 11023   01010A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11024   01010A  0E00               	movlw	low (__mediumconst shr (0+16))
 11025   01010C  6EF8               	movwf	tblptru,c
 11026   01010E                     	endif
 11027   01010E  0008               	tblrd		*
 11028   010110  50F5               	movf	tablat,w,c
 11029   010112  0A69               	xorlw	105
 11030   010114  A4D8               	btfss	status,2,c
 11031   010116  EF8F  F080         	goto	u3041
 11032   01011A  EF91  F080         	goto	u3040
 11033   01011E                     u3041:
 11034   01011E  EFBF  F080         	goto	l3901
 11035   010122                     u3040:
 11036   010122                     l3895:
 11037                           
 11038                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
 11039   010122  C52E  F4D9         	movff	vfpfcnvrt@ap,fsr2l
 11040   010126  C52F  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
 11041   01012A  C4DF F530          	movff	indf2,??_vfpfcnvrt
 11042   01012E  0E02               	movlw	2
 11043   010130  26DE               	addwf	postinc2,f,c
 11044   010132  C4DF F531          	movff	indf2,??_vfpfcnvrt+1
 11045   010136  0E00               	movlw	0
 11046   010138  22DD               	addwfc	postdec2,f,c
 11047   01013A  C530  F4D9         	movff	??_vfpfcnvrt,fsr2l
 11048   01013E  C531  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
 11049   010142  C4DE F532          	movff	postinc2,vfpfcnvrt@convarg
 11050   010146  C4DD F533          	movff	postdec2,vfpfcnvrt@convarg+1
 11051                           
 11052                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
 11053   01014A  0E01               	movlw	1
 11054   01014C  2437               	addwf	vfpfcnvrt@cp^(0+1280),w,c
 11055   01014E  6E30               	movwf	??_vfpfcnvrt^(0+1280),c
 11056   010150  0E00               	movlw	0
 11057   010152  2038               	addwfc	(vfpfcnvrt@cp+1)^(0+1280),w,c
 11058   010154  6E31               	movwf	(??_vfpfcnvrt+1)^(0+1280),c
 11059   010156  C52C  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 11060   01015A  C52D  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11061   01015E  C530  F4DE         	movff	??_vfpfcnvrt,postinc2
 11062   010162  C531  F4DD         	movff	??_vfpfcnvrt+1,postdec2
 11063   010166                     
 11064                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
 11065   010166  C52A  F51D         	movff	vfpfcnvrt@fp,dtoa@fp
 11066   01016A  C52B  F51E         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 11067   01016E  C532  F51F         	movff	vfpfcnvrt@convarg,dtoa@d
 11068   010172  C533  F520         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
 11069   010176  ECCA  F082         	call	_dtoa	;wreg free
 11070   01017A  EFC6  F081         	goto	l1547
 11071   01017E                     l3901:
 11072   01017E  C537  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 11073   010182  C538  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 11074   010186                     	if	0	;tblptru may be non-zero
 11075   010186                     	endif
 11076   010186                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11077   010186  0E00               	movlw	low (__mediumconst shr (0+16))
 11078   010188  6EF8               	movwf	tblptru,c
 11079   01018A                     	endif
 11080   01018A  0008               	tblrd		*
 11081   01018C  50F5               	movf	tablat,w,c
 11082   01018E  0A78               	xorlw	120
 11083   010190  A4D8               	btfss	status,2,c
 11084   010192  EFCD  F080         	goto	u3051
 11085   010196  EFCF  F080         	goto	u3050
 11086   01019A                     u3051:
 11087   01019A  EF0D  F081         	goto	l1548
 11088   01019E                     u3050:
 11089   01019E                     
 11090                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1452:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1495:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
 11091   01019E  C52E  F4D9         	movff	vfpfcnvrt@ap,fsr2l
 11092   0101A2  C52F  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
 11093   0101A6  C4DF F530          	movff	indf2,??_vfpfcnvrt
 11094   0101AA  0E02               	movlw	2
 11095   0101AC  26DE               	addwf	postinc2,f,c
 11096   0101AE  C4DF F531          	movff	indf2,??_vfpfcnvrt+1
 11097   0101B2  0E00               	movlw	0
 11098   0101B4  22DD               	addwfc	postdec2,f,c
 11099   0101B6  C530  F4D9         	movff	??_vfpfcnvrt,fsr2l
 11100   0101BA  C531  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
 11101   0101BE  C4DE F532          	movff	postinc2,vfpfcnvrt@convarg
 11102   0101C2  C4DD F533          	movff	postdec2,vfpfcnvrt@convarg+1
 11103                           
 11104                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
 11105   0101C6  0E01               	movlw	1
 11106   0101C8  2437               	addwf	vfpfcnvrt@cp^(0+1280),w,c
 11107   0101CA  6E30               	movwf	??_vfpfcnvrt^(0+1280),c
 11108   0101CC  0E00               	movlw	0
 11109   0101CE  2038               	addwfc	(vfpfcnvrt@cp+1)^(0+1280),w,c
 11110   0101D0  6E31               	movwf	(??_vfpfcnvrt+1)^(0+1280),c
 11111   0101D2  C52C  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 11112   0101D6  C52D  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11113   0101DA  C530  F4DE         	movff	??_vfpfcnvrt,postinc2
 11114   0101DE  C531  F4DD         	movff	??_vfpfcnvrt+1,postdec2
 11115                           
 11116                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
 11117   0101E2  EFFF  F080         	goto	l3911
 11118   0101E6                     l3905:
 11119                           
 11120                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1586:      return
      +                           (void) xtoa(fp,convarg.uint);;	Return value of _vfpfcnvrt is never used
 11121   0101E6  C52A  F51D         	movff	vfpfcnvrt@fp,xtoa@fp
 11122   0101EA  C52B  F51E         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
 11123   0101EE  C532  F51F         	movff	vfpfcnvrt@convarg,xtoa@d
 11124   0101F2  C533  F520         	movff	vfpfcnvrt@convarg+1,xtoa@d+1
 11125   0101F6  EC3A  F084         	call	_xtoa	;wreg free
 11126   0101FA  EFC6  F081         	goto	l1547
 11127   0101FE                     l3911:
 11128   0101FE  C537  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 11129   010202  C538  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 11130   010206                     	if	0	;tblptru may be non-zero
 11131   010206                     	endif
 11132   010206                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11133   010206  0E00               	movlw	low (__mediumconst shr (0+16))
 11134   010208  6EF8               	movwf	tblptru,c
 11135   01020A                     	endif
 11136   01020A  0008               	tblrd		*
 11137   01020C  50F5               	movf	tablat,w,c
 11138                           
 11139                           ; Switch size 1, requested type "simple"
 11140                           ; Number of cases is 1, Range of values is 120 to 120
 11141                           ; switch strategies available:
 11142                           ; Name         Instructions Cycles
 11143                           ; simple_byte            4     3 (average)
 11144                           ;	Chosen strategy is simple_byte
 11145   01020E  0A78               	xorlw	120	; case 120
 11146   010210  B4D8               	btfsc	status,2,c
 11147   010212  EFF3  F080         	goto	l3905
 11148   010216  EF0D  F081         	goto	l1548
 11149   01021A                     l1548:
 11150                           
 11151                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1656:   done = 0;
 11152   01021A  6A36               	clrf	vfpfcnvrt@done^(0+1280),c
 11153   01021C                     
 11154                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1657:   if ((*fmt
      +                          )[0] == 's') {
 11155   01021C  C52C  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 11156   010220  C52D  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11157   010224  C4DE F4F6          	movff	postinc2,tblptrl
 11158   010228  C4DD F4F7          	movff	postdec2,tblptrh
 11159   01022C                     	if	0	;tblptru may be non-zero
 11160   01022C                     	endif
 11161   01022C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11162   01022C  0E00               	movlw	low (__mediumconst shr (0+16))
 11163   01022E  6EF8               	movwf	tblptru,c
 11164   010230                     	endif
 11165   010230  0008               	tblrd		*
 11166   010232  50F5               	movf	tablat,w,c
 11167   010234  0A73               	xorlw	115
 11168   010236  A4D8               	btfss	status,2,c
 11169   010238  EF20  F081         	goto	u3061
 11170   01023C  EF22  F081         	goto	u3060
 11171   010240                     u3061:
 11172   010240  EF2D  F081         	goto	l3919
 11173   010244                     u3060:
 11174   010244                     
 11175                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1658:    ++*fmt;
 11176   010244  C52C  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 11177   010248  C52D  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11178   01024C  2ADE               	incf	postinc2,f,c
 11179   01024E  0E00               	movlw	0
 11180   010250  22DD               	addwfc	postdec2,f,c
 11181   010252                     l3917:
 11182                           
 11183                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1659:    done = 1
      +                          ;
 11184   010252  0E01               	movlw	1
 11185   010254  6E36               	movwf	vfpfcnvrt@done^(0+1280),c
 11186                           
 11187                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1660:   }
 11188   010256  EF83  F081         	goto	l3929
 11189   01025A                     l3919:
 11190   01025A  C52C  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 11191   01025E  C52D  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11192   010262  C4DE F4F6          	movff	postinc2,tblptrl
 11193   010266  C4DD F4F7          	movff	postdec2,tblptrh
 11194   01026A                     	if	0	;tblptru may be non-zero
 11195   01026A                     	endif
 11196   01026A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11197   01026A  0E00               	movlw	low (__mediumconst shr (0+16))
 11198   01026C  6EF8               	movwf	tblptru,c
 11199   01026E                     	endif
 11200   01026E  0008               	tblrd		*
 11201   010270  50F5               	movf	tablat,w,c
 11202   010272  0A6C               	xorlw	108
 11203   010274  A4D8               	btfss	status,2,c
 11204   010276  EF3F  F081         	goto	u3071
 11205   01027A  EF41  F081         	goto	u3070
 11206   01027E                     u3071:
 11207   01027E  EF83  F081         	goto	l3929
 11208   010282                     u3070:
 11209   010282  C52C  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 11210   010286  C52D  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11211   01028A  C4DE F530          	movff	postinc2,??_vfpfcnvrt
 11212   01028E  C4DD F531          	movff	postdec2,??_vfpfcnvrt+1
 11213   010292  0E01               	movlw	1
 11214   010294  2630               	addwf	??_vfpfcnvrt^(0+1280),f,c
 11215   010296  0E00               	movlw	0
 11216   010298  2231               	addwfc	(??_vfpfcnvrt+1)^(0+1280),f,c
 11217   01029A  C530  F4F6         	movff	??_vfpfcnvrt,tblptrl
 11218   01029E  C531  F4F7         	movff	??_vfpfcnvrt+1,tblptrh
 11219   0102A2                     	if	0	;tblptru may be non-zero
 11220   0102A2                     	endif
 11221   0102A2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11222   0102A2  0E00               	movlw	low (__mediumconst shr (0+16))
 11223   0102A4  6EF8               	movwf	tblptru,c
 11224   0102A6                     	endif
 11225   0102A6  0008               	tblrd		*
 11226   0102A8  50F5               	movf	tablat,w,c
 11227   0102AA  0A6C               	xorlw	108
 11228   0102AC  A4D8               	btfss	status,2,c
 11229   0102AE  EF5B  F081         	goto	u3081
 11230   0102B2  EF5D  F081         	goto	u3080
 11231   0102B6                     u3081:
 11232   0102B6  EF83  F081         	goto	l3929
 11233   0102BA                     u3080:
 11234   0102BA  C52C  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 11235   0102BE  C52D  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11236   0102C2  C4DE F530          	movff	postinc2,??_vfpfcnvrt
 11237   0102C6  C4DD F531          	movff	postdec2,??_vfpfcnvrt+1
 11238   0102CA  0E02               	movlw	2
 11239   0102CC  2630               	addwf	??_vfpfcnvrt^(0+1280),f,c
 11240   0102CE  0E00               	movlw	0
 11241   0102D0  2231               	addwfc	(??_vfpfcnvrt+1)^(0+1280),f,c
 11242   0102D2  C530  F4F6         	movff	??_vfpfcnvrt,tblptrl
 11243   0102D6  C531  F4F7         	movff	??_vfpfcnvrt+1,tblptrh
 11244   0102DA                     	if	0	;tblptru may be non-zero
 11245   0102DA                     	endif
 11246   0102DA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11247   0102DA  0E00               	movlw	low (__mediumconst shr (0+16))
 11248   0102DC  6EF8               	movwf	tblptru,c
 11249   0102DE                     	endif
 11250   0102DE  0008               	tblrd		*
 11251   0102E0  50F5               	movf	tablat,w,c
 11252   0102E2  0A73               	xorlw	115
 11253   0102E4  A4D8               	btfss	status,2,c
 11254   0102E6  EF77  F081         	goto	u3091
 11255   0102EA  EF79  F081         	goto	u3090
 11256   0102EE                     u3091:
 11257   0102EE  EF83  F081         	goto	l3929
 11258   0102F2                     u3090:
 11259   0102F2                     
 11260                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1662:    *fmt += 
      +                          3;
 11261   0102F2  0E03               	movlw	3
 11262   0102F4  C52C  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 11263   0102F8  C52D  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11264   0102FC  26DE               	addwf	postinc2,f,c
 11265   0102FE  0E00               	movlw	0
 11266   010300  22DD               	addwfc	postdec2,f,c
 11267   010302  EF29  F081         	goto	l3917
 11268   010306                     l3929:
 11269                           
 11270                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1665:   if (done)
      +                           {
 11271   010306  5036               	movf	vfpfcnvrt@done^(0+1280),w,c
 11272   010308  B4D8               	btfsc	status,2,c
 11273   01030A  EF89  F081         	goto	u3101
 11274   01030E  EF8B  F081         	goto	u3100
 11275   010312                     u3101:
 11276   010312  EFA7  F081         	goto	l3935
 11277   010316                     u3100:
 11278   010316                     
 11279                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1682:    return (
      +                          void) stoa(fp, (*(char * *)__va_arg(*(char * **)ap, (char *)0)));;	Return value of _vfpf
      +                          cnvrt is never used
 11280   010316  C52A  F50D         	movff	vfpfcnvrt@fp,stoa@fp
 11281   01031A  C52B  F50E         	movff	vfpfcnvrt@fp+1,stoa@fp+1
 11282   01031E  C52E  F4D9         	movff	vfpfcnvrt@ap,fsr2l
 11283   010322  C52F  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
 11284   010326  C4DF F530          	movff	indf2,??_vfpfcnvrt
 11285   01032A  0E02               	movlw	2
 11286   01032C  26DE               	addwf	postinc2,f,c
 11287   01032E  C4DF F531          	movff	indf2,??_vfpfcnvrt+1
 11288   010332  0E00               	movlw	0
 11289   010334  22DD               	addwfc	postdec2,f,c
 11290   010336  C530  F4D9         	movff	??_vfpfcnvrt,fsr2l
 11291   01033A  C531  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
 11292   01033E  C4DE F50F          	movff	postinc2,stoa@s
 11293   010342  C4DD F510          	movff	postdec2,stoa@s+1
 11294   010346  EC85  F083         	call	_stoa	;wreg free
 11295   01034A  EFC6  F081         	goto	l1547
 11296   01034E                     l3935:
 11297                           
 11298                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
 11299   01034E  C52C  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 11300   010352  C52D  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11301   010356  2ADE               	incf	postinc2,f,c
 11302   010358  0E00               	movlw	0
 11303   01035A  22DD               	addwfc	postdec2,f,c
 11304   01035C  EFC6  F081         	goto	l1547
 11305   010360                     l3939:
 11306                           
 11307                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
 11308   010360  C52C  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 11309   010364  C52D  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11310   010368  C4DE F4F6          	movff	postinc2,tblptrl
 11311   01036C  C4DD F4F7          	movff	postdec2,tblptrh
 11312   010370                     	if	0	;tblptru may be non-zero
 11313   010370                     	endif
 11314   010370                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11315   010370  0E00               	movlw	low (__mediumconst shr (0+16))
 11316   010372  6EF8               	movwf	tblptru,c
 11317   010374                     	endif
 11318   010374  0008               	tblrd		*
 11319   010376  50F5               	movf	tablat,w,c
 11320   010378  6E04               	movwf	fputc@c^(0+1280),c
 11321   01037A  6A05               	clrf	(fputc@c+1)^(0+1280),c
 11322   01037C  C52A  F506         	movff	vfpfcnvrt@fp,fputc@fp
 11323   010380  C52B  F507         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 11324   010384  EC22  F085         	call	_fputc	;wreg free
 11325   010388  EFA7  F081         	goto	l3935
 11326   01038C                     l1547:
 11327   01038C  0012               	return		;funcret
 11328   01038E                     __end_of_vfpfcnvrt:
 11329                           	callstack 0
 11330                           
 11331 ;; *************** function _xtoa *****************
 11332 ;; Defined at:
 11333 ;;		line 1055 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 11334 ;; Parameters:    Size  Location     Type
 11335 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
 11336 ;;		 -> NULL(0), 
 11337 ;;  d               2   30[COMRAM] unsigned int 
 11338 ;; Auto vars:     Size  Location     Type
 11339 ;;  i               2   39[COMRAM] int 
 11340 ;;  w               2   36[COMRAM] int 
 11341 ;;  c               1   38[COMRAM] unsigned char 
 11342 ;;  p               1   35[COMRAM] _Bool 
 11343 ;; Return value:  Size  Location     Type
 11344 ;;                  1    wreg      void 
 11345 ;; Registers used:
 11346 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11347 ;; Tracked objects:
 11348 ;;		On entry : 0/0
 11349 ;;		On exit  : 0/0
 11350 ;;		Unchanged: 0/0
 11351 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 11352 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11353 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11354 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11355 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11356 ;;Total ram usage:       13 bytes
 11357 ;; Hardware stack levels used: 1
 11358 ;; Hardware stack levels required when called: 7
 11359 ;; This function calls:
 11360 ;;		_pad
 11361 ;; This function is called by:
 11362 ;;		_vfpfcnvrt
 11363 ;; This function uses a non-reentrant model
 11364 ;;
 11365                           
 11366                           	psect	text15
 11367   010874                     __ptext15:
 11368                           	callstack 0
 11369   010874                     _xtoa:
 11370                           	callstack 114
 11371   010874                     
 11372                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1055: static void
      +                           xtoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\comm
      +                          on\doprnt.c: 1058: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.
      +                          c: 1059:  char c;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 
      +                          1063:     int i, w;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c
      +                          : 1067:  _Bool p = 1;
 11373   010874  0E01               	movlw	1
 11374   010876  6E24               	movwf	xtoa@p^(0+1280),c
 11375   010878                     
 11376                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1082:     w = wid
      +                          th;
 11377   010878  C55A  F525         	movff	_width,xtoa@w
 11378   01087C  C55B  F526         	movff	_width+1,xtoa@w+1
 11379                           
 11380                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1095:     i = siz
      +                          eof(dbuf) - 1;
 11381   010880  0E00               	movlw	0
 11382   010882  6E29               	movwf	(xtoa@i+1)^(0+1280),c
 11383   010884  0E1F               	movlw	31
 11384   010886  6E28               	movwf	xtoa@i^(0+1280),c
 11385   010888                     
 11386                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1096:     dbuf[i]
      +                           = '\0';
 11387   010888  0105               	movlb	5	; () banked
 11388   01088A  6BEE               	clrf	(_dbuf+31)& (0+255),b
 11389                           
 11390                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1097:     while (
      +                          !(i < 2) && (d != 0
 11391   01088C  EF78  F084         	goto	l3821
 11392   010890                     l3803:
 11393                           
 11394                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1106:     )) {;C:
      +                          \Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1107:         --i;
 11395   010890  0628               	decf	xtoa@i^(0+1280),f,c
 11396   010892  A0D8               	btfss	status,0,c
 11397   010894  0629               	decf	(xtoa@i+1)^(0+1280),f,c
 11398   010896                     
 11399                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1108:         c =
      +                           d & 0x0f;
 11400   010896  501F               	movf	xtoa@d^(0+1280),w,c
 11401   010898  0B0F               	andlw	15
 11402   01089A  6E27               	movwf	xtoa@c^(0+1280),c
 11403   01089C                     
 11404                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1109:   if (c < 1
      +                          0) {
 11405   01089C  0E0A               	movlw	10
 11406   01089E  6027               	cpfslt	xtoa@c^(0+1280),c
 11407   0108A0  EF54  F084         	goto	u2901
 11408   0108A4  EF56  F084         	goto	u2900
 11409   0108A8                     u2901:
 11410   0108A8  EF5A  F084         	goto	l3811
 11411   0108AC                     u2900:
 11412   0108AC                     
 11413                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1110:    c += '0'
      +                          ;
 11414   0108AC  0E30               	movlw	48
 11415   0108AE  2627               	addwf	xtoa@c^(0+1280),f,c
 11416                           
 11417                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1111:   }
 11418   0108B0  EF5C  F084         	goto	l3813
 11419   0108B4                     l3811:
 11420                           
 11421                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1116:    c += 'a'
      +                           - 10;
 11422   0108B4  0E57               	movlw	87
 11423   0108B6  2627               	addwf	xtoa@c^(0+1280),f,c
 11424   0108B8                     l3813:
 11425                           
 11426                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1121:   dbuf[i] =
      +                           c;
 11427   0108B8  0ECF               	movlw	low _dbuf
 11428   0108BA  2428               	addwf	xtoa@i^(0+1280),w,c
 11429   0108BC  6ED9               	movwf	fsr2l,c
 11430   0108BE  0E05               	movlw	high _dbuf
 11431   0108C0  2029               	addwfc	(xtoa@i+1)^(0+1280),w,c
 11432   0108C2  6EDA               	movwf	fsr2h,c
 11433   0108C4  C527  F4DF         	movff	xtoa@c,indf2
 11434   0108C8                     
 11435                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1125:   p = 0;
 11436   0108C8  6A24               	clrf	xtoa@p^(0+1280),c
 11437   0108CA                     
 11438                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1127:         --w
      +                          ;
 11439   0108CA  0625               	decf	xtoa@w^(0+1280),f,c
 11440   0108CC  A0D8               	btfss	status,0,c
 11441   0108CE  0626               	decf	(xtoa@w+1)^(0+1280),f,c
 11442   0108D0                     
 11443                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1128:         d =
      +                           d >> 4;
 11444   0108D0  C51F  F521         	movff	xtoa@d,??_xtoa
 11445   0108D4  C520  F522         	movff	xtoa@d+1,??_xtoa+1
 11446   0108D8  0E04               	movlw	4
 11447   0108DA  6E23               	movwf	(??_xtoa+2)^(0+1280),c
 11448   0108DC                     u2915:
 11449   0108DC  90D8               	bcf	status,0,c
 11450   0108DE  3222               	rrcf	(??_xtoa+1)^(0+1280),f,c
 11451   0108E0  3221               	rrcf	??_xtoa^(0+1280),f,c
 11452   0108E2  2E23               	decfsz	(??_xtoa+2)^(0+1280),f,c
 11453   0108E4  EF6E  F084         	goto	u2915
 11454   0108E8  C521  F51F         	movff	??_xtoa,xtoa@d
 11455   0108EC  C522  F520         	movff	??_xtoa+1,xtoa@d+1
 11456   0108F0                     l3821:
 11457                           
 11458                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1097:     while (
      +                          !(i < 2) && (d != 0
 11459   0108F0  BE29               	btfsc	(xtoa@i+1)^(0+1280),7,c
 11460   0108F2  EF84  F084         	goto	u2921
 11461   0108F6  5029               	movf	(xtoa@i+1)^(0+1280),w,c
 11462   0108F8  E109               	bnz	u2920
 11463   0108FA  0E02               	movlw	2
 11464   0108FC  5C28               	subwf	xtoa@i^(0+1280),w,c
 11465   0108FE  A0D8               	btfss	status,0,c
 11466   010900  EF84  F084         	goto	u2921
 11467   010904  EF86  F084         	goto	u2920
 11468   010908                     u2921:
 11469   010908  EFAB  F084         	goto	l3831
 11470   01090C                     u2920:
 11471   01090C  501F               	movf	xtoa@d^(0+1280),w,c
 11472   01090E  1020               	iorwf	(xtoa@d+1)^(0+1280),w,c
 11473   010910  A4D8               	btfss	status,2,c
 11474   010912  EF8D  F084         	goto	u2931
 11475   010916  EF8F  F084         	goto	u2930
 11476   01091A                     u2931:
 11477   01091A  EF48  F084         	goto	l3803
 11478   01091E                     u2930:
 11479   01091E  5024               	movf	xtoa@p^(0+1280),w,c
 11480   010920  A4D8               	btfss	status,2,c
 11481   010922  EF95  F084         	goto	u2941
 11482   010926  EF97  F084         	goto	u2940
 11483   01092A                     u2941:
 11484   01092A  EF48  F084         	goto	l3803
 11485   01092E                     u2940:
 11486   01092E  BE26               	btfsc	(xtoa@w+1)^(0+1280),7,c
 11487   010930  EFA2  F084         	goto	u2951
 11488   010934  5026               	movf	(xtoa@w+1)^(0+1280),w,c
 11489   010936  E108               	bnz	u2950
 11490   010938  0425               	decf	xtoa@w^(0+1280),w,c
 11491   01093A  A0D8               	btfss	status,0,c
 11492   01093C  EFA2  F084         	goto	u2951
 11493   010940  EFA4  F084         	goto	u2950
 11494   010944                     u2951:
 11495   010944  EFAB  F084         	goto	l3831
 11496   010948                     u2950:
 11497   010948  B25C               	btfsc	_flags^(0+1280),1,c
 11498   01094A  EFA9  F084         	goto	u2961
 11499   01094E  EFAB  F084         	goto	u2960
 11500   010952                     u2961:
 11501   010952  EF48  F084         	goto	l3803
 11502   010956                     u2960:
 11503   010956                     l3831:
 11504                           
 11505                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1152:     return 
      +                          (void) pad(fp, &dbuf[i], w);
 11506   010956  C51D  F514         	movff	xtoa@fp,pad@fp
 11507   01095A  C51E  F515         	movff	xtoa@fp+1,pad@fp+1
 11508   01095E  0ECF               	movlw	low _dbuf
 11509   010960  2428               	addwf	xtoa@i^(0+1280),w,c
 11510   010962  6E16               	movwf	pad@buf^(0+1280),c
 11511   010964  0E05               	movlw	high _dbuf
 11512   010966  2029               	addwfc	(xtoa@i+1)^(0+1280),w,c
 11513   010968  6E17               	movwf	(pad@buf+1)^(0+1280),c
 11514   01096A  C525  F518         	movff	xtoa@w,pad@p
 11515   01096E  C526  F519         	movff	xtoa@w+1,pad@p+1
 11516   010972  EC09  F088         	call	_pad	;wreg free
 11517   010976  0012               	return		;funcret
 11518   010978                     __end_of_xtoa:
 11519                           	callstack 0
 11520                           
 11521 ;; *************** function _stoa *****************
 11522 ;; Defined at:
 11523 ;;		line 942 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 11524 ;; Parameters:    Size  Location     Type
 11525 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
 11526 ;;		 -> NULL(0), 
 11527 ;;  s               2   14[COMRAM] PTR unsigned char 
 11528 ;;		 -> ?_printf(2), rf24_pa_dbm(32), rf24_crclength(30), rf24_datarates(24), 
 11529 ;;		 -> STR_12(14), STR_11(8), STR_10(9), STR_9(7), 
 11530 ;;		 -> STR_8(10), STR_7(7), STR_6(11), STR_5(9), 
 11531 ;;		 -> STR_4(13), STR_3(13), 
 11532 ;; Auto vars:     Size  Location     Type
 11533 ;;  l               2   24[COMRAM] int 
 11534 ;;  cp              2   22[COMRAM] PTR unsigned char 
 11535 ;;		 -> STR_25(7), ?_printf(2), rf24_pa_dbm(32), rf24_crclength(30), 
 11536 ;;		 -> rf24_datarates(24), STR_12(14), STR_11(8), STR_10(9), 
 11537 ;;		 -> STR_9(7), STR_8(10), STR_7(7), STR_6(11), 
 11538 ;;		 -> STR_5(9), STR_4(13), STR_3(13), 
 11539 ;;  w               2   20[COMRAM] int 
 11540 ;;  p               2   18[COMRAM] int 
 11541 ;; Return value:  Size  Location     Type
 11542 ;;                  1    wreg      void 
 11543 ;; Registers used:
 11544 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11545 ;; Tracked objects:
 11546 ;;		On entry : 0/0
 11547 ;;		On exit  : 0/0
 11548 ;;		Unchanged: 0/0
 11549 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 11550 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11551 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11552 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11553 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11554 ;;Total ram usage:       14 bytes
 11555 ;; Hardware stack levels used: 1
 11556 ;; Hardware stack levels required when called: 5
 11557 ;; This function calls:
 11558 ;;		_fputc
 11559 ;; This function is called by:
 11560 ;;		_vfpfcnvrt
 11561 ;; This function uses a non-reentrant model
 11562 ;;
 11563                           
 11564                           	psect	text16
 11565   01070A                     __ptext16:
 11566                           	callstack 0
 11567   01070A                     _stoa:
 11568                           	callstack 116
 11569   01070A                     
 11570                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 942: static void 
      +                          stoa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\dopr
      +                          nt.c: 943: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 944: 
      +                              char *cp;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 945:
      +                               int l, p;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 947
      +                          :  int w;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 951:    
      +                           cp = s;
 11571   01070A  C50F  F517         	movff	stoa@s,stoa@cp
 11572   01070E  C510  F518         	movff	stoa@s+1,stoa@cp+1
 11573                           
 11574                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 952:     if (!cp)
      +                           {
 11575   010712  5017               	movf	stoa@cp^(0+1280),w,c
 11576   010714  1018               	iorwf	(stoa@cp+1)^(0+1280),w,c
 11577   010716  A4D8               	btfss	status,2,c
 11578   010718  EF90  F083         	goto	u2811
 11579   01071C  EF92  F083         	goto	u2810
 11580   010720                     u2811:
 11581   010720  EF96  F083         	goto	l3769
 11582   010724                     u2810:
 11583   010724                     
 11584                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 953:         cp =
      +                           "(null)";
 11585   010724  0EDA               	movlw	low STR_25
 11586   010726  6E17               	movwf	stoa@cp^(0+1280),c
 11587   010728  0EFF               	movlw	high STR_25
 11588   01072A  6E18               	movwf	(stoa@cp+1)^(0+1280),c
 11589   01072C                     l3769:
 11590                           
 11591                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 957:  for (l = 0;
      +                           cp[l] != '\0'; l++) {
 11592   01072C  0E00               	movlw	0
 11593   01072E  6E1A               	movwf	(stoa@l+1)^(0+1280),c
 11594   010730  0E00               	movlw	0
 11595   010732  6E19               	movwf	stoa@l^(0+1280),c
 11596   010734  EF9E  F083         	goto	l3773
 11597   010738                     l3771:
 11598   010738  4A19               	infsnz	stoa@l^(0+1280),f,c
 11599   01073A  2A1A               	incf	(stoa@l+1)^(0+1280),f,c
 11600   01073C                     l3773:
 11601   01073C  5019               	movf	stoa@l^(0+1280),w,c
 11602   01073E  2417               	addwf	stoa@cp^(0+1280),w,c
 11603   010740  6E11               	movwf	??_stoa^(0+1280),c
 11604   010742  501A               	movf	(stoa@l+1)^(0+1280),w,c
 11605   010744  2018               	addwfc	(stoa@cp+1)^(0+1280),w,c
 11606   010746  6E12               	movwf	(??_stoa+1)^(0+1280),c
 11607   010748  C511  F4F6         	movff	??_stoa,tblptrl
 11608   01074C  C512  F4F7         	movff	??_stoa+1,tblptrh
 11609   010750  0E00               	movlw	low (__mediumconst shr (0+16))
 11610   010752  6EF8               	movwf	tblptru,c
 11611   010754  0E25               	movlw	(high __ramtop+-1)
 11612   010756  64F7               	cpfsgt	tblptrh,c
 11613   010758  D003               	bra	u2827
 11614   01075A  0008               	tblrd		*
 11615   01075C  50F5               	movf	tablat,w,c
 11616   01075E  D005               	bra	u2820
 11617   010760                     u2827:
 11618   010760  C4F6 F4E9          	movff	tblptrl,fsr0l
 11619   010764  C4F7 F4EA          	movff	tblptrh,fsr0h
 11620   010768  50EF               	movf	indf0,w,c
 11621   01076A                     u2820:
 11622   01076A  0900               	iorlw	0
 11623   01076C  A4D8               	btfss	status,2,c
 11624   01076E  EFBB  F083         	goto	u2831
 11625   010772  EFBD  F083         	goto	u2830
 11626   010776                     u2831:
 11627   010776  EF9C  F083         	goto	l3771
 11628   01077A                     u2830:
 11629   01077A                     
 11630                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 965:     p = l;
 11631   01077A  C519  F513         	movff	stoa@l,stoa@p
 11632   01077E  C51A  F514         	movff	stoa@l+1,stoa@p+1
 11633                           
 11634                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 969:     w = widt
      +                          h;
 11635   010782  C55A  F515         	movff	_width,stoa@w
 11636   010786  C55B  F516         	movff	_width+1,stoa@w+1
 11637                           
 11638                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 970:     if (!(fl
      +                          ags & (1 << 0))) {
 11639   01078A  B05C               	btfsc	_flags^(0+1280),0,c
 11640   01078C  EFCA  F083         	goto	u2841
 11641   010790  EFCC  F083         	goto	u2840
 11642   010794                     u2841:
 11643   010794  EF08  F084         	goto	l3787
 11644   010798                     u2840:
 11645   010798  EFDA  F083         	goto	l3781
 11646   01079C                     l3777:
 11647                           
 11648                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 972:             
      +                          fputc(' ', fp);
 11649   01079C  0E00               	movlw	0
 11650   01079E  6E05               	movwf	(fputc@c+1)^(0+1280),c
 11651   0107A0  0E20               	movlw	32
 11652   0107A2  6E04               	movwf	fputc@c^(0+1280),c
 11653   0107A4  C50D  F506         	movff	stoa@fp,fputc@fp
 11654   0107A8  C50E  F507         	movff	stoa@fp+1,fputc@fp+1
 11655   0107AC  EC22  F085         	call	_fputc	;wreg free
 11656   0107B0                     
 11657                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 973:             
      +                          ++l;
 11658   0107B0  4A19               	infsnz	stoa@l^(0+1280),f,c
 11659   0107B2  2A1A               	incf	(stoa@l+1)^(0+1280),f,c
 11660   0107B4                     l3781:
 11661                           
 11662                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 971:         whil
      +                          e (l < w) {
 11663   0107B4  5015               	movf	stoa@w^(0+1280),w,c
 11664   0107B6  5C19               	subwf	stoa@l^(0+1280),w,c
 11665   0107B8  501A               	movf	(stoa@l+1)^(0+1280),w,c
 11666   0107BA  0A80               	xorlw	128
 11667   0107BC  6E11               	movwf	??_stoa^(0+1280),c
 11668   0107BE  5016               	movf	(stoa@w+1)^(0+1280),w,c
 11669   0107C0  0A80               	xorlw	128
 11670   0107C2  5811               	subwfb	??_stoa^(0+1280),w,c
 11671   0107C4  A0D8               	btfss	status,0,c
 11672   0107C6  EFE7  F083         	goto	u2851
 11673   0107CA  EFE9  F083         	goto	u2850
 11674   0107CE                     u2851:
 11675   0107CE  EFCE  F083         	goto	l3777
 11676   0107D2                     u2850:
 11677   0107D2  EF08  F084         	goto	l3787
 11678   0107D6                     l3783:
 11679                           
 11680                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 980:         fput
      +                          c(*cp, fp);
 11681   0107D6  C517  F4F6         	movff	stoa@cp,tblptrl
 11682   0107DA  C518  F4F7         	movff	stoa@cp+1,tblptrh
 11683   0107DE  0E00               	movlw	low (__mediumconst shr (0+16))
 11684   0107E0  6EF8               	movwf	tblptru,c
 11685   0107E2  0E25               	movlw	(high __ramtop+-1)
 11686   0107E4  64F7               	cpfsgt	tblptrh,c
 11687   0107E6  D003               	bra	u2867
 11688   0107E8  0008               	tblrd		*
 11689   0107EA  50F5               	movf	tablat,w,c
 11690   0107EC  D005               	bra	u2860
 11691   0107EE                     u2867:
 11692   0107EE  C4F6 F4E9          	movff	tblptrl,fsr0l
 11693   0107F2  C4F7 F4EA          	movff	tblptrh,fsr0h
 11694   0107F6  50EF               	movf	indf0,w,c
 11695   0107F8                     u2860:
 11696   0107F8  6E11               	movwf	??_stoa^(0+1280),c
 11697   0107FA  5011               	movf	??_stoa^(0+1280),w,c
 11698   0107FC  6E04               	movwf	fputc@c^(0+1280),c
 11699   0107FE  6A05               	clrf	(fputc@c+1)^(0+1280),c
 11700   010800  C50D  F506         	movff	stoa@fp,fputc@fp
 11701   010804  C50E  F507         	movff	stoa@fp+1,fputc@fp+1
 11702   010808  EC22  F085         	call	_fputc	;wreg free
 11703   01080C                     
 11704                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 981:         ++cp
      +                          ;
 11705   01080C  4A17               	infsnz	stoa@cp^(0+1280),f,c
 11706   01080E  2A18               	incf	(stoa@cp+1)^(0+1280),f,c
 11707   010810                     l3787:
 11708                           
 11709                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 979:     while (p
      +                          --) {
 11710   010810  0613               	decf	stoa@p^(0+1280),f,c
 11711   010812  A0D8               	btfss	status,0,c
 11712   010814  0614               	decf	(stoa@p+1)^(0+1280),f,c
 11713   010816  2813               	incf	stoa@p^(0+1280),w,c
 11714   010818  E106               	bnz	u2871
 11715   01081A  2814               	incf	(stoa@p+1)^(0+1280),w,c
 11716   01081C  A4D8               	btfss	status,2,c
 11717   01081E  EF13  F084         	goto	u2871
 11718   010822  EF15  F084         	goto	u2870
 11719   010826                     u2871:
 11720   010826  EFEB  F083         	goto	l3783
 11721   01082A                     u2870:
 11722   01082A                     
 11723                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 986:     if (flag
      +                          s & (1 << 0)) {
 11724   01082A  A05C               	btfss	_flags^(0+1280),0,c
 11725   01082C  EF1A  F084         	goto	u2881
 11726   010830  EF1C  F084         	goto	u2880
 11727   010834                     u2881:
 11728   010834  EF39  F084         	goto	l1512
 11729   010838                     u2880:
 11730   010838  EF2A  F084         	goto	l3795
 11731   01083C                     l3791:
 11732                           
 11733                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 988:             
      +                          fputc(' ', fp);
 11734   01083C  0E00               	movlw	0
 11735   01083E  6E05               	movwf	(fputc@c+1)^(0+1280),c
 11736   010840  0E20               	movlw	32
 11737   010842  6E04               	movwf	fputc@c^(0+1280),c
 11738   010844  C50D  F506         	movff	stoa@fp,fputc@fp
 11739   010848  C50E  F507         	movff	stoa@fp+1,fputc@fp+1
 11740   01084C  EC22  F085         	call	_fputc	;wreg free
 11741   010850                     
 11742                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 989:             
      +                          ++l;
 11743   010850  4A19               	infsnz	stoa@l^(0+1280),f,c
 11744   010852  2A1A               	incf	(stoa@l+1)^(0+1280),f,c
 11745   010854                     l3795:
 11746                           
 11747                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 987:         whil
      +                          e (l < w) {
 11748   010854  5015               	movf	stoa@w^(0+1280),w,c
 11749   010856  5C19               	subwf	stoa@l^(0+1280),w,c
 11750   010858  501A               	movf	(stoa@l+1)^(0+1280),w,c
 11751   01085A  0A80               	xorlw	128
 11752   01085C  6E11               	movwf	??_stoa^(0+1280),c
 11753   01085E  5016               	movf	(stoa@w+1)^(0+1280),w,c
 11754   010860  0A80               	xorlw	128
 11755   010862  5811               	subwfb	??_stoa^(0+1280),w,c
 11756   010864  A0D8               	btfss	status,0,c
 11757   010866  EF37  F084         	goto	u2891
 11758   01086A  EF39  F084         	goto	u2890
 11759   01086E                     u2891:
 11760   01086E  EF1E  F084         	goto	l3791
 11761   010872                     u2890:
 11762   010872                     l1512:
 11763   010872  0012               	return		;funcret
 11764   010874                     __end_of_stoa:
 11765                           	callstack 0
 11766                           
 11767 ;; *************** function _read_prec_or_width *****************
 11768 ;; Defined at:
 11769 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 11770 ;; Parameters:    Size  Location     Type
 11771 ;;  fmt             2    3[COMRAM] PTR PTR const unsigned c
 11772 ;;		 -> vfprintf@cfmt(2), 
 11773 ;;  ap              2    5[COMRAM] PTR PTR void [1]
 11774 ;;		 -> printf@ap(2), 
 11775 ;; Auto vars:     Size  Location     Type
 11776 ;;  c               1    9[COMRAM] unsigned char 
 11777 ;;  n               2   10[COMRAM] int 
 11778 ;; Return value:  Size  Location     Type
 11779 ;;                  2    3[COMRAM] int 
 11780 ;; Registers used:
 11781 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 11782 ;; Tracked objects:
 11783 ;;		On entry : 0/0
 11784 ;;		On exit  : 0/0
 11785 ;;		Unchanged: 0/0
 11786 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 11787 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11788 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11789 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11790 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11791 ;;Total ram usage:        9 bytes
 11792 ;; Hardware stack levels used: 1
 11793 ;; Hardware stack levels required when called: 3
 11794 ;; This function calls:
 11795 ;;		Nothing
 11796 ;; This function is called by:
 11797 ;;		_vfpfcnvrt
 11798 ;; This function uses a non-reentrant model
 11799 ;;
 11800                           
 11801                           	psect	text17
 11802   010978                     __ptext17:
 11803                           	callstack 0
 11804   010978                     _read_prec_or_width:
 11805                           	callstack 118
 11806   010978                     
 11807                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
 11808   010978  0E00               	movlw	0
 11809   01097A  6E0C               	movwf	(read_prec_or_width@n+1)^(0+1280),c
 11810   01097C  0E00               	movlw	0
 11811   01097E  6E0B               	movwf	read_prec_or_width@n^(0+1280),c
 11812   010980                     
 11813                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
 11814   010980  C504  F4D9         	movff	read_prec_or_width@fmt,fsr2l
 11815   010984  C505  F4DA         	movff	read_prec_or_width@fmt+1,fsr2h
 11816   010988  C4DE F4F6          	movff	postinc2,tblptrl
 11817   01098C  C4DD F4F7          	movff	postdec2,tblptrh
 11818   010990                     	if	0	;tblptru may be non-zero
 11819   010990                     	endif
 11820   010990                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11821   010990  0E00               	movlw	low (__mediumconst shr (0+16))
 11822   010992  6EF8               	movwf	tblptru,c
 11823   010994                     	endif
 11824   010994  0008               	tblrd		*
 11825   010996  50F5               	movf	tablat,w,c
 11826   010998  0A2A               	xorlw	42
 11827   01099A  A4D8               	btfss	status,2,c
 11828   01099C  EFD2  F084         	goto	u2971
 11829   0109A0  EFD4  F084         	goto	u2970
 11830   0109A4                     u2971:
 11831   0109A4  EF07  F085         	goto	l3845
 11832   0109A8                     u2970:
 11833   0109A8                     
 11834                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
 11835   0109A8  C504  F4D9         	movff	read_prec_or_width@fmt,fsr2l
 11836   0109AC  C505  F4DA         	movff	read_prec_or_width@fmt+1,fsr2h
 11837   0109B0  2ADE               	incf	postinc2,f,c
 11838   0109B2  0E00               	movlw	0
 11839   0109B4  22DD               	addwfc	postdec2,f,c
 11840                           
 11841                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
 11842   0109B6  C506  F4D9         	movff	read_prec_or_width@ap,fsr2l
 11843   0109BA  C507  F4DA         	movff	read_prec_or_width@ap+1,fsr2h
 11844   0109BE  C4DF F508          	movff	indf2,??_read_prec_or_width
 11845   0109C2  0E02               	movlw	2
 11846   0109C4  26DE               	addwf	postinc2,f,c
 11847   0109C6  C4DF F509          	movff	indf2,??_read_prec_or_width+1
 11848   0109CA  0E00               	movlw	0
 11849   0109CC  22DD               	addwfc	postdec2,f,c
 11850   0109CE  C508  F4D9         	movff	??_read_prec_or_width,fsr2l
 11851   0109D2  C509  F4DA         	movff	??_read_prec_or_width+1,fsr2h
 11852   0109D6  C4DE F50B          	movff	postinc2,read_prec_or_width@n
 11853   0109DA  C4DD F50C          	movff	postdec2,read_prec_or_width@n+1
 11854                           
 11855                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
 11856   0109DE  EF1D  F085         	goto	l1528
 11857   0109E2                     l3841:
 11858                           
 11859                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
 11860   0109E2  0E0A               	movlw	10
 11861   0109E4  020B               	mulwf	read_prec_or_width@n^(0+1280),c
 11862   0109E6  C4F3 F508          	movff	prodl,??_read_prec_or_width
 11863   0109EA  C4F4 F509          	movff	prodh,??_read_prec_or_width+1
 11864   0109EE  020C               	mulwf	(read_prec_or_width@n+1)^(0+1280),c
 11865   0109F0  50F3               	movf	prodl,w,c
 11866   0109F2  2609               	addwf	(??_read_prec_or_width+1)^(0+1280),f,c
 11867   0109F4  500A               	movf	read_prec_or_width@c^(0+1280),w,c
 11868   0109F6  2408               	addwf	??_read_prec_or_width^(0+1280),w,c
 11869   0109F8  6E0B               	movwf	read_prec_or_width@n^(0+1280),c
 11870   0109FA  0E00               	movlw	0
 11871   0109FC  2009               	addwfc	(??_read_prec_or_width+1)^(0+1280),w,c
 11872   0109FE  6E0C               	movwf	(read_prec_or_width@n+1)^(0+1280),c
 11873   010A00                     
 11874                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
 11875   010A00  C504  F4D9         	movff	read_prec_or_width@fmt,fsr2l
 11876   010A04  C505  F4DA         	movff	read_prec_or_width@fmt+1,fsr2h
 11877   010A08  2ADE               	incf	postinc2,f,c
 11878   010A0A  0E00               	movlw	0
 11879   010A0C  22DD               	addwfc	postdec2,f,c
 11880   010A0E                     l3845:
 11881                           
 11882                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
 11883   010A0E  C504  F4D9         	movff	read_prec_or_width@fmt,fsr2l
 11884   010A12  C505  F4DA         	movff	read_prec_or_width@fmt+1,fsr2h
 11885   010A16  C4DE F4F6          	movff	postinc2,tblptrl
 11886   010A1A  C4DD F4F7          	movff	postdec2,tblptrh
 11887   010A1E                     	if	0	;tblptru may be non-zero
 11888   010A1E                     	endif
 11889   010A1E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11890   010A1E  0E00               	movlw	low (__mediumconst shr (0+16))
 11891   010A20  6EF8               	movwf	tblptru,c
 11892   010A22                     	endif
 11893   010A22  0008               	tblrd		*
 11894   010A24  50F5               	movf	tablat,w,c
 11895   010A26  0FD0               	addlw	208
 11896   010A28  6E0A               	movwf	read_prec_or_width@c^(0+1280),c
 11897   010A2A  0E09               	movlw	9
 11898   010A2C  640A               	cpfsgt	read_prec_or_width@c^(0+1280),c
 11899   010A2E  EF1B  F085         	goto	u2981
 11900   010A32  EF1D  F085         	goto	u2980
 11901   010A36                     u2981:
 11902   010A36  EFF1  F084         	goto	l3841
 11903   010A3A                     u2980:
 11904   010A3A                     l1528:
 11905                           
 11906                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
 11907   010A3A  C50B  F504         	movff	read_prec_or_width@n,?_read_prec_or_width
 11908   010A3E  C50C  F505         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
 11909   010A42  0012               	return		;funcret
 11910   010A44                     __end_of_read_prec_or_width:
 11911                           	callstack 0
 11912                           
 11913 ;; *************** function _dtoa *****************
 11914 ;; Defined at:
 11915 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 11916 ;; Parameters:    Size  Location     Type
 11917 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
 11918 ;;		 -> NULL(0), 
 11919 ;;  d               2   30[COMRAM] int 
 11920 ;; Auto vars:     Size  Location     Type
 11921 ;;  i               2   38[COMRAM] int 
 11922 ;;  w               2   35[COMRAM] int 
 11923 ;;  s               1   37[COMRAM] unsigned char 
 11924 ;;  p               1   34[COMRAM] _Bool 
 11925 ;; Return value:  Size  Location     Type
 11926 ;;                  1    wreg      void 
 11927 ;; Registers used:
 11928 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11929 ;; Tracked objects:
 11930 ;;		On entry : 0/0
 11931 ;;		On exit  : 0/0
 11932 ;;		Unchanged: 0/0
 11933 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 11934 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11935 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11937 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11938 ;;Total ram usage:       12 bytes
 11939 ;; Hardware stack levels used: 1
 11940 ;; Hardware stack levels required when called: 7
 11941 ;; This function calls:
 11942 ;;		___awdiv
 11943 ;;		___awmod
 11944 ;;		_abs
 11945 ;;		_pad
 11946 ;; This function is called by:
 11947 ;;		_vfpfcnvrt
 11948 ;; This function uses a non-reentrant model
 11949 ;;
 11950                           
 11951                           	psect	text18
 11952   010594                     __ptext18:
 11953                           	callstack 0
 11954   010594                     _dtoa:
 11955                           	callstack 114
 11956   010594                     
 11957                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 52
      +                          0:  _Bool p = 1;
 11958   010594  0E01               	movlw	1
 11959   010596  6E23               	movwf	dtoa@p^(0+1280),c
 11960   010598                     
 11961                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 524:     s = d < 
      +                          0 ? 1 : 0;
 11962   010598  BE20               	btfsc	(dtoa@d+1)^(0+1280),7,c
 11963   01059A  EFD1  F082         	goto	u2711
 11964   01059E  EFD4  F082         	goto	u2710
 11965   0105A2                     u2711:
 11966   0105A2  0E01               	movlw	1
 11967   0105A4  EFD5  F082         	goto	u2720
 11968   0105A8                     u2710:
 11969   0105A8  0E00               	movlw	0
 11970   0105AA                     u2720:
 11971   0105AA  6E26               	movwf	dtoa@s^(0+1280),c
 11972   0105AC                     
 11973                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
 11974   0105AC  C55A  F524         	movff	_width,dtoa@w
 11975   0105B0  C55B  F525         	movff	_width+1,dtoa@w+1
 11976   0105B4                     
 11977                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 536:     if (s
 11978   0105B4  5026               	movf	dtoa@s^(0+1280),w,c
 11979   0105B6  B4D8               	btfsc	status,2,c
 11980   0105B8  EFE0  F082         	goto	u2731
 11981   0105BC  EFE2  F082         	goto	u2730
 11982   0105C0                     u2731:
 11983   0105C0  EFF9  F082         	goto	l1480
 11984   0105C4                     u2730:
 11985   0105C4                     
 11986                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 541:         --w;
 11987   0105C4  0624               	decf	dtoa@w^(0+1280),f,c
 11988   0105C6  A0D8               	btfss	status,0,c
 11989   0105C8  0625               	decf	(dtoa@w+1)^(0+1280),f,c
 11990   0105CA                     
 11991                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
 11992   0105CA  5026               	movf	dtoa@s^(0+1280),w,c
 11993   0105CC  A4D8               	btfss	status,2,c
 11994   0105CE  EFEB  F082         	goto	u2741
 11995   0105D2  EFED  F082         	goto	u2740
 11996   0105D6                     u2741:
 11997   0105D6  EFF3  F082         	goto	l3729
 11998   0105DA                     u2740:
 11999   0105DA  0E00               	movlw	0
 12000   0105DC  6E22               	movwf	(_dtoa$1908+1)^(0+1280),c
 12001   0105DE  0E2B               	movlw	43
 12002   0105E0  6E21               	movwf	_dtoa$1908^(0+1280),c
 12003   0105E2  EFF7  F082         	goto	l3731
 12004   0105E6                     l3729:
 12005   0105E6  0E00               	movlw	0
 12006   0105E8  6E22               	movwf	(_dtoa$1908+1)^(0+1280),c
 12007   0105EA  0E2D               	movlw	45
 12008   0105EC  6E21               	movwf	_dtoa$1908^(0+1280),c
 12009   0105EE                     l3731:
 12010   0105EE  C521  F526         	movff	_dtoa$1908,dtoa@s
 12011   0105F2                     l1480:
 12012                           
 12013                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
 12014   0105F2  0E00               	movlw	0
 12015   0105F4  6E28               	movwf	(dtoa@i+1)^(0+1280),c
 12016   0105F6  0E1F               	movlw	31
 12017   0105F8  6E27               	movwf	dtoa@i^(0+1280),c
 12018   0105FA                     
 12019                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
 12020   0105FA  0105               	movlb	5	; () banked
 12021   0105FC  6BEE               	clrf	(_dbuf+31)& (0+255),b
 12022                           
 12023                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 12024   0105FE  EF2F  F083         	goto	l3745
 12025   010602                     l3735:
 12026                           
 12027                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 564:         --i;
 12028   010602  0627               	decf	dtoa@i^(0+1280),f,c
 12029   010604  A0D8               	btfss	status,0,c
 12030   010606  0628               	decf	(dtoa@i+1)^(0+1280),f,c
 12031   010608                     
 12032                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
 12033   010608  0ECF               	movlw	low _dbuf
 12034   01060A  2427               	addwf	dtoa@i^(0+1280),w,c
 12035   01060C  6ED9               	movwf	fsr2l,c
 12036   01060E  0E05               	movlw	high _dbuf
 12037   010610  2028               	addwfc	(dtoa@i+1)^(0+1280),w,c
 12038   010612  6EDA               	movwf	fsr2h,c
 12039   010614  C51F  F504         	movff	dtoa@d,___awmod@dividend
 12040   010618  C520  F505         	movff	dtoa@d+1,___awmod@dividend+1
 12041   01061C  0E00               	movlw	0
 12042   01061E  6E07               	movwf	(___awmod@divisor+1)^(0+1280),c
 12043   010620  0E0A               	movlw	10
 12044   010622  6E06               	movwf	___awmod@divisor^(0+1280),c
 12045   010624  EC09  F087         	call	___awmod	;wreg free
 12046   010628  C504  F50A         	movff	?___awmod,abs@a
 12047   01062C  C505  F50B         	movff	?___awmod+1,abs@a+1
 12048   010630  EC43  F08B         	call	_abs	;wreg free
 12049   010634  500A               	movf	?_abs^(0+1280),w,c
 12050   010636  0F30               	addlw	48
 12051   010638  6EDF               	movwf	indf2,c
 12052   01063A                     
 12053                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 569:   p = 0;
 12054   01063A  6A23               	clrf	dtoa@p^(0+1280),c
 12055   01063C                     
 12056                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 571:         --w;
 12057   01063C  0624               	decf	dtoa@w^(0+1280),f,c
 12058   01063E  A0D8               	btfss	status,0,c
 12059   010640  0625               	decf	(dtoa@w+1)^(0+1280),f,c
 12060   010642                     
 12061                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
 12062   010642  C51F  F504         	movff	dtoa@d,___awdiv@dividend
 12063   010646  C520  F505         	movff	dtoa@d+1,___awdiv@dividend+1
 12064   01064A  0E00               	movlw	0
 12065   01064C  6E07               	movwf	(___awdiv@divisor+1)^(0+1280),c
 12066   01064E  0E0A               	movlw	10
 12067   010650  6E06               	movwf	___awdiv@divisor^(0+1280),c
 12068   010652  EC4E  F086         	call	___awdiv	;wreg free
 12069   010656  C504  F51F         	movff	?___awdiv,dtoa@d
 12070   01065A  C505  F520         	movff	?___awdiv+1,dtoa@d+1
 12071   01065E                     l3745:
 12072                           
 12073                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 12074   01065E  BE28               	btfsc	(dtoa@i+1)^(0+1280),7,c
 12075   010660  EF3A  F083         	goto	u2751
 12076   010664  5028               	movf	(dtoa@i+1)^(0+1280),w,c
 12077   010666  E108               	bnz	u2750
 12078   010668  0427               	decf	dtoa@i^(0+1280),w,c
 12079   01066A  A0D8               	btfss	status,0,c
 12080   01066C  EF3A  F083         	goto	u2751
 12081   010670  EF3C  F083         	goto	u2750
 12082   010674                     u2751:
 12083   010674  EF61  F083         	goto	l3755
 12084   010678                     u2750:
 12085   010678  501F               	movf	dtoa@d^(0+1280),w,c
 12086   01067A  1020               	iorwf	(dtoa@d+1)^(0+1280),w,c
 12087   01067C  A4D8               	btfss	status,2,c
 12088   01067E  EF43  F083         	goto	u2761
 12089   010682  EF45  F083         	goto	u2760
 12090   010686                     u2761:
 12091   010686  EF01  F083         	goto	l3735
 12092   01068A                     u2760:
 12093   01068A  5023               	movf	dtoa@p^(0+1280),w,c
 12094   01068C  A4D8               	btfss	status,2,c
 12095   01068E  EF4B  F083         	goto	u2771
 12096   010692  EF4D  F083         	goto	u2770
 12097   010696                     u2771:
 12098   010696  EF01  F083         	goto	l3735
 12099   01069A                     u2770:
 12100   01069A  BE25               	btfsc	(dtoa@w+1)^(0+1280),7,c
 12101   01069C  EF58  F083         	goto	u2781
 12102   0106A0  5025               	movf	(dtoa@w+1)^(0+1280),w,c
 12103   0106A2  E108               	bnz	u2780
 12104   0106A4  0424               	decf	dtoa@w^(0+1280),w,c
 12105   0106A6  A0D8               	btfss	status,0,c
 12106   0106A8  EF58  F083         	goto	u2781
 12107   0106AC  EF5A  F083         	goto	u2780
 12108   0106B0                     u2781:
 12109   0106B0  EF61  F083         	goto	l3755
 12110   0106B4                     u2780:
 12111   0106B4  B25C               	btfsc	_flags^(0+1280),1,c
 12112   0106B6  EF5F  F083         	goto	u2791
 12113   0106BA  EF61  F083         	goto	u2790
 12114   0106BE                     u2791:
 12115   0106BE  EF01  F083         	goto	l3735
 12116   0106C2                     u2790:
 12117   0106C2                     l3755:
 12118                           
 12119                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
 12120   0106C2  5026               	movf	dtoa@s^(0+1280),w,c
 12121   0106C4  B4D8               	btfsc	status,2,c
 12122   0106C6  EF67  F083         	goto	u2801
 12123   0106CA  EF69  F083         	goto	u2800
 12124   0106CE                     u2801:
 12125   0106CE  EF74  F083         	goto	l3761
 12126   0106D2                     u2800:
 12127   0106D2                     
 12128                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 577:         --i;
 12129   0106D2  0627               	decf	dtoa@i^(0+1280),f,c
 12130   0106D4  A0D8               	btfss	status,0,c
 12131   0106D6  0628               	decf	(dtoa@i+1)^(0+1280),f,c
 12132   0106D8                     
 12133                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
 12134   0106D8  0ECF               	movlw	low _dbuf
 12135   0106DA  2427               	addwf	dtoa@i^(0+1280),w,c
 12136   0106DC  6ED9               	movwf	fsr2l,c
 12137   0106DE  0E05               	movlw	high _dbuf
 12138   0106E0  2028               	addwfc	(dtoa@i+1)^(0+1280),w,c
 12139   0106E2  6EDA               	movwf	fsr2h,c
 12140   0106E4  C526  F4DF         	movff	dtoa@s,indf2
 12141   0106E8                     l3761:
 12142                           
 12143                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
 12144   0106E8  C51D  F514         	movff	dtoa@fp,pad@fp
 12145   0106EC  C51E  F515         	movff	dtoa@fp+1,pad@fp+1
 12146   0106F0  0ECF               	movlw	low _dbuf
 12147   0106F2  2427               	addwf	dtoa@i^(0+1280),w,c
 12148   0106F4  6E16               	movwf	pad@buf^(0+1280),c
 12149   0106F6  0E05               	movlw	high _dbuf
 12150   0106F8  2028               	addwfc	(dtoa@i+1)^(0+1280),w,c
 12151   0106FA  6E17               	movwf	(pad@buf+1)^(0+1280),c
 12152   0106FC  C524  F518         	movff	dtoa@w,pad@p
 12153   010700  C525  F519         	movff	dtoa@w+1,pad@p+1
 12154   010704  EC09  F088         	call	_pad	;wreg free
 12155   010708  0012               	return		;funcret
 12156   01070A                     __end_of_dtoa:
 12157                           	callstack 0
 12158                           
 12159 ;; *************** function _pad *****************
 12160 ;; Defined at:
 12161 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 12162 ;; Parameters:    Size  Location     Type
 12163 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
 12164 ;;		 -> NULL(0), 
 12165 ;;  buf             2   21[COMRAM] PTR unsigned char 
 12166 ;;		 -> dbuf(32), 
 12167 ;;  p               2   23[COMRAM] int 
 12168 ;; Auto vars:     Size  Location     Type
 12169 ;;  i               2   26[COMRAM] int 
 12170 ;; Return value:  Size  Location     Type
 12171 ;;                  1    wreg      void 
 12172 ;; Registers used:
 12173 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12174 ;; Tracked objects:
 12175 ;;		On entry : 0/0
 12176 ;;		On exit  : 0/0
 12177 ;;		Unchanged: 0/0
 12178 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12179 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12180 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12181 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12182 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12183 ;;Total ram usage:        9 bytes
 12184 ;; Hardware stack levels used: 1
 12185 ;; Hardware stack levels required when called: 6
 12186 ;; This function calls:
 12187 ;;		_fputc
 12188 ;;		_fputs
 12189 ;; This function is called by:
 12190 ;;		_dtoa
 12191 ;;		_xtoa
 12192 ;; This function uses a non-reentrant model
 12193 ;;
 12194                           
 12195                           	psect	text19
 12196   011012                     __ptext19:
 12197                           	callstack 0
 12198   011012                     _pad:
 12199                           	callstack 114
 12200   011012                     
 12201                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
 12202   011012  A05C               	btfss	_flags^(0+1280),0,c
 12203   011014  EF0E  F088         	goto	u2661
 12204   011018  EF10  F088         	goto	u2660
 12205   01101C                     u2661:
 12206   01101C  EF1A  F088         	goto	l3699
 12207   011020                     u2660:
 12208   011020                     
 12209                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
 12210   011020  C516  F50D         	movff	pad@buf,fputs@s
 12211   011024  C517  F50E         	movff	pad@buf+1,fputs@s+1
 12212   011028  C514  F50F         	movff	pad@fp,fputs@fp
 12213   01102C  C515  F510         	movff	pad@fp+1,fputs@fp+1
 12214   011030  ECE5  F08A         	call	_fputs	;wreg free
 12215   011034                     l3699:
 12216                           
 12217                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
 12218   011034  BE19               	btfsc	(pad@p+1)^(0+1280),7,c
 12219   011036  EF21  F088         	goto	u2670
 12220   01103A  EF1F  F088         	goto	u2671
 12221   01103E                     u2671:
 12222   01103E  EF25  F088         	goto	l1472
 12223   011042                     u2670:
 12224   011042                     
 12225                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 206:   p = 0;
 12226   011042  0E00               	movlw	0
 12227   011044  6E19               	movwf	(pad@p+1)^(0+1280),c
 12228   011046  0E00               	movlw	0
 12229   011048  6E18               	movwf	pad@p^(0+1280),c
 12230   01104A                     l1472:
 12231                           
 12232                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 208:     i = 0;
 12233   01104A  0E00               	movlw	0
 12234   01104C  6E1C               	movwf	(pad@i+1)^(0+1280),c
 12235   01104E  0E00               	movlw	0
 12236   011050  6E1B               	movwf	pad@i^(0+1280),c
 12237                           
 12238                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 12239   011052  EF37  F088         	goto	l3707
 12240   011056                     l3703:
 12241                           
 12242                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
 12243   011056  0E00               	movlw	0
 12244   011058  6E05               	movwf	(fputc@c+1)^(0+1280),c
 12245   01105A  0E20               	movlw	32
 12246   01105C  6E04               	movwf	fputc@c^(0+1280),c
 12247   01105E  C514  F506         	movff	pad@fp,fputc@fp
 12248   011062  C515  F507         	movff	pad@fp+1,fputc@fp+1
 12249   011066  EC22  F085         	call	_fputc	;wreg free
 12250   01106A                     
 12251                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 211:         ++i;
 12252   01106A  4A1B               	infsnz	pad@i^(0+1280),f,c
 12253   01106C  2A1C               	incf	(pad@i+1)^(0+1280),f,c
 12254   01106E                     l3707:
 12255                           
 12256                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 12257   01106E  5018               	movf	pad@p^(0+1280),w,c
 12258   011070  5C1B               	subwf	pad@i^(0+1280),w,c
 12259   011072  501C               	movf	(pad@i+1)^(0+1280),w,c
 12260   011074  0A80               	xorlw	128
 12261   011076  6E1A               	movwf	??_pad^(0+1280),c
 12262   011078  5019               	movf	(pad@p+1)^(0+1280),w,c
 12263   01107A  0A80               	xorlw	128
 12264   01107C  581A               	subwfb	??_pad^(0+1280),w,c
 12265   01107E  A0D8               	btfss	status,0,c
 12266   011080  EF44  F088         	goto	u2681
 12267   011084  EF46  F088         	goto	u2680
 12268   011088                     u2681:
 12269   011088  EF2B  F088         	goto	l3703
 12270   01108C                     u2680:
 12271   01108C                     
 12272                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
 12273   01108C  B05C               	btfsc	_flags^(0+1280),0,c
 12274   01108E  EF4B  F088         	goto	u2691
 12275   011092  EF4D  F088         	goto	u2690
 12276   011096                     u2691:
 12277   011096  EF57  F088         	goto	l1477
 12278   01109A                     u2690:
 12279   01109A                     
 12280                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
 12281   01109A  C516  F50D         	movff	pad@buf,fputs@s
 12282   01109E  C517  F50E         	movff	pad@buf+1,fputs@s+1
 12283   0110A2  C514  F50F         	movff	pad@fp,fputs@fp
 12284   0110A6  C515  F510         	movff	pad@fp+1,fputs@fp+1
 12285   0110AA  ECE5  F08A         	call	_fputs	;wreg free
 12286   0110AE                     l1477:
 12287   0110AE  0012               	return		;funcret
 12288   0110B0                     __end_of_pad:
 12289                           	callstack 0
 12290                           
 12291 ;; *************** function _fputs *****************
 12292 ;; Defined at:
 12293 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputs.c"
 12294 ;; Parameters:    Size  Location     Type
 12295 ;;  s               2   12[COMRAM] PTR const unsigned char 
 12296 ;;		 -> dbuf(32), 
 12297 ;;  fp              2   14[COMRAM] PTR struct _IO_FILE
 12298 ;;		 -> NULL(0), 
 12299 ;; Auto vars:     Size  Location     Type
 12300 ;;  i               2   17[COMRAM] int 
 12301 ;;  c               1   16[COMRAM] unsigned char 
 12302 ;; Return value:  Size  Location     Type
 12303 ;;                  2   12[COMRAM] int 
 12304 ;; Registers used:
 12305 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12306 ;; Tracked objects:
 12307 ;;		On entry : 0/0
 12308 ;;		On exit  : 0/0
 12309 ;;		Unchanged: 0/0
 12310 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12311 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12312 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12314 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12315 ;;Total ram usage:        7 bytes
 12316 ;; Hardware stack levels used: 1
 12317 ;; Hardware stack levels required when called: 5
 12318 ;; This function calls:
 12319 ;;		_fputc
 12320 ;; This function is called by:
 12321 ;;		_pad
 12322 ;; This function uses a non-reentrant model
 12323 ;;
 12324                           
 12325                           	psect	text20
 12326   0115CA                     __ptext20:
 12327                           	callstack 0
 12328   0115CA                     _fputs:
 12329                           	callstack 114
 12330   0115CA  0E00               	movlw	0
 12331   0115CC  6E13               	movwf	(fputs@i+1)^(0+1280),c
 12332   0115CE  0E00               	movlw	0
 12333   0115D0  6E12               	movwf	fputs@i^(0+1280),c
 12334   0115D2  EFF6  F08A         	goto	l3613
 12335   0115D6                     l3609:
 12336   0115D6  C511  F504         	movff	fputs@c,fputc@c
 12337   0115DA  6A05               	clrf	(fputc@c+1)^(0+1280),c
 12338   0115DC  C50F  F506         	movff	fputs@fp,fputc@fp
 12339   0115E0  C510  F507         	movff	fputs@fp+1,fputc@fp+1
 12340   0115E4  EC22  F085         	call	_fputc	;wreg free
 12341   0115E8  4A12               	infsnz	fputs@i^(0+1280),f,c
 12342   0115EA  2A13               	incf	(fputs@i+1)^(0+1280),f,c
 12343   0115EC                     l3613:
 12344   0115EC  5012               	movf	fputs@i^(0+1280),w,c
 12345   0115EE  240D               	addwf	fputs@s^(0+1280),w,c
 12346   0115F0  6ED9               	movwf	fsr2l,c
 12347   0115F2  5013               	movf	(fputs@i+1)^(0+1280),w,c
 12348   0115F4  200E               	addwfc	(fputs@s+1)^(0+1280),w,c
 12349   0115F6  6EDA               	movwf	fsr2h,c
 12350   0115F8  50DF               	movf	indf2,w,c
 12351   0115FA  6E11               	movwf	fputs@c^(0+1280),c
 12352   0115FC  5011               	movf	fputs@c^(0+1280),w,c
 12353   0115FE  A4D8               	btfss	status,2,c
 12354   011600  EF04  F08B         	goto	u2531
 12355   011604  EF06  F08B         	goto	u2530
 12356   011608                     u2531:
 12357   011608  EFEB  F08A         	goto	l3609
 12358   01160C                     u2530:
 12359   01160C  0012               	return		;funcret
 12360   01160E                     __end_of_fputs:
 12361                           	callstack 0
 12362                           
 12363 ;; *************** function _fputc *****************
 12364 ;; Defined at:
 12365 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputc.c"
 12366 ;; Parameters:    Size  Location     Type
 12367 ;;  c               2    3[COMRAM] int 
 12368 ;;  fp              2    5[COMRAM] PTR struct _IO_FILE
 12369 ;;		 -> NULL(0), 
 12370 ;; Auto vars:     Size  Location     Type
 12371 ;;		None
 12372 ;; Return value:  Size  Location     Type
 12373 ;;                  2    3[COMRAM] int 
 12374 ;; Registers used:
 12375 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12376 ;; Tracked objects:
 12377 ;;		On entry : 0/0
 12378 ;;		On exit  : 0/0
 12379 ;;		Unchanged: 0/0
 12380 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12381 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12383 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12384 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12385 ;;Total ram usage:        9 bytes
 12386 ;; Hardware stack levels used: 1
 12387 ;; Hardware stack levels required when called: 4
 12388 ;; This function calls:
 12389 ;;		_putch
 12390 ;; This function is called by:
 12391 ;;		_pad
 12392 ;;		_stoa
 12393 ;;		_vfpfcnvrt
 12394 ;;		_fputs
 12395 ;; This function uses a non-reentrant model
 12396 ;;
 12397                           
 12398                           	psect	text21
 12399   010A44                     __ptext21:
 12400                           	callstack 0
 12401   010A44                     _fputc:
 12402                           	callstack 114
 12403   010A44  5006               	movf	fputc@fp^(0+1280),w,c
 12404   010A46  1007               	iorwf	(fputc@fp+1)^(0+1280),w,c
 12405   010A48  B4D8               	btfsc	status,2,c
 12406   010A4A  EF29  F085         	goto	u2491
 12407   010A4E  EF2B  F085         	goto	u2490
 12408   010A52                     u2491:
 12409   010A52  EF34  F085         	goto	l3597
 12410   010A56                     u2490:
 12411   010A56  5006               	movf	fputc@fp^(0+1280),w,c
 12412   010A58  1007               	iorwf	(fputc@fp+1)^(0+1280),w,c
 12413   010A5A  A4D8               	btfss	status,2,c
 12414   010A5C  EF32  F085         	goto	u2501
 12415   010A60  EF34  F085         	goto	u2500
 12416   010A64                     u2501:
 12417   010A64  EF39  F085         	goto	l3599
 12418   010A68                     u2500:
 12419   010A68                     l3597:
 12420   010A68  5004               	movf	fputc@c^(0+1280),w,c
 12421   010A6A  EC42  F08D         	call	_putch
 12422   010A6E  EF86  F085         	goto	l1582
 12423   010A72                     l3599:
 12424   010A72  EE20 F009          	lfsr	2,9
 12425   010A76  5006               	movf	fputc@fp^(0+1280),w,c
 12426   010A78  26D9               	addwf	fsr2l,f,c
 12427   010A7A  5007               	movf	(fputc@fp+1)^(0+1280),w,c
 12428   010A7C  22DA               	addwfc	fsr2h,f,c
 12429   010A7E  50DE               	movf	postinc2,w,c
 12430   010A80  10DE               	iorwf	postinc2,w,c
 12431   010A82  B4D8               	btfsc	status,2,c
 12432   010A84  EF46  F085         	goto	u2511
 12433   010A88  EF48  F085         	goto	u2510
 12434   010A8C                     u2511:
 12435   010A8C  EF63  F085         	goto	l3603
 12436   010A90                     u2510:
 12437   010A90  EE20 F009          	lfsr	2,9
 12438   010A94  5006               	movf	fputc@fp^(0+1280),w,c
 12439   010A96  26D9               	addwf	fsr2l,f,c
 12440   010A98  5007               	movf	(fputc@fp+1)^(0+1280),w,c
 12441   010A9A  22DA               	addwfc	fsr2h,f,c
 12442   010A9C  EE10 F002          	lfsr	1,2
 12443   010AA0  5006               	movf	fputc@fp^(0+1280),w,c
 12444   010AA2  26E1               	addwf	fsr1l,f,c
 12445   010AA4  5007               	movf	(fputc@fp+1)^(0+1280),w,c
 12446   010AA6  22E2               	addwfc	fsr1h,f,c
 12447   010AA8  50DE               	movf	postinc2,w,c
 12448   010AAA  5CE6               	subwf	postinc1,w,c
 12449   010AAC  50E6               	movf	postinc1,w,c
 12450   010AAE  0A80               	xorlw	128
 12451   010AB0  6E0C               	movwf	(??_fputc+4)^(0+1280),c
 12452   010AB2  50DE               	movf	postinc2,w,c
 12453   010AB4  0A80               	xorlw	128
 12454   010AB6  580C               	subwfb	(??_fputc+4)^(0+1280),w,c
 12455   010AB8  B0D8               	btfsc	status,0,c
 12456   010ABA  EF61  F085         	goto	u2521
 12457   010ABE  EF63  F085         	goto	u2520
 12458   010AC2                     u2521:
 12459   010AC2  EF86  F085         	goto	l1582
 12460   010AC6                     u2520:
 12461   010AC6                     l3603:
 12462   010AC6  EE20 F002          	lfsr	2,2
 12463   010ACA  5006               	movf	fputc@fp^(0+1280),w,c
 12464   010ACC  26D9               	addwf	fsr2l,f,c
 12465   010ACE  5007               	movf	(fputc@fp+1)^(0+1280),w,c
 12466   010AD0  22DA               	addwfc	fsr2h,f,c
 12467   010AD2  C4DE F508          	movff	postinc2,??_fputc
 12468   010AD6  C4DD F509          	movff	postdec2,??_fputc+1
 12469   010ADA  C506  F4D9         	movff	fputc@fp,fsr2l
 12470   010ADE  C507  F4DA         	movff	fputc@fp+1,fsr2h
 12471   010AE2  C4DE F50A          	movff	postinc2,??_fputc+2
 12472   010AE6  C4DD F50B          	movff	postdec2,??_fputc+3
 12473   010AEA  5008               	movf	??_fputc^(0+1280),w,c
 12474   010AEC  240A               	addwf	(??_fputc+2)^(0+1280),w,c
 12475   010AEE  6ED9               	movwf	fsr2l,c
 12476   010AF0  5009               	movf	(??_fputc+1)^(0+1280),w,c
 12477   010AF2  200B               	addwfc	(??_fputc+3)^(0+1280),w,c
 12478   010AF4  6EDA               	movwf	fsr2h,c
 12479   010AF6  C504  F4DF         	movff	fputc@c,indf2
 12480   010AFA  EE20 F002          	lfsr	2,2
 12481   010AFE  5006               	movf	fputc@fp^(0+1280),w,c
 12482   010B00  26D9               	addwf	fsr2l,f,c
 12483   010B02  5007               	movf	(fputc@fp+1)^(0+1280),w,c
 12484   010B04  22DA               	addwfc	fsr2h,f,c
 12485   010B06  2ADE               	incf	postinc2,f,c
 12486   010B08  0E00               	movlw	0
 12487   010B0A  22DD               	addwfc	postdec2,f,c
 12488   010B0C                     l1582:
 12489   010B0C  0012               	return		;funcret
 12490   010B0E                     __end_of_fputc:
 12491                           	callstack 0
 12492                           
 12493 ;; *************** function _putch *****************
 12494 ;; Defined at:
 12495 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\putch.c"
 12496 ;; Parameters:    Size  Location     Type
 12497 ;;  c               1    wreg     unsigned char 
 12498 ;; Auto vars:     Size  Location     Type
 12499 ;;  c               1    0[COMRAM] unsigned char 
 12500 ;; Return value:  Size  Location     Type
 12501 ;;                  1    wreg      void 
 12502 ;; Registers used:
 12503 ;;		wreg
 12504 ;; Tracked objects:
 12505 ;;		On entry : 0/0
 12506 ;;		On exit  : 0/0
 12507 ;;		Unchanged: 0/0
 12508 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12513 ;;Total ram usage:        0 bytes
 12514 ;; Hardware stack levels used: 1
 12515 ;; Hardware stack levels required when called: 3
 12516 ;; This function calls:
 12517 ;;		Nothing
 12518 ;; This function is called by:
 12519 ;;		_fputc
 12520 ;; This function uses a non-reentrant model
 12521 ;;
 12522                           
 12523                           	psect	text22
 12524   011A84                     __ptext22:
 12525                           	callstack 0
 12526   011A84                     _putch:
 12527                           	callstack 114
 12528   011A84  0012               	return		;funcret
 12529   011A86                     __end_of_putch:
 12530                           	callstack 0
 12531                           
 12532 ;; *************** function _abs *****************
 12533 ;; Defined at:
 12534 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\abs.c"
 12535 ;; Parameters:    Size  Location     Type
 12536 ;;  a               2    9[COMRAM] int 
 12537 ;; Auto vars:     Size  Location     Type
 12538 ;;		None
 12539 ;; Return value:  Size  Location     Type
 12540 ;;                  2    9[COMRAM] int 
 12541 ;; Registers used:
 12542 ;;		wreg, status,2, status,0
 12543 ;; Tracked objects:
 12544 ;;		On entry : 0/0
 12545 ;;		On exit  : 0/0
 12546 ;;		Unchanged: 0/0
 12547 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12548 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12550 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12551 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12552 ;;Total ram usage:        4 bytes
 12553 ;; Hardware stack levels used: 1
 12554 ;; Hardware stack levels required when called: 3
 12555 ;; This function calls:
 12556 ;;		Nothing
 12557 ;; This function is called by:
 12558 ;;		_dtoa
 12559 ;; This function uses a non-reentrant model
 12560 ;;
 12561                           
 12562                           	psect	text23
 12563   011686                     __ptext23:
 12564                           	callstack 0
 12565   011686                     _abs:
 12566                           	callstack 117
 12567   011686  BE0B               	btfsc	(abs@a+1)^(0+1280),7,c
 12568   011688  EF48  F08B         	goto	u2701
 12569   01168C  EF4A  F08B         	goto	u2700
 12570   011690                     u2701:
 12571   011690  EF50  F08B         	goto	l1567
 12572   011694                     u2700:
 12573   011694  C50A  F50A         	movff	abs@a,?_abs
 12574   011698  C50B  F50B         	movff	abs@a+1,?_abs+1
 12575   01169C  EF5C  F08B         	goto	l1570
 12576   0116A0                     l1567:
 12577   0116A0  C50A  F50C         	movff	abs@a,??_abs
 12578   0116A4  C50B  F50D         	movff	abs@a+1,??_abs+1
 12579   0116A8  1E0C               	comf	??_abs^(0+1280),f,c
 12580   0116AA  1E0D               	comf	(??_abs+1)^(0+1280),f,c
 12581   0116AC  4A0C               	infsnz	??_abs^(0+1280),f,c
 12582   0116AE  2A0D               	incf	(??_abs+1)^(0+1280),f,c
 12583   0116B0  C50C  F50A         	movff	??_abs,?_abs
 12584   0116B4  C50D  F50B         	movff	??_abs+1,?_abs+1
 12585   0116B8                     l1570:
 12586   0116B8  0012               	return		;funcret
 12587   0116BA                     __end_of_abs:
 12588                           	callstack 0
 12589                           
 12590 ;; *************** function ___awmod *****************
 12591 ;; Defined at:
 12592 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awmod.c"
 12593 ;; Parameters:    Size  Location     Type
 12594 ;;  dividend        2    3[COMRAM] int 
 12595 ;;  divisor         2    5[COMRAM] int 
 12596 ;; Auto vars:     Size  Location     Type
 12597 ;;  sign            1    8[COMRAM] unsigned char 
 12598 ;;  counter         1    7[COMRAM] unsigned char 
 12599 ;; Return value:  Size  Location     Type
 12600 ;;                  2    3[COMRAM] int 
 12601 ;; Registers used:
 12602 ;;		wreg, status,2, status,0
 12603 ;; Tracked objects:
 12604 ;;		On entry : 0/0
 12605 ;;		On exit  : 0/0
 12606 ;;		Unchanged: 0/0
 12607 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12608 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12609 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12611 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12612 ;;Total ram usage:        6 bytes
 12613 ;; Hardware stack levels used: 1
 12614 ;; Hardware stack levels required when called: 3
 12615 ;; This function calls:
 12616 ;;		Nothing
 12617 ;; This function is called by:
 12618 ;;		_dtoa
 12619 ;; This function uses a non-reentrant model
 12620 ;;
 12621                           
 12622                           	psect	text24
 12623   010E12                     __ptext24:
 12624                           	callstack 0
 12625   010E12                     ___awmod:
 12626                           	callstack 117
 12627   010E12  6A09               	clrf	___awmod@sign^(0+1280),c
 12628   010E14  BE05               	btfsc	(___awmod@dividend+1)^(0+1280),7,c
 12629   010E16  EF11  F087         	goto	u2600
 12630   010E1A  EF0F  F087         	goto	u2601
 12631   010E1E                     u2601:
 12632   010E1E  EF17  F087         	goto	l3667
 12633   010E22                     u2600:
 12634   010E22  6C04               	negf	___awmod@dividend^(0+1280),c
 12635   010E24  1E05               	comf	(___awmod@dividend+1)^(0+1280),f,c
 12636   010E26  B0D8               	btfsc	status,0,c
 12637   010E28  2A05               	incf	(___awmod@dividend+1)^(0+1280),f,c
 12638   010E2A  0E01               	movlw	1
 12639   010E2C  6E09               	movwf	___awmod@sign^(0+1280),c
 12640   010E2E                     l3667:
 12641   010E2E  BE07               	btfsc	(___awmod@divisor+1)^(0+1280),7,c
 12642   010E30  EF1E  F087         	goto	u2610
 12643   010E34  EF1C  F087         	goto	u2611
 12644   010E38                     u2611:
 12645   010E38  EF22  F087         	goto	l3671
 12646   010E3C                     u2610:
 12647   010E3C  6C06               	negf	___awmod@divisor^(0+1280),c
 12648   010E3E  1E07               	comf	(___awmod@divisor+1)^(0+1280),f,c
 12649   010E40  B0D8               	btfsc	status,0,c
 12650   010E42  2A07               	incf	(___awmod@divisor+1)^(0+1280),f,c
 12651   010E44                     l3671:
 12652   010E44  5006               	movf	___awmod@divisor^(0+1280),w,c
 12653   010E46  1007               	iorwf	(___awmod@divisor+1)^(0+1280),w,c
 12654   010E48  B4D8               	btfsc	status,2,c
 12655   010E4A  EF29  F087         	goto	u2621
 12656   010E4E  EF2B  F087         	goto	u2620
 12657   010E52                     u2621:
 12658   010E52  EF4F  F087         	goto	l3687
 12659   010E56                     u2620:
 12660   010E56  0E01               	movlw	1
 12661   010E58  6E08               	movwf	___awmod@counter^(0+1280),c
 12662   010E5A  EF33  F087         	goto	l3677
 12663   010E5E                     l3675:
 12664   010E5E  90D8               	bcf	status,0,c
 12665   010E60  3606               	rlcf	___awmod@divisor^(0+1280),f,c
 12666   010E62  3607               	rlcf	(___awmod@divisor+1)^(0+1280),f,c
 12667   010E64  2A08               	incf	___awmod@counter^(0+1280),f,c
 12668   010E66                     l3677:
 12669   010E66  AE07               	btfss	(___awmod@divisor+1)^(0+1280),7,c
 12670   010E68  EF38  F087         	goto	u2631
 12671   010E6C  EF3A  F087         	goto	u2630
 12672   010E70                     u2631:
 12673   010E70  EF2F  F087         	goto	l3675
 12674   010E74                     u2630:
 12675   010E74                     l3679:
 12676   010E74  5006               	movf	___awmod@divisor^(0+1280),w,c
 12677   010E76  5C04               	subwf	___awmod@dividend^(0+1280),w,c
 12678   010E78  5007               	movf	(___awmod@divisor+1)^(0+1280),w,c
 12679   010E7A  5805               	subwfb	(___awmod@dividend+1)^(0+1280),w,c
 12680   010E7C  A0D8               	btfss	status,0,c
 12681   010E7E  EF43  F087         	goto	u2641
 12682   010E82  EF45  F087         	goto	u2640
 12683   010E86                     u2641:
 12684   010E86  EF49  F087         	goto	l3683
 12685   010E8A                     u2640:
 12686   010E8A  5006               	movf	___awmod@divisor^(0+1280),w,c
 12687   010E8C  5E04               	subwf	___awmod@dividend^(0+1280),f,c
 12688   010E8E  5007               	movf	(___awmod@divisor+1)^(0+1280),w,c
 12689   010E90  5A05               	subwfb	(___awmod@dividend+1)^(0+1280),f,c
 12690   010E92                     l3683:
 12691   010E92  90D8               	bcf	status,0,c
 12692   010E94  3207               	rrcf	(___awmod@divisor+1)^(0+1280),f,c
 12693   010E96  3206               	rrcf	___awmod@divisor^(0+1280),f,c
 12694   010E98  2E08               	decfsz	___awmod@counter^(0+1280),f,c
 12695   010E9A  EF3A  F087         	goto	l3679
 12696   010E9E                     l3687:
 12697   010E9E  5009               	movf	___awmod@sign^(0+1280),w,c
 12698   010EA0  B4D8               	btfsc	status,2,c
 12699   010EA2  EF55  F087         	goto	u2651
 12700   010EA6  EF57  F087         	goto	u2650
 12701   010EAA                     u2651:
 12702   010EAA  EF5B  F087         	goto	l3691
 12703   010EAE                     u2650:
 12704   010EAE  6C04               	negf	___awmod@dividend^(0+1280),c
 12705   010EB0  1E05               	comf	(___awmod@dividend+1)^(0+1280),f,c
 12706   010EB2  B0D8               	btfsc	status,0,c
 12707   010EB4  2A05               	incf	(___awmod@dividend+1)^(0+1280),f,c
 12708   010EB6                     l3691:
 12709   010EB6  C504  F504         	movff	___awmod@dividend,?___awmod
 12710   010EBA  C505  F505         	movff	___awmod@dividend+1,?___awmod+1
 12711   010EBE  0012               	return		;funcret
 12712   010EC0                     __end_of___awmod:
 12713                           	callstack 0
 12714                           
 12715 ;; *************** function ___awdiv *****************
 12716 ;; Defined at:
 12717 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awdiv.c"
 12718 ;; Parameters:    Size  Location     Type
 12719 ;;  dividend        2    3[COMRAM] int 
 12720 ;;  divisor         2    5[COMRAM] int 
 12721 ;; Auto vars:     Size  Location     Type
 12722 ;;  quotient        2    9[COMRAM] int 
 12723 ;;  sign            1    8[COMRAM] unsigned char 
 12724 ;;  counter         1    7[COMRAM] unsigned char 
 12725 ;; Return value:  Size  Location     Type
 12726 ;;                  2    3[COMRAM] int 
 12727 ;; Registers used:
 12728 ;;		wreg, status,2, status,0
 12729 ;; Tracked objects:
 12730 ;;		On entry : 0/0
 12731 ;;		On exit  : 0/0
 12732 ;;		Unchanged: 0/0
 12733 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12734 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12735 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12737 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12738 ;;Total ram usage:        8 bytes
 12739 ;; Hardware stack levels used: 1
 12740 ;; Hardware stack levels required when called: 3
 12741 ;; This function calls:
 12742 ;;		Nothing
 12743 ;; This function is called by:
 12744 ;;		_dtoa
 12745 ;; This function uses a non-reentrant model
 12746 ;;
 12747                           
 12748                           	psect	text25
 12749   010C9C                     __ptext25:
 12750                           	callstack 0
 12751   010C9C                     ___awdiv:
 12752                           	callstack 117
 12753   010C9C  6A09               	clrf	___awdiv@sign^(0+1280),c
 12754   010C9E  BE07               	btfsc	(___awdiv@divisor+1)^(0+1280),7,c
 12755   010CA0  EF56  F086         	goto	u2540
 12756   010CA4  EF54  F086         	goto	u2541
 12757   010CA8                     u2541:
 12758   010CA8  EF5C  F086         	goto	l3623
 12759   010CAC                     u2540:
 12760   010CAC  6C06               	negf	___awdiv@divisor^(0+1280),c
 12761   010CAE  1E07               	comf	(___awdiv@divisor+1)^(0+1280),f,c
 12762   010CB0  B0D8               	btfsc	status,0,c
 12763   010CB2  2A07               	incf	(___awdiv@divisor+1)^(0+1280),f,c
 12764   010CB4  0E01               	movlw	1
 12765   010CB6  6E09               	movwf	___awdiv@sign^(0+1280),c
 12766   010CB8                     l3623:
 12767   010CB8  BE05               	btfsc	(___awdiv@dividend+1)^(0+1280),7,c
 12768   010CBA  EF63  F086         	goto	u2550
 12769   010CBE  EF61  F086         	goto	u2551
 12770   010CC2                     u2551:
 12771   010CC2  EF69  F086         	goto	l3629
 12772   010CC6                     u2550:
 12773   010CC6  6C04               	negf	___awdiv@dividend^(0+1280),c
 12774   010CC8  1E05               	comf	(___awdiv@dividend+1)^(0+1280),f,c
 12775   010CCA  B0D8               	btfsc	status,0,c
 12776   010CCC  2A05               	incf	(___awdiv@dividend+1)^(0+1280),f,c
 12777   010CCE  0E01               	movlw	1
 12778   010CD0  1A09               	xorwf	___awdiv@sign^(0+1280),f,c
 12779   010CD2                     l3629:
 12780   010CD2  0E00               	movlw	0
 12781   010CD4  6E0B               	movwf	(___awdiv@quotient+1)^(0+1280),c
 12782   010CD6  0E00               	movlw	0
 12783   010CD8  6E0A               	movwf	___awdiv@quotient^(0+1280),c
 12784   010CDA  5006               	movf	___awdiv@divisor^(0+1280),w,c
 12785   010CDC  1007               	iorwf	(___awdiv@divisor+1)^(0+1280),w,c
 12786   010CDE  B4D8               	btfsc	status,2,c
 12787   010CE0  EF74  F086         	goto	u2561
 12788   010CE4  EF76  F086         	goto	u2560
 12789   010CE8                     u2561:
 12790   010CE8  EF9E  F086         	goto	l3651
 12791   010CEC                     u2560:
 12792   010CEC  0E01               	movlw	1
 12793   010CEE  6E08               	movwf	___awdiv@counter^(0+1280),c
 12794   010CF0  EF7E  F086         	goto	l3637
 12795   010CF4                     l3635:
 12796   010CF4  90D8               	bcf	status,0,c
 12797   010CF6  3606               	rlcf	___awdiv@divisor^(0+1280),f,c
 12798   010CF8  3607               	rlcf	(___awdiv@divisor+1)^(0+1280),f,c
 12799   010CFA  2A08               	incf	___awdiv@counter^(0+1280),f,c
 12800   010CFC                     l3637:
 12801   010CFC  AE07               	btfss	(___awdiv@divisor+1)^(0+1280),7,c
 12802   010CFE  EF83  F086         	goto	u2571
 12803   010D02  EF85  F086         	goto	u2570
 12804   010D06                     u2571:
 12805   010D06  EF7A  F086         	goto	l3635
 12806   010D0A                     u2570:
 12807   010D0A                     l3639:
 12808   010D0A  90D8               	bcf	status,0,c
 12809   010D0C  360A               	rlcf	___awdiv@quotient^(0+1280),f,c
 12810   010D0E  360B               	rlcf	(___awdiv@quotient+1)^(0+1280),f,c
 12811   010D10  5006               	movf	___awdiv@divisor^(0+1280),w,c
 12812   010D12  5C04               	subwf	___awdiv@dividend^(0+1280),w,c
 12813   010D14  5007               	movf	(___awdiv@divisor+1)^(0+1280),w,c
 12814   010D16  5805               	subwfb	(___awdiv@dividend+1)^(0+1280),w,c
 12815   010D18  A0D8               	btfss	status,0,c
 12816   010D1A  EF91  F086         	goto	u2581
 12817   010D1E  EF93  F086         	goto	u2580
 12818   010D22                     u2581:
 12819   010D22  EF98  F086         	goto	l3647
 12820   010D26                     u2580:
 12821   010D26  5006               	movf	___awdiv@divisor^(0+1280),w,c
 12822   010D28  5E04               	subwf	___awdiv@dividend^(0+1280),f,c
 12823   010D2A  5007               	movf	(___awdiv@divisor+1)^(0+1280),w,c
 12824   010D2C  5A05               	subwfb	(___awdiv@dividend+1)^(0+1280),f,c
 12825   010D2E  800A               	bsf	___awdiv@quotient^(0+1280),0,c
 12826   010D30                     l3647:
 12827   010D30  90D8               	bcf	status,0,c
 12828   010D32  3207               	rrcf	(___awdiv@divisor+1)^(0+1280),f,c
 12829   010D34  3206               	rrcf	___awdiv@divisor^(0+1280),f,c
 12830   010D36  2E08               	decfsz	___awdiv@counter^(0+1280),f,c
 12831   010D38  EF85  F086         	goto	l3639
 12832   010D3C                     l3651:
 12833   010D3C  5009               	movf	___awdiv@sign^(0+1280),w,c
 12834   010D3E  B4D8               	btfsc	status,2,c
 12835   010D40  EFA4  F086         	goto	u2591
 12836   010D44  EFA6  F086         	goto	u2590
 12837   010D48                     u2591:
 12838   010D48  EFAA  F086         	goto	l3655
 12839   010D4C                     u2590:
 12840   010D4C  6C0A               	negf	___awdiv@quotient^(0+1280),c
 12841   010D4E  1E0B               	comf	(___awdiv@quotient+1)^(0+1280),f,c
 12842   010D50  B0D8               	btfsc	status,0,c
 12843   010D52  2A0B               	incf	(___awdiv@quotient+1)^(0+1280),f,c
 12844   010D54                     l3655:
 12845   010D54  C50A  F504         	movff	___awdiv@quotient,?___awdiv
 12846   010D58  C50B  F505         	movff	___awdiv@quotient+1,?___awdiv+1
 12847   010D5C  0012               	return		;funcret
 12848   010D5E                     __end_of___awdiv:
 12849                           	callstack 0
 12850                           
 12851 ;; *************** function _Nrf24_getRetransmitDelay *****************
 12852 ;; Defined at:
 12853 ;;		line 494 in file "mirf.c"
 12854 ;; Parameters:    Size  Location     Type
 12855 ;;  dev             2   13[COMRAM] PTR struct .
 12856 ;;		 -> sender@nrf(3), 
 12857 ;; Auto vars:     Size  Location     Type
 12858 ;;  value           1   15[COMRAM] unsigned char 
 12859 ;; Return value:  Size  Location     Type
 12860 ;;                  1    wreg      unsigned char 
 12861 ;; Registers used:
 12862 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12863 ;; Tracked objects:
 12864 ;;		On entry : 0/0
 12865 ;;		On exit  : 0/0
 12866 ;;		Unchanged: 0/0
 12867 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12868 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12869 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12871 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12872 ;;Total ram usage:        3 bytes
 12873 ;; Hardware stack levels used: 1
 12874 ;; Hardware stack levels required when called: 6
 12875 ;; This function calls:
 12876 ;;		_Nrf24_readRegister
 12877 ;; This function is called by:
 12878 ;;		_Nrf24_printDetails
 12879 ;; This function uses a non-reentrant model
 12880 ;;
 12881                           
 12882                           	psect	text26
 12883   0119B2                     __ptext26:
 12884                           	callstack 0
 12885   0119B2                     _Nrf24_getRetransmitDelay:
 12886                           	callstack 118
 12887   0119B2                     
 12888                           ;mirf.c: 494: uint8_t Nrf24_getRetransmitDelay(NRF24_t * dev);mirf.c: 495: {;mirf.c: 496
      +                          :  uint8_t value;;mirf.c: 497:  Nrf24_readRegister(0x04, &value, 1);
 12889   0119B2  0E10               	movlw	low Nrf24_getRetransmitDelay@value
 12890   0119B4  6E0A               	movwf	Nrf24_readRegister@value^(0+1280),c
 12891   0119B6  0E05               	movlw	high Nrf24_getRetransmitDelay@value
 12892   0119B8  6E0B               	movwf	(Nrf24_readRegister@value+1)^(0+1280),c
 12893   0119BA  0E01               	movlw	1
 12894   0119BC  6E0C               	movwf	Nrf24_readRegister@len^(0+1280),c
 12895   0119BE  0E04               	movlw	4
 12896   0119C0  ECDB  F08B         	call	_Nrf24_readRegister
 12897   0119C4                     
 12898                           ;mirf.c: 498:  return (value >> 4);
 12899   0119C4  3810               	swapf	Nrf24_getRetransmitDelay@value^(0+1280),w,c
 12900   0119C6  0B0F               	andlw	15
 12901   0119C8  0012               	return		;funcret
 12902   0119CA                     __end_of_Nrf24_getRetransmitDelay:
 12903                           	callstack 0
 12904                           
 12905 ;; *************** function _Nrf24_getPALevel *****************
 12906 ;; Defined at:
 12907 ;;		line 481 in file "mirf.c"
 12908 ;; Parameters:    Size  Location     Type
 12909 ;;  dev             2   13[COMRAM] PTR struct .
 12910 ;;		 -> sender@nrf(3), 
 12911 ;; Auto vars:     Size  Location     Type
 12912 ;;  level           1   15[COMRAM] unsigned char 
 12913 ;; Return value:  Size  Location     Type
 12914 ;;                  1    wreg      unsigned char 
 12915 ;; Registers used:
 12916 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12917 ;; Tracked objects:
 12918 ;;		On entry : 0/0
 12919 ;;		On exit  : 0/0
 12920 ;;		Unchanged: 0/0
 12921 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12922 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12923 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12925 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12926 ;;Total ram usage:        3 bytes
 12927 ;; Hardware stack levels used: 1
 12928 ;; Hardware stack levels required when called: 6
 12929 ;; This function calls:
 12930 ;;		_Nrf24_readRegister
 12931 ;; This function is called by:
 12932 ;;		_Nrf24_printDetails
 12933 ;;		_Nrf24_getPALevelString
 12934 ;; This function uses a non-reentrant model
 12935 ;;
 12936                           
 12937                           	psect	text27
 12938   011994                     __ptext27:
 12939                           	callstack 0
 12940   011994                     _Nrf24_getPALevel:
 12941                           	callstack 118
 12942   011994                     
 12943                           ;mirf.c: 481: uint8_t Nrf24_getPALevel(NRF24_t * dev);mirf.c: 482: {;mirf.c: 483:  uint8
      +                          _t level;;mirf.c: 484:  Nrf24_readRegister(0x06, &level, sizeof(level));
 12944   011994  0E10               	movlw	low Nrf24_getPALevel@level
 12945   011996  6E0A               	movwf	Nrf24_readRegister@value^(0+1280),c
 12946   011998  0E05               	movlw	high Nrf24_getPALevel@level
 12947   01199A  6E0B               	movwf	(Nrf24_readRegister@value+1)^(0+1280),c
 12948   01199C  0E01               	movlw	1
 12949   01199E  6E0C               	movwf	Nrf24_readRegister@len^(0+1280),c
 12950   0119A0  0E06               	movlw	6
 12951   0119A2  ECDB  F08B         	call	_Nrf24_readRegister
 12952   0119A6                     
 12953                           ;mirf.c: 485:  level = (level & ((1<<(1)) | (1<<(2)))) >> 1;
 12954   0119A6  90D8               	bcf	status,0,c
 12955   0119A8  3010               	rrcf	Nrf24_getPALevel@level^(0+1280),w,c
 12956   0119AA  0B03               	andlw	3
 12957   0119AC  6E10               	movwf	Nrf24_getPALevel@level^(0+1280),c
 12958   0119AE                     
 12959                           ;mirf.c: 486:  return (level);
 12960   0119AE  5010               	movf	Nrf24_getPALevel@level^(0+1280),w,c
 12961   0119B0  0012               	return		;funcret
 12962   0119B2                     __end_of_Nrf24_getPALevel:
 12963                           	callstack 0
 12964                           
 12965 ;; *************** function _Nrf24_getDataRate *****************
 12966 ;; Defined at:
 12967 ;;		line 434 in file "mirf.c"
 12968 ;; Parameters:    Size  Location     Type
 12969 ;;  dev             2   13[COMRAM] PTR struct .
 12970 ;;		 -> sender@nrf(3), 
 12971 ;; Auto vars:     Size  Location     Type
 12972 ;;  dr              1   16[COMRAM] unsigned char 
 12973 ;;  result          1   15[COMRAM] enum E17429
 12974 ;; Return value:  Size  Location     Type
 12975 ;;                  1    wreg      unsigned char 
 12976 ;; Registers used:
 12977 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12978 ;; Tracked objects:
 12979 ;;		On entry : 0/0
 12980 ;;		On exit  : 0/0
 12981 ;;		Unchanged: 0/0
 12982 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12983 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12984 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12986 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12987 ;;Total ram usage:        4 bytes
 12988 ;; Hardware stack levels used: 1
 12989 ;; Hardware stack levels required when called: 6
 12990 ;; This function calls:
 12991 ;;		_Nrf24_readRegister
 12992 ;; This function is called by:
 12993 ;;		_Nrf24_printDetails
 12994 ;;		_Nrf24_getDataRateString
 12995 ;; This function uses a non-reentrant model
 12996 ;;
 12997                           
 12998                           	psect	text28
 12999   011578                     __ptext28:
 13000                           	callstack 0
 13001   011578                     _Nrf24_getDataRate:
 13002                           	callstack 118
 13003   011578                     
 13004                           ;mirf.c: 434: uint8_t Nrf24_getDataRate(NRF24_t * dev);mirf.c: 435: {;mirf.c: 436:  rf24
      +                          _datarate_e result;;mirf.c: 437:  uint8_t dr;;mirf.c: 438:  Nrf24_readRegister(0x06, &dr
      +                          , sizeof(dr));
 13005   011578  0E11               	movlw	low Nrf24_getDataRate@dr
 13006   01157A  6E0A               	movwf	Nrf24_readRegister@value^(0+1280),c
 13007   01157C  0E05               	movlw	high Nrf24_getDataRate@dr
 13008   01157E  6E0B               	movwf	(Nrf24_readRegister@value+1)^(0+1280),c
 13009   011580  0E01               	movlw	1
 13010   011582  6E0C               	movwf	Nrf24_readRegister@len^(0+1280),c
 13011   011584  0E06               	movlw	6
 13012   011586  ECDB  F08B         	call	_Nrf24_readRegister
 13013   01158A                     
 13014                           ;mirf.c: 439:  dr = dr & ((1<<(5)) | (1<<(3)));
 13015   01158A  5011               	movf	Nrf24_getDataRate@dr^(0+1280),w,c
 13016   01158C  0B28               	andlw	40
 13017   01158E  6E11               	movwf	Nrf24_getDataRate@dr^(0+1280),c
 13018   011590                     
 13019                           ;mirf.c: 442:  if (dr == (1<<(5))) {
 13020   011590  0E20               	movlw	32
 13021   011592  1811               	xorwf	Nrf24_getDataRate@dr^(0+1280),w,c
 13022   011594  A4D8               	btfss	status,2,c
 13023   011596  EFCF  F08A         	goto	u3301
 13024   01159A  EFD1  F08A         	goto	u3300
 13025   01159E                     u3301:
 13026   01159E  EFD5  F08A         	goto	l4095
 13027   0115A2                     u3300:
 13028   0115A2                     
 13029                           ;mirf.c: 444:   result = RF24_250KBPS;
 13030   0115A2  0E02               	movlw	2
 13031   0115A4  6E10               	movwf	Nrf24_getDataRate@result^(0+1280),c
 13032                           
 13033                           ;mirf.c: 445:  } else if (dr == (1<<(3))) {
 13034   0115A6  EFE3  F08A         	goto	l4099
 13035   0115AA                     l4095:
 13036   0115AA  0E08               	movlw	8
 13037   0115AC  1811               	xorwf	Nrf24_getDataRate@dr^(0+1280),w,c
 13038   0115AE  A4D8               	btfss	status,2,c
 13039   0115B0  EFDC  F08A         	goto	u3311
 13040   0115B4  EFDE  F08A         	goto	u3310
 13041   0115B8                     u3311:
 13042   0115B8  EFE2  F08A         	goto	l737
 13043   0115BC                     u3310:
 13044   0115BC                     
 13045                           ;mirf.c: 447:   result = RF24_2MBPS;
 13046   0115BC  0E01               	movlw	1
 13047   0115BE  6E10               	movwf	Nrf24_getDataRate@result^(0+1280),c
 13048                           
 13049                           ;mirf.c: 448:  } else {
 13050   0115C0  EFE3  F08A         	goto	l4099
 13051   0115C4                     l737:
 13052                           
 13053                           ;mirf.c: 450:   result = RF24_1MBPS;
 13054   0115C4  6A10               	clrf	Nrf24_getDataRate@result^(0+1280),c
 13055   0115C6                     l4099:
 13056                           
 13057                           ;mirf.c: 452:  return result;
 13058   0115C6  5010               	movf	Nrf24_getDataRate@result^(0+1280),w,c
 13059   0115C8  0012               	return		;funcret
 13060   0115CA                     __end_of_Nrf24_getDataRate:
 13061                           	callstack 0
 13062                           
 13063 ;; *************** function _Nrf24_getCRCLength *****************
 13064 ;; Defined at:
 13065 ;;		line 460 in file "mirf.c"
 13066 ;; Parameters:    Size  Location     Type
 13067 ;;  dev             2   13[COMRAM] PTR struct .
 13068 ;;		 -> sender@nrf(3), 
 13069 ;; Auto vars:     Size  Location     Type
 13070 ;;  config          1   17[COMRAM] unsigned char 
 13071 ;;  AA              1   16[COMRAM] unsigned char 
 13072 ;;  result          1   15[COMRAM] enum E17434
 13073 ;; Return value:  Size  Location     Type
 13074 ;;                  1    wreg      unsigned char 
 13075 ;; Registers used:
 13076 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13077 ;; Tracked objects:
 13078 ;;		On entry : 0/0
 13079 ;;		On exit  : 0/0
 13080 ;;		Unchanged: 0/0
 13081 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13082 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13083 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13085 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13086 ;;Total ram usage:        5 bytes
 13087 ;; Hardware stack levels used: 1
 13088 ;; Hardware stack levels required when called: 6
 13089 ;; This function calls:
 13090 ;;		_Nrf24_readRegister
 13091 ;; This function is called by:
 13092 ;;		_Nrf24_printDetails
 13093 ;; This function uses a non-reentrant model
 13094 ;;
 13095                           
 13096                           	psect	text29
 13097   011352                     __ptext29:
 13098                           	callstack 0
 13099   011352                     _Nrf24_getCRCLength:
 13100                           	callstack 118
 13101   011352                     
 13102                           ;mirf.c: 460: uint8_t Nrf24_getCRCLength(NRF24_t * dev);mirf.c: 461: {;mirf.c: 462:  rf2
      +                          4_crclength_e result = RF24_CRC_DISABLED;
 13103   011352  6A10               	clrf	Nrf24_getCRCLength@result^(0+1280),c
 13104   011354                     
 13105                           ;mirf.c: 464:  uint8_t config;;mirf.c: 465:  Nrf24_readRegister(0x00, &config, sizeof(co
      +                          nfig));
 13106   011354  0E12               	movlw	low Nrf24_getCRCLength@config
 13107   011356  6E0A               	movwf	Nrf24_readRegister@value^(0+1280),c
 13108   011358  0E05               	movlw	high Nrf24_getCRCLength@config
 13109   01135A  6E0B               	movwf	(Nrf24_readRegister@value+1)^(0+1280),c
 13110   01135C  0E01               	movlw	1
 13111   01135E  6E0C               	movwf	Nrf24_readRegister@len^(0+1280),c
 13112   011360  0E00               	movlw	0
 13113   011362  ECDB  F08B         	call	_Nrf24_readRegister
 13114   011366                     
 13115                           ;mirf.c: 466:  config = config & ((1<<(2)) | (1<<(3)));
 13116   011366  5012               	movf	Nrf24_getCRCLength@config^(0+1280),w,c
 13117   011368  0B0C               	andlw	12
 13118   01136A  6E12               	movwf	Nrf24_getCRCLength@config^(0+1280),c
 13119   01136C                     
 13120                           ;mirf.c: 467:  uint8_t AA;;mirf.c: 468:  Nrf24_readRegister(0x01, &AA, sizeof(AA));
 13121   01136C  0E11               	movlw	low Nrf24_getCRCLength@AA
 13122   01136E  6E0A               	movwf	Nrf24_readRegister@value^(0+1280),c
 13123   011370  0E05               	movlw	high Nrf24_getCRCLength@AA
 13124   011372  6E0B               	movwf	(Nrf24_readRegister@value+1)^(0+1280),c
 13125   011374  0E01               	movlw	1
 13126   011376  6E0C               	movwf	Nrf24_readRegister@len^(0+1280),c
 13127   011378  0E01               	movlw	1
 13128   01137A  ECDB  F08B         	call	_Nrf24_readRegister
 13129   01137E                     
 13130                           ;mirf.c: 470:  if (config & (1<<(3)) || AA) {
 13131   01137E  B612               	btfsc	Nrf24_getCRCLength@config^(0+1280),3,c
 13132   011380  EFC4  F089         	goto	u3321
 13133   011384  EFC6  F089         	goto	u3320
 13134   011388                     u3321:
 13135   011388  EFCE  F089         	goto	l747
 13136   01138C                     u3320:
 13137   01138C  5011               	movf	Nrf24_getCRCLength@AA^(0+1280),w,c
 13138   01138E  B4D8               	btfsc	status,2,c
 13139   011390  EFCC  F089         	goto	u3331
 13140   011394  EFCE  F089         	goto	u3330
 13141   011398                     u3331:
 13142   011398  EFDB  F089         	goto	l745
 13143   01139C                     u3330:
 13144   01139C                     l747:
 13145                           
 13146                           ;mirf.c: 471:   if (config & (1<<(2))) {
 13147   01139C  A412               	btfss	Nrf24_getCRCLength@config^(0+1280),2,c
 13148   01139E  EFD3  F089         	goto	u3341
 13149   0113A2  EFD5  F089         	goto	u3340
 13150   0113A6                     u3341:
 13151   0113A6  EFD9  F089         	goto	l4117
 13152   0113AA                     u3340:
 13153   0113AA                     
 13154                           ;mirf.c: 472:    result = RF24_CRC_16;
 13155   0113AA  0E02               	movlw	2
 13156   0113AC  6E10               	movwf	Nrf24_getCRCLength@result^(0+1280),c
 13157                           
 13158                           ;mirf.c: 473:   } else {
 13159   0113AE  EFDB  F089         	goto	l745
 13160   0113B2                     l4117:
 13161                           
 13162                           ;mirf.c: 474:    result = RF24_CRC_8;
 13163   0113B2  0E01               	movlw	1
 13164   0113B4  6E10               	movwf	Nrf24_getCRCLength@result^(0+1280),c
 13165   0113B6                     l745:
 13166                           
 13167                           ;mirf.c: 478:  return result;
 13168   0113B6  5010               	movf	Nrf24_getCRCLength@result^(0+1280),w,c
 13169   0113B8  0012               	return		;funcret
 13170   0113BA                     __end_of_Nrf24_getCRCLength:
 13171                           	callstack 0
 13172                           
 13173 ;; *************** function _Nrf24_isSend *****************
 13174 ;; Defined at:
 13175 ;;		line 274 in file "mirf.c"
 13176 ;; Parameters:    Size  Location     Type
 13177 ;;  dev             2   16[COMRAM] PTR struct .
 13178 ;;		 -> sender@nrf(3), 
 13179 ;;  timeout         2   18[COMRAM] int 
 13180 ;; Auto vars:     Size  Location     Type
 13181 ;;  i               4   24[COMRAM] unsigned long 
 13182 ;;  status          1   28[COMRAM] unsigned char 
 13183 ;; Return value:  Size  Location     Type
 13184 ;;                  1    wreg      _Bool 
 13185 ;; Registers used:
 13186 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13187 ;; Tracked objects:
 13188 ;;		On entry : 0/0
 13189 ;;		On exit  : 0/0
 13190 ;;		Unchanged: 0/0
 13191 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13192 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13193 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13194 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13195 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13196 ;;Total ram usage:       13 bytes
 13197 ;; Hardware stack levels used: 1
 13198 ;; Hardware stack levels required when called: 7
 13199 ;; This function calls:
 13200 ;;		_DELAY_milliseconds
 13201 ;;		_Nrf24_getStatus
 13202 ;;		_Nrf24_powerUpRx
 13203 ;; This function is called by:
 13204 ;;		_sender
 13205 ;; This function uses a non-reentrant model
 13206 ;;
 13207                           
 13208                           	psect	text30
 13209   010D5E                     __ptext30:
 13210                           	callstack 0
 13211   010D5E                     _Nrf24_isSend:
 13212                           	callstack 118
 13213   010D5E                     
 13214                           ;mirf.c: 275:  uint8_t status;;mirf.c: 276:  if (dev->PTX) {
 13215   010D5E  C511  F4D9         	movff	Nrf24_isSend@dev,fsr2l
 13216   010D62  C512  F4DA         	movff	Nrf24_isSend@dev+1,fsr2h
 13217   010D66  50DF               	movf	indf2,w,c
 13218   010D68  B4D8               	btfsc	status,2,c
 13219   010D6A  EFB9  F086         	goto	u3391
 13220   010D6E  EFBB  F086         	goto	u3390
 13221   010D72                     u3391:
 13222   010D72  EF08  F087         	goto	l672
 13223   010D76                     u3390:
 13224   010D76                     
 13225                           ;mirf.c: 277:   for(unsigned long int i = 0; i < timeout; i++) {
 13226   010D76  0E00               	movlw	0
 13227   010D78  6E19               	movwf	Nrf24_isSend@i^(0+1280),c
 13228   010D7A  0E00               	movlw	0
 13229   010D7C  6E1A               	movwf	(Nrf24_isSend@i+1)^(0+1280),c
 13230   010D7E  0E00               	movlw	0
 13231   010D80  6E1B               	movwf	(Nrf24_isSend@i+2)^(0+1280),c
 13232   010D82  0E00               	movlw	0
 13233   010D84  6E1C               	movwf	(Nrf24_isSend@i+3)^(0+1280),c
 13234   010D86  EFF0  F086         	goto	l4229
 13235   010D8A                     l4213:
 13236                           
 13237                           ;mirf.c: 278:    status = Nrf24_getStatus(dev);
 13238   010D8A  C511  F50E         	movff	Nrf24_isSend@dev,Nrf24_getStatus@dev
 13239   010D8E  C512  F50F         	movff	Nrf24_isSend@dev+1,Nrf24_getStatus@dev+1
 13240   010D92  ECFD  F08C         	call	_Nrf24_getStatus	;wreg free
 13241   010D96  6E1D               	movwf	Nrf24_isSend@status^(0+1280),c
 13242   010D98                     
 13243                           ;mirf.c: 280:    if (status & (1 << 5)) {
 13244   010D98  AA1D               	btfss	Nrf24_isSend@status^(0+1280),5,c
 13245   010D9A  EFD1  F086         	goto	u3401
 13246   010D9E  EFD3  F086         	goto	u3400
 13247   010DA2                     u3401:
 13248   010DA2  EFDB  F086         	goto	l671
 13249   010DA6                     u3400:
 13250   010DA6                     l4217:
 13251                           
 13252                           ;mirf.c: 281:     Nrf24_powerUpRx(dev);
 13253   010DA6  C511  F508         	movff	Nrf24_isSend@dev,Nrf24_powerUpRx@dev
 13254   010DAA  C512  F509         	movff	Nrf24_isSend@dev+1,Nrf24_powerUpRx@dev+1
 13255   010DAE  EC86  F08C         	call	_Nrf24_powerUpRx	;wreg free
 13256   010DB2  EF08  F087         	goto	l672
 13257   010DB6                     l671:
 13258                           
 13259                           ;mirf.c: 285:    if (status & (1 << 4)) {
 13260   010DB6  A81D               	btfss	Nrf24_isSend@status^(0+1280),4,c
 13261   010DB8  EFE0  F086         	goto	u3411
 13262   010DBC  EFE2  F086         	goto	u3410
 13263   010DC0                     u3411:
 13264   010DC0  EFE4  F086         	goto	l4225
 13265   010DC4                     u3410:
 13266   010DC4  EFD3  F086         	goto	l4217
 13267   010DC8                     l4225:
 13268                           
 13269                           ;mirf.c: 290:    DELAY_milliseconds(1);
 13270   010DC8  0E00               	movlw	0
 13271   010DCA  6E05               	movwf	(DELAY_milliseconds@milliseconds+1)^(0+1280),c
 13272   010DCC  0E01               	movlw	1
 13273   010DCE  6E04               	movwf	DELAY_milliseconds@milliseconds^(0+1280),c
 13274   010DD0  ECC3  F08B         	call	_DELAY_milliseconds	;wreg free
 13275   010DD4                     
 13276                           ;mirf.c: 291:   }
 13277   010DD4  0E01               	movlw	1
 13278   010DD6  2619               	addwf	Nrf24_isSend@i^(0+1280),f,c
 13279   010DD8  0E00               	movlw	0
 13280   010DDA  221A               	addwfc	(Nrf24_isSend@i+1)^(0+1280),f,c
 13281   010DDC  221B               	addwfc	(Nrf24_isSend@i+2)^(0+1280),f,c
 13282   010DDE  221C               	addwfc	(Nrf24_isSend@i+3)^(0+1280),f,c
 13283   010DE0                     l4229:
 13284   010DE0  C513  F515         	movff	Nrf24_isSend@timeout,??_Nrf24_isSend
 13285   010DE4  C514  F516         	movff	Nrf24_isSend@timeout+1,??_Nrf24_isSend+1
 13286   010DE8  0E00               	movlw	0
 13287   010DEA  BE16               	btfsc	(??_Nrf24_isSend+1)^(0+1280),7,c
 13288   010DEC  0EFF               	movlw	255
 13289   010DEE  6E17               	movwf	(??_Nrf24_isSend+2)^(0+1280),c
 13290   010DF0  6E18               	movwf	(??_Nrf24_isSend+3)^(0+1280),c
 13291   010DF2  5015               	movf	??_Nrf24_isSend^(0+1280),w,c
 13292   010DF4  5C19               	subwf	Nrf24_isSend@i^(0+1280),w,c
 13293   010DF6  5016               	movf	(??_Nrf24_isSend+1)^(0+1280),w,c
 13294   010DF8  581A               	subwfb	(Nrf24_isSend@i+1)^(0+1280),w,c
 13295   010DFA  5017               	movf	(??_Nrf24_isSend+2)^(0+1280),w,c
 13296   010DFC  581B               	subwfb	(Nrf24_isSend@i+2)^(0+1280),w,c
 13297   010DFE  5018               	movf	(??_Nrf24_isSend+3)^(0+1280),w,c
 13298   010E00  581C               	subwfb	(Nrf24_isSend@i+3)^(0+1280),w,c
 13299   010E02  A0D8               	btfss	status,0,c
 13300   010E04  EF06  F087         	goto	u3421
 13301   010E08  EF08  F087         	goto	u3420
 13302   010E0C                     u3421:
 13303   010E0C  EFC5  F086         	goto	l4213
 13304   010E10                     u3420:
 13305   010E10                     l672:
 13306   010E10  0012               	return		;funcret
 13307   010E12                     __end_of_Nrf24_isSend:
 13308                           	callstack 0
 13309                           
 13310 ;; *************** function _DELAY_milliseconds *****************
 13311 ;; Defined at:
 13312 ;;		line 37 in file "mcc_generated_files/timer/src/delay.c"
 13313 ;; Parameters:    Size  Location     Type
 13314 ;;  milliseconds    2    3[COMRAM] unsigned short 
 13315 ;; Auto vars:     Size  Location     Type
 13316 ;;		None
 13317 ;; Return value:  Size  Location     Type
 13318 ;;                  1    wreg      void 
 13319 ;; Registers used:
 13320 ;;		wreg, status,2, status,0
 13321 ;; Tracked objects:
 13322 ;;		On entry : 0/0
 13323 ;;		On exit  : 0/0
 13324 ;;		Unchanged: 0/0
 13325 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13326 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13328 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13329 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13330 ;;Total ram usage:        3 bytes
 13331 ;; Hardware stack levels used: 1
 13332 ;; Hardware stack levels required when called: 3
 13333 ;; This function calls:
 13334 ;;		Nothing
 13335 ;; This function is called by:
 13336 ;;		_sender
 13337 ;;		_Nrf24_isSend
 13338 ;; This function uses a non-reentrant model
 13339 ;;
 13340                           
 13341                           	psect	text31
 13342   011786                     __ptext31:
 13343                           	callstack 0
 13344   011786                     _DELAY_milliseconds:
 13345                           	callstack 121
 13346   011786                     
 13347                           ;mcc_generated_files/timer/src/delay.c: 38:     while(milliseconds--){
 13348   011786  EFCD  F08B         	goto	l3121
 13349   01178A                     l3119:
 13350                           
 13351                           ;mcc_generated_files/timer/src/delay.c: 39:         _delay((unsigned long)((1)*(64000000
      +                          U/4000.0)));
 13352   01178A  0E15               	movlw	21
 13353   01178C  6E06               	movwf	??_DELAY_milliseconds^(0+1280),c
 13354   01178E  0EC6               	movlw	198
 13355   011790                     u3567:
 13356   011790  2EE8               	decfsz	wreg,f,c
 13357   011792  D7FE               	bra	u3567
 13358   011794  2E06               	decfsz	??_DELAY_milliseconds^(0+1280),f,c
 13359   011796  D7FC               	bra	u3567
 13360   011798  D000               	nop2	
 13361   01179A                     l3121:
 13362                           
 13363                           ;mcc_generated_files/timer/src/delay.c: 38:     while(milliseconds--){
 13364   01179A  0604               	decf	DELAY_milliseconds@milliseconds^(0+1280),f,c
 13365   01179C  A0D8               	btfss	status,0,c
 13366   01179E  0605               	decf	(DELAY_milliseconds@milliseconds+1)^(0+1280),f,c
 13367   0117A0  2804               	incf	DELAY_milliseconds@milliseconds^(0+1280),w,c
 13368   0117A2  E106               	bnz	u1991
 13369   0117A4  2805               	incf	(DELAY_milliseconds@milliseconds+1)^(0+1280),w,c
 13370   0117A6  A4D8               	btfss	status,2,c
 13371   0117A8  EFD8  F08B         	goto	u1991
 13372   0117AC  EFDA  F08B         	goto	u1990
 13373   0117B0                     u1991:
 13374   0117B0  EFC5  F08B         	goto	l3119
 13375   0117B4                     u1990:
 13376   0117B4  0012               	return		;funcret
 13377   0117B6                     __end_of_DELAY_milliseconds:
 13378                           	callstack 0
 13379                           
 13380 ;; *************** function _Nrf24_init *****************
 13381 ;; Defined at:
 13382 ;;		line 70 in file "mirf.c"
 13383 ;; Parameters:    Size  Location     Type
 13384 ;;  dev             2    4[COMRAM] PTR struct .
 13385 ;;		 -> sender@nrf(3), 
 13386 ;; Auto vars:     Size  Location     Type
 13387 ;;		None
 13388 ;; Return value:  Size  Location     Type
 13389 ;;                  1    wreg      void 
 13390 ;; Registers used:
 13391 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13392 ;; Tracked objects:
 13393 ;;		On entry : 0/0
 13394 ;;		On exit  : 0/0
 13395 ;;		Unchanged: 0/0
 13396 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13397 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13400 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13401 ;;Total ram usage:        2 bytes
 13402 ;; Hardware stack levels used: 1
 13403 ;; Hardware stack levels required when called: 4
 13404 ;; This function calls:
 13405 ;;		_SPI1_Open
 13406 ;; This function is called by:
 13407 ;;		_sender
 13408 ;; This function uses a non-reentrant model
 13409 ;;
 13410                           
 13411                           	psect	text32
 13412   011812                     __ptext32:
 13413                           	callstack 0
 13414   011812                     _Nrf24_init:
 13415                           	callstack 121
 13416   011812                     
 13417                           ;mirf.c: 70: void Nrf24_init(NRF24_t * dev);mirf.c: 71: {;mirf.c: 72:     SPI1_Open(0);
 13418   011812  0E00               	movlw	0
 13419   011814  EC87  F085         	call	_SPI1_Open
 13420   011818                     
 13421                           ;mirf.c: 74:     dev->channel = 115;
 13422   011818  EE20 F001          	lfsr	2,1
 13423   01181C  5005               	movf	Nrf24_init@dev^(0+1280),w,c
 13424   01181E  26D9               	addwf	fsr2l,f,c
 13425   011820  5006               	movf	(Nrf24_init@dev+1)^(0+1280),w,c
 13426   011822  22DA               	addwfc	fsr2h,f,c
 13427   011824  0E73               	movlw	115
 13428   011826  6EDF               	movwf	indf2,c
 13429   011828                     
 13430                           ;mirf.c: 75:     dev->payload = 32;
 13431   011828  EE20 F002          	lfsr	2,2
 13432   01182C  5005               	movf	Nrf24_init@dev^(0+1280),w,c
 13433   01182E  26D9               	addwf	fsr2l,f,c
 13434   011830  5006               	movf	(Nrf24_init@dev+1)^(0+1280),w,c
 13435   011832  22DA               	addwfc	fsr2h,f,c
 13436   011834  0E20               	movlw	32
 13437   011836  6EDF               	movwf	indf2,c
 13438   011838  92C8               	bcf	200,1,c	;volatile
 13439   01183A  94C8               	bcf	200,2,c	;volatile
 13440   01183C  0012               	return		;funcret
 13441   01183E                     __end_of_Nrf24_init:
 13442                           	callstack 0
 13443                           
 13444 ;; *************** function _SPI1_Open *****************
 13445 ;; Defined at:
 13446 ;;		line 91 in file "mcc_generated_files/spi/src/spi1.c"
 13447 ;; Parameters:    Size  Location     Type
 13448 ;;  spiConfigInd    1    wreg     unsigned char 
 13449 ;; Auto vars:     Size  Location     Type
 13450 ;;  spiConfigInd    1    3[COMRAM] unsigned char 
 13451 ;;  returnValue     1    0        _Bool 
 13452 ;; Return value:  Size  Location     Type
 13453 ;;                  1    wreg      _Bool 
 13454 ;; Registers used:
 13455 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 13456 ;; Tracked objects:
 13457 ;;		On entry : 0/0
 13458 ;;		On exit  : 0/0
 13459 ;;		Unchanged: 0/0
 13460 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13462 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13464 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13465 ;;Total ram usage:        1 bytes
 13466 ;; Hardware stack levels used: 1
 13467 ;; Hardware stack levels required when called: 3
 13468 ;; This function calls:
 13469 ;;		Nothing
 13470 ;; This function is called by:
 13471 ;;		_Nrf24_init
 13472 ;; This function uses a non-reentrant model
 13473 ;;
 13474                           
 13475                           	psect	text33
 13476   010B0E                     __ptext33:
 13477                           	callstack 0
 13478   010B0E                     _SPI1_Open:
 13479                           	callstack 121
 13480                           
 13481                           ;incstack = 0
 13482                           ;SPI1_Open@spiConfigIndex stored from wreg
 13483   010B0E  6E04               	movwf	SPI1_Open@spiConfigIndex^(0+1280),c
 13484   010B10                     
 13485                           ;mcc_generated_files/spi/src/spi1.c: 94:  if(0 == SPI1CON0bits.EN)
 13486   010B10  0100               	movlb	0	; () banked
 13487   010B12  BF84               	btfsc	132,7,b	;volatile
 13488   010B14  EF8E  F085         	goto	u1981
 13489   010B18  EF90  F085         	goto	u1980
 13490   010B1C                     u1981:
 13491   010B1C  EFEB  F085         	goto	l67
 13492   010B20                     u1980:
 13493   010B20                     
 13494                           ; BSR set to: 0
 13495                           ;mcc_generated_files/spi/src/spi1.c: 95:  {;mcc_generated_files/spi/src/spi1.c: 96:     
      +                              SPI1CON0 = spi1_configuration[spiConfigIndex].con0;
 13496   010B20  5004               	movf	SPI1_Open@spiConfigIndex^(0+1280),w,c
 13497   010B22  0D05               	mullw	5
 13498   010B24  0E8B               	movlw	low _spi1_configuration
 13499   010B26  24F3               	addwf	243,w,c
 13500   010B28  6EF6               	movwf	tblptrl,c
 13501   010B2A  0EFE               	movlw	high _spi1_configuration
 13502   010B2C  20F4               	addwfc	244,w,c
 13503   010B2E  6EF7               	movwf	tblptrh,c
 13504   010B30                     	if	1	;There are 3 active tblptr bytes
 13505   010B30  6AF8               	clrf	tblptru,c
 13506   010B32  0E00               	movlw	low (__mediumconst shr (0+16))
 13507   010B34  22F8               	addwfc	tblptru,f,c
 13508   010B36                     	endif
 13509   010B36  0008               	tblrd		*
 13510   010B38  C4F5 F084          	movff	tablat,132	;volatile
 13511                           
 13512                           ;mcc_generated_files/spi/src/spi1.c: 97:         SPI1CON1 = spi1_configuration[spiConfig
      +                          Index].con1;
 13513   010B3C  5004               	movf	SPI1_Open@spiConfigIndex^(0+1280),w,c
 13514   010B3E  0D05               	mullw	5
 13515   010B40  0E01               	movlw	1
 13516   010B42  26F3               	addwf	243,f,c
 13517   010B44  0E00               	movlw	0
 13518   010B46  22F4               	addwfc	244,f,c
 13519   010B48  0E8B               	movlw	low _spi1_configuration
 13520   010B4A  24F3               	addwf	243,w,c
 13521   010B4C  6EF6               	movwf	tblptrl,c
 13522   010B4E  0EFE               	movlw	high _spi1_configuration
 13523   010B50  20F4               	addwfc	244,w,c
 13524   010B52  6EF7               	movwf	tblptrh,c
 13525   010B54                     	if	1	;There are 3 active tblptr bytes
 13526   010B54  6AF8               	clrf	tblptru,c
 13527   010B56  0E00               	movlw	low (__mediumconst shr (0+16))
 13528   010B58  22F8               	addwfc	tblptru,f,c
 13529   010B5A                     	endif
 13530   010B5A  0008               	tblrd		*
 13531   010B5C  C4F5 F085          	movff	tablat,133	;volatile
 13532                           
 13533                           ;mcc_generated_files/spi/src/spi1.c: 98:         SPI1CON2 = spi1_configuration[spiConfig
      +                          Index].con2 & ~(0x1) & ~(0x2);
 13534   010B60  5004               	movf	SPI1_Open@spiConfigIndex^(0+1280),w,c
 13535   010B62  0D05               	mullw	5
 13536   010B64  0E02               	movlw	2
 13537   010B66  26F3               	addwf	243,f,c
 13538   010B68  0E00               	movlw	0
 13539   010B6A  22F4               	addwfc	244,f,c
 13540   010B6C  0E8B               	movlw	low _spi1_configuration
 13541   010B6E  24F3               	addwf	243,w,c
 13542   010B70  6EF6               	movwf	tblptrl,c
 13543   010B72  0EFE               	movlw	high _spi1_configuration
 13544   010B74  20F4               	addwfc	244,w,c
 13545   010B76  6EF7               	movwf	tblptrh,c
 13546   010B78                     	if	1	;There are 3 active tblptr bytes
 13547   010B78  6AF8               	clrf	tblptru,c
 13548   010B7A  0E00               	movlw	low (__mediumconst shr (0+16))
 13549   010B7C  22F8               	addwfc	tblptru,f,c
 13550   010B7E                     	endif
 13551   010B7E  0008               	tblrd		*
 13552   010B80  50F5               	movf	tablat,w,c
 13553   010B82  0BFC               	andlw	252
 13554   010B84  6F86               	movwf	134,b	;volatile
 13555                           
 13556                           ;mcc_generated_files/spi/src/spi1.c: 99:         SPI1BAUD = spi1_configuration[spiConfig
      +                          Index].baud;
 13557   010B86  5004               	movf	SPI1_Open@spiConfigIndex^(0+1280),w,c
 13558   010B88  0D05               	mullw	5
 13559   010B8A  0E03               	movlw	3
 13560   010B8C  26F3               	addwf	243,f,c
 13561   010B8E  0E00               	movlw	0
 13562   010B90  22F4               	addwfc	244,f,c
 13563   010B92  0E8B               	movlw	low _spi1_configuration
 13564   010B94  24F3               	addwf	243,w,c
 13565   010B96  6EF6               	movwf	tblptrl,c
 13566   010B98  0EFE               	movlw	high _spi1_configuration
 13567   010B9A  20F4               	addwfc	244,w,c
 13568   010B9C  6EF7               	movwf	tblptrh,c
 13569   010B9E                     	if	1	;There are 3 active tblptr bytes
 13570   010B9E  6AF8               	clrf	tblptru,c
 13571   010BA0  0E00               	movlw	low (__mediumconst shr (0+16))
 13572   010BA2  22F8               	addwfc	tblptru,f,c
 13573   010BA4                     	endif
 13574   010BA4  0008               	tblrd		*
 13575   010BA6  C4F5 F089          	movff	tablat,137	;volatile
 13576                           
 13577                           ;mcc_generated_files/spi/src/spi1.c: 100:         SPI1CLK = spi1_configuration[spiConfig
      +                          Index].clksel;
 13578   010BAA  5004               	movf	SPI1_Open@spiConfigIndex^(0+1280),w,c
 13579   010BAC  0D05               	mullw	5
 13580   010BAE  0E04               	movlw	4
 13581   010BB0  26F3               	addwf	243,f,c
 13582   010BB2  0E00               	movlw	0
 13583   010BB4  22F4               	addwfc	244,f,c
 13584   010BB6  0E8B               	movlw	low _spi1_configuration
 13585   010BB8  24F3               	addwf	243,w,c
 13586   010BBA  6EF6               	movwf	tblptrl,c
 13587   010BBC  0EFE               	movlw	high _spi1_configuration
 13588   010BBE  20F4               	addwfc	244,w,c
 13589   010BC0  6EF7               	movwf	tblptrh,c
 13590   010BC2                     	if	1	;There are 3 active tblptr bytes
 13591   010BC2  6AF8               	clrf	tblptru,c
 13592   010BC4  0E00               	movlw	low (__mediumconst shr (0+16))
 13593   010BC6  22F8               	addwfc	tblptru,f,c
 13594   010BC8                     	endif
 13595   010BC8  0008               	tblrd		*
 13596   010BCA  C4F5 F08C          	movff	tablat,140	;volatile
 13597   010BCE                     
 13598                           ; BSR set to: 0
 13599                           ;mcc_generated_files/spi/src/spi1.c: 101:   TRISCbits.TRISC6 = 0;
 13600   010BCE  9CC8               	bcf	200,6,c	;volatile
 13601   010BD0                     
 13602                           ; BSR set to: 0
 13603                           ;mcc_generated_files/spi/src/spi1.c: 102:         SPI1CON0bits.EN = 1U;
 13604   010BD0  8F84               	bsf	132,7,b	;volatile
 13605   010BD2                     
 13606                           ; BSR set to: 0
 13607                           ;mcc_generated_files/spi/src/spi1.c: 104:  }
 13608   010BD2  EFEB  F085         	goto	l69
 13609   010BD6                     l67:
 13610   010BD6                     l69:
 13611                           
 13612                           ; BSR set to: 0
 13613   010BD6  0012               	return		;funcret
 13614   010BD8                     __end_of_SPI1_Open:
 13615                           	callstack 0
 13616                           
 13617 ;; *************** function _Nrf24_config *****************
 13618 ;; Defined at:
 13619 ;;		line 89 in file "mirf.c"
 13620 ;; Parameters:    Size  Location     Type
 13621 ;;  dev             2   16[COMRAM] PTR struct .
 13622 ;;		 -> sender@nrf(3), 
 13623 ;;  channel         1   18[COMRAM] unsigned char 
 13624 ;;  payload         1   19[COMRAM] unsigned char 
 13625 ;; Auto vars:     Size  Location     Type
 13626 ;;		None
 13627 ;; Return value:  Size  Location     Type
 13628 ;;                  1    wreg      void 
 13629 ;; Registers used:
 13630 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13631 ;; Tracked objects:
 13632 ;;		On entry : 0/0
 13633 ;;		On exit  : 0/0
 13634 ;;		Unchanged: 0/0
 13635 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13636 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13639 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13640 ;;Total ram usage:        4 bytes
 13641 ;; Hardware stack levels used: 1
 13642 ;; Hardware stack levels required when called: 7
 13643 ;; This function calls:
 13644 ;;		_Nrf24_configRegister
 13645 ;;		_Nrf24_flushRx
 13646 ;;		_Nrf24_getStatus
 13647 ;;		_Nrf24_powerUpRx
 13648 ;; This function is called by:
 13649 ;;		_sender
 13650 ;; This function uses a non-reentrant model
 13651 ;;
 13652                           
 13653                           	psect	text34
 13654   011268                     __ptext34:
 13655                           	callstack 0
 13656   011268                     _Nrf24_config:
 13657                           	callstack 118
 13658   011268                     
 13659                           ;mirf.c: 89: void Nrf24_config(NRF24_t * dev, uint8_t channel, uint8_t payload);mirf.c: 
      +                          90: {;mirf.c: 91:  dev->channel = channel;
 13660   011268  EE20 F001          	lfsr	2,1
 13661   01126C  5011               	movf	Nrf24_config@dev^(0+1280),w,c
 13662   01126E  26D9               	addwf	fsr2l,f,c
 13663   011270  5012               	movf	(Nrf24_config@dev+1)^(0+1280),w,c
 13664   011272  22DA               	addwfc	fsr2h,f,c
 13665   011274  C513  F4DF         	movff	Nrf24_config@channel,indf2
 13666                           
 13667                           ;mirf.c: 92:  dev->payload = payload;
 13668   011278  EE20 F002          	lfsr	2,2
 13669   01127C  5011               	movf	Nrf24_config@dev^(0+1280),w,c
 13670   01127E  26D9               	addwf	fsr2l,f,c
 13671   011280  5012               	movf	(Nrf24_config@dev+1)^(0+1280),w,c
 13672   011282  22DA               	addwfc	fsr2h,f,c
 13673   011284  C514  F4DF         	movff	Nrf24_config@payload,indf2
 13674   011288                     
 13675                           ;mirf.c: 93:     Nrf24_getStatus(dev);
 13676   011288  C511  F50E         	movff	Nrf24_config@dev,Nrf24_getStatus@dev
 13677   01128C  C512  F50F         	movff	Nrf24_config@dev+1,Nrf24_getStatus@dev+1
 13678   011290  ECFD  F08C         	call	_Nrf24_getStatus	;wreg free
 13679   011294                     
 13680                           ;mirf.c: 94:     Nrf24_configRegister(0x05, channel);
 13681   011294  C513  F506         	movff	Nrf24_config@channel,Nrf24_configRegister@value
 13682   011298  0E05               	movlw	5
 13683   01129A  ECE5  F08C         	call	_Nrf24_configRegister
 13684   01129E                     
 13685                           ;mirf.c: 95:  Nrf24_configRegister(0x11, dev->payload);
 13686   01129E  EE20 F002          	lfsr	2,2
 13687   0112A2  5011               	movf	Nrf24_config@dev^(0+1280),w,c
 13688   0112A4  26D9               	addwf	fsr2l,f,c
 13689   0112A6  5012               	movf	(Nrf24_config@dev+1)^(0+1280),w,c
 13690   0112A8  22DA               	addwfc	fsr2h,f,c
 13691   0112AA  50DF               	movf	indf2,w,c
 13692   0112AC  6E06               	movwf	Nrf24_configRegister@value^(0+1280),c
 13693   0112AE  0E11               	movlw	17
 13694   0112B0  ECE5  F08C         	call	_Nrf24_configRegister
 13695   0112B4                     
 13696                           ;mirf.c: 96:  Nrf24_configRegister(0x12, dev->payload);
 13697   0112B4  EE20 F002          	lfsr	2,2
 13698   0112B8  5011               	movf	Nrf24_config@dev^(0+1280),w,c
 13699   0112BA  26D9               	addwf	fsr2l,f,c
 13700   0112BC  5012               	movf	(Nrf24_config@dev+1)^(0+1280),w,c
 13701   0112BE  22DA               	addwfc	fsr2h,f,c
 13702   0112C0  50DF               	movf	indf2,w,c
 13703   0112C2  6E06               	movwf	Nrf24_configRegister@value^(0+1280),c
 13704   0112C4  0E12               	movlw	18
 13705   0112C6  ECE5  F08C         	call	_Nrf24_configRegister
 13706   0112CA                     
 13707                           ;mirf.c: 97:  Nrf24_powerUpRx(dev);
 13708   0112CA  C511  F508         	movff	Nrf24_config@dev,Nrf24_powerUpRx@dev
 13709   0112CE  C512  F509         	movff	Nrf24_config@dev+1,Nrf24_powerUpRx@dev+1
 13710   0112D2  EC86  F08C         	call	_Nrf24_powerUpRx	;wreg free
 13711   0112D6                     
 13712                           ;mirf.c: 98:  Nrf24_flushRx(dev);
 13713   0112D6  C511  F506         	movff	Nrf24_config@dev,Nrf24_flushRx@dev
 13714   0112DA  C512  F507         	movff	Nrf24_config@dev+1,Nrf24_flushRx@dev+1
 13715   0112DE  EC39  F08D         	call	_Nrf24_flushRx	;wreg free
 13716   0112E2  0012               	return		;funcret
 13717   0112E4                     __end_of_Nrf24_config:
 13718                           	callstack 0
 13719                           
 13720 ;; *************** function _Nrf24_powerUpRx *****************
 13721 ;; Defined at:
 13722 ;;		line 303 in file "mirf.c"
 13723 ;; Parameters:    Size  Location     Type
 13724 ;;  dev             2    7[COMRAM] PTR struct .
 13725 ;;		 -> sender@nrf(3), 
 13726 ;; Auto vars:     Size  Location     Type
 13727 ;;		None
 13728 ;; Return value:  Size  Location     Type
 13729 ;;                  1    wreg      void 
 13730 ;; Registers used:
 13731 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13732 ;; Tracked objects:
 13733 ;;		On entry : 0/0
 13734 ;;		On exit  : 0/0
 13735 ;;		Unchanged: 0/0
 13736 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13737 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13740 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13741 ;;Total ram usage:        2 bytes
 13742 ;; Hardware stack levels used: 1
 13743 ;; Hardware stack levels required when called: 5
 13744 ;; This function calls:
 13745 ;;		_Nrf24_configRegister
 13746 ;; This function is called by:
 13747 ;;		_Nrf24_config
 13748 ;;		_Nrf24_isSend
 13749 ;;		_Nrf24_isSending
 13750 ;; This function uses a non-reentrant model
 13751 ;;
 13752                           
 13753                           	psect	text35
 13754   01190C                     __ptext35:
 13755                           	callstack 0
 13756   01190C                     _Nrf24_powerUpRx:
 13757                           	callstack 119
 13758   01190C                     
 13759                           ;mirf.c: 304:  dev->PTX = 0;
 13760   01190C  C508  F4D9         	movff	Nrf24_powerUpRx@dev,fsr2l
 13761   011910  C509  F4DA         	movff	Nrf24_powerUpRx@dev+1,fsr2h
 13762   011914  6ADF               	clrf	indf2,c
 13763   011916  94C0               	bcf	192,2,c	;volatile
 13764   011918                     
 13765                           ;mirf.c: 306:  Nrf24_configRegister(0x00, ((1<<5) | (1<<3) | (0<<2) ) | ( (1 << 1) | (1 
      +                          << 0) ) );
 13766   011918  0E2B               	movlw	43
 13767   01191A  6E06               	movwf	Nrf24_configRegister@value^(0+1280),c
 13768   01191C  0E00               	movlw	0
 13769   01191E  ECE5  F08C         	call	_Nrf24_configRegister
 13770   011922  84C0               	bsf	192,2,c	;volatile
 13771   011924                     
 13772                           ;mirf.c: 308:  Nrf24_configRegister(0x07, (1 << 5) | (1 << 4));
 13773   011924  0E30               	movlw	48
 13774   011926  6E06               	movwf	Nrf24_configRegister@value^(0+1280),c
 13775   011928  0E07               	movlw	7
 13776   01192A  ECE5  F08C         	call	_Nrf24_configRegister
 13777   01192E  0012               	return		;funcret
 13778   011930                     __end_of_Nrf24_powerUpRx:
 13779                           	callstack 0
 13780                           
 13781 ;; *************** function _Nrf24_getStatus *****************
 13782 ;; Defined at:
 13783 ;;		line 297 in file "mirf.c"
 13784 ;; Parameters:    Size  Location     Type
 13785 ;;  dev             2   13[COMRAM] PTR struct .
 13786 ;;		 -> sender@nrf(3), 
 13787 ;; Auto vars:     Size  Location     Type
 13788 ;;  rv              1   15[COMRAM] unsigned char 
 13789 ;; Return value:  Size  Location     Type
 13790 ;;                  1    wreg      unsigned char 
 13791 ;; Registers used:
 13792 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13793 ;; Tracked objects:
 13794 ;;		On entry : 0/0
 13795 ;;		On exit  : 0/0
 13796 ;;		Unchanged: 0/0
 13797 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13798 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13799 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13801 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13802 ;;Total ram usage:        3 bytes
 13803 ;; Hardware stack levels used: 1
 13804 ;; Hardware stack levels required when called: 6
 13805 ;; This function calls:
 13806 ;;		_Nrf24_readRegister
 13807 ;; This function is called by:
 13808 ;;		_Nrf24_config
 13809 ;;		_Nrf24_send
 13810 ;;		_Nrf24_isSend
 13811 ;;		_Nrf24_printDetails
 13812 ;;		_Nrf24_dataReady
 13813 ;;		_Nrf24_getDataPipe
 13814 ;;		_Nrf24_isSending
 13815 ;; This function uses a non-reentrant model
 13816 ;;
 13817                           
 13818                           	psect	text36
 13819   0119FA                     __ptext36:
 13820                           	callstack 0
 13821   0119FA                     _Nrf24_getStatus:
 13822                           	callstack 118
 13823   0119FA                     
 13824                           ;mirf.c: 298:  uint8_t rv;;mirf.c: 299:  Nrf24_readRegister(0x07, &rv, 1);
 13825   0119FA  0E10               	movlw	low Nrf24_getStatus@rv
 13826   0119FC  6E0A               	movwf	Nrf24_readRegister@value^(0+1280),c
 13827   0119FE  0E05               	movlw	high Nrf24_getStatus@rv
 13828   011A00  6E0B               	movwf	(Nrf24_readRegister@value+1)^(0+1280),c
 13829   011A02  0E01               	movlw	1
 13830   011A04  6E0C               	movwf	Nrf24_readRegister@len^(0+1280),c
 13831   011A06  0E07               	movlw	7
 13832   011A08  ECDB  F08B         	call	_Nrf24_readRegister
 13833   011A0C                     
 13834                           ;mirf.c: 300:  return rv;
 13835   011A0C  5010               	movf	Nrf24_getStatus@rv^(0+1280),w,c
 13836   011A0E  0012               	return		;funcret
 13837   011A10                     __end_of_Nrf24_getStatus:
 13838                           	callstack 0
 13839                           
 13840 ;; *************** function _Nrf24_flushRx *****************
 13841 ;; Defined at:
 13842 ;;		line 311 in file "mirf.c"
 13843 ;; Parameters:    Size  Location     Type
 13844 ;;  dev             2    5[COMRAM] PTR struct .
 13845 ;;		 -> sender@nrf(3), 
 13846 ;; Auto vars:     Size  Location     Type
 13847 ;;		None
 13848 ;; Return value:  Size  Location     Type
 13849 ;;                  1    wreg      void 
 13850 ;; Registers used:
 13851 ;;		wreg, status,2, status,0, cstack
 13852 ;; Tracked objects:
 13853 ;;		On entry : 0/0
 13854 ;;		On exit  : 0/0
 13855 ;;		Unchanged: 0/0
 13856 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13857 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13860 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13861 ;;Total ram usage:        2 bytes
 13862 ;; Hardware stack levels used: 1
 13863 ;; Hardware stack levels required when called: 4
 13864 ;; This function calls:
 13865 ;;		_SPI1_ByteExchange
 13866 ;; This function is called by:
 13867 ;;		_Nrf24_config
 13868 ;; This function uses a non-reentrant model
 13869 ;;
 13870                           
 13871                           	psect	text37
 13872   011A72                     __ptext37:
 13873                           	callstack 0
 13874   011A72                     _Nrf24_flushRx:
 13875                           	callstack 120
 13876   011A72  92C0               	bcf	192,1,c	;volatile
 13877   011A74                     
 13878                           ;mirf.c: 314:  SPI1_ByteExchange(0xE2);
 13879   011A74  0EE2               	movlw	226
 13880   011A76  EC35  F08C         	call	_SPI1_ByteExchange
 13881   011A7A  82C0               	bsf	192,1,c	;volatile
 13882   011A7C  0012               	return		;funcret
 13883   011A7E                     __end_of_Nrf24_flushRx:
 13884                           	callstack 0
 13885                           
 13886 ;; *************** function _AdvancedSettings *****************
 13887 ;; Defined at:
 13888 ;;		line 23 in file "main.c"
 13889 ;; Parameters:    Size  Location     Type
 13890 ;;  dev             2   17[COMRAM] PTR struct .
 13891 ;;		 -> sender@nrf(3), 
 13892 ;; Auto vars:     Size  Location     Type
 13893 ;;		None
 13894 ;; Return value:  Size  Location     Type
 13895 ;;                  1    wreg      void 
 13896 ;; Registers used:
 13897 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13898 ;; Tracked objects:
 13899 ;;		On entry : 0/0
 13900 ;;		On exit  : 0/0
 13901 ;;		Unchanged: 0/0
 13902 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13903 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13906 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13907 ;;Total ram usage:        2 bytes
 13908 ;; Hardware stack levels used: 1
 13909 ;; Hardware stack levels required when called: 7
 13910 ;; This function calls:
 13911 ;;		_Nrf24_SetSpeedDataRates
 13912 ;;		_Nrf24_setRetransmitDelay
 13913 ;; This function is called by:
 13914 ;;		_sender
 13915 ;; This function uses a non-reentrant model
 13916 ;;
 13917                           
 13918                           	psect	text38
 13919   011952                     __ptext38:
 13920                           	callstack 0
 13921   011952                     _AdvancedSettings:
 13922                           	callstack 118
 13923   011952                     
 13924                           ;main.c: 23: void AdvancedSettings(NRF24_t * dev);main.c: 24: {;main.c: 30:  Nrf24_SetSp
      +                          eedDataRates(dev, 0);
 13925   011952  C512  F50E         	movff	AdvancedSettings@dev,Nrf24_SetSpeedDataRates@dev
 13926   011956  C513  F50F         	movff	AdvancedSettings@dev+1,Nrf24_SetSpeedDataRates@dev+1
 13927   01195A  0E00               	movlw	0
 13928   01195C  6E10               	movwf	Nrf24_SetSpeedDataRates@val^(0+1280),c
 13929   01195E  EC72  F089         	call	_Nrf24_SetSpeedDataRates	;wreg free
 13930                           
 13931                           ;main.c: 36:  Nrf24_setRetransmitDelay(dev, 100);
 13932   011962  C512  F50E         	movff	AdvancedSettings@dev,Nrf24_setRetransmitDelay@dev
 13933   011966  C513  F50F         	movff	AdvancedSettings@dev+1,Nrf24_setRetransmitDelay@dev+1
 13934   01196A  0E64               	movlw	100
 13935   01196C  6E10               	movwf	Nrf24_setRetransmitDelay@val^(0+1280),c
 13936   01196E  EC1F  F08C         	call	_Nrf24_setRetransmitDelay	;wreg free
 13937   011972  0012               	return		;funcret
 13938   011974                     __end_of_AdvancedSettings:
 13939                           	callstack 0
 13940                           
 13941 ;; *************** function _Nrf24_setRetransmitDelay *****************
 13942 ;; Defined at:
 13943 ;;		line 364 in file "mirf.c"
 13944 ;; Parameters:    Size  Location     Type
 13945 ;;  dev             2   13[COMRAM] PTR struct .
 13946 ;;		 -> sender@nrf(3), 
 13947 ;;  val             1   15[COMRAM] unsigned char 
 13948 ;; Auto vars:     Size  Location     Type
 13949 ;;  value           1   16[COMRAM] unsigned char 
 13950 ;; Return value:  Size  Location     Type
 13951 ;;                  1    wreg      void 
 13952 ;; Registers used:
 13953 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13954 ;; Tracked objects:
 13955 ;;		On entry : 0/0
 13956 ;;		On exit  : 0/0
 13957 ;;		Unchanged: 0/0
 13958 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13959 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13960 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13962 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13963 ;;Total ram usage:        4 bytes
 13964 ;; Hardware stack levels used: 1
 13965 ;; Hardware stack levels required when called: 6
 13966 ;; This function calls:
 13967 ;;		_Nrf24_configRegister
 13968 ;;		_Nrf24_readRegister
 13969 ;; This function is called by:
 13970 ;;		_AdvancedSettings
 13971 ;; This function uses a non-reentrant model
 13972 ;;
 13973                           
 13974                           	psect	text39
 13975   01183E                     __ptext39:
 13976                           	callstack 0
 13977   01183E                     _Nrf24_setRetransmitDelay:
 13978                           	callstack 118
 13979   01183E                     
 13980                           ;mirf.c: 364: void Nrf24_setRetransmitDelay(NRF24_t * dev, uint8_t val);mirf.c: 365: {;m
      +                          irf.c: 366:  uint8_t value;;mirf.c: 367:  Nrf24_readRegister(0x04, &value, 1);
 13981   01183E  0E11               	movlw	low Nrf24_setRetransmitDelay@value
 13982   011840  6E0A               	movwf	Nrf24_readRegister@value^(0+1280),c
 13983   011842  0E05               	movlw	high Nrf24_setRetransmitDelay@value
 13984   011844  6E0B               	movwf	(Nrf24_readRegister@value+1)^(0+1280),c
 13985   011846  0E01               	movlw	1
 13986   011848  6E0C               	movwf	Nrf24_readRegister@len^(0+1280),c
 13987   01184A  0E04               	movlw	4
 13988   01184C  ECDB  F08B         	call	_Nrf24_readRegister
 13989   011850                     
 13990                           ;mirf.c: 368:  value = value & 0x0F;
 13991   011850  5011               	movf	Nrf24_setRetransmitDelay@value^(0+1280),w,c
 13992   011852  0B0F               	andlw	15
 13993   011854  6E11               	movwf	Nrf24_setRetransmitDelay@value^(0+1280),c
 13994   011856                     
 13995                           ;mirf.c: 369:  value = value | (val << 4);
 13996   011856  3810               	swapf	Nrf24_setRetransmitDelay@val^(0+1280),w,c
 13997   011858  0BF0               	andlw	240
 13998   01185A  1011               	iorwf	Nrf24_setRetransmitDelay@value^(0+1280),w,c
 13999   01185C  6E11               	movwf	Nrf24_setRetransmitDelay@value^(0+1280),c
 14000   01185E                     
 14001                           ;mirf.c: 370:  Nrf24_configRegister(0x04, value);
 14002   01185E  C511  F506         	movff	Nrf24_setRetransmitDelay@value,Nrf24_configRegister@value
 14003   011862  0E04               	movlw	4
 14004   011864  ECE5  F08C         	call	_Nrf24_configRegister
 14005   011868  0012               	return		;funcret
 14006   01186A                     __end_of_Nrf24_setRetransmitDelay:
 14007                           	callstack 0
 14008                           
 14009 ;; *************** function _Nrf24_SetSpeedDataRates *****************
 14010 ;; Defined at:
 14011 ;;		line 343 in file "mirf.c"
 14012 ;; Parameters:    Size  Location     Type
 14013 ;;  dev             2   13[COMRAM] PTR struct .
 14014 ;;		 -> sender@nrf(3), 
 14015 ;;  val             1   15[COMRAM] unsigned char 
 14016 ;; Auto vars:     Size  Location     Type
 14017 ;;  value           1   16[COMRAM] unsigned char 
 14018 ;; Return value:  Size  Location     Type
 14019 ;;                  1    wreg      void 
 14020 ;; Registers used:
 14021 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14022 ;; Tracked objects:
 14023 ;;		On entry : 0/0
 14024 ;;		On exit  : 0/0
 14025 ;;		Unchanged: 0/0
 14026 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14027 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14028 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14030 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14031 ;;Total ram usage:        4 bytes
 14032 ;; Hardware stack levels used: 1
 14033 ;; Hardware stack levels required when called: 6
 14034 ;; This function calls:
 14035 ;;		_Nrf24_configRegister
 14036 ;;		_Nrf24_readRegister
 14037 ;; This function is called by:
 14038 ;;		_AdvancedSettings
 14039 ;; This function uses a non-reentrant model
 14040 ;;
 14041                           
 14042                           	psect	text40
 14043   0112E4                     __ptext40:
 14044                           	callstack 0
 14045   0112E4                     _Nrf24_SetSpeedDataRates:
 14046                           	callstack 118
 14047   0112E4                     
 14048                           ;mirf.c: 343: void Nrf24_SetSpeedDataRates(NRF24_t * dev, uint8_t val);mirf.c: 344: {;mi
      +                          rf.c: 345:  if (val > 2) return;
 14049   0112E4  0E02               	movlw	2
 14050   0112E6  6410               	cpfsgt	Nrf24_SetSpeedDataRates@val^(0+1280),c
 14051   0112E8  EF78  F089         	goto	u3161
 14052   0112EC  EF7A  F089         	goto	u3160
 14053   0112F0                     u3161:
 14054   0112F0  EF7C  F089         	goto	l3995
 14055   0112F4                     u3160:
 14056   0112F4  EFA8  F089         	goto	l707
 14057   0112F8                     l3995:
 14058                           
 14059                           ;mirf.c: 347:  uint8_t value;;mirf.c: 348:  Nrf24_readRegister(0x06, &value, 1);
 14060   0112F8  0E11               	movlw	low Nrf24_SetSpeedDataRates@value
 14061   0112FA  6E0A               	movwf	Nrf24_readRegister@value^(0+1280),c
 14062   0112FC  0E05               	movlw	high Nrf24_SetSpeedDataRates@value
 14063   0112FE  6E0B               	movwf	(Nrf24_readRegister@value+1)^(0+1280),c
 14064   011300  0E01               	movlw	1
 14065   011302  6E0C               	movwf	Nrf24_readRegister@len^(0+1280),c
 14066   011304  0E06               	movlw	6
 14067   011306  ECDB  F08B         	call	_Nrf24_readRegister
 14068   01130A                     
 14069                           ;mirf.c: 349:  if(val == 2)
 14070   01130A  0E02               	movlw	2
 14071   01130C  1810               	xorwf	Nrf24_SetSpeedDataRates@val^(0+1280),w,c
 14072   01130E  A4D8               	btfss	status,2,c
 14073   011310  EF8C  F089         	goto	u3171
 14074   011314  EF8E  F089         	goto	u3170
 14075   011318                     u3171:
 14076   011318  EF9B  F089         	goto	l4003
 14077   01131C                     u3170:
 14078   01131C                     
 14079                           ;mirf.c: 350:  {;mirf.c: 351:   value = value | 0x20;
 14080   01131C  5011               	movf	Nrf24_SetSpeedDataRates@value^(0+1280),w,c
 14081   01131E  0920               	iorlw	32
 14082   011320  6E11               	movwf	Nrf24_SetSpeedDataRates@value^(0+1280),c
 14083                           
 14084                           ;mirf.c: 352:   value = value & 0xF7;
 14085   011322  5011               	movf	Nrf24_SetSpeedDataRates@value^(0+1280),w,c
 14086   011324  0BF7               	andlw	247
 14087   011326  6E11               	movwf	Nrf24_SetSpeedDataRates@value^(0+1280),c
 14088   011328                     
 14089                           ;mirf.c: 353:      Nrf24_configRegister(0x06, value);
 14090   011328  C511  F506         	movff	Nrf24_SetSpeedDataRates@value,Nrf24_configRegister@value
 14091   01132C  0E06               	movlw	6
 14092   01132E  ECE5  F08C         	call	_Nrf24_configRegister
 14093                           
 14094                           ;mirf.c: 354:  }
 14095   011332  EFA8  F089         	goto	l707
 14096   011336                     l4003:
 14097                           
 14098                           ;mirf.c: 356:  {;mirf.c: 357:   value = value & 0xD7;
 14099   011336  5011               	movf	Nrf24_SetSpeedDataRates@value^(0+1280),w,c
 14100   011338  0BD7               	andlw	215
 14101   01133A  6E11               	movwf	Nrf24_SetSpeedDataRates@value^(0+1280),c
 14102                           
 14103                           ;mirf.c: 358:   value = value | (val << 3);
 14104   01133C  3810               	swapf	Nrf24_SetSpeedDataRates@val^(0+1280),w,c
 14105   01133E  42E8               	rrncf	wreg,f,c
 14106   011340  0BF8               	andlw	248
 14107   011342  1011               	iorwf	Nrf24_SetSpeedDataRates@value^(0+1280),w,c
 14108   011344  6E11               	movwf	Nrf24_SetSpeedDataRates@value^(0+1280),c
 14109   011346                     
 14110                           ;mirf.c: 359:   Nrf24_configRegister(0x06, value);
 14111   011346  C511  F506         	movff	Nrf24_SetSpeedDataRates@value,Nrf24_configRegister@value
 14112   01134A  0E06               	movlw	6
 14113   01134C  ECE5  F08C         	call	_Nrf24_configRegister
 14114   011350                     l707:
 14115   011350  0012               	return		;funcret
 14116   011352                     __end_of_Nrf24_SetSpeedDataRates:
 14117                           	callstack 0
 14118                           
 14119 ;; *************** function _Nrf24_readRegister *****************
 14120 ;; Defined at:
 14121 ;;		line 207 in file "mirf.c"
 14122 ;; Parameters:    Size  Location     Type
 14123 ;;  reg             1    wreg     unsigned char 
 14124 ;;  value           2    9[COMRAM] PTR unsigned char 
 14125 ;;		 -> Nrf24_getRetransmitDelay@value(1), Nrf24_getPALevel@level(1), Nrf24_getCRCLength@AA(1), Nrf24_getCRCLength@confi
      +g(1), 
 14126 ;;		 -> Nrf24_getDataRate@dr(1), Nrf24_print_byte_register@buffer(1), Nrf24_print_address_register@buffer(5), Nrf24_setR
      +etransmitDelay@value(1), 
 14127 ;;		 -> Nrf24_SetSpeedDataRates@value(1), Nrf24_SetOutputRF_PWR@value(1), Nrf24_getStatus@rv(1), Nrf24_rxFifoEmpty@fifoS
      +tatus(1), 
 14128 ;;		 -> Nrf24_addRADDR@value(1), Nrf24_setTADDR@buffer(5), Nrf24_setRADDR@buffer(5), 
 14129 ;;  len             1   11[COMRAM] unsigned char 
 14130 ;; Auto vars:     Size  Location     Type
 14131 ;;  reg             1   12[COMRAM] unsigned char 
 14132 ;; Return value:  Size  Location     Type
 14133 ;;                  1    wreg      void 
 14134 ;; Registers used:
 14135 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14136 ;; Tracked objects:
 14137 ;;		On entry : 0/0
 14138 ;;		On exit  : 0/0
 14139 ;;		Unchanged: 0/0
 14140 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14141 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14142 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14144 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14145 ;;Total ram usage:        4 bytes
 14146 ;; Hardware stack levels used: 1
 14147 ;; Hardware stack levels required when called: 5
 14148 ;; This function calls:
 14149 ;;		_SPI1_ByteExchange
 14150 ;;		_SPI_read_buff
 14151 ;; This function is called by:
 14152 ;;		_Nrf24_setTADDR
 14153 ;;		_Nrf24_getStatus
 14154 ;;		_Nrf24_SetSpeedDataRates
 14155 ;;		_Nrf24_setRetransmitDelay
 14156 ;;		_Nrf24_print_address_register
 14157 ;;		_Nrf24_print_byte_register
 14158 ;;		_Nrf24_getDataRate
 14159 ;;		_Nrf24_getCRCLength
 14160 ;;		_Nrf24_getPALevel
 14161 ;;		_Nrf24_getRetransmitDelay
 14162 ;;		_Nrf24_setRADDR
 14163 ;;		_Nrf24_addRADDR
 14164 ;;		_Nrf24_rxFifoEmpty
 14165 ;;		_Nrf24_SetOutputRF_PWR
 14166 ;; This function uses a non-reentrant model
 14167 ;;
 14168                           
 14169                           	psect	text41
 14170   0117B6                     __ptext41:
 14171                           	callstack 0
 14172   0117B6                     _Nrf24_readRegister:
 14173                           	callstack 119
 14174                           
 14175                           ;incstack = 0
 14176                           ;Nrf24_readRegister@reg stored from wreg
 14177   0117B6  6E0D               	movwf	Nrf24_readRegister@reg^(0+1280),c
 14178   0117B8                     
 14179                           ;mirf.c: 207: void Nrf24_readRegister(uint8_t reg, uint8_t * value, uint8_t len);mirf.c:
      +                           208: {;mirf.c: 209:     if(len) {
 14180   0117B8  500C               	movf	Nrf24_readRegister@len^(0+1280),w,c
 14181   0117BA  B4D8               	btfsc	status,2,c
 14182   0117BC  EFE2  F08B         	goto	u3151
 14183   0117C0  EFE4  F08B         	goto	u3150
 14184   0117C4                     u3151:
 14185   0117C4  EFF2  F08B         	goto	l633
 14186   0117C8                     u3150:
 14187   0117C8  92C0               	bcf	192,1,c	;volatile
 14188   0117CA                     
 14189                           ;mirf.c: 211:         SPI1_ByteExchange(0x00 | (0x1F & reg));
 14190   0117CA  500D               	movf	Nrf24_readRegister@reg^(0+1280),w,c
 14191   0117CC  0B1F               	andlw	31
 14192   0117CE  EC35  F08C         	call	_SPI1_ByteExchange
 14193   0117D2                     
 14194                           ;mirf.c: 212:         SPI_read_buff(value, len);
 14195   0117D2  C50A  F506         	movff	Nrf24_readRegister@value,SPI_read_buff@buffer
 14196   0117D6  C50B  F507         	movff	Nrf24_readRegister@value+1,SPI_read_buff@buffer+1
 14197   0117DA  C50C  F508         	movff	Nrf24_readRegister@len,SPI_read_buff@bytes
 14198   0117DE  EC5D  F08B         	call	_SPI_read_buff	;wreg free
 14199   0117E2  82C0               	bsf	192,1,c	;volatile
 14200   0117E4                     l633:
 14201   0117E4  0012               	return		;funcret
 14202   0117E6                     __end_of_Nrf24_readRegister:
 14203                           	callstack 0
 14204                           
 14205 ;; *************** function _SPI_read_buff *****************
 14206 ;; Defined at:
 14207 ;;		line 44 in file "mirf.c"
 14208 ;; Parameters:    Size  Location     Type
 14209 ;;  buffer          2    5[COMRAM] PTR unsigned char 
 14210 ;;		 -> Nrf24_getRetransmitDelay@value(1), Nrf24_getPALevel@level(1), Nrf24_getCRCLength@AA(1), Nrf24_getCRCLength@confi
      +g(1), 
 14211 ;;		 -> Nrf24_getDataRate@dr(1), Nrf24_print_byte_register@buffer(1), Nrf24_print_address_register@buffer(5), Nrf24_setR
      +etransmitDelay@value(1), 
 14212 ;;		 -> Nrf24_SetSpeedDataRates@value(1), Nrf24_SetOutputRF_PWR@value(1), Nrf24_getStatus@rv(1), Nrf24_rxFifoEmpty@fifoS
      +tatus(1), 
 14213 ;;		 -> Nrf24_addRADDR@value(1), Nrf24_setTADDR@buffer(5), Nrf24_setRADDR@buffer(5), 
 14214 ;;  bytes           1    7[COMRAM] unsigned char 
 14215 ;; Auto vars:     Size  Location     Type
 14216 ;;  i               1    8[COMRAM] unsigned char 
 14217 ;; Return value:  Size  Location     Type
 14218 ;;                  1    wreg      void 
 14219 ;; Registers used:
 14220 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14221 ;; Tracked objects:
 14222 ;;		On entry : 0/0
 14223 ;;		On exit  : 0/0
 14224 ;;		Unchanged: 0/0
 14225 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14226 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14227 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14229 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14230 ;;Total ram usage:        4 bytes
 14231 ;; Hardware stack levels used: 1
 14232 ;; Hardware stack levels required when called: 4
 14233 ;; This function calls:
 14234 ;;		_SPI1_ByteExchange
 14235 ;; This function is called by:
 14236 ;;		_Nrf24_readRegister
 14237 ;;		_Nrf24_getData
 14238 ;; This function uses a non-reentrant model
 14239 ;;
 14240                           
 14241                           	psect	text42
 14242   0116BA                     __ptext42:
 14243                           	callstack 0
 14244   0116BA                     _SPI_read_buff:
 14245                           	callstack 119
 14246   0116BA  92C0               	bcf	192,1,c	;volatile
 14247   0116BC                     
 14248                           ;mirf.c: 46:     unsigned char i;;mirf.c: 47:     for (i = 0; i < bytes; i++) {
 14249   0116BC  6A09               	clrf	SPI_read_buff@i^(0+1280),c
 14250   0116BE  EF6C  F08B         	goto	l3951
 14251   0116C2                     l3945:
 14252                           
 14253                           ;mirf.c: 48:         *buffer = SPI1_ByteExchange(0xFF);
 14254   0116C2  0EFF               	movlw	255
 14255   0116C4  EC35  F08C         	call	_SPI1_ByteExchange
 14256   0116C8  C506  F4D9         	movff	SPI_read_buff@buffer,fsr2l
 14257   0116CC  C507  F4DA         	movff	SPI_read_buff@buffer+1,fsr2h
 14258   0116D0  6EDF               	movwf	indf2,c
 14259   0116D2                     
 14260                           ;mirf.c: 49:         buffer++;
 14261   0116D2  4A06               	infsnz	SPI_read_buff@buffer^(0+1280),f,c
 14262   0116D4  2A07               	incf	(SPI_read_buff@buffer+1)^(0+1280),f,c
 14263   0116D6                     
 14264                           ;mirf.c: 50:     }
 14265   0116D6  2A09               	incf	SPI_read_buff@i^(0+1280),f,c
 14266   0116D8                     l3951:
 14267   0116D8  5008               	movf	SPI_read_buff@bytes^(0+1280),w,c
 14268   0116DA  5C09               	subwf	SPI_read_buff@i^(0+1280),w,c
 14269   0116DC  A0D8               	btfss	status,0,c
 14270   0116DE  EF73  F08B         	goto	u3111
 14271   0116E2  EF75  F08B         	goto	u3110
 14272   0116E6                     u3111:
 14273   0116E6  EF61  F08B         	goto	l3945
 14274   0116EA                     u3110:
 14275   0116EA  82C0               	bsf	192,1,c	;volatile
 14276   0116EC  0012               	return		;funcret
 14277   0116EE                     __end_of_SPI_read_buff:
 14278                           	callstack 0
 14279                           
 14280 ;; *************** function _Nrf24_configRegister *****************
 14281 ;; Defined at:
 14282 ;;		line 198 in file "mirf.c"
 14283 ;; Parameters:    Size  Location     Type
 14284 ;;  reg             1    wreg     unsigned char 
 14285 ;;  value           1    5[COMRAM] unsigned char 
 14286 ;; Auto vars:     Size  Location     Type
 14287 ;;  reg             1    6[COMRAM] unsigned char 
 14288 ;; Return value:  Size  Location     Type
 14289 ;;                  1    wreg      void 
 14290 ;; Registers used:
 14291 ;;		wreg, status,2, status,0, cstack
 14292 ;; Tracked objects:
 14293 ;;		On entry : 0/0
 14294 ;;		On exit  : 0/0
 14295 ;;		Unchanged: 0/0
 14296 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14297 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14298 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14300 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14301 ;;Total ram usage:        2 bytes
 14302 ;; Hardware stack levels used: 1
 14303 ;; Hardware stack levels required when called: 4
 14304 ;; This function calls:
 14305 ;;		_SPI1_ByteExchange
 14306 ;; This function is called by:
 14307 ;;		_Nrf24_config
 14308 ;;		_Nrf24_powerUpRx
 14309 ;;		_Nrf24_powerUpTx
 14310 ;;		_Nrf24_SetSpeedDataRates
 14311 ;;		_Nrf24_setRetransmitDelay
 14312 ;;		_Nrf24_addRADDR
 14313 ;;		_Nrf24_getData
 14314 ;;		_Nrf24_powerDown
 14315 ;;		_Nrf24_SetOutputRF_PWR
 14316 ;; This function uses a non-reentrant model
 14317 ;;
 14318                           
 14319                           	psect	text43
 14320   0119CA                     __ptext43:
 14321                           	callstack 0
 14322   0119CA                     _Nrf24_configRegister:
 14323                           	callstack 119
 14324                           
 14325                           ;incstack = 0
 14326                           ;Nrf24_configRegister@reg stored from wreg
 14327   0119CA  6E07               	movwf	Nrf24_configRegister@reg^(0+1280),c
 14328   0119CC  92C0               	bcf	192,1,c	;volatile
 14329   0119CE                     
 14330                           ;mirf.c: 201:  SPI1_ByteExchange(0x20 | (0x1F & reg));
 14331   0119CE  5007               	movf	Nrf24_configRegister@reg^(0+1280),w,c
 14332   0119D0  0B1F               	andlw	31
 14333   0119D2  0920               	iorlw	32
 14334   0119D4  EC35  F08C         	call	_SPI1_ByteExchange
 14335                           
 14336                           ;mirf.c: 202:  SPI1_ByteExchange(value);
 14337   0119D8  5006               	movf	Nrf24_configRegister@value^(0+1280),w,c
 14338   0119DA  EC35  F08C         	call	_SPI1_ByteExchange
 14339   0119DE  82C0               	bsf	192,1,c	;volatile
 14340   0119E0  0012               	return		;funcret
 14341   0119E2                     __end_of_Nrf24_configRegister:
 14342                           	callstack 0
 14343                           
 14344 ;; *************** function _SPI1_ByteExchange *****************
 14345 ;; Defined at:
 14346 ;;		line 209 in file "mcc_generated_files/spi/src/spi1.c"
 14347 ;; Parameters:    Size  Location     Type
 14348 ;;  byteData        1    wreg     unsigned char 
 14349 ;; Auto vars:     Size  Location     Type
 14350 ;;  byteData        1    3[COMRAM] unsigned char 
 14351 ;;  returnValue     1    4[COMRAM] unsigned char 
 14352 ;; Return value:  Size  Location     Type
 14353 ;;                  1    wreg      unsigned char 
 14354 ;; Registers used:
 14355 ;;		wreg, status,2, status,0
 14356 ;; Tracked objects:
 14357 ;;		On entry : 0/0
 14358 ;;		On exit  : 0/0
 14359 ;;		Unchanged: 0/0
 14360 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14362 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14364 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14365 ;;Total ram usage:        2 bytes
 14366 ;; Hardware stack levels used: 1
 14367 ;; Hardware stack levels required when called: 3
 14368 ;; This function calls:
 14369 ;;		Nothing
 14370 ;; This function is called by:
 14371 ;;		_SPI_read_buff
 14372 ;;		_SPI_write_buff
 14373 ;;		_Nrf24_configRegister
 14374 ;;		_Nrf24_readRegister
 14375 ;;		_Nrf24_writeRegister
 14376 ;;		_Nrf24_send
 14377 ;;		_Nrf24_flushRx
 14378 ;;		_Nrf24_getData
 14379 ;; This function uses a non-reentrant model
 14380 ;;
 14381                           
 14382                           	psect	text44
 14383   01186A                     __ptext44:
 14384                           	callstack 0
 14385   01186A                     _SPI1_ByteExchange:
 14386                           	callstack 119
 14387                           
 14388                           ;incstack = 0
 14389                           ;SPI1_ByteExchange@byteData stored from wreg
 14390   01186A  6E04               	movwf	SPI1_ByteExchange@byteData^(0+1280),c
 14391   01186C                     
 14392                           ;mcc_generated_files/spi/src/spi1.c: 213:  SPI1STATUSbits.CLRBF = 1U;
 14393   01186C  0100               	movlb	0	; () banked
 14394   01186E  8587               	bsf	135,2,b	;volatile
 14395   011870                     
 14396                           ; BSR set to: 0
 14397                           ;mcc_generated_files/spi/src/spi1.c: 216:  SPI1CON2 = SPI1CON2 | 0x1 | 0x2;
 14398   011870  5186               	movf	134,w,b	;volatile
 14399   011872  0903               	iorlw	3
 14400   011874  6F86               	movwf	134,b	;volatile
 14401   011876                     
 14402                           ; BSR set to: 0
 14403                           ;mcc_generated_files/spi/src/spi1.c: 219:  SPI1TCNTH = 0U;
 14404   011876  6B83               	clrf	131,b	;volatile
 14405   011878                     
 14406                           ; BSR set to: 0
 14407                           ;mcc_generated_files/spi/src/spi1.c: 220:  SPI1TCNTL = 1U;
 14408   011878  0E01               	movlw	1
 14409   01187A  6F82               	movwf	130,b	;volatile
 14410   01187C                     
 14411                           ; BSR set to: 0
 14412                           ;mcc_generated_files/spi/src/spi1.c: 222:  SPI1TXB = byteData;
 14413   01187C  C504  F081         	movff	SPI1_ByteExchange@byteData,129	;volatile
 14414   011880                     l102:
 14415                           
 14416                           ;mcc_generated_files/spi/src/spi1.c: 224:  while(!PIR3bits.SPI1RXIF)
 14417   011880  A0B1               	btfss	177,0,c	;volatile
 14418   011882  EF45  F08C         	goto	u2991
 14419   011886  EF47  F08C         	goto	u2990
 14420   01188A                     u2991:
 14421   01188A  EF40  F08C         	goto	l102
 14422   01188E                     u2990:
 14423   01188E                     
 14424                           ;mcc_generated_files/spi/src/spi1.c: 228:  returnValue = SPI1RXB;
 14425   01188E  C080 F505          	movff	128,SPI1_ByteExchange@returnValue	;volatile
 14426   011892                     
 14427                           ;mcc_generated_files/spi/src/spi1.c: 229:  return returnValue;
 14428   011892  5005               	movf	SPI1_ByteExchange@returnValue^(0+1280),w,c
 14429   011894  0012               	return		;funcret
 14430   011896                     __end_of_SPI1_ByteExchange:
 14431                           	callstack 0
 14432                           
 14433 ;; *************** function _TMR0_Start *****************
 14434 ;; Defined at:
 14435 ;;		line 78 in file "mcc_generated_files/timer/src/tmr0.c"
 14436 ;; Parameters:    Size  Location     Type
 14437 ;;		None
 14438 ;; Auto vars:     Size  Location     Type
 14439 ;;		None
 14440 ;; Return value:  Size  Location     Type
 14441 ;;                  1    wreg      void 
 14442 ;; Registers used:
 14443 ;;		None
 14444 ;; Tracked objects:
 14445 ;;		On entry : 0/0
 14446 ;;		On exit  : 0/0
 14447 ;;		Unchanged: 0/0
 14448 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14453 ;;Total ram usage:        0 bytes
 14454 ;; Hardware stack levels used: 1
 14455 ;; Hardware stack levels required when called: 3
 14456 ;; This function calls:
 14457 ;;		Nothing
 14458 ;; This function is called by:
 14459 ;;		_main
 14460 ;; This function uses a non-reentrant model
 14461 ;;
 14462                           
 14463                           	psect	text45
 14464   011A7E                     __ptext45:
 14465                           	callstack 0
 14466   011A7E                     _TMR0_Start:
 14467                           	callstack 123
 14468   011A7E                     
 14469                           ;mcc_generated_files/timer/src/tmr0.c: 80:     T0CON0bits.T0EN = 1;
 14470   011A7E  0103               	movlb	3	; () banked
 14471   011A80  8F1A               	bsf	26,7,b	;volatile
 14472   011A82                     
 14473                           ; BSR set to: 3
 14474   011A82  0012               	return		;funcret
 14475   011A84                     __end_of_TMR0_Start:
 14476                           	callstack 0
 14477                           
 14478 ;; *************** function _SYSTEM_Initialize *****************
 14479 ;; Defined at:
 14480 ;;		line 38 in file "mcc_generated_files/system/src/system.c"
 14481 ;; Parameters:    Size  Location     Type
 14482 ;;		None
 14483 ;; Auto vars:     Size  Location     Type
 14484 ;;		None
 14485 ;; Return value:  Size  Location     Type
 14486 ;;                  1    wreg      void 
 14487 ;; Registers used:
 14488 ;;		wreg, status,2, status,0, cstack
 14489 ;; Tracked objects:
 14490 ;;		On entry : 0/0
 14491 ;;		On exit  : 0/0
 14492 ;;		Unchanged: 0/0
 14493 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14498 ;;Total ram usage:        0 bytes
 14499 ;; Hardware stack levels used: 1
 14500 ;; Hardware stack levels required when called: 5
 14501 ;; This function calls:
 14502 ;;		_CLOCK_Initialize
 14503 ;;		_INTERRUPT_Initialize
 14504 ;;		_PIN_MANAGER_Initialize
 14505 ;;		_SPI1_Initialize
 14506 ;;		_TMR0_Initialize
 14507 ;; This function is called by:
 14508 ;;		_main
 14509 ;; This function uses a non-reentrant model
 14510 ;;
 14511                           
 14512                           	psect	text46
 14513   011A10                     __ptext46:
 14514                           	callstack 0
 14515   011A10                     _SYSTEM_Initialize:
 14516                           	callstack 121
 14517   011A10                     
 14518                           ;mcc_generated_files/system/src/system.c: 40:     CLOCK_Initialize();
 14519   011A10  EC13  F08D         	call	_CLOCK_Initialize	;wreg free
 14520                           
 14521                           ;mcc_generated_files/system/src/system.c: 41:     PIN_MANAGER_Initialize();
 14522   011A14  ECA6  F088         	call	_PIN_MANAGER_Initialize	;wreg free
 14523                           
 14524                           ;mcc_generated_files/system/src/system.c: 42:     SPI1_Initialize();
 14525   011A18  ECF1  F08C         	call	_SPI1_Initialize	;wreg free
 14526   011A1C                     
 14527                           ;mcc_generated_files/system/src/system.c: 43:     TMR0_Initialize();
 14528   011A1C  EC4B  F08C         	call	_TMR0_Initialize	;wreg free
 14529   011A20                     
 14530                           ;mcc_generated_files/system/src/system.c: 44:     INTERRUPT_Initialize();
 14531   011A20  EC07  F08B         	call	_INTERRUPT_Initialize	;wreg free
 14532   011A24  0012               	return		;funcret
 14533   011A26                     __end_of_SYSTEM_Initialize:
 14534                           	callstack 0
 14535                           
 14536 ;; *************** function _TMR0_Initialize *****************
 14537 ;; Defined at:
 14538 ;;		line 53 in file "mcc_generated_files/timer/src/tmr0.c"
 14539 ;; Parameters:    Size  Location     Type
 14540 ;;		None
 14541 ;; Auto vars:     Size  Location     Type
 14542 ;;		None
 14543 ;; Return value:  Size  Location     Type
 14544 ;;                  1    wreg      void 
 14545 ;; Registers used:
 14546 ;;		wreg, status,2, status,0, cstack
 14547 ;; Tracked objects:
 14548 ;;		On entry : 0/0
 14549 ;;		On exit  : 0/0
 14550 ;;		Unchanged: 0/0
 14551 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14556 ;;Total ram usage:        0 bytes
 14557 ;; Hardware stack levels used: 1
 14558 ;; Hardware stack levels required when called: 4
 14559 ;; This function calls:
 14560 ;;		_TMR0_OverflowCallbackRegister
 14561 ;; This function is called by:
 14562 ;;		_SYSTEM_Initialize
 14563 ;; This function uses a non-reentrant model
 14564 ;;
 14565                           
 14566                           	psect	text47
 14567   011896                     __ptext47:
 14568                           	callstack 0
 14569   011896                     _TMR0_Initialize:
 14570                           	callstack 121
 14571   011896                     
 14572                           ;mcc_generated_files/timer/src/tmr0.c: 56:     TMR0H = 0xC2;
 14573   011896  0EC2               	movlw	194
 14574   011898  0103               	movlb	3	; () banked
 14575   01189A  6F19               	movwf	25,b	;volatile
 14576   01189C                     
 14577                           ; BSR set to: 3
 14578                           ;mcc_generated_files/timer/src/tmr0.c: 59:     TMR0L = 0x0;
 14579   01189C  6B18               	clrf	24,b	;volatile
 14580                           
 14581                           ;mcc_generated_files/timer/src/tmr0.c: 62:     T0CON1 = 0x7F;
 14582   01189E  0E7F               	movlw	127
 14583   0118A0  6F1B               	movwf	27,b	;volatile
 14584   0118A2                     
 14585                           ; BSR set to: 3
 14586                           ;mcc_generated_files/timer/src/tmr0.c: 66:     TMR0_OverflowCallbackRegister(TMR0_Defaul
      +                          tOverflowCallback);
 14587   0118A2  0E86               	movlw	low _TMR0_DefaultOverflowCallback
 14588   0118A4  6E04               	movwf	TMR0_OverflowCallbackRegister@CallbackHandler^(0+1280),c
 14589   0118A6  0E1A               	movlw	high _TMR0_DefaultOverflowCallback
 14590   0118A8  6E05               	movwf	(TMR0_OverflowCallbackRegister@CallbackHandler+1)^(0+1280),c
 14591   0118AA  0E01               	movlw	low (_TMR0_DefaultOverflowCallback shr (0+16))
 14592   0118AC  6E06               	movwf	(TMR0_OverflowCallbackRegister@CallbackHandler+2)^(0+1280),c
 14593   0118AE  EC1D  F08D         	call	_TMR0_OverflowCallbackRegister	;wreg free
 14594   0118B2                     
 14595                           ;mcc_generated_files/timer/src/tmr0.c: 69:     PIR3bits.TMR0IF = 0;
 14596   0118B2  9EB1               	bcf	177,7,c	;volatile
 14597   0118B4                     
 14598                           ;mcc_generated_files/timer/src/tmr0.c: 72:     PIE3bits.TMR0IE = 1;
 14599   0118B4  8EA1               	bsf	161,7,c	;volatile
 14600   0118B6                     
 14601                           ;mcc_generated_files/timer/src/tmr0.c: 75:     T0CON0 = 0x89;
 14602   0118B6  0E89               	movlw	137
 14603   0118B8  0103               	movlb	3	; () banked
 14604   0118BA  6F1A               	movwf	26,b	;volatile
 14605   0118BC                     
 14606                           ; BSR set to: 3
 14607   0118BC  0012               	return		;funcret
 14608   0118BE                     __end_of_TMR0_Initialize:
 14609                           	callstack 0
 14610                           
 14611 ;; *************** function _TMR0_OverflowCallbackRegister *****************
 14612 ;; Defined at:
 14613 ;;		line 122 in file "mcc_generated_files/timer/src/tmr0.c"
 14614 ;; Parameters:    Size  Location     Type
 14615 ;;  CallbackHand    3    3[COMRAM] PTR FTN()void 
 14616 ;;		 -> led_toggle(1), TMR0_DefaultOverflowCallback(1), 
 14617 ;; Auto vars:     Size  Location     Type
 14618 ;;		None
 14619 ;; Return value:  Size  Location     Type
 14620 ;;                  1    wreg      void 
 14621 ;; Registers used:
 14622 ;;		wreg, status,2, status,0
 14623 ;; Tracked objects:
 14624 ;;		On entry : 0/0
 14625 ;;		On exit  : 0/0
 14626 ;;		Unchanged: 0/0
 14627 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14628 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14631 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14632 ;;Total ram usage:        3 bytes
 14633 ;; Hardware stack levels used: 1
 14634 ;; Hardware stack levels required when called: 3
 14635 ;; This function calls:
 14636 ;;		Nothing
 14637 ;; This function is called by:
 14638 ;;		_TMR0_Initialize
 14639 ;;		_main
 14640 ;; This function uses a non-reentrant model
 14641 ;;
 14642                           
 14643                           	psect	text48
 14644   011A3A                     __ptext48:
 14645                           	callstack 0
 14646   011A3A                     _TMR0_OverflowCallbackRegister:
 14647                           	callstack 123
 14648   011A3A                     
 14649                           ;mcc_generated_files/timer/src/tmr0.c: 122: void TMR0_OverflowCallbackRegister(void (* C
      +                          allbackHandler)(void));mcc_generated_files/timer/src/tmr0.c: 123: {;mcc_generated_files/
      +                          timer/src/tmr0.c: 124:     TMR0_OverflowCallback = CallbackHandler;
 14650   011A3A  C504  F5EF         	movff	TMR0_OverflowCallbackRegister@CallbackHandler,_TMR0_OverflowCallback
 14651   011A3E  C505  F5F0         	movff	TMR0_OverflowCallbackRegister@CallbackHandler+1,_TMR0_OverflowCallback+1
 14652   011A42  C506  F5F1         	movff	TMR0_OverflowCallbackRegister@CallbackHandler+2,_TMR0_OverflowCallback+2
 14653   011A46  0012               	return		;funcret
 14654   011A48                     __end_of_TMR0_OverflowCallbackRegister:
 14655                           	callstack 0
 14656                           
 14657 ;; *************** function _SPI1_Initialize *****************
 14658 ;; Defined at:
 14659 ;;		line 69 in file "mcc_generated_files/spi/src/spi1.c"
 14660 ;; Parameters:    Size  Location     Type
 14661 ;;		None
 14662 ;; Auto vars:     Size  Location     Type
 14663 ;;		None
 14664 ;; Return value:  Size  Location     Type
 14665 ;;                  1    wreg      void 
 14666 ;; Registers used:
 14667 ;;		wreg, status,2
 14668 ;; Tracked objects:
 14669 ;;		On entry : 0/0
 14670 ;;		On exit  : 0/0
 14671 ;;		Unchanged: 0/0
 14672 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14677 ;;Total ram usage:        0 bytes
 14678 ;; Hardware stack levels used: 1
 14679 ;; Hardware stack levels required when called: 3
 14680 ;; This function calls:
 14681 ;;		Nothing
 14682 ;; This function is called by:
 14683 ;;		_SYSTEM_Initialize
 14684 ;; This function uses a non-reentrant model
 14685 ;;
 14686                           
 14687                           	psect	text49
 14688   0119E2                     __ptext49:
 14689                           	callstack 0
 14690   0119E2                     _SPI1_Initialize:
 14691                           	callstack 122
 14692   0119E2                     
 14693                           ;mcc_generated_files/spi/src/spi1.c: 72:     PIE3bits.SPI1IE = 0U;
 14694   0119E2  94A1               	bcf	161,2,c	;volatile
 14695                           
 14696                           ;mcc_generated_files/spi/src/spi1.c: 73:     PIE3bits.SPI1TXIE = 0U;
 14697   0119E4  92A1               	bcf	161,1,c	;volatile
 14698                           
 14699                           ;mcc_generated_files/spi/src/spi1.c: 74:     PIE3bits.SPI1RXIE = 0U;
 14700   0119E6  90A1               	bcf	161,0,c	;volatile
 14701                           
 14702                           ;mcc_generated_files/spi/src/spi1.c: 77:     SPI1CON0 = 0x0;
 14703   0119E8  0100               	movlb	0	; () banked
 14704   0119EA  6B84               	clrf	132,b	;volatile
 14705   0119EC                     
 14706                           ; BSR set to: 0
 14707                           ;mcc_generated_files/spi/src/spi1.c: 78:     SPI1CON1 = 0x4;
 14708   0119EC  0E04               	movlw	4
 14709   0119EE  6F85               	movwf	133,b	;volatile
 14710   0119F0                     
 14711                           ; BSR set to: 0
 14712                           ;mcc_generated_files/spi/src/spi1.c: 79:     SPI1CON2 = 0x0;
 14713   0119F0  6B86               	clrf	134,b	;volatile
 14714   0119F2                     
 14715                           ; BSR set to: 0
 14716                           ;mcc_generated_files/spi/src/spi1.c: 80:     SPI1BAUD = 0x0;
 14717   0119F2  6B89               	clrf	137,b	;volatile
 14718   0119F4                     
 14719                           ; BSR set to: 0
 14720                           ;mcc_generated_files/spi/src/spi1.c: 81:     SPI1CLK = 0x0;
 14721   0119F4  6B8C               	clrf	140,b	;volatile
 14722   0119F6                     
 14723                           ; BSR set to: 0
 14724                           ;mcc_generated_files/spi/src/spi1.c: 82:  SPI1STATUSbits.CLRBF = 1U;
 14725   0119F6  8587               	bsf	135,2,b	;volatile
 14726   0119F8                     
 14727                           ; BSR set to: 0
 14728   0119F8  0012               	return		;funcret
 14729   0119FA                     __end_of_SPI1_Initialize:
 14730                           	callstack 0
 14731                           
 14732 ;; *************** function _PIN_MANAGER_Initialize *****************
 14733 ;; Defined at:
 14734 ;;		line 38 in file "mcc_generated_files/system/src/pins.c"
 14735 ;; Parameters:    Size  Location     Type
 14736 ;;		None
 14737 ;; Auto vars:     Size  Location     Type
 14738 ;;		None
 14739 ;; Return value:  Size  Location     Type
 14740 ;;                  1    wreg      void 
 14741 ;; Registers used:
 14742 ;;		wreg, status,2
 14743 ;; Tracked objects:
 14744 ;;		On entry : 0/0
 14745 ;;		On exit  : 0/0
 14746 ;;		Unchanged: 0/0
 14747 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14751 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14752 ;;Total ram usage:        0 bytes
 14753 ;; Hardware stack levels used: 1
 14754 ;; Hardware stack levels required when called: 3
 14755 ;; This function calls:
 14756 ;;		Nothing
 14757 ;; This function is called by:
 14758 ;;		_SYSTEM_Initialize
 14759 ;; This function uses a non-reentrant model
 14760 ;;
 14761                           
 14762                           	psect	text50
 14763   01114C                     __ptext50:
 14764                           	callstack 0
 14765   01114C                     _PIN_MANAGER_Initialize:
 14766                           	callstack 122
 14767   01114C                     
 14768                           ;mcc_generated_files/system/src/pins.c: 43:     LATA = 0x0;
 14769   01114C  6ABE               	clrf	190,c	;volatile
 14770                           
 14771                           ;mcc_generated_files/system/src/pins.c: 44:     LATB = 0x0;
 14772   01114E  6ABF               	clrf	191,c	;volatile
 14773                           
 14774                           ;mcc_generated_files/system/src/pins.c: 45:     LATC = 0x0;
 14775   011150  6AC0               	clrf	192,c	;volatile
 14776                           
 14777                           ;mcc_generated_files/system/src/pins.c: 46:     LATD = 0x0;
 14778   011152  6AC1               	clrf	193,c	;volatile
 14779                           
 14780                           ;mcc_generated_files/system/src/pins.c: 47:     LATE = 0x0;
 14781   011154  6AC2               	clrf	194,c	;volatile
 14782                           
 14783                           ;mcc_generated_files/system/src/pins.c: 48:     LATF = 0x0;
 14784   011156  6AC3               	clrf	195,c	;volatile
 14785                           
 14786                           ;mcc_generated_files/system/src/pins.c: 52:     ODCONA = 0x0;
 14787   011158  0104               	movlb	4	; () banked
 14788   01115A  6B02               	clrf	2,b	;volatile
 14789                           
 14790                           ;mcc_generated_files/system/src/pins.c: 53:     ODCONB = 0x0;
 14791   01115C  6B0A               	clrf	10,b	;volatile
 14792                           
 14793                           ;mcc_generated_files/system/src/pins.c: 54:     ODCONC = 0x0;
 14794   01115E  6B12               	clrf	18,b	;volatile
 14795                           
 14796                           ;mcc_generated_files/system/src/pins.c: 55:     ODCOND = 0x0;
 14797   011160  6B1A               	clrf	26,b	;volatile
 14798                           
 14799                           ;mcc_generated_files/system/src/pins.c: 56:     ODCONE = 0x0;
 14800   011162  6B22               	clrf	34,b	;volatile
 14801                           
 14802                           ;mcc_generated_files/system/src/pins.c: 57:     ODCONF = 0x0;
 14803   011164  6B2A               	clrf	42,b	;volatile
 14804                           
 14805                           ;mcc_generated_files/system/src/pins.c: 62:     TRISA = 0xFF;
 14806   011166  68C6               	setf	198,c	;volatile
 14807                           
 14808                           ;mcc_generated_files/system/src/pins.c: 63:     TRISB = 0xFF;
 14809   011168  68C7               	setf	199,c	;volatile
 14810   01116A                     
 14811                           ; BSR set to: 4
 14812                           ;mcc_generated_files/system/src/pins.c: 64:     TRISC = 0xE9;
 14813   01116A  0EE9               	movlw	233
 14814   01116C  6EC8               	movwf	200,c	;volatile
 14815   01116E                     
 14816                           ; BSR set to: 4
 14817                           ;mcc_generated_files/system/src/pins.c: 65:     TRISD = 0xFF;
 14818   01116E  68C9               	setf	201,c	;volatile
 14819                           
 14820                           ;mcc_generated_files/system/src/pins.c: 66:     TRISE = 0xF;
 14821   011170  0E0F               	movlw	15
 14822   011172  6ECA               	movwf	202,c	;volatile
 14823                           
 14824                           ;mcc_generated_files/system/src/pins.c: 67:     TRISF = 0xF7;
 14825   011174  0EF7               	movlw	247
 14826   011176  6ECB               	movwf	203,c	;volatile
 14827   011178                     
 14828                           ; BSR set to: 4
 14829                           ;mcc_generated_files/system/src/pins.c: 72:     ANSELA = 0xFF;
 14830   011178  6900               	setf	0,b	;volatile
 14831   01117A                     
 14832                           ; BSR set to: 4
 14833                           ;mcc_generated_files/system/src/pins.c: 73:     ANSELB = 0xFF;
 14834   01117A  6908               	setf	8,b	;volatile
 14835                           
 14836                           ;mcc_generated_files/system/src/pins.c: 74:     ANSELC = 0x89;
 14837   01117C  0E89               	movlw	137
 14838   01117E  6F10               	movwf	16,b	;volatile
 14839   011180                     
 14840                           ; BSR set to: 4
 14841                           ;mcc_generated_files/system/src/pins.c: 75:     ANSELD = 0xFF;
 14842   011180  6918               	setf	24,b	;volatile
 14843                           
 14844                           ;mcc_generated_files/system/src/pins.c: 76:     ANSELE = 0x7;
 14845   011182  0E07               	movlw	7
 14846   011184  6F20               	movwf	32,b	;volatile
 14847                           
 14848                           ;mcc_generated_files/system/src/pins.c: 77:     ANSELF = 0xF7;
 14849   011186  0EF7               	movlw	247
 14850   011188  6F28               	movwf	40,b	;volatile
 14851   01118A                     
 14852                           ; BSR set to: 4
 14853                           ;mcc_generated_files/system/src/pins.c: 82:     WPUA = 0x0;
 14854   01118A  6B01               	clrf	1,b	;volatile
 14855   01118C                     
 14856                           ; BSR set to: 4
 14857                           ;mcc_generated_files/system/src/pins.c: 83:     WPUB = 0x0;
 14858   01118C  6B09               	clrf	9,b	;volatile
 14859   01118E                     
 14860                           ; BSR set to: 4
 14861                           ;mcc_generated_files/system/src/pins.c: 84:     WPUC = 0x0;
 14862   01118E  6B11               	clrf	17,b	;volatile
 14863   011190                     
 14864                           ; BSR set to: 4
 14865                           ;mcc_generated_files/system/src/pins.c: 85:     WPUD = 0x0;
 14866   011190  6B19               	clrf	25,b	;volatile
 14867   011192                     
 14868                           ; BSR set to: 4
 14869                           ;mcc_generated_files/system/src/pins.c: 86:     WPUE = 0x0;
 14870   011192  6B21               	clrf	33,b	;volatile
 14871   011194                     
 14872                           ; BSR set to: 4
 14873                           ;mcc_generated_files/system/src/pins.c: 87:     WPUF = 0x0;
 14874   011194  6B29               	clrf	41,b	;volatile
 14875   011196                     
 14876                           ; BSR set to: 4
 14877                           ;mcc_generated_files/system/src/pins.c: 93:     SLRCONA = 0xFF;
 14878   011196  6903               	setf	3,b	;volatile
 14879   011198                     
 14880                           ; BSR set to: 4
 14881                           ;mcc_generated_files/system/src/pins.c: 94:     SLRCONB = 0xFF;
 14882   011198  690B               	setf	11,b	;volatile
 14883   01119A                     
 14884                           ; BSR set to: 4
 14885                           ;mcc_generated_files/system/src/pins.c: 95:     SLRCONC = 0xFF;
 14886   01119A  6913               	setf	19,b	;volatile
 14887   01119C                     
 14888                           ; BSR set to: 4
 14889                           ;mcc_generated_files/system/src/pins.c: 96:     SLRCOND = 0xFF;
 14890   01119C  691B               	setf	27,b	;volatile
 14891                           
 14892                           ;mcc_generated_files/system/src/pins.c: 97:     SLRCONE = 0x7;
 14893   01119E  0E07               	movlw	7
 14894   0111A0  6F23               	movwf	35,b	;volatile
 14895   0111A2                     
 14896                           ; BSR set to: 4
 14897                           ;mcc_generated_files/system/src/pins.c: 98:     SLRCONF = 0xFF;
 14898   0111A2  692B               	setf	43,b	;volatile
 14899   0111A4                     
 14900                           ; BSR set to: 4
 14901                           ;mcc_generated_files/system/src/pins.c: 103:     INLVLA = 0xFF;
 14902   0111A4  6904               	setf	4,b	;volatile
 14903   0111A6                     
 14904                           ; BSR set to: 4
 14905                           ;mcc_generated_files/system/src/pins.c: 104:     INLVLB = 0xFF;
 14906   0111A6  690C               	setf	12,b	;volatile
 14907   0111A8                     
 14908                           ; BSR set to: 4
 14909                           ;mcc_generated_files/system/src/pins.c: 105:     INLVLC = 0xFF;
 14910   0111A8  6914               	setf	20,b	;volatile
 14911   0111AA                     
 14912                           ; BSR set to: 4
 14913                           ;mcc_generated_files/system/src/pins.c: 106:     INLVLD = 0xFF;
 14914   0111AA  691C               	setf	28,b	;volatile
 14915                           
 14916                           ;mcc_generated_files/system/src/pins.c: 107:     INLVLE = 0xF;
 14917   0111AC  0E0F               	movlw	15
 14918   0111AE  6F24               	movwf	36,b	;volatile
 14919   0111B0                     
 14920                           ; BSR set to: 4
 14921                           ;mcc_generated_files/system/src/pins.c: 108:     INLVLF = 0xFF;
 14922   0111B0  692C               	setf	44,b	;volatile
 14923   0111B2                     
 14924                           ; BSR set to: 4
 14925                           ;mcc_generated_files/system/src/pins.c: 113:     RB1I2C = 0x0;
 14926   0111B2  0102               	movlb	2	; () banked
 14927   0111B4  6B89               	clrf	137,b	;volatile
 14928   0111B6                     
 14929                           ; BSR set to: 2
 14930                           ;mcc_generated_files/system/src/pins.c: 114:     RB2I2C = 0x0;
 14931   0111B6  6B88               	clrf	136,b	;volatile
 14932   0111B8                     
 14933                           ; BSR set to: 2
 14934                           ;mcc_generated_files/system/src/pins.c: 115:     RC3I2C = 0x0;
 14935   0111B8  6B87               	clrf	135,b	;volatile
 14936   0111BA                     
 14937                           ; BSR set to: 2
 14938                           ;mcc_generated_files/system/src/pins.c: 116:     RC4I2C = 0x0;
 14939   0111BA  6B86               	clrf	134,b	;volatile
 14940                           
 14941                           ;mcc_generated_files/system/src/pins.c: 120:     SPI1SDIPPS = 0x15;
 14942   0111BC  0E15               	movlw	21
 14943   0111BE  6F6B               	movwf	107,b	;volatile
 14944                           
 14945                           ;mcc_generated_files/system/src/pins.c: 121:     RC4PPS = 0x32;
 14946   0111C0  0E32               	movlw	50
 14947   0111C2  6F15               	movwf	21,b	;volatile
 14948                           
 14949                           ;mcc_generated_files/system/src/pins.c: 122:     SPI1SCKPPS = 0x16;
 14950   0111C4  0E16               	movlw	22
 14951   0111C6  6F6A               	movwf	106,b	;volatile
 14952                           
 14953                           ;mcc_generated_files/system/src/pins.c: 123:     RC6PPS = 0x31;
 14954   0111C8  0E31               	movlw	49
 14955   0111CA  6F17               	movwf	23,b	;volatile
 14956   0111CC                     
 14957                           ; BSR set to: 2
 14958                           ;mcc_generated_files/system/src/pins.c: 128:     IOCAP = 0x0;
 14959   0111CC  0104               	movlb	4	; () banked
 14960   0111CE  6B05               	clrf	5,b	;volatile
 14961   0111D0                     
 14962                           ; BSR set to: 4
 14963                           ;mcc_generated_files/system/src/pins.c: 129:     IOCAN = 0x0;
 14964   0111D0  6B06               	clrf	6,b	;volatile
 14965   0111D2                     
 14966                           ; BSR set to: 4
 14967                           ;mcc_generated_files/system/src/pins.c: 130:     IOCAF = 0x0;
 14968   0111D2  6B07               	clrf	7,b	;volatile
 14969   0111D4                     
 14970                           ; BSR set to: 4
 14971                           ;mcc_generated_files/system/src/pins.c: 131:     IOCBP = 0x0;
 14972   0111D4  6B0D               	clrf	13,b	;volatile
 14973   0111D6                     
 14974                           ; BSR set to: 4
 14975                           ;mcc_generated_files/system/src/pins.c: 132:     IOCBN = 0x0;
 14976   0111D6  6B0E               	clrf	14,b	;volatile
 14977   0111D8                     
 14978                           ; BSR set to: 4
 14979                           ;mcc_generated_files/system/src/pins.c: 133:     IOCBF = 0x0;
 14980   0111D8  6B0F               	clrf	15,b	;volatile
 14981   0111DA                     
 14982                           ; BSR set to: 4
 14983                           ;mcc_generated_files/system/src/pins.c: 134:     IOCCP = 0x0;
 14984   0111DA  6B15               	clrf	21,b	;volatile
 14985   0111DC                     
 14986                           ; BSR set to: 4
 14987                           ;mcc_generated_files/system/src/pins.c: 135:     IOCCN = 0x0;
 14988   0111DC  6B16               	clrf	22,b	;volatile
 14989   0111DE                     
 14990                           ; BSR set to: 4
 14991                           ;mcc_generated_files/system/src/pins.c: 136:     IOCCF = 0x0;
 14992   0111DE  6B17               	clrf	23,b	;volatile
 14993   0111E0                     
 14994                           ; BSR set to: 4
 14995                           ;mcc_generated_files/system/src/pins.c: 137:     IOCEP = 0x0;
 14996   0111E0  6B25               	clrf	37,b	;volatile
 14997   0111E2                     
 14998                           ; BSR set to: 4
 14999                           ;mcc_generated_files/system/src/pins.c: 138:     IOCEN = 0x0;
 15000   0111E2  6B26               	clrf	38,b	;volatile
 15001   0111E4                     
 15002                           ; BSR set to: 4
 15003                           ;mcc_generated_files/system/src/pins.c: 139:     IOCEF = 0x0;
 15004   0111E4  6B27               	clrf	39,b	;volatile
 15005   0111E6                     
 15006                           ; BSR set to: 4
 15007   0111E6  0012               	return		;funcret
 15008   0111E8                     __end_of_PIN_MANAGER_Initialize:
 15009                           	callstack 0
 15010                           
 15011 ;; *************** function _INTERRUPT_Initialize *****************
 15012 ;; Defined at:
 15013 ;;		line 42 in file "mcc_generated_files/system/src/interrupt.c"
 15014 ;; Parameters:    Size  Location     Type
 15015 ;;		None
 15016 ;; Auto vars:     Size  Location     Type
 15017 ;;		None
 15018 ;; Return value:  Size  Location     Type
 15019 ;;                  1    wreg      void 
 15020 ;; Registers used:
 15021 ;;		wreg, status,2, status,0, cstack
 15022 ;; Tracked objects:
 15023 ;;		On entry : 0/0
 15024 ;;		On exit  : 0/0
 15025 ;;		Unchanged: 0/0
 15026 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 15027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15031 ;;Total ram usage:        0 bytes
 15032 ;; Hardware stack levels used: 1
 15033 ;; Hardware stack levels required when called: 4
 15034 ;; This function calls:
 15035 ;;		_INT0_SetInterruptHandler
 15036 ;;		_INT1_SetInterruptHandler
 15037 ;;		_INT2_SetInterruptHandler
 15038 ;; This function is called by:
 15039 ;;		_SYSTEM_Initialize
 15040 ;; This function uses a non-reentrant model
 15041 ;;
 15042                           
 15043                           	psect	text51
 15044   01160E                     __ptext51:
 15045                           	callstack 0
 15046   01160E                     _INTERRUPT_Initialize:
 15047                           	callstack 121
 15048   01160E                     
 15049                           ;mcc_generated_files/system/src/interrupt.c: 45:     INTCON0bits.IPEN = 0;
 15050   01160E  9AD6               	bcf	214,5,c	;volatile
 15051                           
 15052                           ;mcc_generated_files/system/src/interrupt.c: 49:     (PIR1bits.INT0IF = 0);
 15053   011610  90AF               	bcf	175,0,c	;volatile
 15054                           
 15055                           ;mcc_generated_files/system/src/interrupt.c: 50:     (INTCON0bits.INT0EDG = 1);
 15056   011612  80D6               	bsf	214,0,c	;volatile
 15057   011614                     
 15058                           ;mcc_generated_files/system/src/interrupt.c: 52:     INT0_SetInterruptHandler(INT0_Defau
      +                          ltInterruptHandler);
 15059   011614  0E00               	movlw	0
 15060   011616  6E04               	movwf	INT0_SetInterruptHandler@InterruptHandler^(0+1280),c
 15061   011618  0E00               	movlw	0
 15062   01161A  6E05               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
 15063   01161C  0E00               	movlw	0
 15064   01161E  6E06               	movwf	(INT0_SetInterruptHandler@InterruptHandler+2)^(0+1280),c
 15065   011620  EC32  F08D         	call	_INT0_SetInterruptHandler	;wreg free
 15066   011624                     
 15067                           ;mcc_generated_files/system/src/interrupt.c: 57:     (PIR6bits.INT1IF = 0);
 15068   011624  90B4               	bcf	180,0,c	;volatile
 15069   011626                     
 15070                           ;mcc_generated_files/system/src/interrupt.c: 58:     (INTCON0bits.INT1EDG = 1);
 15071   011626  82D6               	bsf	214,1,c	;volatile
 15072                           
 15073                           ;mcc_generated_files/system/src/interrupt.c: 60:     INT1_SetInterruptHandler(INT1_Defau
      +                          ltInterruptHandler);
 15074   011628  0E00               	movlw	0
 15075   01162A  6E04               	movwf	INT1_SetInterruptHandler@InterruptHandler^(0+1280),c
 15076   01162C  0E00               	movlw	0
 15077   01162E  6E05               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
 15078   011630  0E00               	movlw	0
 15079   011632  6E06               	movwf	(INT1_SetInterruptHandler@InterruptHandler+2)^(0+1280),c
 15080   011634  EC2B  F08D         	call	_INT1_SetInterruptHandler	;wreg free
 15081   011638                     
 15082                           ;mcc_generated_files/system/src/interrupt.c: 65:     (PIR10bits.INT2IF = 0);
 15083   011638  90B8               	bcf	184,0,c	;volatile
 15084   01163A                     
 15085                           ;mcc_generated_files/system/src/interrupt.c: 66:     (INTCON0bits.INT2EDG = 1);
 15086   01163A  84D6               	bsf	214,2,c	;volatile
 15087                           
 15088                           ;mcc_generated_files/system/src/interrupt.c: 68:     INT2_SetInterruptHandler(INT2_Defau
      +                          ltInterruptHandler);
 15089   01163C  0E00               	movlw	0
 15090   01163E  6E04               	movwf	INT2_SetInterruptHandler@InterruptHandler^(0+1280),c
 15091   011640  0E00               	movlw	0
 15092   011642  6E05               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
 15093   011644  0E00               	movlw	0
 15094   011646  6E06               	movwf	(INT2_SetInterruptHandler@InterruptHandler+2)^(0+1280),c
 15095   011648  EC24  F08D         	call	_INT2_SetInterruptHandler	;wreg free
 15096   01164C  0012               	return		;funcret
 15097   01164E                     __end_of_INTERRUPT_Initialize:
 15098                           	callstack 0
 15099                           
 15100 ;; *************** function _INT2_SetInterruptHandler *****************
 15101 ;; Defined at:
 15102 ;;		line 163 in file "mcc_generated_files/system/src/interrupt.c"
 15103 ;; Parameters:    Size  Location     Type
 15104 ;;  InterruptHan    3    3[COMRAM] PTR FTN()void 
 15105 ;;		 -> INT2_DefaultInterruptHandler(1), 
 15106 ;; Auto vars:     Size  Location     Type
 15107 ;;		None
 15108 ;; Return value:  Size  Location     Type
 15109 ;;                  1    wreg      void 
 15110 ;; Registers used:
 15111 ;;		wreg, status,2, status,0
 15112 ;; Tracked objects:
 15113 ;;		On entry : 0/0
 15114 ;;		On exit  : 0/0
 15115 ;;		Unchanged: 0/0
 15116 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 15117 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15120 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15121 ;;Total ram usage:        3 bytes
 15122 ;; Hardware stack levels used: 1
 15123 ;; Hardware stack levels required when called: 3
 15124 ;; This function calls:
 15125 ;;		Nothing
 15126 ;; This function is called by:
 15127 ;;		_INTERRUPT_Initialize
 15128 ;; This function uses a non-reentrant model
 15129 ;;
 15130                           
 15131                           	psect	text52
 15132   011A48                     __ptext52:
 15133                           	callstack 0
 15134   011A48                     _INT2_SetInterruptHandler:
 15135                           	callstack 121
 15136   011A48                     
 15137                           ;mcc_generated_files/system/src/interrupt.c: 164:     INT2_InterruptHandler = InterruptH
      +                          andler;
 15138   011A48  C504  F5F2         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
 15139   011A4C  C505  F5F3         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
 15140   011A50  C506  F5F4         	movff	INT2_SetInterruptHandler@InterruptHandler+2,_INT2_InterruptHandler+2
 15141   011A54  0012               	return		;funcret
 15142   011A56                     __end_of_INT2_SetInterruptHandler:
 15143                           	callstack 0
 15144                           
 15145 ;; *************** function _INT1_SetInterruptHandler *****************
 15146 ;; Defined at:
 15147 ;;		line 137 in file "mcc_generated_files/system/src/interrupt.c"
 15148 ;; Parameters:    Size  Location     Type
 15149 ;;  InterruptHan    3    3[COMRAM] PTR FTN()void 
 15150 ;;		 -> INT1_DefaultInterruptHandler(1), 
 15151 ;; Auto vars:     Size  Location     Type
 15152 ;;		None
 15153 ;; Return value:  Size  Location     Type
 15154 ;;                  1    wreg      void 
 15155 ;; Registers used:
 15156 ;;		wreg, status,2, status,0
 15157 ;; Tracked objects:
 15158 ;;		On entry : 0/0
 15159 ;;		On exit  : 0/0
 15160 ;;		Unchanged: 0/0
 15161 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 15162 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15165 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15166 ;;Total ram usage:        3 bytes
 15167 ;; Hardware stack levels used: 1
 15168 ;; Hardware stack levels required when called: 3
 15169 ;; This function calls:
 15170 ;;		Nothing
 15171 ;; This function is called by:
 15172 ;;		_INTERRUPT_Initialize
 15173 ;; This function uses a non-reentrant model
 15174 ;;
 15175                           
 15176                           	psect	text53
 15177   011A56                     __ptext53:
 15178                           	callstack 0
 15179   011A56                     _INT1_SetInterruptHandler:
 15180                           	callstack 121
 15181   011A56                     
 15182                           ;mcc_generated_files/system/src/interrupt.c: 138:     INT1_InterruptHandler = InterruptH
      +                          andler;
 15183   011A56  C504  F5F5         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
 15184   011A5A  C505  F5F6         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
 15185   011A5E  C506  F5F7         	movff	INT1_SetInterruptHandler@InterruptHandler+2,_INT1_InterruptHandler+2
 15186   011A62  0012               	return		;funcret
 15187   011A64                     __end_of_INT1_SetInterruptHandler:
 15188                           	callstack 0
 15189                           
 15190 ;; *************** function _INT0_SetInterruptHandler *****************
 15191 ;; Defined at:
 15192 ;;		line 111 in file "mcc_generated_files/system/src/interrupt.c"
 15193 ;; Parameters:    Size  Location     Type
 15194 ;;  InterruptHan    3    3[COMRAM] PTR FTN()void 
 15195 ;;		 -> INT0_DefaultInterruptHandler(1), 
 15196 ;; Auto vars:     Size  Location     Type
 15197 ;;		None
 15198 ;; Return value:  Size  Location     Type
 15199 ;;                  1    wreg      void 
 15200 ;; Registers used:
 15201 ;;		wreg, status,2, status,0
 15202 ;; Tracked objects:
 15203 ;;		On entry : 0/0
 15204 ;;		On exit  : 0/0
 15205 ;;		Unchanged: 0/0
 15206 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 15207 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15210 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15211 ;;Total ram usage:        3 bytes
 15212 ;; Hardware stack levels used: 1
 15213 ;; Hardware stack levels required when called: 3
 15214 ;; This function calls:
 15215 ;;		Nothing
 15216 ;; This function is called by:
 15217 ;;		_INTERRUPT_Initialize
 15218 ;; This function uses a non-reentrant model
 15219 ;;
 15220                           
 15221                           	psect	text54
 15222   011A64                     __ptext54:
 15223                           	callstack 0
 15224   011A64                     _INT0_SetInterruptHandler:
 15225                           	callstack 121
 15226   011A64                     
 15227                           ;mcc_generated_files/system/src/interrupt.c: 112:     INT0_InterruptHandler = InterruptH
      +                          andler;
 15228   011A64  C504  F5F8         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
 15229   011A68  C505  F5F9         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
 15230   011A6C  C506  F5FA         	movff	INT0_SetInterruptHandler@InterruptHandler+2,_INT0_InterruptHandler+2
 15231   011A70  0012               	return		;funcret
 15232   011A72                     __end_of_INT0_SetInterruptHandler:
 15233                           	callstack 0
 15234                           
 15235 ;; *************** function _CLOCK_Initialize *****************
 15236 ;; Defined at:
 15237 ;;		line 39 in file "mcc_generated_files/system/src/clock.c"
 15238 ;; Parameters:    Size  Location     Type
 15239 ;;		None
 15240 ;; Auto vars:     Size  Location     Type
 15241 ;;		None
 15242 ;; Return value:  Size  Location     Type
 15243 ;;                  1    wreg      void 
 15244 ;; Registers used:
 15245 ;;		wreg, status,2
 15246 ;; Tracked objects:
 15247 ;;		On entry : 0/0
 15248 ;;		On exit  : 0/0
 15249 ;;		Unchanged: 0/0
 15250 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 15251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15255 ;;Total ram usage:        0 bytes
 15256 ;; Hardware stack levels used: 1
 15257 ;; Hardware stack levels required when called: 3
 15258 ;; This function calls:
 15259 ;;		Nothing
 15260 ;; This function is called by:
 15261 ;;		_SYSTEM_Initialize
 15262 ;; This function uses a non-reentrant model
 15263 ;;
 15264                           
 15265                           	psect	text55
 15266   011A26                     __ptext55:
 15267                           	callstack 0
 15268   011A26                     _CLOCK_Initialize:
 15269                           	callstack 122
 15270   011A26                     
 15271                           ;mcc_generated_files/system/src/clock.c: 42:     OSCCON1 = (0 << 0x0)
 15272   011A26  0E60               	movlw	96
 15273   011A28  0100               	movlb	0	; () banked
 15274   011A2A  6FAD               	movwf	173,b	;volatile
 15275   011A2C                     
 15276                           ; BSR set to: 0
 15277                           ;mcc_generated_files/system/src/clock.c: 44:     OSCCON3 = (0 << 0x6)
 15278   011A2C  6BAF               	clrf	175,b	;volatile
 15279   011A2E                     
 15280                           ; BSR set to: 0
 15281                           ;mcc_generated_files/system/src/clock.c: 46:     OSCEN = (0 << 0x7)
 15282   011A2E  6BB3               	clrf	179,b	;volatile
 15283                           
 15284                           ;mcc_generated_files/system/src/clock.c: 53:     OSCFRQ = (8 << 0x0);
 15285   011A30  0E08               	movlw	8
 15286   011A32  6FB1               	movwf	177,b	;volatile
 15287   011A34                     
 15288                           ; BSR set to: 0
 15289                           ;mcc_generated_files/system/src/clock.c: 54:     OSCTUNE = (0 << 0x0);
 15290   011A34  6BB0               	clrf	176,b	;volatile
 15291   011A36                     
 15292                           ; BSR set to: 0
 15293                           ;mcc_generated_files/system/src/clock.c: 55:     ACTCON = (0 << 0x7)
 15294   011A36  6BAC               	clrf	172,b	;volatile
 15295   011A38                     
 15296                           ; BSR set to: 0
 15297   011A38  0012               	return		;funcret
 15298   011A3A                     __end_of_CLOCK_Initialize:
 15299                           	callstack 0
 15300                           
 15301 ;; *************** function _INTERRUPT_InterruptManager *****************
 15302 ;; Defined at:
 15303 ;;		line 80 in file "mcc_generated_files/system/src/interrupt.c"
 15304 ;; Parameters:    Size  Location     Type
 15305 ;;		None
 15306 ;; Auto vars:     Size  Location     Type
 15307 ;;		None
 15308 ;; Return value:  Size  Location     Type
 15309 ;;                  1    wreg      void 
 15310 ;; Registers used:
 15311 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 15312 ;; Tracked objects:
 15313 ;;		On entry : 0/0
 15314 ;;		On exit  : 0/0
 15315 ;;		Unchanged: 0/0
 15316 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 15317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15319 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15320 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15321 ;;Total ram usage:        2 bytes
 15322 ;; Hardware stack levels used: 1
 15323 ;; Hardware stack levels required when called: 2
 15324 ;; This function calls:
 15325 ;;		_TMR0_OverflowISR
 15326 ;; This function is called by:
 15327 ;;		Interrupt level 2
 15328 ;; This function uses a non-reentrant model
 15329 ;;
 15330                           
 15331                           	psect	text56
 15332   011754                     __ptext56:
 15333                           	callstack 0
 15334   011754                     _INTERRUPT_InterruptManager:
 15335                           	callstack 113
 15336                           
 15337                           ; BSR set to: 0
 15338                           ;incstack = 0
 15339   011754  C4FA F502          	movff	pclath,??_INTERRUPT_InterruptManager
 15340   011758  C4FB F503          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 15341   01175C                     
 15342                           ;mcc_generated_files/system/src/interrupt.c: 83:     if(PIE3bits.TMR0IE == 1 && PIR3bits
      +                          .TMR0IF == 1)
 15343   01175C  AEA1               	btfss	161,7,c	;volatile
 15344   01175E  EFB3  F08B         	goto	i2u232_41
 15345   011762  EFB5  F08B         	goto	i2u232_40
 15346   011766                     i2u232_41:
 15347   011766  EFBE  F08B         	goto	i2l314
 15348   01176A                     i2u232_40:
 15349   01176A  AEB1               	btfss	177,7,c	;volatile
 15350   01176C  EFBA  F08B         	goto	i2u233_41
 15351   011770  EFBC  F08B         	goto	i2u233_40
 15352   011774                     i2u233_41:
 15353   011774  EFBE  F08B         	goto	i2l314
 15354   011778                     i2u233_40:
 15355   011778                     
 15356                           ;mcc_generated_files/system/src/interrupt.c: 84:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 85:         TMR0_OverflowISR();
 15357   011778  EC77  F08B         	call	_TMR0_OverflowISR	;wreg free
 15358   01177C                     i2l314:
 15359   01177C  C503  F4FB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 15360   011780  C502  F4FA         	movff	??_INTERRUPT_InterruptManager,pclath
 15361   011784  0011               	retfie		f
 15362   011786                     __end_of_INTERRUPT_InterruptManager:
 15363                           	callstack 0
 15364                           
 15365 ;; *************** function _TMR0_OverflowISR *****************
 15366 ;; Defined at:
 15367 ;;		line 110 in file "mcc_generated_files/timer/src/tmr0.c"
 15368 ;; Parameters:    Size  Location     Type
 15369 ;;		None
 15370 ;; Auto vars:     Size  Location     Type
 15371 ;;		None
 15372 ;; Return value:  Size  Location     Type
 15373 ;;                  1    wreg      void 
 15374 ;; Registers used:
 15375 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 15376 ;; Tracked objects:
 15377 ;;		On entry : 0/0
 15378 ;;		On exit  : 0/0
 15379 ;;		Unchanged: 0/0
 15380 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 15381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15385 ;;Total ram usage:        0 bytes
 15386 ;; Hardware stack levels used: 1
 15387 ;; Hardware stack levels required when called: 1
 15388 ;; This function calls:
 15389 ;;		NULL
 15390 ;;		_TMR0_DefaultOverflowCallback
 15391 ;;		_led_toggle
 15392 ;; This function is called by:
 15393 ;;		_INTERRUPT_InterruptManager
 15394 ;; This function uses a non-reentrant model
 15395 ;;
 15396                           
 15397                           	psect	text57
 15398   0116EE                     __ptext57:
 15399                           	callstack 0
 15400   0116EE                     _TMR0_OverflowISR:
 15401                           	callstack 113
 15402   0116EE                     
 15403                           ;mcc_generated_files/timer/src/tmr0.c: 113:     PIR3bits.TMR0IF = 0;
 15404   0116EE  9EB1               	bcf	177,7,c	;volatile
 15405   0116F0                     
 15406                           ;mcc_generated_files/timer/src/tmr0.c: 116:     if(TMR0_OverflowCallback)
 15407   0116F0  0105               	movlb	5	; () banked
 15408   0116F2  51EF               	movf	_TMR0_OverflowCallback& (0+255),w,b
 15409   0116F4  11F0               	iorwf	(_TMR0_OverflowCallback+1)& (0+255),w,b
 15410   0116F6  11F1               	iorwf	(_TMR0_OverflowCallback+2)& (0+255),w,b
 15411   0116F8  B4D8               	btfsc	status,2,c
 15412   0116FA  EF81  F08B         	goto	i2u228_41
 15413   0116FE  EF83  F08B         	goto	i2u228_40
 15414   011702                     i2u228_41:
 15415   011702  EF90  F08B         	goto	i2l435
 15416   011706                     i2u228_40:
 15417   011706                     
 15418                           ; BSR set to: 5
 15419                           ;mcc_generated_files/timer/src/tmr0.c: 117:     {;mcc_generated_files/timer/src/tmr0.c: 
      +                          118:         TMR0_OverflowCallback();
 15420   011706  D802               	call	i2u229_48
 15421   011708  EF90  F08B         	goto	i2u229_49
 15422   01170C                     i2u229_48:
 15423   01170C  0005               	push	
 15424   01170E  6EFA               	movwf	pclath,c
 15425   011710  51EF               	movf	_TMR0_OverflowCallback& (0+255),w,b
 15426   011712  6EFD               	movwf	tosl,c
 15427   011714  51F0               	movf	(_TMR0_OverflowCallback+1)& (0+255),w,b
 15428   011716  6EFE               	movwf	tosh,c
 15429   011718  51F1               	movf	(_TMR0_OverflowCallback+2)& (0+255),w,b
 15430   01171A  6EFF               	movwf	tosu,c
 15431   01171C  50FA               	movf	pclath,w,c
 15432   01171E  0012               	return		;indir
 15433   011720                     i2u229_49:
 15434   011720                     i2l435:
 15435   011720  0012               	return		;funcret
 15436   011722                     __end_of_TMR0_OverflowISR:
 15437                           	callstack 0
 15438                           
 15439 ;; *************** function _TMR0_DefaultOverflowCallback *****************
 15440 ;; Defined at:
 15441 ;;		line 127 in file "mcc_generated_files/timer/src/tmr0.c"
 15442 ;; Parameters:    Size  Location     Type
 15443 ;;		None
 15444 ;; Auto vars:     Size  Location     Type
 15445 ;;		None
 15446 ;; Return value:  Size  Location     Type
 15447 ;;                  1    wreg      void 
 15448 ;; Registers used:
 15449 ;;		None
 15450 ;; Tracked objects:
 15451 ;;		On entry : 0/0
 15452 ;;		On exit  : 0/0
 15453 ;;		Unchanged: 0/0
 15454 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 15455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15459 ;;Total ram usage:        0 bytes
 15460 ;; Hardware stack levels used: 1
 15461 ;; This function calls:
 15462 ;;		Nothing
 15463 ;; This function is called by:
 15464 ;;		_TMR0_Initialize
 15465 ;;		_TMR0_OverflowISR
 15466 ;; This function uses a non-reentrant model
 15467 ;;
 15468                           
 15469                           	psect	text58
 15470   011A86                     __ptext58:
 15471                           	callstack 0
 15472   011A86                     _TMR0_DefaultOverflowCallback:
 15473                           	callstack 113
 15474   011A86  0012               	return		;funcret
 15475   011A88                     __end_of_TMR0_DefaultOverflowCallback:
 15476                           	callstack 0
 15477                           
 15478 ;; *************** function _led_toggle *****************
 15479 ;; Defined at:
 15480 ;;		line 18 in file "main.c"
 15481 ;; Parameters:    Size  Location     Type
 15482 ;;		None
 15483 ;; Auto vars:     Size  Location     Type
 15484 ;;		None
 15485 ;; Return value:  Size  Location     Type
 15486 ;;                  1    wreg      void 
 15487 ;; Registers used:
 15488 ;;		wreg, status,2, status,0
 15489 ;; Tracked objects:
 15490 ;;		On entry : 0/0
 15491 ;;		On exit  : 0/0
 15492 ;;		Unchanged: 0/0
 15493 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 15494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15496 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15497 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15498 ;;Total ram usage:        1 bytes
 15499 ;; Hardware stack levels used: 1
 15500 ;; This function calls:
 15501 ;;		Nothing
 15502 ;; This function is called by:
 15503 ;;		_main
 15504 ;;		_TMR0_OverflowISR
 15505 ;; This function uses a non-reentrant model
 15506 ;;
 15507                           
 15508                           	psect	text59
 15509   0118BE                     __ptext59:
 15510                           	callstack 0
 15511   0118BE                     _led_toggle:
 15512                           	callstack 113
 15513   0118BE  B6C3               	btfsc	195,3,c	;volatile
 15514   0118C0  EF64  F08C         	goto	i2u219_41
 15515   0118C4  EF67  F08C         	goto	i2u219_40
 15516   0118C8                     i2u219_41:
 15517   0118C8  0E01               	movlw	1
 15518   0118CA  EF68  F08C         	goto	i2u219_46
 15519   0118CE                     i2u219_40:
 15520   0118CE  0E00               	movlw	0
 15521   0118D0                     i2u219_46:
 15522   0118D0  0AFF               	xorlw	255
 15523   0118D2  6E01               	movwf	??_led_toggle^(0+1280),c
 15524   0118D4  4601               	rlncf	??_led_toggle^(0+1280),f,c
 15525   0118D6  4601               	rlncf	??_led_toggle^(0+1280),f,c
 15526   0118D8  4601               	rlncf	??_led_toggle^(0+1280),f,c
 15527   0118DA  50C3               	movf	195,w,c	;volatile
 15528   0118DC  1801               	xorwf	??_led_toggle^(0+1280),w,c
 15529   0118DE  0BF7               	andlw	-9
 15530   0118E0  1801               	xorwf	??_led_toggle^(0+1280),w,c
 15531   0118E2  6EC3               	movwf	195,c	;volatile
 15532   0118E4  0012               	return		;funcret
 15533   0118E6                     __end_of_led_toggle:
 15534                           	callstack 0
 15535                           
 15536                           ;
 15537                           ; H/W Interrupt Vector Table @ 0x8
 15538                           ;
 15539                           
 15540                           	psect	ivt0x8
 15541   000008                     __pivt0x8:
 15542                           	callstack 0
 15543   000008                     ivt0x8_base:
 15544                           	callstack 0
 15545                           
 15546                           ; high-priority vector
 15547   000008  EFAA  F08B         	goto	_INTERRUPT_InterruptManager
 15548   000018                     	org	16
 15549                           
 15550                           ; low-priority vector
 15551   000018  00FF               	reset	
 15552                           
 15553                           	psect	rparam
 15554   000001                     ___rparam_used  equ	1
 15555   000000                     ___param_bank   equ	0
 15556   000000                     __Lparam        equ	__Lrparam
 15557   000000                     __Hparam        equ	__Hrparam
 15558                           
 15559                           	psect	idloc
 15560                           
 15561                           ;Config register IDLOC0 @ 0x200000
 15562                           ;	unspecified, using default values
 15563   200000                     	org	2097152
 15564   200000  FFFF               	dw	65535
 15565                           
 15566                           ;Config register IDLOC1 @ 0x200002
 15567                           ;	unspecified, using default values
 15568   200002                     	org	2097154
 15569   200002  FFFF               	dw	65535
 15570                           
 15571                           ;Config register IDLOC2 @ 0x200004
 15572                           ;	unspecified, using default values
 15573   200004                     	org	2097156
 15574   200004  FFFF               	dw	65535
 15575                           
 15576                           ;Config register IDLOC3 @ 0x200006
 15577                           ;	unspecified, using default values
 15578   200006                     	org	2097158
 15579   200006  FFFF               	dw	65535
 15580                           
 15581                           ;Config register IDLOC4 @ 0x200008
 15582                           ;	unspecified, using default values
 15583   200008                     	org	2097160
 15584   200008  FFFF               	dw	65535
 15585                           
 15586                           ;Config register IDLOC5 @ 0x20000A
 15587                           ;	unspecified, using default values
 15588   20000A                     	org	2097162
 15589   20000A  FFFF               	dw	65535
 15590                           
 15591                           ;Config register IDLOC6 @ 0x20000C
 15592                           ;	unspecified, using default values
 15593   20000C                     	org	2097164
 15594   20000C  FFFF               	dw	65535
 15595                           
 15596                           ;Config register IDLOC7 @ 0x20000E
 15597                           ;	unspecified, using default values
 15598   20000E                     	org	2097166
 15599   20000E  FFFF               	dw	65535
 15600                           
 15601                           ;Config register IDLOC8 @ 0x200010
 15602                           ;	unspecified, using default values
 15603   200010                     	org	2097168
 15604   200010  FFFF               	dw	65535
 15605                           
 15606                           ;Config register IDLOC9 @ 0x200012
 15607                           ;	unspecified, using default values
 15608   200012                     	org	2097170
 15609   200012  FFFF               	dw	65535
 15610                           
 15611                           ;Config register IDLOC10 @ 0x200014
 15612                           ;	unspecified, using default values
 15613   200014                     	org	2097172
 15614   200014  FFFF               	dw	65535
 15615                           
 15616                           ;Config register IDLOC11 @ 0x200016
 15617                           ;	unspecified, using default values
 15618   200016                     	org	2097174
 15619   200016  FFFF               	dw	65535
 15620                           
 15621                           ;Config register IDLOC12 @ 0x200018
 15622                           ;	unspecified, using default values
 15623   200018                     	org	2097176
 15624   200018  FFFF               	dw	65535
 15625                           
 15626                           ;Config register IDLOC13 @ 0x20001A
 15627                           ;	unspecified, using default values
 15628   20001A                     	org	2097178
 15629   20001A  FFFF               	dw	65535
 15630                           
 15631                           ;Config register IDLOC14 @ 0x20001C
 15632                           ;	unspecified, using default values
 15633   20001C                     	org	2097180
 15634   20001C  FFFF               	dw	65535
 15635                           
 15636                           ;Config register IDLOC15 @ 0x20001E
 15637                           ;	unspecified, using default values
 15638   20001E                     	org	2097182
 15639   20001E  FFFF               	dw	65535
 15640                           
 15641                           ;Config register IDLOC16 @ 0x200020
 15642                           ;	unspecified, using default values
 15643   200020                     	org	2097184
 15644   200020  FFFF               	dw	65535
 15645                           
 15646                           ;Config register IDLOC17 @ 0x200022
 15647                           ;	unspecified, using default values
 15648   200022                     	org	2097186
 15649   200022  FFFF               	dw	65535
 15650                           
 15651                           ;Config register IDLOC18 @ 0x200024
 15652                           ;	unspecified, using default values
 15653   200024                     	org	2097188
 15654   200024  FFFF               	dw	65535
 15655                           
 15656                           ;Config register IDLOC19 @ 0x200026
 15657                           ;	unspecified, using default values
 15658   200026                     	org	2097190
 15659   200026  FFFF               	dw	65535
 15660                           
 15661                           ;Config register IDLOC20 @ 0x200028
 15662                           ;	unspecified, using default values
 15663   200028                     	org	2097192
 15664   200028  FFFF               	dw	65535
 15665                           
 15666                           ;Config register IDLOC21 @ 0x20002A
 15667                           ;	unspecified, using default values
 15668   20002A                     	org	2097194
 15669   20002A  FFFF               	dw	65535
 15670                           
 15671                           ;Config register IDLOC22 @ 0x20002C
 15672                           ;	unspecified, using default values
 15673   20002C                     	org	2097196
 15674   20002C  FFFF               	dw	65535
 15675                           
 15676                           ;Config register IDLOC23 @ 0x20002E
 15677                           ;	unspecified, using default values
 15678   20002E                     	org	2097198
 15679   20002E  FFFF               	dw	65535
 15680                           
 15681                           ;Config register IDLOC24 @ 0x200030
 15682                           ;	unspecified, using default values
 15683   200030                     	org	2097200
 15684   200030  FFFF               	dw	65535
 15685                           
 15686                           ;Config register IDLOC25 @ 0x200032
 15687                           ;	unspecified, using default values
 15688   200032                     	org	2097202
 15689   200032  FFFF               	dw	65535
 15690                           
 15691                           ;Config register IDLOC26 @ 0x200034
 15692                           ;	unspecified, using default values
 15693   200034                     	org	2097204
 15694   200034  FFFF               	dw	65535
 15695                           
 15696                           ;Config register IDLOC27 @ 0x200036
 15697                           ;	unspecified, using default values
 15698   200036                     	org	2097206
 15699   200036  FFFF               	dw	65535
 15700                           
 15701                           ;Config register IDLOC28 @ 0x200038
 15702                           ;	unspecified, using default values
 15703   200038                     	org	2097208
 15704   200038  FFFF               	dw	65535
 15705                           
 15706                           ;Config register IDLOC29 @ 0x20003A
 15707                           ;	unspecified, using default values
 15708   20003A                     	org	2097210
 15709   20003A  FFFF               	dw	65535
 15710                           
 15711                           ;Config register IDLOC30 @ 0x20003C
 15712                           ;	unspecified, using default values
 15713   20003C                     	org	2097212
 15714   20003C  FFFF               	dw	65535
 15715                           
 15716                           ;Config register IDLOC31 @ 0x20003E
 15717                           ;	unspecified, using default values
 15718   20003E                     	org	2097214
 15719   20003E  FFFF               	dw	65535
 15720                           
 15721                           	psect	config
 15722                           
 15723                           ;Config register CONFIG1 @ 0x300000
 15724                           ;	External Oscillator Selection
 15725                           ;	FEXTOSC = ECH, EC (external clock) above 8 MHz
 15726                           ;	Reset Oscillator Selection
 15727                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 15728   300000                     	org	3145728
 15729   300000  8F                 	db	143
 15730                           
 15731                           ;Config register CONFIG2 @ 0x300001
 15732                           ;	Clock out Enable bit
 15733                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 15734                           ;	PRLOCKED One-Way Set Enable bit
 15735                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
 15736                           ;	Clock Switch Enable bit
 15737                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 15738                           ;	Fail-Safe Clock Monitor Enable bit
 15739                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 15740   300001                     	org	3145729
 15741   300001  FF                 	db	255
 15742                           
 15743                           ;Config register CONFIG3 @ 0x300002
 15744                           ;	MCLR Enable bit
 15745                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 15746                           ;	Power-up timer selection bits
 15747                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 15748                           ;	Multi-vector enable bit
 15749                           ;	MVECEN = OFF, Interrupt contoller does not use vector table to prioritze interrupts
 15750                           ;	IVTLOCK bit One-way set enable bit
 15751                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
 15752                           ;	Low Power BOR Enable bit
 15753                           ;	LPBOREN = OFF, Low-Power BOR disabled
 15754                           ;	Brown-out Reset Enable bits
 15755                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 15756   300002                     	org	3145730
 15757   300002  F7                 	db	247
 15758                           
 15759                           ;Config register CONFIG4 @ 0x300003
 15760                           ;	Brown-out Reset Voltage Selection bits
 15761                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
 15762                           ;	ZCD Disable bit
 15763                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
 15764                           ;	PPSLOCK bit One-Way Set Enable bit
 15765                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
 15766                           ;	Stack Full/Underflow Reset Enable bit
 15767                           ;	STVREN = ON, Stack full/underflow will cause Reset
 15768                           ;	Low Voltage Programming Enable bit
 15769                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 15770                           ;	Extended Instruction Set Enable bit
 15771                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 15772   300003                     	org	3145731
 15773   300003  FF                 	db	255
 15774                           
 15775                           ;Config register CONFIG5 @ 0x300004
 15776                           ;	WDT Period selection bits
 15777                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 15778                           ;	WDT operating mode
 15779                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 15780   300004                     	org	3145732
 15781   300004  9F                 	db	159
 15782                           
 15783                           ;Config register CONFIG6 @ 0x300005
 15784                           ;	WDT Window Select bits
 15785                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 15786                           ;	WDT input clock selector
 15787                           ;	WDTCCS = SC, Software Control
 15788   300005                     	org	3145733
 15789   300005  FF                 	db	255
 15790                           
 15791                           ;Config register CONFIG7 @ 0x300006
 15792                           ;	Boot Block Size selection bits
 15793                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 15794                           ;	Boot Block enable bit
 15795                           ;	BBEN = OFF, Boot block disabled
 15796                           ;	Storage Area Flash enable bit
 15797                           ;	SAFEN = OFF, SAF disabled
 15798                           ;	Background Debugger
 15799                           ;	DEBUG = 0x1, unprogrammed default
 15800   300006                     	org	3145734
 15801   300006  FF                 	db	255
 15802                           
 15803                           ;Config register CONFIG8 @ 0x300007
 15804                           ;	Boot Block Write Protection bit
 15805                           ;	WRTB = OFF, Boot Block not Write protected
 15806                           ;	Configuration Register Write Protection bit
 15807                           ;	WRTC = OFF, Configuration registers not Write protected
 15808                           ;	Data EEPROM Write Protection bit
 15809                           ;	WRTD = OFF, Data EEPROM not Write protected
 15810                           ;	SAF Write protection bit
 15811                           ;	WRTSAF = OFF, SAF not Write Protected
 15812                           ;	Application Block write protection bit
 15813                           ;	WRTAPP = OFF, Application Block not write protected
 15814   300007                     	org	3145735
 15815   300007  FF                 	db	255
 15816                           
 15817                           ;Config register CONFIG10 @ 0x300009
 15818                           ;	PFM and Data EEPROM Code Protection bit
 15819                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 15820   300009                     	org	3145737
 15821   300009  FF                 	db	255
 15822                           tosu	equ	0x4FF
 15823                           tosh	equ	0x4FE
 15824                           tosl	equ	0x4FD
 15825                           stkptr	equ	0x4FC
 15826                           pclatu	equ	0x4FB
 15827                           pclath	equ	0x4FA
 15828                           pcl	equ	0x4F9
 15829                           tblptru	equ	0x4F8
 15830                           tblptrh	equ	0x4F7
 15831                           tblptrl	equ	0x4F6
 15832                           tablat	equ	0x4F5
 15833                           prodh	equ	0x4F4
 15834                           prodl	equ	0x4F3
 15835                           indf0	equ	0x4EF
 15836                           postinc0	equ	0x4EE
 15837                           postdec0	equ	0x4ED
 15838                           preinc0	equ	0x4EC
 15839                           plusw0	equ	0x4EB
 15840                           fsr0h	equ	0x4EA
 15841                           fsr0l	equ	0x4E9
 15842                           wreg	equ	0x4E8
 15843                           indf1	equ	0x4E7
 15844                           postinc1	equ	0x4E6
 15845                           postdec1	equ	0x4E5
 15846                           preinc1	equ	0x4E4
 15847                           plusw1	equ	0x4E3
 15848                           fsr1h	equ	0x4E2
 15849                           fsr1l	equ	0x4E1
 15850                           bsr	equ	0x4E0
 15851                           indf2	equ	0x4DF
 15852                           postinc2	equ	0x4DE
 15853                           postdec2	equ	0x4DD
 15854                           preinc2	equ	0x4DC
 15855                           plusw2	equ	0x4DB
 15856                           fsr2h	equ	0x4DA
 15857                           fsr2l	equ	0x4D9
 15858                           status	equ	0x4D8

Data Sizes:
    Strings     327
    Constant    105
    Data        88
    BSS         37
    Persistent  12
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     89      92
    BANK5           160     53     155
    BANK6           256      0      32
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    AdvancedSettings@dev	PTR struct . size(2) Largest target is 3
		 -> sender@nrf(BANK5[3]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK5[32]), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), NULL(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), NULL(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), NULL(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    Nrf24_config@dev	PTR struct . size(2) Largest target is 3
		 -> sender@nrf(BANK5[3]), 

    Nrf24_flushRx@dev	PTR struct . size(2) Largest target is 3
		 -> sender@nrf(BANK5[3]), 

    Nrf24_getCRCLength@dev	PTR struct . size(2) Largest target is 3
		 -> sender@nrf(BANK5[3]), 

    Nrf24_getDataRate@dev	PTR struct . size(2) Largest target is 3
		 -> sender@nrf(BANK5[3]), 

    Nrf24_getPALevel@dev	PTR struct . size(2) Largest target is 3
		 -> sender@nrf(BANK5[3]), 

    Nrf24_getRetransmitDelay@dev	PTR struct . size(2) Largest target is 3
		 -> sender@nrf(BANK5[3]), 

    Nrf24_getStatus@dev	PTR struct . size(2) Largest target is 3
		 -> sender@nrf(BANK5[3]), 

    Nrf24_init@dev	PTR struct . size(2) Largest target is 3
		 -> sender@nrf(BANK5[3]), 

    Nrf24_isSend@dev	PTR struct . size(2) Largest target is 3
		 -> sender@nrf(BANK5[3]), 

    Nrf24_powerUpRx@dev	PTR struct . size(2) Largest target is 3
		 -> sender@nrf(BANK5[3]), 

    Nrf24_powerUpTx@dev	PTR struct . size(2) Largest target is 3
		 -> sender@nrf(BANK5[3]), 

    Nrf24_print_address_register@dev	PTR struct . size(2) Largest target is 3
		 -> sender@nrf(BANK5[3]), 

    Nrf24_print_address_register@name	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_3(CODE[13]), STR_5(CODE[9]), 

    Nrf24_print_byte_register@dev	PTR struct . size(2) Largest target is 3
		 -> sender@nrf(BANK5[3]), 

    Nrf24_print_byte_register@name	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_10(CODE[9]), STR_11(CODE[8]), STR_12(CODE[14]), STR_4(CODE[13]), 
		 -> STR_6(CODE[11]), STR_7(CODE[7]), STR_8(CODE[10]), STR_9(CODE[7]), 

    Nrf24_printDetails@dev	PTR struct . size(2) Largest target is 3
		 -> sender@nrf(BANK5[3]), 

    Nrf24_readRegister@value	PTR unsigned char  size(2) Largest target is 5
		 -> Nrf24_addRADDR@value(COMRAM[1]), Nrf24_getCRCLength@AA(COMRAM[1]), Nrf24_getCRCLength@config(COMRAM[1]), Nrf24_getDataRate@dr(COMRAM[1]), 
		 -> Nrf24_getPALevel@level(COMRAM[1]), Nrf24_getRetransmitDelay@value(COMRAM[1]), Nrf24_getStatus@rv(COMRAM[1]), Nrf24_print_address_register@buffer(BANK5[5]), 
		 -> Nrf24_print_byte_register@buffer(COMRAM[1]), Nrf24_rxFifoEmpty@fifoStatus(COMRAM[1]), Nrf24_SetOutputRF_PWR@value(COMRAM[1]), Nrf24_setRADDR@buffer(COMRAM[5]), 
		 -> Nrf24_setRetransmitDelay@value(COMRAM[1]), Nrf24_SetSpeedDataRates@value(COMRAM[1]), Nrf24_setTADDR@buffer(COMRAM[5]), 

    Nrf24_send@dev	PTR struct . size(2) Largest target is 3
		 -> sender@nrf(BANK5[3]), 

    Nrf24_send@value	PTR unsigned char  size(2) Largest target is 32
		 -> sender@buf(BANK5[32]), 

    Nrf24_setRetransmitDelay@dev	PTR struct . size(2) Largest target is 3
		 -> sender@nrf(BANK5[3]), 

    Nrf24_SetSpeedDataRates@dev	PTR struct . size(2) Largest target is 3
		 -> sender@nrf(BANK5[3]), 

    Nrf24_setTADDR@adr	PTR unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    Nrf24_setTADDR@dev	PTR struct . size(2) Largest target is 3
		 -> sender@nrf(BANK5[3]), 

    Nrf24_writeRegister@value	PTR unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    NULL$0	PTR FTN()void  size(3) Largest target is 0

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK5[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 70
		 -> STR_13(CODE[17]), STR_14(CODE[18]), STR_15(CODE[16]), STR_16(CODE[21]), 
		 -> STR_17(CODE[70]), STR_18(CODE[6]), STR_19(CODE[4]), STR_2(CODE[53]), 
		 -> STR_20(CODE[5]), STR_21(CODE[3]), STR_22(CODE[6]), STR_23(CODE[8]), 
		 -> STR_24(CODE[3]), 

    read_prec_or_width@ap	PTR PTR void [1] size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1843$buffer	PTR unsigned char  size(2) Largest target is 0

    S1843$source	PTR const unsigned char  size(2) Largest target is 0

    S40$4$0	PTR void  size(2) Largest target is 0

    S40$5$0	PTR void  size(2) Largest target is 0

    S40$6$0	PTR void  size(2) Largest target is 0

    S40SPI_INTERFACE$BufferExchange	PTR FTN(PTR void ,unsigned int ,)void  size(3) Largest target is 1
		 -> SPI1_BufferExchange(), 

    S40SPI_INTERFACE$BufferRead	PTR FTN(PTR void ,unsigned int ,)void  size(3) Largest target is 1
		 -> SPI1_BufferRead(), 

    S40SPI_INTERFACE$BufferWrite	PTR FTN(PTR void ,unsigned int ,)void  size(3) Largest target is 1
		 -> SPI1_BufferWrite(), 

    S40SPI_INTERFACE$ByteExchange	PTR FTN(unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> SPI1_ByteExchange(), 

    S40SPI_INTERFACE$ByteRead	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> SPI1_ByteRead(), 

    S40SPI_INTERFACE$ByteWrite	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> SPI1_ByteWrite(), 

    S40SPI_INTERFACE$Close	PTR FTN()void  size(3) Largest target is 1
		 -> SPI1_Close(), 

    S40SPI_INTERFACE$Deinitialize	PTR FTN()void  size(3) Largest target is 1
		 -> SPI1_Deinitialize(), 

    S40SPI_INTERFACE$Initialize	PTR FTN()void  size(3) Largest target is 1
		 -> SPI1_Initialize(), 

    S40SPI_INTERFACE$IsRxReady	PTR FTN()_Bool  size(3) Largest target is 1
		 -> SPI1_IsRxReady(), 

    S40SPI_INTERFACE$IsTxReady	PTR FTN()_Bool  size(3) Largest target is 1
		 -> SPI1_IsTxReady(), 

    S40SPI_INTERFACE$Open	PTR FTN(unsigned char ,)_Bool  size(3) Largest target is 1
		 -> SPI1_Open(), 

    S40SPI_INTERFACE$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    S40SPI_INTERFACE$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    S767$4$0	PTR FTN()void  size(3) Largest target is 1
		 -> led_toggle(), TMR0_DefaultOverflowCallback(), 

    S767TMR_INTERFACE$Initialize	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Initialize(), 

    S767TMR_INTERFACE$PeriodCountSet	PTR FTN(unsigned int ,)void  size(3) Largest target is 1
		 -> TMR0_Reload(), 

    S767TMR_INTERFACE$Start	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Start(), 

    S767TMR_INTERFACE$Stop	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Stop(), 

    S767TMR_INTERFACE$Tasks	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), 

    S767TMR_INTERFACE$TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> TMR0_OverflowCallbackRegister(), 

    sender@pvParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__memset	PTR void  size(2) Largest target is 0

    sp__Nrf24_getDataRateString	PTR unsigned char  size(2) Largest target is 24
		 -> rf24_datarates(BANK5[24]), 

    sp__Nrf24_getPALevelString	PTR unsigned char  size(2) Largest target is 32
		 -> rf24_pa_dbm(BANK6[32]), 

    SPI1_nrf24$BufferExchange	PTR FTN(PTR void ,unsigned int ,)void  size(3) Largest target is 1
		 -> SPI1_BufferExchange(), 

    SPI1_nrf24$BufferRead	PTR FTN(PTR void ,unsigned int ,)void  size(3) Largest target is 1
		 -> SPI1_BufferRead(), 

    SPI1_nrf24$BufferWrite	PTR FTN(PTR void ,unsigned int ,)void  size(3) Largest target is 1
		 -> SPI1_BufferWrite(), 

    SPI1_nrf24$ByteExchange	PTR FTN(unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> SPI1_ByteExchange(), 

    SPI1_nrf24$ByteRead	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> SPI1_ByteRead(), 

    SPI1_nrf24$ByteWrite	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> SPI1_ByteWrite(), 

    SPI1_nrf24$Close	PTR FTN()void  size(3) Largest target is 1
		 -> SPI1_Close(), 

    SPI1_nrf24$Deinitialize	PTR FTN()void  size(3) Largest target is 1
		 -> SPI1_Deinitialize(), 

    SPI1_nrf24$Initialize	PTR FTN()void  size(3) Largest target is 1
		 -> SPI1_Initialize(), 

    SPI1_nrf24$IsRxReady	PTR FTN()_Bool  size(3) Largest target is 1
		 -> SPI1_IsRxReady(), 

    SPI1_nrf24$IsTxReady	PTR FTN()_Bool  size(3) Largest target is 1
		 -> SPI1_IsTxReady(), 

    SPI1_nrf24$Open	PTR FTN(unsigned char ,)_Bool  size(3) Largest target is 1
		 -> SPI1_Open(), 

    SPI1_nrf24$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    SPI1_nrf24$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    SPI_read_buff@buffer	PTR unsigned char  size(2) Largest target is 5
		 -> Nrf24_addRADDR@value(COMRAM[1]), Nrf24_getCRCLength@AA(COMRAM[1]), Nrf24_getCRCLength@config(COMRAM[1]), Nrf24_getDataRate@dr(COMRAM[1]), 
		 -> Nrf24_getPALevel@level(COMRAM[1]), Nrf24_getRetransmitDelay@value(COMRAM[1]), Nrf24_getStatus@rv(COMRAM[1]), Nrf24_print_address_register@buffer(BANK5[5]), 
		 -> Nrf24_print_byte_register@buffer(COMRAM[1]), Nrf24_rxFifoEmpty@fifoStatus(COMRAM[1]), Nrf24_SetOutputRF_PWR@value(COMRAM[1]), Nrf24_setRADDR@buffer(COMRAM[5]), 
		 -> Nrf24_setRetransmitDelay@value(COMRAM[1]), Nrf24_SetSpeedDataRates@value(COMRAM[1]), Nrf24_setTADDR@buffer(COMRAM[5]), 

    SPI_write_buff@buffer	PTR unsigned char  size(2) Largest target is 32
		 -> sender@buf(BANK5[32]), STR_1(CODE[6]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 32
		 -> ?_printf(COMRAM[2]), rf24_crclength(CODE[30]), rf24_datarates(BANK5[24]), rf24_pa_dbm(BANK6[32]), 
		 -> STR_10(CODE[9]), STR_11(CODE[8]), STR_12(CODE[14]), STR_25(CODE[7]), 
		 -> STR_3(CODE[13]), STR_4(CODE[13]), STR_5(CODE[9]), STR_6(CODE[11]), 
		 -> STR_7(CODE[7]), STR_8(CODE[10]), STR_9(CODE[7]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 32
		 -> ?_printf(COMRAM[2]), rf24_crclength(CODE[30]), rf24_datarates(BANK5[24]), rf24_pa_dbm(BANK6[32]), 
		 -> STR_10(CODE[9]), STR_11(CODE[8]), STR_12(CODE[14]), STR_3(CODE[13]), 
		 -> STR_4(CODE[13]), STR_5(CODE[9]), STR_6(CODE[11]), STR_7(CODE[7]), 
		 -> STR_8(CODE[10]), STR_9(CODE[7]), 

    Timer0$Initialize	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Initialize(), 

    Timer0$PeriodCountSet	PTR FTN(unsigned int ,)void  size(3) Largest target is 1
		 -> TMR0_Reload(), 

    Timer0$Start	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Start(), 

    Timer0$Stop	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Stop(), 

    Timer0$Tasks	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), 

    Timer0$TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> TMR0_OverflowCallbackRegister(), 

    TMR0_OverflowCallback	PTR FTN()void  size(3) Largest target is 1
		 -> led_toggle(), TMR0_DefaultOverflowCallback(), NULL(), 

    TMR0_OverflowCallbackRegister@CallbackHandler	PTR FTN()void  size(3) Largest target is 1
		 -> led_toggle(), TMR0_DefaultOverflowCallback(), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 70
		 -> STR_13(CODE[17]), STR_14(CODE[18]), STR_15(CODE[16]), STR_16(CODE[21]), 
		 -> STR_17(CODE[70]), STR_18(CODE[6]), STR_19(CODE[4]), STR_2(CODE[53]), 
		 -> STR_20(CODE[5]), STR_21(CODE[3]), STR_22(CODE[6]), STR_23(CODE[8]), 
		 -> STR_24(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 70
		 -> STR_13(CODE[17]), STR_14(CODE[18]), STR_15(CODE[16]), STR_16(CODE[21]), 
		 -> STR_17(CODE[70]), STR_18(CODE[6]), STR_19(CODE[4]), STR_2(CODE[53]), 
		 -> STR_20(CODE[5]), STR_21(CODE[3]), STR_22(CODE[6]), STR_23(CODE[8]), 
		 -> STR_24(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 70
		 -> STR_13(CODE[17]), STR_14(CODE[18]), STR_15(CODE[16]), STR_16(CODE[21]), 
		 -> STR_17(CODE[70]), STR_18(CODE[6]), STR_19(CODE[4]), STR_2(CODE[53]), 
		 -> STR_20(CODE[5]), STR_21(CODE[3]), STR_22(CODE[6]), STR_23(CODE[8]), 
		 -> STR_24(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _sender->_Nrf24_printDetails
    _Nrf24_setTADDR->_Nrf24_readRegister
    _Nrf24_setTADDR->_Nrf24_writeRegister
    _Nrf24_writeRegister->_SPI_write_buff
    _Nrf24_send->_Nrf24_getStatus
    _SPI_write_buff->_DELAY_microseconds
    _SPI_write_buff->_SPI1_ByteExchange
    _Nrf24_powerUpTx->_Nrf24_configRegister
    _Nrf24_printDetails->_Nrf24_print_address_register
    _Nrf24_printDetails->_Nrf24_print_byte_register
    _Nrf24_print_status->_printf
    _Nrf24_print_byte_register->_printf
    _Nrf24_print_address_register->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _stoa->_fputc
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _Nrf24_getRetransmitDelay->_Nrf24_readRegister
    _Nrf24_getPALevel->_Nrf24_readRegister
    _Nrf24_getDataRate->_Nrf24_readRegister
    _Nrf24_getCRCLength->_Nrf24_readRegister
    _Nrf24_isSend->_Nrf24_getStatus
    _Nrf24_init->_SPI1_Open
    _Nrf24_config->_Nrf24_getStatus
    _Nrf24_powerUpRx->_Nrf24_configRegister
    _Nrf24_getStatus->_Nrf24_readRegister
    _Nrf24_flushRx->_SPI1_ByteExchange
    _AdvancedSettings->_Nrf24_SetSpeedDataRates
    _AdvancedSettings->_Nrf24_setRetransmitDelay
    _Nrf24_setRetransmitDelay->_Nrf24_readRegister
    _Nrf24_SetSpeedDataRates->_Nrf24_readRegister
    _Nrf24_readRegister->_SPI_read_buff
    _SPI_read_buff->_SPI1_ByteExchange
    _Nrf24_configRegister->_SPI1_ByteExchange
    _TMR0_Initialize->_TMR0_OverflowCallbackRegister
    _INTERRUPT_Initialize->_INT0_SetInterruptHandler
    _INTERRUPT_Initialize->_INT1_SetInterruptHandler
    _INTERRUPT_Initialize->_INT2_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR0_OverflowISR->_led_toggle

Critical Paths under _main in BANK5

    _main->_sender
    _sender->_Nrf24_printDetails
    _Nrf24_printDetails->_Nrf24_print_address_register

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   42954
                  _SYSTEM_Initialize
      _TMR0_OverflowCallbackRegister
                         _TMR0_Start
                             _sender
 ---------------------------------------------------------------------------------
 (1) _sender                                              41    39      2   42837
                                             14 BANK5     39    37      2
                   _AdvancedSettings
                 _DELAY_milliseconds
                       _Nrf24_config
                         _Nrf24_init
                       _Nrf24_isSend
                 _Nrf24_printDetails
                         _Nrf24_send
                     _Nrf24_setTADDR
 ---------------------------------------------------------------------------------
 (2) _Nrf24_setTADDR                                      16    12      4    1335
                                             13 COMRAM    16    12      4
                 _Nrf24_readRegister
                _Nrf24_writeRegister
 ---------------------------------------------------------------------------------
 (3) _Nrf24_writeRegister                                  4     1      3     486
                                              9 COMRAM     4     1      3
                  _SPI1_ByteExchange
                     _SPI_write_buff
 ---------------------------------------------------------------------------------
 (2) _Nrf24_send                                           6     2      4    1463
                                             16 COMRAM     6     2      4
                    _Nrf24_getStatus
                    _Nrf24_powerUpTx
                  _SPI1_ByteExchange
                     _SPI_write_buff
 ---------------------------------------------------------------------------------
 (4) _SPI_write_buff                                       4     1      3     244
                                              5 COMRAM     4     1      3
                 _DELAY_microseconds
                  _SPI1_ByteExchange
 ---------------------------------------------------------------------------------
 (5) _DELAY_microseconds                                   2     0      2      46
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _Nrf24_powerUpTx                                      2     0      2     271
                                              7 COMRAM     2     0      2
               _Nrf24_configRegister
 ---------------------------------------------------------------------------------
 (2) _Nrf24_printDetails                                   9     7      2   34630
                                             87 COMRAM     2     0      2
                                              7 BANK5      7     7      0
                 _Nrf24_getCRCLength
                  _Nrf24_getDataRate
                   _Nrf24_getPALevel
           _Nrf24_getRetransmitDelay
                    _Nrf24_getStatus
       _Nrf24_print_address_register
          _Nrf24_print_byte_register
                 _Nrf24_print_status
                             _printf
 ---------------------------------------------------------------------------------
 (3) _Nrf24_print_status                                   2     2      0    7528
                                             80 COMRAM     2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (3) _Nrf24_print_byte_register                            7     1      6    8018
                                             80 COMRAM     7     1      6
                 _Nrf24_readRegister
                             _printf
 ---------------------------------------------------------------------------------
 (3) _Nrf24_print_address_register                        14     8      6    8048
                                             80 COMRAM     7     1      6
                                              0 BANK5      7     7      0
                 _Nrf24_readRegister
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              18     4     14    7246
                                             64 COMRAM    16     2     14
                 _Nrf24_getCRCLength (ARG)
                  _Nrf24_getDataRate (ARG)
                   _Nrf24_getPALevel (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6    7108
                                             56 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           16    10      6    6851
                                             41 COMRAM    15     9      6
                               _dtoa
                              _fputc
                 _read_prec_or_width
                               _stoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (6) _xtoa                                                13     9      4    1572
                                             28 COMRAM    13     9      4
                                _pad
 ---------------------------------------------------------------------------------
 (6) _stoa                                                14    10      4     820
                                             12 COMRAM    14    10      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _read_prec_or_width                                   9     5      4     266
                                              3 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                12     8      4    2722
                                             28 COMRAM    12     8      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                  9     3      6    1133
                                             19 COMRAM     9     3      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4     505
                                             12 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4     353
                                              3 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2      96
                                              9 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     439
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     451
                                              3 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _Nrf24_getRetransmitDelay                             3     1      2     583
                                             13 COMRAM     3     1      2
                 _Nrf24_readRegister
 ---------------------------------------------------------------------------------
 (3) _Nrf24_getPALevel                                     3     1      2     620
                                             13 COMRAM     3     1      2
                 _Nrf24_readRegister
 ---------------------------------------------------------------------------------
 (3) _Nrf24_getDataRate                                    4     2      2     691
                                             13 COMRAM     4     2      2
                 _Nrf24_readRegister
 ---------------------------------------------------------------------------------
 (3) _Nrf24_getCRCLength                                   5     3      2     756
                                             13 COMRAM     5     3      2
                 _Nrf24_readRegister
 ---------------------------------------------------------------------------------
 (2) _Nrf24_isSend                                        13     9      4    1172
                                             16 COMRAM    13     9      4
                 _DELAY_milliseconds
                    _Nrf24_getStatus
                    _Nrf24_powerUpRx
 ---------------------------------------------------------------------------------
 (3) _DELAY_milliseconds                                   3     1      2      25
                                              3 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _Nrf24_init                                           2     0      2     199
                                              4 COMRAM     2     0      2
                          _SPI1_Open
 ---------------------------------------------------------------------------------
 (3) _SPI1_Open                                            2     2      0     154
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Nrf24_config                                         4     0      4    1527
                                             16 COMRAM     4     0      4
               _Nrf24_configRegister
                      _Nrf24_flushRx
                    _Nrf24_getStatus
                    _Nrf24_powerUpRx
 ---------------------------------------------------------------------------------
 (3) _Nrf24_powerUpRx                                      2     0      2     280
                                              7 COMRAM     2     0      2
               _Nrf24_configRegister
 ---------------------------------------------------------------------------------
 (3) _Nrf24_getStatus                                      3     1      2     604
                                             13 COMRAM     3     1      2
                 _Nrf24_readRegister
 ---------------------------------------------------------------------------------
 (3) _Nrf24_flushRx                                        2     0      2      87
                                              5 COMRAM     2     0      2
                  _SPI1_ByteExchange
 ---------------------------------------------------------------------------------
 (2) _AdvancedSettings                                     2     0      2    2070
                                             17 COMRAM     2     0      2
            _Nrf24_SetSpeedDataRates
           _Nrf24_setRetransmitDelay
 ---------------------------------------------------------------------------------
 (3) _Nrf24_setRetransmitDelay                             4     1      3     922
                                             13 COMRAM     4     1      3
               _Nrf24_configRegister
                 _Nrf24_readRegister
 ---------------------------------------------------------------------------------
 (3) _Nrf24_SetSpeedDataRates                              4     1      3    1083
                                             13 COMRAM     4     1      3
               _Nrf24_configRegister
                 _Nrf24_readRegister
 ---------------------------------------------------------------------------------
 (3) _Nrf24_readRegister                                   4     1      3     512
                                              9 COMRAM     4     1      3
                  _SPI1_ByteExchange
                      _SPI_read_buff
 ---------------------------------------------------------------------------------
 (4) _SPI_read_buff                                        4     1      3     198
                                              5 COMRAM     4     1      3
                  _SPI1_ByteExchange
 ---------------------------------------------------------------------------------
 (4) _Nrf24_configRegister                                 2     1      1     237
                                              5 COMRAM     2     1      1
                  _SPI1_ByteExchange
 ---------------------------------------------------------------------------------
 (5) _SPI1_ByteExchange                                    2     2      0      84
                                              3 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _TMR0_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      93
                   _CLOCK_Initialize
               _INTERRUPT_Initialize
             _PIN_MANAGER_Initialize
                    _SPI1_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0      24
      _TMR0_OverflowCallbackRegister
 ---------------------------------------------------------------------------------
 (1) _TMR0_OverflowCallbackRegister                        3     0      3      24
                                              3 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0      69
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             3     0      3      23
                                              3 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3      23
                                              3 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      23
                                              3 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManager                          2     2      0       0
                                              1 COMRAM     2     2      0
                   _TMR0_OverflowISR
 ---------------------------------------------------------------------------------
 (13) _TMR0_OverflowISR                                    0     0      0       0
                                NULL *
       _TMR0_DefaultOverflowCallback *
                         _led_toggle *
 ---------------------------------------------------------------------------------
 (14) _led_toggle                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (14) _TMR0_DefaultOverflowCallback                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _CLOCK_Initialize
     _INTERRUPT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _PIN_MANAGER_Initialize
     _SPI1_Initialize
     _TMR0_Initialize
       _TMR0_OverflowCallbackRegister
   _TMR0_OverflowCallbackRegister
   _TMR0_Start
   _sender
     _AdvancedSettings
       _Nrf24_SetSpeedDataRates
         _Nrf24_configRegister
           _SPI1_ByteExchange
         _Nrf24_readRegister
           _SPI1_ByteExchange
           _SPI_read_buff
             _SPI1_ByteExchange
       _Nrf24_setRetransmitDelay
         _Nrf24_configRegister
         _Nrf24_readRegister
     _DELAY_milliseconds
     _Nrf24_config
       _Nrf24_configRegister
       _Nrf24_flushRx
         _SPI1_ByteExchange
       _Nrf24_getStatus
         _Nrf24_readRegister
       _Nrf24_powerUpRx
         _Nrf24_configRegister
     _Nrf24_init
       _SPI1_Open
     _Nrf24_isSend
       _DELAY_milliseconds
       _Nrf24_getStatus
       _Nrf24_powerUpRx
     _Nrf24_printDetails
       _Nrf24_getCRCLength
         _Nrf24_readRegister
       _Nrf24_getDataRate
         _Nrf24_readRegister
       _Nrf24_getPALevel
         _Nrf24_readRegister
       _Nrf24_getRetransmitDelay
         _Nrf24_readRegister
       _Nrf24_getStatus
       _Nrf24_print_address_register
         _Nrf24_readRegister
         _printf
           _Nrf24_getCRCLength (ARG)
           _Nrf24_getDataRate (ARG)
           _Nrf24_getPALevel (ARG)
           _vfprintf (ARG)
             _vfpfcnvrt
               _dtoa
                 ___awdiv
                 ___awmod
                 _abs
                   ___awmod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
               _fputc
               _read_prec_or_width
               _stoa
                 _fputc
               _xtoa
                 _pad
       _Nrf24_print_byte_register
         _Nrf24_readRegister
         _printf
       _Nrf24_print_status
         _printf
       _printf
     _Nrf24_send
       _Nrf24_getStatus
       _Nrf24_powerUpTx
         _Nrf24_configRegister
       _SPI1_ByteExchange
       _SPI_write_buff
         _DELAY_microseconds
         _SPI1_ByteExchange
     _Nrf24_setTADDR
       _Nrf24_readRegister
       _Nrf24_writeRegister
         _SPI1_ByteExchange
         _SPI_write_buff

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_OverflowISR
     NULL(Fake) *
     _TMR0_DefaultOverflowCallback *
     _led_toggle *

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            8191      0       0      0.0%
BITBIGSFRh        1150      0       0      0.0%
BITBIGSFR_1        256      0       0      0.0%
BITBANK36          256      0       0      0.0%
BANK36             256      0       0      0.0%
BITBANK35          256      0       0      0.0%
BANK35             256      0       0      0.0%
BITBANK34          256      0       0      0.0%
BANK34             256      0       0      0.0%
BITBANK33          256      0       0      0.0%
BANK33             256      0       0      0.0%
BITBANK32          256      0       0      0.0%
BANK32             256      0       0      0.0%
BITBANK31          256      0       0      0.0%
BANK31             256      0       0      0.0%
BITBANK30          256      0       0      0.0%
BANK30             256      0       0      0.0%
BITBANK29          256      0       0      0.0%
BANK29             256      0       0      0.0%
BITBANK28          256      0       0      0.0%
BANK28             256      0       0      0.0%
BITBANK27          256      0       0      0.0%
BANK27             256      0       0      0.0%
BITBANK26          256      0       0      0.0%
BANK26             256      0       0      0.0%
BITBANK25          256      0       0      0.0%
BANK25             256      0       0      0.0%
BITBANK24          256      0       0      0.0%
BANK24             256      0       0      0.0%
BITBANK23          256      0       0      0.0%
BANK23             256      0       0      0.0%
BITBANK22          256      0       0      0.0%
BANK22             256      0       0      0.0%
BITBANK21          256      0       0      0.0%
BANK21             256      0       0      0.0%
BITBANK20          256      0       0      0.0%
BANK20             256      0       0      0.0%
BITBANK19          256      0       0      0.0%
BANK19             256      0       0      0.0%
BITBANK18          256      0       0      0.0%
BANK18             256      0       0      0.0%
BITBANK17          256      0       0      0.0%
BANK17             256      0       0      0.0%
BITBANK16          256      0       0      0.0%
BANK16             256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BANK15             256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0      32     12.5%
BITBANK5           160      0       0      0.0%
BANK5              160     53     155     96.9%
BITBIGSFRl         128      0       0      0.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     89      92     96.8%
STACK                0      0       0      0.0%
DATA                 0      0     279      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Wed Oct 23 09:34:13 2024

                           _SPI1_ByteExchange 186A                             Nrf24_setTADDR@adr 0510  
                           Nrf24_setTADDR@dev 050E                             ??_Nrf24_powerUpRx 050A  
                           ??_Nrf24_powerUpTx 050A                             Nrf24_setTADDR@ret 051A  
                        ??_Nrf24_printDetails 059F                                            l61 19F8  
                                          l67 0BD6                                            l69 0BD6  
                          ?_SPI1_ByteExchange 0501                           ?_Nrf24_print_status 0501  
                                ___awdiv@sign 0509                                           l102 1880  
                                         l104 188E                                           l105 1894  
                                         l136 1A38                                           l307 164C  
                                         l324 1A70                                           l350 1A54  
                                         l263 11E6                                           l416 18BC  
                                         l337 1A62                                           l419 1A82  
                                         l621 19CC                                           l438 1A46  
                                         l366 1A24                                           l550 16EC  
                                         l374 17B4                                           l543 16BA  
                                         l383 1524                      Nrf24_getCRCLength@config 0512  
                                         l544 16BC                                           l712 1868  
                                         l560 14D2                                           l625 19E0  
                                         l633 17E4                                           l553 147E  
                                         l641 1752                                           l554 1480  
                                         l707 1350                                           l715 0592  
                                         l548 16EA                                           l732 147C  
                                         l660 114A                                           l629 17C8  
                                         l477 1972                                           l573 183C  
                                         l637 1734                                           l750 13B8  
                                         l726 1010                                           l718 1266  
                                         l558 14D0                                           l494 180E  
                                         l671 0DB6                                           l591 0F6A  
                                         l672 0E10                                           l648 110A  
                                         l745 13B6                                           l737 15C4  
                                         l753 19B0                                           l691 1A7C  
                                         l579 12E2                                           l747 139C  
                                         l739 15C8                                           l684 192E  
                                         l677 1A0E                                           l589 0F62  
                                         l694 1950                                           l687 1A72  
                                         l759 19C8                                           l999 0D5C  
                  __end_of_DELAY_milliseconds 17B6                    ??_INT0_SetInterruptHandler 0507  
                                         _abs 1686                                           _pad 1012  
                         ??_SPI1_ByteExchange 0504                                  ___awmod@sign 0509  
                    Nrf24_getCRCLength@result 0510                                           prod 04F3  
                                         tosl 04FD                                           wreg 04E8  
                                        l1012 0EBE                                          ?_abs 050A  
                                        l2201 1178                                          l2211 118E  
                                        l2203 117A                                          l1500 077A  
                                        l2221 1198                                          l2213 1190  
                                        l2205 1180                                          l3101 0B10  
                                        l3111 1A64                                          l2231 11A6  
                                        l2223 119A                                          l2215 1192  
                                        l2207 118A                                          l3103 0B20  
                                        l1512 0872                                          l3113 1A56  
                                        l2241 11B6                                          l2233 11A8  
                                        l2225 119C                                          l2217 1194  
                                        l2209 118C                                          l4001 1328  
                                        l3105 0BCE                                          l3121 179A  
                                        l3115 1A48                                          l2251 11D2  
                                        l2243 11B8                                          l2235 11AA  
                                        l2227 11A2                                          l2219 1196  
                                        l3123 1A3A                                          l4003 1336  
                                        l4011 1856                                          l3107 0BD0  
                                        l1507 082A                                          l3051 1502  
                                        l3043 14D4                                          l1532 0A42  
                                        l1524 0976                                          l1452 190A  
                                        l2261 11DC                                          l2253 11D4  
                                        l2245 11BA                                          l2237 11B0  
                                        l2229 11A4                                          l2181 19F4  
                                        l2173 19E2                                          l4005 1346  
                                        l4013 185E                                          l4021 190C  
                                        l3109 0BD2                                          l3301 1828  
                                        l3117 1786                                          l3053 150A  
                                        l3045 14D8                                          l2191 1A34  
                                        l2263 11DE                                          l2255 11D6  
                                        l2247 11CC                                          l2239 11B2  
                                        l2183 19F6                                          l2175 19EC  
                                        l4007 183E                                          l4031 1A74  
                                        l4015 19FA                                          l4023 1916  
                                        l3303 1838                                          l3119 178A  
                                        l4111 137E                                          l4103 1352  
                                        l3047 14E0                                          l1472 104A  
                                        l1480 05F2                                          l1528 0A3A  
                                        l2193 1A36                                          l2185 1A26  
                                        l2265 11E0                                          l2257 11D8  
                                        l2249 11D0                                          l2177 19F0  
                                        l2417 1A7E                                          l4009 1850  
                                        l4033 1A7A                                          l4017 1A0C  
                                        l4025 1918                                          l3305 183A  
                                        l4113 138C                                          l4105 1354  
                                        l4121 1994                                          l3049 14E8  
                                        l4201 1124                                          l4041 1750  
                                        l1570 16B8                                          l2187 1A2C  
                                        l2267 11E2                                          l2259 11DA  
                                        l2195 114C                                          l2179 19F2  
                                        l3411 1A20                                          l4027 1922  
                                        l4211 0D76                                          l4115 13AA  
                                        l4107 1366                                          l4123 19A6  
                                        l4131 19C4                                          l1475 108C  
                                        l1547 038C                                          l1563 1576  
                                        l4051 0F6C                                          l4043 1930  
                                        l4203 112A                                          l4035 1724  
                                        l1548 021A                                          l2189 1A2E  
                                        l2269 11E4                                          l2197 116A  
                                        l4029 1924                                          l4141 1294  
                                        l4213 0D8A                                          l4117 13B2  
                                        l4109 136C                                          l4125 19AE  
                                        l1477 10AE                                          l1493 0708  
                                        l4053 0F84                                          l4045 193C  
                                        l4205 1146                                          l4037 1736  
                                        l1582 0B0C                                          l1590 160C  
                                        l3271 1614                                          l2199 116E  
                                        l3407 1A10                                          l4135 1952  
                                        l4143 129E                                          l4215 0D98  
                                        l1567 16A0                                          l4055 0F96  
                                        l4071 0FF2                                          l4047 1946  
                                        l4207 1148                                          l4039 1740  
                                        l4151 0EC0                                          l4231 0BD8  
                                        l3273 1624                                          l3281 1896  
                                        l3409 1A1C                                          l4145 12B4  
                                        l4137 1268                                          l4225 0DC8  
                                        l4217 0DA6                                          l4209 0D5E  
                                        l4129 19B2                                          l1593 1A84  
                                        l3601 0A90                                          l4073 1004  
                                        l4065 0FAE                                          l4057 0F98  
                                        l4081 144C                                          l4049 11EA  
                                        l4153 0EC8                                          l4241 0C14  
                                        l4233 0BE4                                          l3275 1626  
                                        l3291 18B6                                          l3283 189C  
                                        l4147 12CA                                          l4139 1288  
                                        l4227 0DD4                                          l4091 1590  
                                        l3603 0AC6                                          l3611 15E8  
                                        l4067 0FD0                                          l4059 0FA4  
                                        l4083 145E                                          l4075 1420  
                                        l4171 0F46                                          l4155 0EDA  
                                        l4251 0C62                                          l4243 0C28  
                                        l4235 0BE4                                          l3277 1638  
                                        l3269 160E                                          l3285 18A2  
                                        l4149 12D6                                          l4229 0DE0  
                                        l4093 15A2                                          l3621 0CB4  
                                        l3613 15EC                                          l3701 1042  
                                        l4069 0FD6                                          l4085 1470  
                                        l4077 1438                                          l4173 038E  
                                        l4181 10B0                                          l4165 0F06  
                                        l4157 0EEC                                          l4253 0C76  
                                        l4245 0C38                                          l4237 0BE4  
                                        l4261 17FC                                          l3279 163A  
                                        l3287 18B2                                          l4095 15AA  
                                        l4087 1578                                          l3631 0CDA  
                                        l3623 0CB8                                          l3615 0C9C  
                                        l3711 1686                                          l3607 15CA  
                                        l3703 1056                                          l4079 144A  
                                        l4175 0546                                          l4191 110C  
                                        l4183 10C0                                          l4167 0F3E  
                                        l4159 0EFE                                          l4255 0C8A  
                                        l4247 0C44                                          l4239 0BF8  
                                        l4263 1800                                          l3289 18B4  
                                        l3297 1812                                          l4097 15BC  
                                        l4089 158A                                          l3641 0D10  
                                        l3633 0CEC                                          l3625 0CC6  
                                        l3617 0C9E                                          l3713 1694  
                                        l3609 15D6                                          l3705 106A  
                                        l3721 05B4                                          l3801 0888  
                                        l4177 0556                                          l4193 1118  
                                        l4185 10CE                                          l4169 0F42  
                                        l4249 0C50                                          l4257 17E6  
                                        l3299 1818                                          l4099 15C6  
                                        l3643 0D26                                          l3635 0CF4  
                                        l3651 0D3C                                          l3627 0CCE  
                                        l3619 0CAC                                          l3707 106E  
                                        l3731 05EE                                          l3723 05C4  
                                        l3715 0594                                          l3811 08B4  
                                        l3803 0890                                          l4179 057E  
                                        l4195 111A                                          l4187 10E4  
                                        l4259 17EA                                          l3653 0D4C  
                                        l3645 0D2E                                          l3637 0CFC  
                                        l3629 0CD2                                          l3661 0E14  
                                        l3709 109A                                          l3741 063C  
                                        l3733 05FA                                          l3725 05CA  
                                        l3717 0598                                          l3813 08B8  
                                        l3805 0896                                          l3821 08F0  
                                        l3901 017E                                          l4197 1120  
                                        l4189 10F2                                          ?_pad 0514  
                                        l3655 0D54                                          l3647 0D30  
                                        l3639 0D0A                                          l3671 0E44  
                                        l3663 0E22                                          l3751 069A  
                                        l3743 0642                                          l3735 0602  
                                        l3727 05DA                                          l3719 05AC  
                                        l3823 090C                                          l3831 0956  
                                        l3815 08C8                                          l3807 089C  
                                        l3911 01FE                                          l3903 019E  
                                        l4199 1122                                          l3649 0D36  
                                        l3681 0E8A                                          l3673 0E56  
                                        l3665 0E2A                                          l3593 0A44  
                                        l3761 06E8                                          l3753 06B4  
                                        l3737 0608                                          l3745 065E  
                                        l3729 05E6                                          l3841 09E2  
                                        l3825 091E                                          l3817 08CA  
                                        l3809 08AC                                          l3921 0282  
                                        l3913 021C                                          l3905 01E6  
                                        l3851 1876                                          l3691 0EB6  
                                        l3683 0E92                                          l3675 0E5E  
                                        l3667 0E2E                                          l3659 0E12  
                                        l3595 0A56                                          l3747 0678  
                                        l3755 06C2                                          l3739 063A  
                                        l3843 0A00                                          l3835 0978  
                                        l3771 0738                                          l3827 092E  
                                        l3819 08D0                                          l3931 0316  
                                        l3923 02BA                                          l3915 0244  
                                        l3853 1878                                          l3685 0E98  
                                        l3677 0E66                                          l3669 0E3C  
                                        l3597 0A68                                          l3757 06D2  
                                        l3749 068A                                          l3845 0A0E  
                                        l3837 0980                                          l3781 07B4  
                                        l3773 073C                                          l3765 070A  
                                        l3829 0948                                          l3925 02F2  
                                        l3917 0252                                          l3861 0000  
                                        l3855 187C                                          l3847 186C  
                                        l3951 16D8                                          l3679 0E74  
                                        l3687 0E9E                                          l3599 0A72  
                                        l3695 1012                                          l3759 06D8  
                                        l3839 09A8                                          l3791 083C  
                                        l3783 07D6                                          l3767 0724  
                                        l3935 034E                                          l3919 025A  
                                        l3871 004E                                          l3863 0028  
                                        l3857 1892                                          l3849 1870  
                                        l3945 16C2                                          l3689 0EAE  
                                        l3697 1020                                          l3793 0850  
                                        l3785 080C                                          l3777 079C  
                                        l3769 072C                                          l3929 0306  
                                        l3873 0050                                          l3881 008E  
                                        l3865 0036                                          l3953 1526  
                                        l3947 16D2                                          l3699 1034  
                                        l3795 0854                                          l3779 07B0  
                                        l3787 0810                                          l3891 00E2  
                                        l3883 009E                                          l3875 0062  
                                        l3867 0042                                          l3939 0360  
                                        l3955 1532                                          l3963 1486  
                                        l3971 14BE                                          l3973 19CE  
                                        l3949 16D6                                          l3981 17D2  
                                        l3797 0874                                          l3893 0102  
                                        l3885 00BA                                          l3869 0048  
                                        l3957 154E                                          l3965 14AC  
                                        l3975 19DE                                          l3983 17E2  
                                        l3991 12E4                                          l3799 0878  
                                        l3895 0122                                          l3887 00C8  
                                        l3879 006A                                          l3959 156E  
                                        l3967 14B0                                          l3977 17B8  
                                        l3897 0166                                          l3889 00D2  
                                        l3985 18E6                                          l3969 14BC  
                                        l3979 17CA                                          l3995 12F8  
                                        l3987 18EE                                          l3997 130A  
                                        l3999 131C                                          STR_1 FFF5  
                                        STR_2 FEFE                                          STR_3 FF89  
                                        STR_4 FF96                                          STR_5 FFB8  
                                        STR_6 FFA3                                          STR_7 FFE1  
                                        STR_8 FFAE                                          STR_9 FFE8  
                        ??_Nrf24_print_status 0551                                          u3000 0028  
                                        u3001 0024                                          u3010 009E  
                                        u3011 009A                                          u3100 0316  
                                        u3020 00C8                                          u3101 0312  
                                        u3021 00C4                                          _LATA 04BE  
                                        u3110 16EA                                          u3030 0102  
                                        _LATB 04BF                                          u3111 16E6  
                                        u3031 00FE                                          _LATC 04C0  
                                        u3040 0122                                          u3120 156E  
                                        u3200 120A                                          _LATD 04C1  
                                        u3041 011E                                          u3121 156A  
                                        _LATE 04C2                                          u3050 019E  
                                        u3210 121E                                          u3130 14A8  
                                        _LATF 04C3                                          u3051 019A  
                                        u3211 1218                                          u3300 15A2  
                                        u2500 0A68                                          u3060 0244  
                                        u3220 1220                                          u3140 14D0  
                                        u3301 159E                                          u2501 0A64  
                                        u3061 0240                                          u3141 14CC  
                                        u3150 17C8                                          u3310 15BC  
                                        u2510 0A90                                          u3070 0282  
                                        u3230 1234                                          u3151 17C4  
                                        u3311 15B8                                          u2511 0A8C  
                                        u3071 027E                                          u3231 122E  
                                        u3160 12F4                                          u3400 0DA6  
                                        u3320 138C                                          u2600 0E22  
                                        u2520 0AC6                                          u3080 02BA  
                                        u3240 1236                                          u3161 12F0  
                                        u3401 0DA2                                          u3321 1388  
                                        u2601 0E1E                                          u2521 0AC2  
                                        u3081 02B6                                          u3137 149E  
                                        u3170 131C                                          u3410 0DC4  
                                        u3330 139C                                          u2610 0E3C  
                                        u2530 160C                                          u3090 02F2  
                                        u3250 125C                                          u3171 1318  
                                        u3411 0DC0                                          u3331 1398  
                                        u2611 0E38                                          u2531 1608  
                                        u3091 02EE                                          u3251 1256  
                                        u3420 0E10                                          u3340 13AA  
                                        u2540 0CAC                                          u2620 0E56  
                                        u2700 1694                                          u3260 125E  
                                        u3180 1734                                          u3421 0E0C  
                                        u3341 13A6                                          u2541 0CA8  
                                        u2621 0E52                                          u2701 1690  
                                        u3181 1730                                          u2550 0CC6  
                                        u2630 0E74                                          u2710 05A8  
                                        u3270 0FF2                                          u3190 1208  
                                        u1910 14FE                                          u3350 0F3E  
                                        u3430 0C28                                          u2551 0CC2  
                                        u2631 0E70                                          u2711 05A2  
                                        u3271 0FEE                                          u3191 1202  
                                        u1911 14FA                                          u3351 0F3A  
                                        u3431 0C24                                          u2560 0CEC  
                                        u2640 0E8A                                          u2800 06D2  
                                        u2720 05AA                                          u3280 1004  
                                        u1920 1524                                          u3360 0F62  
                                        u2561 0CE8                                          u2641 0E86  
                                        u2801 06CE                                          u3281 1000  
                                        u1921 1520                                          u3361 0F5E  
                                        u3441 0C5A                                          u2570 0D0A  
                                        u2650 0EAE                                          u2490 0A56  
                                        u2730 05C4                                          u2810 0724  
                                        u3290 1470                                          u3370 10E4  
                                        u2571 0D06                                          u2651 0EAA  
                                        u2491 0A52                                          u2731 05C0  
                                        u2811 0720                                          u3291 146C  
                                        u3371 10E0                                          u2580 0D26  
                                        u2660 1020                                          u2740 05DA  
                                        u2820 076A                                          u2900 08AC  
                                        u3380 110A                                          u2581 0D22  
                                        u2661 101C                                          u2741 05D6  
                                        u2901 08A8                                          u3381 1106  
                                        u3390 0D76                                          u2590 0D4C  
                                        u2670 1042                                          u2750 0678  
                                        u2830 077A                                          u3391 0D72  
                                        u2591 0D48                                          u2671 103E  
                                        u2751 0674                                          u2831 0776  
                                        u2680 108C                                          u2760 068A  
                                        u2840 0798                                          u2920 090C  
                                        u2681 1088                                          u2761 0686  
                                        u2841 0794                                          u2921 0908  
                                        u2690 109A                                          u2770 069A  
                                        u2850 07D2                                          u2930 091E  
                                        u2691 1096                                          u2771 0696  
                                        u2851 07CE                                          u2827 0760  
                                        u2931 091A                                          u2915 08DC  
                                        u3547 14DA                                          u1980 0B20  
                                        u2780 06B4                                          u2860 07F8  
                                        u2940 092E                                          u1981 0B1C  
                                        u2781 06B0                                          u2941 092A  
                                        u3557 1504                                          u1990 17B4  
                                        u2790 06C2                                          u2870 082A  
                                        u2950 0948                                          u1991 17B0  
                                        u3567 1790                                          u2791 06BE  
                                        u2871 0826                                          u2951 0944  
                                        u2880 0838                                          u2960 0956  
                                        u2881 0834                                          u2961 0952  
                                        u2970 09A8                                          u2890 0872  
                                        u2971 09A4                                          u2891 086E  
                                        u2867 07EE                                          u2980 0A3A  
                                        u2981 0A36                                          u2990 188E  
                                        u2991 188A                                          _WPUA 0401  
                                        _WPUB 0409                                          _WPUC 0411  
                                        _WPUD 0419                                          _WPUE 0421  
                                        _WPUF 0429                          Nrf24_setTADDR@buffer 0515  
                                        abs@a 050A                                          _dbuf 05CF  
                                        _main 17E6                                          _dtoa 0594  
                            Nrf24_send@status 0516                                          _prec 05CD  
                                        pad@i 051B                                          pad@p 0518  
                                        fsr0h 04EA                                          fsr1h 04E2  
                                        indf0 04EF                                          fsr2h 04DA  
                                        fsr0l 04E9                                          indf2 04DF  
                                        fsr1l 04E1                                          fsr2l 04D9  
                                        _stoa 070A                                          _xtoa 0874  
                   ?_INT2_SetInterruptHandler 0504                                          prodh 04F4  
                                        prodl 04F3                                          start 001A  
                   __end_of_SPI1_ByteExchange 1896                                _SPI1STATUSbits 0087  
                                ___param_bank 0000                              _TMR0_OverflowISR 16EE  
                    __end_of_AdvancedSettings 1974                                         ??_abs 050C  
                                       ??_pad 051A                       __end_of_TMR0_Initialize 18BE  
                                       ?_main 0501                                         ?_dtoa 051D  
                             __end_of___awdiv 0D5E                                         STR_10 FFC1  
                                       STR_11 FFCA                                         STR_20 FFD5  
                                       STR_12 FF7B                                         STR_21 FEFB  
                                       STR_13 FF5A                                         STR_22 FFEF  
                                       STR_14 FF48                                         STR_23 FFD2  
                                       STR_15 FF6B                                         STR_24 FEFB  
                                       STR_16 FF33                                         STR_25 FFDA  
                                       STR_17 FEB8                                         STR_18 FFEF  
                                       STR_19 FFFB                               __end_of___awmod 0EC0  
                                       ?_stoa 050D                                SPI_read_buff@i 0509  
                             ___awdiv@divisor 0506                                         ?_xtoa 051D  
                                       _IOCAF 0407                                         _IOCBF 040F  
                                       _IOCCF 0417                                         _IOCAN 0406  
                                       _IOCEF 0427                                         _IOCAP 0405  
                                       _IOCBN 040E                                         _IOCBP 040D  
                                       _IOCCN 0416                                         _IOCCP 0415  
                                       _IOCEN 0426                                         _IOCEP 0425  
                                       i2l314 177C                                         i2l441 1A86  
                                       i2l435 1720                                         i2l472 18BE  
                                       i2l474 18E4                               ___awdiv@counter 0508  
                                       _OSCEN 00B3                                  vfpfcnvrt@fmt 052C  
                                       _TMR0H 0319                                         _TMR0L 0318  
                                       _TRISA 04C6                                         _TRISB 04C7  
                                       _TRISC 04C8                                         _TRISD 04C9  
                                       _TRISE 04CA                                         _TRISF 04CB  
                                  _Nrf24_init 1812                                    _Nrf24_send 10B0  
                      ??_Nrf24_configRegister 0507                                   ?_TMR0_Start 0501  
                                       _flags 055C                           read_prec_or_width@c 050A  
                         read_prec_or_width@n 050B                                         _fputc 0A44  
                                       _fputs 15CA                                         pad@fp 0514  
                                       _width 055A                                         _putch 1A84  
                                       dtoa@d 051F                                         dtoa@i 0527  
                                       dtoa@p 0523                                         dtoa@s 0526  
                                       dtoa@w 0524                      _INT1_SetInterruptHandler 1A56  
                                       pclath 04FA                                         pclatu 04FB  
                                       tablat 04F5                                         plusw1 04E3  
                                       plusw2 04DB                                         stoa@l 0519  
                                       stoa@p 0513                                         stoa@s 050F  
                                       stoa@w 0515                                         status 04D8  
                                       xtoa@c 0527                                         xtoa@d 051F  
                                       xtoa@i 0528                                         xtoa@p 0524  
                                       xtoa@w 0525                       _Nrf24_SetSpeedDataRates 12E4  
                             __initialization 13BA                      Nrf24_writeRegister@value 050A  
                               _SPI_read_buff 16BA                                  __end_of_main 1812  
                                __end_of_dtoa 070A                       Nrf24_configRegister@reg 0507  
                                __end_of_stoa 0874                                  __end_of_xtoa 0978  
                SPI1_ByteExchange@returnValue 0505                   ?_INTERRUPT_InterruptManager 0501  
                Nrf24_print_byte_register@dev 0551                  Nrf24_print_byte_register@reg 0555  
                Nrf24_print_byte_register@qty 0556                     Nrf24_configRegister@value 0506  
                                      ??_main 055A                                        ??_dtoa 0521  
                         Nrf24_config@channel 0513                                        ??_stoa 0511  
                                      ??_xtoa 0521                                 __activetblptr 0003  
                 ??_Nrf24_print_byte_register 0557                          __end_of_Nrf24_config 12E4  
                  __end_of_read_prec_or_width 0A44                          __end_of_Nrf24_isSend 0E12  
                         Nrf24_config@payload 0514                                        ?_fputc 0504  
                                      _ACTCON 00AC                                        ?_fputs 050D  
                            ___awdiv@dividend 0504                                        _ANSELA 0400  
                                      ?_putch 0501                                        _ANSELB 0408  
                                      _ANSELC 0410                                        _ANSELD 0418  
                                      _ANSELE 0420                                        _ANSELF 0428  
                                      _T0CON0 031A                                        _T0CON1 031B  
                                      _RB1I2C 0289                                        _RB2I2C 0288  
                                      _RC3I2C 0287                                        _RC4I2C 0286  
                                      _RC4PPS 0215                                        _ODCONA 0402  
                                      _ODCONB 040A                                        _ODCONC 0412  
                                      _RC6PPS 0217                                        _ODCOND 041A  
                                      _ODCONE 0422                                        _ODCONF 042A  
                                      i2l3401 16EE                                        i2l3403 16F0  
                                      i2l3405 1706                                        i2l3441 176A  
                                      i2l3443 1778                                        i2l3293 18BE  
                                      i2l3439 175C                                        _INLVLA 0404  
                                      _INLVLB 040C                                        _INLVLC 0414  
                                      _INLVLD 041C                                        _INLVLE 0424  
                                      _INLVLF 042C                               _Nrf24_getStatus 19FA  
                                      _OSCFRQ 00B1                                 vfpfcnvrt@done 0536  
             Nrf24_print_byte_register@buffer 0557                             __end_of_SPI1_Open 0BD8  
                                      _Timer0 FE79                                ?_SPI_read_buff 0506  
                                vfprintf@cfmt 053F                                     ??___awdiv 0508  
                                   ??___awmod 0508                              ?_TMR0_Initialize 0501  
               Nrf24_getRetransmitDelay@value 0510                          read_prec_or_width@ap 0506  
                                      clear_0 1400                              ___awdiv@quotient 050A  
                             ___awmod@divisor 0506                                        _sender 0BD8  
                                      isa$std 0001                               ___awmod@counter 0508  
                                      _printf 18E6                                        pad@buf 0516  
                                      dtoa@fp 051D                             ?_CLOCK_Initialize 0501  
                                      fputc@c 0504                  _INT2_DefaultInterruptHandler 0000  
                                      fputs@c 0511                                        fputs@i 0512  
                                      fputs@s 050D                            ??_CLOCK_Initialize 0504  
                                __mediumconst FE4E                                        tblptrh 04F7  
                                      tblptrl 04F6                                        tblptru 04F8  
                                 ?_Nrf24_init 0505                                   ?_Nrf24_send 0511  
                                      stoa@cp 0517                                        stoa@fp 050D  
                                      putch@c 0501                              __end_of_vfprintf 1578  
    INT2_SetInterruptHandler@InterruptHandler 0504      INT1_SetInterruptHandler@InterruptHandler 0504  
    INT0_SetInterruptHandler@InterruptHandler 0504                                        xtoa@fp 051D  
                              _SPI1_IsRxReady 0000                                _SPI1_IsTxReady 0000  
                           _SYSTEM_Initialize 1A10                               _Nrf24_powerUpRx 190C  
                             _Nrf24_powerUpTx 1930                                    __accesstop 0560  
                     __end_of__initialization 141A                         Nrf24_getCRCLength@dev 050E  
                   ??_Nrf24_SetSpeedDataRates 0511                                _SPI1_ByteWrite 0000  
                   _Nrf24_print_byte_register 1420                            ?_SYSTEM_Initialize 0501  
                          _Nrf24_getCRCLength 1352                                 ___rparam_used 0001  
               Nrf24_setRetransmitDelay@value 0511                                __pcstackCOMRAM 0501  
                                __pidataBANK5 164E                                  __pidataBANK6 1974  
                         ??_SYSTEM_Initialize 0507                           ?_Nrf24_getCRCLength 050E  
                               __end_of_fputc 0B0E                                 __end_of_fputs 160E  
                           ??_SPI1_Initialize 0504                            _DELAY_microseconds 14D4  
                               __end_of_putch 1A86                     ?_Nrf24_getRetransmitDelay 050E  
                   ?_Nrf24_setRetransmitDelay 050E                            _spi1_configuration FE8B  
                Nrf24_SetSpeedDataRates@value 0511                           ?_DELAY_microseconds 0504  
                         SPI_write_buff@bytes 0508              __end_of_INT2_SetInterruptHandler 1A56  
               Nrf24_print_byte_register@name 0553                       __end_of_Nrf24_getStatus 1A10  
                        ??_Nrf24_getCRCLength 0510                      __end_of_TMR0_OverflowISR 1722  
                                     ??_fputc 0508                     __end_of_SYSTEM_Initialize 1A26  
                                     ??_fputs 0511                                       ??_putch 0504  
                              _rf24_datarates 0580                                    __pbssBANK5 05CD  
                          _DELAY_milliseconds 1786                         _INT0_InterruptHandler 05F8  
                       _TMR0_OverflowCallback 05EF                              _Nrf24_getPALevel 1994  
                             ??_SPI_read_buff 0509                                       IVTBASEH 045E  
                                     IVTBASEL 045D                                       IVTBASEU 045F  
                        ??_DELAY_microseconds 0506                                _rf24_crclength FE9A  
                       __end_of_Nrf24_flushRx 1A7E            Nrf24_print_address_register@buffer 0598  
                         ?_DELAY_milliseconds 0504                             ?_AdvancedSettings 0512  
                                     ?_sender 05A6                                       ?_printf 0541  
                          ??_AdvancedSettings 0514                           Nrf24_isSend@timeout 0513  
                  ??_INT1_SetInterruptHandler 0507                          Nrf24_getDataRate@dev 050E  
                        ??_DELAY_milliseconds 0506                                       _OSCCON1 00AD  
                                     _OSCCON3 00AF                                       _SPI1CLK 008C  
                     __end_of_Nrf24_powerUpRx 1930                       __end_of_Nrf24_powerUpTx 1952  
                                     _SPI1RXB 0080                                       _SPI1TXB 0081  
                  __end_of_Nrf24_readRegister 17E6                                       _OSCTUNE 00B0  
                                ??_TMR0_Start 0504                                       _SLRCONA 0403  
                                     _SLRCONB 040B                                       _SLRCONC 0413  
                                     _SLRCOND 041B                                       _SLRCONE 0423  
                                     _SLRCONF 042B                                    _led_toggle 18BE  
                      __end_of_rf24_crclength FEB8                     ?_INT0_SetInterruptHandler 0504  
                                     __Hparam 0000                                  _Nrf24_config 1268  
                                     __Lparam 0000                                  _Nrf24_isSend 0D5E  
                          __end_of_SPI1_nrf24 FE79                           _Nrf24_writeRegister 1722  
                              _SPI_write_buff 147E                                       ___awdiv 0C9C  
                                     ___awmod 0E12                                     ?_vfprintf 0539  
                          __end_of_TMR0_Start 1A84                            SPI_read_buff@bytes 0508  
                                     __pcinit 13BA                                       __ramtop 2600  
                                     __ptext0 17E6                                       __ptext1 0BD8  
                                     __ptext2 0EC0                                       __ptext3 1722  
                                     __ptext4 10B0                                       __ptext5 147E  
                                     __ptext6 14D4                                       __ptext7 1930  
                                     __ptext8 038E                                       __ptext9 11E8  
                       read_prec_or_width@fmt 0504                              ___awmod@dividend 0504  
                    ??_PIN_MANAGER_Initialize 0504                              ?_Nrf24_getStatus 050E  
                        ?_Nrf24_writeRegister 050A                          end_of_initialization 141A  
                    _INT2_SetInterruptHandler 1A48                               Nrf24_config@dev 0511  
                                   _PIR10bits 04B8                                       fputc@fp 0506  
                                     fputs@fp 050F                            _read_prec_or_width 0978  
                             Nrf24_isSend@dev 0511                 Nrf24_print_address_register@i 059D  
                      __end_of_SPI_write_buff 14D4                             __end_of_vfpfcnvrt 038E  
                             _SPI1_BufferRead 0000                                     _SPI1TCNTH 0083  
                                   _SPI1TCNTL 0082                                       postdec1 04E5  
                                     postdec2 04DD                           ?_read_prec_or_width 0504  
                                     postinc0 04EE                                       postinc1 04E6  
                                     postinc2 04DE                              vfpfcnvrt@convarg 0532  
                                  ??_vfprintf 053F                                     _SPI1_Open 0B0E  
                       _INT1_InterruptHandler 05F5                                     _TMR0_Stop 0000  
                       Nrf24_printDetails@dev 0558                           _SPI1_BufferExchange 0000  
                         Nrf24_getPALevel@dev 050E         __end_of_TMR0_OverflowCallbackRegister 1A48  
               _TMR0_OverflowCallbackRegister 1A3A  TMR0_OverflowCallbackRegister@CallbackHandler 0504  
                                ??_Nrf24_init 0507                                     _TRISCbits 04C8  
                                ??_Nrf24_send 0515                               Nrf24_setTADDR@i 051C  
                            ?_Nrf24_powerUpRx 0508                              ?_Nrf24_powerUpTx 0508  
                       ??_Nrf24_writeRegister 050D                          ??_read_prec_or_width 0508  
                                 ?_led_toggle 0501                               _SPI1_Initialize 19E2  
        __end_of_TMR0_DefaultOverflowCallback 1A88                  _TMR0_DefaultOverflowCallback 1A86  
                             Nrf24_send@value 0513              __end_of_Nrf24_getRetransmitDelay 19CA  
            __end_of_Nrf24_setRetransmitDelay 186A                               ?_SPI_write_buff 0506  
                              __end_of_Timer0 FE8B                  __end_of_INTERRUPT_Initialize 164E  
                          __end_of_Nrf24_init 183E                            __end_of_Nrf24_send 114C  
                                 _rf24_pa_dbm 0600                  _INT0_DefaultInterruptHandler 0000  
                                  ?_SPI1_Open 0501                                   vfpfcnvrt@ap 052E  
                                 vfpfcnvrt@cp 0537                                   vfpfcnvrt@fp 052A  
                          Nrf24_getStatus@dev 050E                                __end_of_sender 0C9C  
                              __end_of_printf 190C                      __end_of_Nrf24_getPALevel 19B2  
                         start_initialization 13BA                                   __end_of_abs 16BA  
                                 __end_of_pad 10B0                             ?_TMR0_OverflowISR 0501  
                                  ivt0x8_base 0008                            ??_TMR0_OverflowISR 0502  
                        SPI_write_buff@buffer 0506                 ?_TMR0_DefaultOverflowCallback 0501  
                                 vfprintf@fmt 053B                                _Nrf24_setTADDR 0EC0  
        __end_of_Nrf24_print_address_register 1012                  _Nrf24_print_address_register 0F6C  
                                 __pdataBANK5 0560                                   __pdataBANK6 0600  
                                    ??_sender 055A                                      ??_printf 054F  
                        Nrf24_getCRCLength@AA 0511                                 _SPI1_ByteRead 0000  
                                 __pbssCOMRAM 055A              __end_of_INT0_SetInterruptHandler 1A72  
                               __pcstackBANK5 0598                       __end_of_SPI1_Initialize 19FA  
              ?_TMR0_OverflowCallbackRegister 0504                            Nrf24_powerUpRx@dev 0508  
                    Nrf24_print_status@status 0552                      ?_Nrf24_SetSpeedDataRates 050E  
                          Nrf24_powerUpTx@dev 0508                         _INT2_InterruptHandler 05F2  
                                   __pnvBANK5 05EF                            _Nrf24_readRegister 17B6  
                      __end_of_Nrf24_setTADDR 0F6C                        _PIN_MANAGER_Initialize 114C  
                                   _dtoa$1908 0521                         __end_of_SPI_read_buff 16EE  
                  __end_of_Nrf24_printDetails 0594                                 __pmediumconst FE4E  
                                    ?___awdiv 0504                                      ?___awmod 0504  
                           _Nrf24_getDataRate 1578                      _Nrf24_getRetransmitDelay 19B2  
                    _Nrf24_setRetransmitDelay 183E                                   ??_SPI1_Open 0504  
                         ?_Nrf24_readRegister 050A                            Nrf24_isSend@status 051D  
               ?_Nrf24_print_address_register 0551                           Nrf24_getDataRate@dr 0511  
                          ?_Nrf24_getDataRate 050E                  ??_INTERRUPT_InterruptManager 0502  
            Nrf24_print_address_register@name 0553                DELAY_microseconds@microseconds 0504  
                  ??_INT2_SetInterruptHandler 0507                           ??_Nrf24_getDataRate 0510  
                  __end_of_Nrf24_print_status 1268                               SPI_write_buff@i 0509  
                        ??_Nrf24_readRegister 050D                          _INTERRUPT_Initialize 160E  
                       Nrf24_readRegister@len 050C                         Nrf24_readRegister@reg 050D  
                                sender@F17891 0560                              _CLOCK_Initialize 1A26  
                           ??_TMR0_Initialize 0507                                      _LATCbits 04C0  
                                    _LATFbits 04C3                     ?_INT1_SetInterruptHandler 0504  
                                    _PIE3bits 04A1                                  _SPI1CON0bits 0084  
                                    i2u232_40 176A                                      i2u232_41 1766  
                                    i2u233_40 1778                                      i2u233_41 1774  
                                    i2u219_40 18CE                                      i2u219_41 18C8  
                                    i2u219_46 18D0                                      i2u228_40 1706  
                                    i2u228_41 1702                               ?_Nrf24_setTADDR 050E  
                                    i2u229_48 170C                                      i2u229_49 1720  
                                    _PIR1bits 04AF                                      _SPI1BAUD 0089  
                                    _PIR3bits 04B1                                      _SPI1CON0 0084  
                                    _SPI1CON1 0085                                      _SPI1CON2 0086  
                   __end_of_Nrf24_getDataRate 15CA                                      _PIR6bits 04B4  
              DELAY_milliseconds@milliseconds 0504                  __end_of_Nrf24_configRegister 19E2  
                         AdvancedSettings@dev 0512                ??_TMR0_DefaultOverflowCallback 0501  
                                   _vfpfcnvrt 0000                                  _SPI1INTFbits 008A  
                           _SPI1_Deinitialize 0000                   Nrf24_getRetransmitDelay@dev 050E  
             __end_of_Nrf24_SetSpeedDataRates 1352                   Nrf24_setRetransmitDelay@dev 050E  
                 Nrf24_setRetransmitDelay@val 0510                              ?_SPI1_Initialize 0501  
                           Nrf24_getStatus@rv 0510                                   _INTCON0bits 04D6  
                                   copy_data0 13CE                                     copy_data1 13EE  
                       ?_INTERRUPT_Initialize 0501                    Nrf24_SetSpeedDataRates@dev 050E  
                    _INT0_SetInterruptHandler 1A64                    Nrf24_SetSpeedDataRates@val 0510  
                                ??_led_toggle 0501                        Nrf24_writeRegister@len 050C  
                      Nrf24_writeRegister@reg 050D                              ??_SPI_write_buff 0509  
                                    __Hrparam 0000                                    vfprintf@ap 053D  
                                    __Lrparam 0000                                    vfprintf@fp 0539  
                               _Nrf24_flushRx 1A72                                    ?_vfpfcnvrt 052A  
                          __end_of_led_toggle 18E6                   __end_of_Nrf24_writeRegister 1754  
                         SPI_read_buff@buffer 0506                ??_Nrf24_print_address_register 0557  
                                  _T0CON0bits 031A                             ?_Nrf24_getPALevel 050E  
                                    __pivt0x8 0008                                      __ptext10 1420  
                                    __ptext11 0F6C                                      __ptext20 15CA  
                                    __ptext12 18E6                                      __ptext21 0A44  
                                    __ptext13 1526                                      __ptext30 0D5E  
                                    __ptext22 1A84                                      __ptext14 0000  
                                    __ptext31 1786                                      __ptext23 1686  
                                    __ptext15 0874                                      __ptext40 12E4  
                                    __ptext32 1812                                      __ptext24 0E12  
                                    __ptext16 070A                                      __ptext41 17B6  
                                    __ptext33 0B0E                                      __ptext25 0C9C  
                                    __ptext17 0978                                      __ptext50 114C  
                                    __ptext42 16BA                                      __ptext34 1268  
                                    __ptext26 19B2                                      __ptext18 0594  
                                    __ptext51 160E                                      __ptext43 19CA  
                                    __ptext35 190C                                      __ptext27 1994  
                                    __ptext19 1012                                      __ptext52 1A48  
                                    __ptext44 186A                                      __ptext36 19FA  
                                    __ptext28 1578                                      __ptext53 1A56  
                                    __ptext45 1A7E                                      __ptext37 1A72  
                                    __ptext29 1352                                      __ptext54 1A64  
                                    __ptext46 1A10                                      __ptext38 1952  
                                    __ptext55 1A26                                      __ptext47 1896  
                                    __ptext39 183E                                      __ptext56 1754  
                                    __ptext48 1A3A                                      __ptext57 16EE  
                                    __ptext49 19E2                                      __ptext58 1A86  
                                    __ptext59 18BE                            ??_Nrf24_getPALevel 0510  
                            _AdvancedSettings 1952               Nrf24_print_address_register@dev 0551  
             Nrf24_print_address_register@reg 0555               Nrf24_print_address_register@qty 0556  
                                   sender@buf 05A8                                     sender@nrf 05CA  
                                   sender@ret 05C8                       Nrf24_readRegister@value 050A  
                              ?_Nrf24_flushRx 0506                                 Nrf24_isSend@i 0519  
                                    isa$xinst 0000                                 Nrf24_init@dev 0505  
                                    _vfprintf 1526            __end_of_INTERRUPT_InterruptManager 1786  
                  _INTERRUPT_InterruptManager 1754                                     printf@fmt 0541  
                               Nrf24_send@dev 0511                  _INT1_DefaultInterruptHandler 0000  
                  ?_Nrf24_print_byte_register 0551                        ??_INTERRUPT_Initialize 0507  
                        _Nrf24_configRegister 19CA                                      intlevel2 0000  
                     Nrf24_getDataRate@result 0510                       ?_PIN_MANAGER_Initialize 0501  
                   SPI1_ByteExchange@byteData 0504                    ??_Nrf24_getRetransmitDelay 0510  
                  ??_Nrf24_setRetransmitDelay 0511                                 ?_Nrf24_config 0511  
                               ?_Nrf24_isSend 0511               ??_TMR0_OverflowCallbackRegister 0507  
                                 _TMR0_Reload 0000                             ??_Nrf24_getStatus 0510  
                                  _SPI1SDIPPS 026B                                    _SPI1SCKPPS 026A  
                                    printf@ap 054F                              _SPI1_BufferWrite 0000  
                                 ??_vfpfcnvrt 0530                       Nrf24_printDetails@delay 05A3  
                    __end_of_CLOCK_Initialize 1A3A                                    _SPI1_Close 0000  
                Nrf24_printDetails@retransmit 05A5                         Nrf24_getPALevel@level 0510  
                          _Nrf24_printDetails 038E                                    _SPI1_nrf24 FE4F  
           __end_of_Nrf24_print_byte_register 147E                               _TMR0_Initialize 1896  
            __end_of_INT1_SetInterruptHandler 1A64                    __end_of_Nrf24_getCRCLength 13BA  
                                  _TMR0_Start 1A7E                              Nrf24_flushRx@dev 0506  
                       ?_Nrf24_configRegister 0506                           ?_Nrf24_printDetails 0558  
              __end_of_PIN_MANAGER_Initialize 11E8                              ??_Nrf24_setTADDR 0512  
                  __end_of_DELAY_microseconds 1526                            sender@pvParameters 05A6  
                             ??_Nrf24_flushRx 0508                       SPI1_Open@spiConfigIndex 0504  
                              ??_Nrf24_config 0515                                ??_Nrf24_isSend 0515  
                          _Nrf24_print_status 11E8                    __end_of_spi1_configuration FE9A  
