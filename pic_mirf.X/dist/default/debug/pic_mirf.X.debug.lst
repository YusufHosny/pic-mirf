

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Mon Dec 16 20:35:53 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK5,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,space=0,delta=1,noexec
     7                           	psect	nvBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1,group=3
    25                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1,group=1
    26                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1,group=1
    27                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1,group=1
    28                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1,group=1
    29                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1,group=1
    30                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1,group=1
    31                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1,group=1
    32                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1,group=3
    33                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1,group=3
    34                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1,group=3
    35                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1,group=3
    36                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1,group=2
    37                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1,group=2
    38                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,space=0,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,space=0,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,space=0,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,space=0,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,space=0,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,space=0,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,space=0,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,space=0,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,space=0,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,space=0,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,space=0,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,space=0,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,space=0,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,space=0,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,space=0,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,space=0,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,space=0,delta=1
    73                           	psect	ivt0x8,global,reloc=2,class=CODE,space=0,delta=1,noexec,keep,optim=
    74                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    75                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    76                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    77                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    78   000000                     
    79                           ; Generated 18/12/2023 GMT
    80                           ; 
    81                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    82                           ; All rights reserved.
    83                           ; 
    84                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    85                           ; 
    86                           ; Redistribution and use in source and binary forms, with or without modification, are
    87                           ; permitted provided that the following conditions are met:
    88                           ; 
    89                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    90                           ;        conditions and the following disclaimer.
    91                           ; 
    92                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    93                           ;        of conditions and the following disclaimer in the documentation and/or other
    94                           ;        materials provided with the distribution. Publication is not required when
    95                           ;        this file is used in an embedded application.
    96                           ; 
    97                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    98                           ;        software without specific prior written permission.
    99                           ; 
   100                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   101                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   102                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   103                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   104                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   105                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   106                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   107                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   108                           ; 
   109                           ; 
   110                           ; Code-generator required, PIC18F57Q43 Definitions
   111                           ; 
   112                           ; SFR Addresses
   113   0004E0                     bsr             equ	1248
   114   0004E9                     fsr0            equ	1257
   115   0004EA                     fsr0h           equ	1258
   116   0004E9                     fsr0l           equ	1257
   117   0004E1                     fsr1            equ	1249
   118   0004E2                     fsr1h           equ	1250
   119   0004E1                     fsr1l           equ	1249
   120   0004D9                     fsr2            equ	1241
   121   0004DA                     fsr2h           equ	1242
   122   0004D9                     fsr2l           equ	1241
   123   0004EF                     indf0           equ	1263
   124   0004E7                     indf1           equ	1255
   125   0004DF                     indf2           equ	1247
   126   0004D6                     intcon          equ	1238
   127   000041                     nvmcon          equ	65
   128   0004F9                     pcl             equ	1273
   129   0004FA                     pclath          equ	1274
   130   0004FB                     pclatu          equ	1275
   131   0004EB                     plusw0          equ	1259
   132   0004E3                     plusw1          equ	1251
   133   0004DB                     plusw2          equ	1243
   134   0004ED                     postdec0        equ	1261
   135   0004E5                     postdec1        equ	1253
   136   0004DD                     postdec2        equ	1245
   137   0004EE                     postinc0        equ	1262
   138   0004E6                     postinc1        equ	1254
   139   0004DE                     postinc2        equ	1246
   140   0004EC                     preinc0         equ	1260
   141   0004E4                     preinc1         equ	1252
   142   0004DC                     preinc2         equ	1244
   143   0004F3                     prod            equ	1267
   144   0004F4                     prodh           equ	1268
   145   0004F3                     prodl           equ	1267
   146   0004D8                     status          equ	1240
   147   0004F5                     tablat          equ	1269
   148   0004F6                     tblptr          equ	1270
   149   0004F7                     tblptrh         equ	1271
   150   0004F6                     tblptrl         equ	1270
   151   0004F8                     tblptru         equ	1272
   152   0004FD                     tosl            equ	1277
   153   0004E8                     wreg            equ	1256
   154   000039                     CLKRCON         equ	57	;# 
   155   00003A                     CLKRCLK         equ	58	;# 
   156   000040                     NVMCON0         equ	64	;# 
   157   000041                     NVMCON1         equ	65	;# 
   158   000042                     NVMLOCK         equ	66	;# 
   159   000043                     NVMADR          equ	67	;# 
   160   000043                     NVMADRL         equ	67	;# 
   161   000044                     NVMADRH         equ	68	;# 
   162   000045                     NVMADRU         equ	69	;# 
   163   000046                     NVMDAT          equ	70	;# 
   164   000046                     NVMDATL         equ	70	;# 
   165   000047                     NVMDATH         equ	71	;# 
   166   000048                     VREGCON         equ	72	;# 
   167   000049                     BORCON          equ	73	;# 
   168   00004A                     HLVDCON0        equ	74	;# 
   169   00004B                     HLVDCON1        equ	75	;# 
   170   00004C                     ZCDCON          equ	76	;# 
   171   000060                     PMD0            equ	96	;# 
   172   000061                     PMD1            equ	97	;# 
   173   000063                     PMD3            equ	99	;# 
   174   000064                     PMD4            equ	100	;# 
   175   000065                     PMD5            equ	101	;# 
   176   000066                     PMD6            equ	102	;# 
   177   000067                     PMD7            equ	103	;# 
   178   000068                     PMD8            equ	104	;# 
   179   00006A                     MD1CON0         equ	106	;# 
   180   00006B                     MD1CON1         equ	107	;# 
   181   00006C                     MD1SRC          equ	108	;# 
   182   00006D                     MD1CARL         equ	109	;# 
   183   00006E                     MD1CARH         equ	110	;# 
   184   00006F                     CMOUT           equ	111	;# 
   185   000070                     CM1CON0         equ	112	;# 
   186   000071                     CM1CON1         equ	113	;# 
   187   000072                     CM1NCH          equ	114	;# 
   188   000073                     CM1PCH          equ	115	;# 
   189   000074                     CM2CON0         equ	116	;# 
   190   000075                     CM2CON1         equ	117	;# 
   191   000076                     CM2NCH          equ	118	;# 
   192   000077                     CM2PCH          equ	119	;# 
   193   000078                     WDTCON0         equ	120	;# 
   194   000079                     WDTCON1         equ	121	;# 
   195   00007A                     WDTPS           equ	122	;# 
   196   00007A                     WDTPSL          equ	122	;# 
   197   00007B                     WDTPSH          equ	123	;# 
   198   00007C                     WDTTMR          equ	124	;# 
   199   00007D                     DAC1DAT         equ	125	;# 
   200   00007D                     DAC1DATL        equ	125	;# 
   201   00007F                     DAC1CON         equ	127	;# 
   202   000080                     SPI1RXB         equ	128	;# 
   203   000081                     SPI1TXB         equ	129	;# 
   204   000082                     SPI1TCNT        equ	130	;# 
   205   000082                     SPI1TCNTL       equ	130	;# 
   206   000083                     SPI1TCNTH       equ	131	;# 
   207   000084                     SPI1CON0        equ	132	;# 
   208   000085                     SPI1CON1        equ	133	;# 
   209   000086                     SPI1CON2        equ	134	;# 
   210   000087                     SPI1STATUS      equ	135	;# 
   211   000088                     SPI1TWIDTH      equ	136	;# 
   212   000089                     SPI1BAUD        equ	137	;# 
   213   00008A                     SPI1INTF        equ	138	;# 
   214   00008B                     SPI1INTE        equ	139	;# 
   215   00008C                     SPI1CLK         equ	140	;# 
   216   00008D                     SPI2RXB         equ	141	;# 
   217   00008E                     SPI2TXB         equ	142	;# 
   218   00008F                     SPI2TCNT        equ	143	;# 
   219   00008F                     SPI2TCNTL       equ	143	;# 
   220   000090                     SPI2TCNTH       equ	144	;# 
   221   000091                     SPI2CON0        equ	145	;# 
   222   000092                     SPI2CON1        equ	146	;# 
   223   000093                     SPI2CON2        equ	147	;# 
   224   000094                     SPI2STATUS      equ	148	;# 
   225   000095                     SPI2TWIDTH      equ	149	;# 
   226   000096                     SPI2BAUD        equ	150	;# 
   227   000097                     SPI2INTF        equ	151	;# 
   228   000098                     SPI2INTE        equ	152	;# 
   229   000099                     SPI2CLK         equ	153	;# 
   230   0000AC                     ACTCON          equ	172	;# 
   231   0000AD                     OSCCON1         equ	173	;# 
   232   0000AE                     OSCCON2         equ	174	;# 
   233   0000AF                     OSCCON3         equ	175	;# 
   234   0000B0                     OSCTUNE         equ	176	;# 
   235   0000B1                     OSCFRQ          equ	177	;# 
   236   0000B1                     OSCFREQ         equ	177	;# 
   237   0000B2                     OSCSTAT         equ	178	;# 
   238   0000B2                     OSCSTAT1        equ	178	;# 
   239   0000B3                     OSCEN           equ	179	;# 
   240   0000B4                     PRLOCK          equ	180	;# 
   241   0000B5                     SCANPR          equ	181	;# 
   242   0000B6                     DMA1PR          equ	182	;# 
   243   0000B7                     DMA2PR          equ	183	;# 
   244   0000B8                     DMA3PR          equ	184	;# 
   245   0000B9                     DMA4PR          equ	185	;# 
   246   0000BA                     DMA5PR          equ	186	;# 
   247   0000BB                     DMA6PR          equ	187	;# 
   248   0000BE                     MAINPR          equ	190	;# 
   249   0000BF                     ISRPR           equ	191	;# 
   250   0000D4                     CLCDATA         equ	212	;# 
   251   0000D5                     CLCSELECT       equ	213	;# 
   252   0000D6                     CLCnCON         equ	214	;# 
   253   0000D7                     CLCnPOL         equ	215	;# 
   254   0000D8                     CLCnSEL0        equ	216	;# 
   255   0000D9                     CLCnSEL1        equ	217	;# 
   256   0000DA                     CLCnSEL2        equ	218	;# 
   257   0000DB                     CLCnSEL3        equ	219	;# 
   258   0000DC                     CLCnGLS0        equ	220	;# 
   259   0000DD                     CLCnGLS1        equ	221	;# 
   260   0000DE                     CLCnGLS2        equ	222	;# 
   261   0000DF                     CLCnGLS3        equ	223	;# 
   262   0000E8                     DMASELECT       equ	232	;# 
   263   0000E9                     DMAnBUF         equ	233	;# 
   264   0000EA                     DMAnDCNT        equ	234	;# 
   265   0000EA                     DMAnDCNTL       equ	234	;# 
   266   0000EB                     DMAnDCNTH       equ	235	;# 
   267   0000EC                     DMAnDPTR        equ	236	;# 
   268   0000EC                     DMAnDPTRL       equ	236	;# 
   269   0000ED                     DMAnDPTRH       equ	237	;# 
   270   0000EE                     DMAnDSZ         equ	238	;# 
   271   0000EE                     DMAnDSZL        equ	238	;# 
   272   0000EF                     DMAnDSZH        equ	239	;# 
   273   0000F0                     DMAnDSA         equ	240	;# 
   274   0000F0                     DMAnDSAL        equ	240	;# 
   275   0000F1                     DMAnDSAH        equ	241	;# 
   276   0000F2                     DMAnSCNT        equ	242	;# 
   277   0000F2                     DMAnSCNTL       equ	242	;# 
   278   0000F3                     DMAnSCNTH       equ	243	;# 
   279   0000F4                     DMAnSPTR        equ	244	;# 
   280   0000F4                     DMAnSPTRL       equ	244	;# 
   281   0000F5                     DMAnSPTRH       equ	245	;# 
   282   0000F6                     DMAnSPTRU       equ	246	;# 
   283   0000F7                     DMAnSSZ         equ	247	;# 
   284   0000F7                     DMAnSSZL        equ	247	;# 
   285   0000F8                     DMAnSSZH        equ	248	;# 
   286   0000F9                     DMAnSSA         equ	249	;# 
   287   0000F9                     DMAnSSAL        equ	249	;# 
   288   0000FA                     DMAnSSAH        equ	250	;# 
   289   0000FB                     DMAnSSAU        equ	251	;# 
   290   0000FC                     DMAnCON0        equ	252	;# 
   291   0000FD                     DMAnCON1        equ	253	;# 
   292   0000FE                     DMAnAIRQ        equ	254	;# 
   293   0000FF                     DMAnSIRQ        equ	255	;# 
   294   000200                     PPSLOCK         equ	512	;# 
   295   000201                     RA0PPS          equ	513	;# 
   296   000202                     RA1PPS          equ	514	;# 
   297   000203                     RA2PPS          equ	515	;# 
   298   000204                     RA3PPS          equ	516	;# 
   299   000205                     RA4PPS          equ	517	;# 
   300   000206                     RA5PPS          equ	518	;# 
   301   000207                     RA6PPS          equ	519	;# 
   302   000208                     RA7PPS          equ	520	;# 
   303   000209                     RB0PPS          equ	521	;# 
   304   00020A                     RB1PPS          equ	522	;# 
   305   00020B                     RB2PPS          equ	523	;# 
   306   00020C                     RB3PPS          equ	524	;# 
   307   00020D                     RB4PPS          equ	525	;# 
   308   00020E                     RB5PPS          equ	526	;# 
   309   00020F                     RB6PPS          equ	527	;# 
   310   000210                     RB7PPS          equ	528	;# 
   311   000211                     RC0PPS          equ	529	;# 
   312   000212                     RC1PPS          equ	530	;# 
   313   000213                     RC2PPS          equ	531	;# 
   314   000214                     RC3PPS          equ	532	;# 
   315   000215                     RC4PPS          equ	533	;# 
   316   000216                     RC5PPS          equ	534	;# 
   317   000217                     RC6PPS          equ	535	;# 
   318   000218                     RC7PPS          equ	536	;# 
   319   000219                     RD0PPS          equ	537	;# 
   320   00021A                     RD1PPS          equ	538	;# 
   321   00021B                     RD2PPS          equ	539	;# 
   322   00021C                     RD3PPS          equ	540	;# 
   323   00021D                     RD4PPS          equ	541	;# 
   324   00021E                     RD5PPS          equ	542	;# 
   325   00021F                     RD6PPS          equ	543	;# 
   326   000220                     RD7PPS          equ	544	;# 
   327   000221                     RE0PPS          equ	545	;# 
   328   000222                     RE1PPS          equ	546	;# 
   329   000223                     RE2PPS          equ	547	;# 
   330   000229                     RF0PPS          equ	553	;# 
   331   00022A                     RF1PPS          equ	554	;# 
   332   00022B                     RF2PPS          equ	555	;# 
   333   00022C                     RF3PPS          equ	556	;# 
   334   00022D                     RF4PPS          equ	557	;# 
   335   00022E                     RF5PPS          equ	558	;# 
   336   00022F                     RF6PPS          equ	559	;# 
   337   000230                     RF7PPS          equ	560	;# 
   338   00023E                     INT0PPS         equ	574	;# 
   339   00023F                     INT1PPS         equ	575	;# 
   340   000240                     INT2PPS         equ	576	;# 
   341   000241                     T0CKIPPS        equ	577	;# 
   342   000242                     T1CKIPPS        equ	578	;# 
   343   000243                     T1GPPS          equ	579	;# 
   344   000244                     T3CKIPPS        equ	580	;# 
   345   000245                     T3GPPS          equ	581	;# 
   346   000246                     T5CKIPPS        equ	582	;# 
   347   000247                     T5GPPS          equ	583	;# 
   348   000248                     T2INPPS         equ	584	;# 
   349   000249                     T4INPPS         equ	585	;# 
   350   00024A                     T6INPPS         equ	586	;# 
   351   00024F                     CCP1PPS         equ	591	;# 
   352   000250                     CCP2PPS         equ	592	;# 
   353   000251                     CCP3PPS         equ	593	;# 
   354   000253                     PWM1ERSPPS      equ	595	;# 
   355   000254                     PWM2ERSPPS      equ	596	;# 
   356   000255                     PWM3ERSPPS      equ	597	;# 
   357   000257                     PWMIN0PPS       equ	599	;# 
   358   000258                     PWMIN1PPS       equ	600	;# 
   359   000259                     SMT1WINPPS      equ	601	;# 
   360   00025A                     SMT1SIGPPS      equ	602	;# 
   361   00025B                     CWG1PPS         equ	603	;# 
   362   00025B                     CWG1INPPS       equ	603	;# 
   363   00025C                     CWG2PPS         equ	604	;# 
   364   00025C                     CWG2INPPS       equ	604	;# 
   365   00025D                     CWG3PPS         equ	605	;# 
   366   00025D                     CWG3INPPS       equ	605	;# 
   367   00025E                     MD1CARLPPS      equ	606	;# 
   368   00025E                     MDCARLPPS       equ	606	;# 
   369   00025F                     MD1CARHPPS      equ	607	;# 
   370   00025F                     MDCARHPPS       equ	607	;# 
   371   000260                     MD1SRCPPS       equ	608	;# 
   372   000260                     MDSRCPPS        equ	608	;# 
   373   000261                     CLCIN0PPS       equ	609	;# 
   374   000262                     CLCIN1PPS       equ	610	;# 
   375   000263                     CLCIN2PPS       equ	611	;# 
   376   000264                     CLCIN3PPS       equ	612	;# 
   377   000265                     CLCIN4PPS       equ	613	;# 
   378   000266                     CLCIN5PPS       equ	614	;# 
   379   000267                     CLCIN6PPS       equ	615	;# 
   380   000268                     CLCIN7PPS       equ	616	;# 
   381   000269                     ADACTPPS        equ	617	;# 
   382   00026A                     SPI1SCKPPS      equ	618	;# 
   383   00026B                     SPI1SDIPPS      equ	619	;# 
   384   00026C                     SPI1SSPPS       equ	620	;# 
   385   00026D                     SPI2SCKPPS      equ	621	;# 
   386   00026E                     SPI2SDIPPS      equ	622	;# 
   387   00026F                     SPI2SSPPS       equ	623	;# 
   388   000270                     I2C1SDAPPS      equ	624	;# 
   389   000271                     I2C1SCLPPS      equ	625	;# 
   390   000272                     U1RXPPS         equ	626	;# 
   391   000273                     U1CTSPPS        equ	627	;# 
   392   000274                     U2RXPPS         equ	628	;# 
   393   000275                     U2CTSPPS        equ	629	;# 
   394   000276                     U3RXPPS         equ	630	;# 
   395   000277                     U3CTSPPS        equ	631	;# 
   396   000278                     U4RXPPS         equ	632	;# 
   397   000279                     U4CTSPPS        equ	633	;# 
   398   00027A                     U5RXPPS         equ	634	;# 
   399   00027B                     U5CTSPPS        equ	635	;# 
   400   000286                     RC4I2C          equ	646	;# 
   401   000287                     RC3I2C          equ	647	;# 
   402   000288                     RB2I2C          equ	648	;# 
   403   000289                     RB1I2C          equ	649	;# 
   404   00028B                     I2C1RXB         equ	651	;# 
   405   00028C                     I2C1TXB         equ	652	;# 
   406   00028D                     I2C1CNT         equ	653	;# 
   407   00028E                     I2C1ADB0        equ	654	;# 
   408   00028F                     I2C1ADB1        equ	655	;# 
   409   000290                     I2C1ADR0        equ	656	;# 
   410   000291                     I2C1ADR1        equ	657	;# 
   411   000292                     I2C1ADR2        equ	658	;# 
   412   000293                     I2C1ADR3        equ	659	;# 
   413   000294                     I2C1CON0        equ	660	;# 
   414   000295                     I2C1CON1        equ	661	;# 
   415   000296                     I2C1CON2        equ	662	;# 
   416   000297                     I2C1ERR         equ	663	;# 
   417   000298                     I2C1STAT0       equ	664	;# 
   418   000299                     I2C1STAT1       equ	665	;# 
   419   00029A                     I2C1PIR         equ	666	;# 
   420   00029B                     I2C1PIE         equ	667	;# 
   421   00029C                     I2C1CLK         equ	668	;# 
   422   00029D                     I2C1BTO         equ	669	;# 
   423   0002A1                     U1RXB           equ	673	;# 
   424   0002A1                     U1RXBL          equ	673	;# 
   425   0002A2                     U1RXCHK         equ	674	;# 
   426   0002A3                     U1TXB           equ	675	;# 
   427   0002A3                     U1TXBL          equ	675	;# 
   428   0002A4                     U1TXCHK         equ	676	;# 
   429   0002A5                     U1P1            equ	677	;# 
   430   0002A5                     U1P1L           equ	677	;# 
   431   0002A6                     U1P1H           equ	678	;# 
   432   0002A7                     U1P2            equ	679	;# 
   433   0002A7                     U1P2L           equ	679	;# 
   434   0002A8                     U1P2H           equ	680	;# 
   435   0002A9                     U1P3            equ	681	;# 
   436   0002A9                     U1P3L           equ	681	;# 
   437   0002AA                     U1P3H           equ	682	;# 
   438   0002AB                     U1CON0          equ	683	;# 
   439   0002AC                     U1CON1          equ	684	;# 
   440   0002AD                     U1CON2          equ	685	;# 
   441   0002AE                     U1BRG           equ	686	;# 
   442   0002AE                     U1BRGL          equ	686	;# 
   443   0002AF                     U1BRGH          equ	687	;# 
   444   0002B0                     U1FIFO          equ	688	;# 
   445   0002B1                     U1UIR           equ	689	;# 
   446   0002B2                     U1ERRIR         equ	690	;# 
   447   0002B3                     U1ERRIE         equ	691	;# 
   448   0002B4                     U2RXB           equ	692	;# 
   449   0002B4                     U2RXBL          equ	692	;# 
   450   0002B6                     U2TXB           equ	694	;# 
   451   0002B6                     U2TXBL          equ	694	;# 
   452   0002B8                     U2P1            equ	696	;# 
   453   0002B8                     U2P1L           equ	696	;# 
   454   0002BA                     U2P2            equ	698	;# 
   455   0002BA                     U2P2L           equ	698	;# 
   456   0002BC                     U2P3            equ	700	;# 
   457   0002BC                     U2P3L           equ	700	;# 
   458   0002BE                     U2CON0          equ	702	;# 
   459   0002BF                     U2CON1          equ	703	;# 
   460   0002C0                     U2CON2          equ	704	;# 
   461   0002C1                     U2BRG           equ	705	;# 
   462   0002C1                     U2BRGL          equ	705	;# 
   463   0002C2                     U2BRGH          equ	706	;# 
   464   0002C3                     U2FIFO          equ	707	;# 
   465   0002C4                     U2UIR           equ	708	;# 
   466   0002C5                     U2ERRIR         equ	709	;# 
   467   0002C6                     U2ERRIE         equ	710	;# 
   468   0002C7                     U3RXB           equ	711	;# 
   469   0002C7                     U3RXBL          equ	711	;# 
   470   0002C9                     U3TXB           equ	713	;# 
   471   0002C9                     U3TXBL          equ	713	;# 
   472   0002CB                     U3P1            equ	715	;# 
   473   0002CB                     U3P1L           equ	715	;# 
   474   0002CD                     U3P2            equ	717	;# 
   475   0002CD                     U3P2L           equ	717	;# 
   476   0002CF                     U3P3            equ	719	;# 
   477   0002CF                     U3P3L           equ	719	;# 
   478   0002D1                     U3CON0          equ	721	;# 
   479   0002D2                     U3CON1          equ	722	;# 
   480   0002D3                     U3CON2          equ	723	;# 
   481   0002D4                     U3BRG           equ	724	;# 
   482   0002D4                     U3BRGL          equ	724	;# 
   483   0002D5                     U3BRGH          equ	725	;# 
   484   0002D6                     U3FIFO          equ	726	;# 
   485   0002D7                     U3UIR           equ	727	;# 
   486   0002D8                     U3ERRIR         equ	728	;# 
   487   0002D9                     U3ERRIE         equ	729	;# 
   488   0002DA                     U4RXB           equ	730	;# 
   489   0002DA                     U4RXBL          equ	730	;# 
   490   0002DC                     U4TXB           equ	732	;# 
   491   0002DC                     U4TXBL          equ	732	;# 
   492   0002DE                     U4P1            equ	734	;# 
   493   0002DE                     U4P1L           equ	734	;# 
   494   0002E0                     U4P2            equ	736	;# 
   495   0002E0                     U4P2L           equ	736	;# 
   496   0002E2                     U4P3            equ	738	;# 
   497   0002E2                     U4P3L           equ	738	;# 
   498   0002E4                     U4CON0          equ	740	;# 
   499   0002E5                     U4CON1          equ	741	;# 
   500   0002E6                     U4CON2          equ	742	;# 
   501   0002E7                     U4BRG           equ	743	;# 
   502   0002E7                     U4BRGL          equ	743	;# 
   503   0002E8                     U4BRGH          equ	744	;# 
   504   0002E9                     U4FIFO          equ	745	;# 
   505   0002EA                     U4UIR           equ	746	;# 
   506   0002EB                     U4ERRIR         equ	747	;# 
   507   0002EC                     U4ERRIE         equ	748	;# 
   508   0002ED                     U5RXB           equ	749	;# 
   509   0002ED                     U5RXBL          equ	749	;# 
   510   0002EF                     U5TXB           equ	751	;# 
   511   0002EF                     U5TXBL          equ	751	;# 
   512   0002F1                     U5P1            equ	753	;# 
   513   0002F1                     U5P1L           equ	753	;# 
   514   0002F3                     U5P2            equ	755	;# 
   515   0002F3                     U5P2L           equ	755	;# 
   516   0002F5                     U5P3            equ	757	;# 
   517   0002F5                     U5P3L           equ	757	;# 
   518   0002F7                     U5CON0          equ	759	;# 
   519   0002F8                     U5CON1          equ	760	;# 
   520   0002F9                     U5CON2          equ	761	;# 
   521   0002FA                     U5BRG           equ	762	;# 
   522   0002FA                     U5BRGL          equ	762	;# 
   523   0002FB                     U5BRGH          equ	763	;# 
   524   0002FC                     U5FIFO          equ	764	;# 
   525   0002FD                     U5UIR           equ	765	;# 
   526   0002FE                     U5ERRIR         equ	766	;# 
   527   0002FF                     U5ERRIE         equ	767	;# 
   528   000300                     SMT1TMR         equ	768	;# 
   529   000300                     SMT1TMRL        equ	768	;# 
   530   000301                     SMT1TMRH        equ	769	;# 
   531   000302                     SMT1TMRU        equ	770	;# 
   532   000303                     SMT1CPR         equ	771	;# 
   533   000303                     SMT1CPRL        equ	771	;# 
   534   000304                     SMT1CPRH        equ	772	;# 
   535   000305                     SMT1CPRU        equ	773	;# 
   536   000306                     SMT1CPW         equ	774	;# 
   537   000306                     SMT1CPWL        equ	774	;# 
   538   000307                     SMT1CPWH        equ	775	;# 
   539   000308                     SMT1CPWU        equ	776	;# 
   540   000309                     SMT1PR          equ	777	;# 
   541   000309                     SMT1PRL         equ	777	;# 
   542   00030A                     SMT1PRH         equ	778	;# 
   543   00030B                     SMT1PRU         equ	779	;# 
   544   00030C                     SMT1CON0        equ	780	;# 
   545   00030D                     SMT1CON1        equ	781	;# 
   546   00030E                     SMT1STAT        equ	782	;# 
   547   00030F                     SMT1CLK         equ	783	;# 
   548   000310                     SMT1SIG         equ	784	;# 
   549   000311                     SMT1WIN         equ	785	;# 
   550   000318                     TMR0L           equ	792	;# 
   551   000318                     TMR0            equ	792	;# 
   552   000319                     TMR0H           equ	793	;# 
   553   000319                     PR0             equ	793	;# 
   554   00031A                     T0CON0          equ	794	;# 
   555   00031B                     T0CON1          equ	795	;# 
   556   00031C                     TMR1            equ	796	;# 
   557   00031C                     TMR1L           equ	796	;# 
   558   00031D                     TMR1H           equ	797	;# 
   559   00031E                     T1CON           equ	798	;# 
   560   00031E                     TMR1CON         equ	798	;# 
   561   00031F                     T1GCON          equ	799	;# 
   562   00031F                     TMR1GCON        equ	799	;# 
   563   000320                     T1GATE          equ	800	;# 
   564   000320                     TMR1GATE        equ	800	;# 
   565   000321                     T1CLK           equ	801	;# 
   566   000321                     TMR1CLK         equ	801	;# 
   567   000321                     PR1             equ	801	;# 
   568   000322                     T2TMR           equ	802	;# 
   569   000322                     TMR2            equ	802	;# 
   570   000323                     T2PR            equ	803	;# 
   571   000323                     PR2             equ	803	;# 
   572   000324                     T2CON           equ	804	;# 
   573   000325                     T2HLT           equ	805	;# 
   574   000326                     T2CLKCON        equ	806	;# 
   575   000326                     T2CLK           equ	806	;# 
   576   000327                     T2RST           equ	807	;# 
   577   000328                     TMR3            equ	808	;# 
   578   000328                     TMR3L           equ	808	;# 
   579   000329                     TMR3H           equ	809	;# 
   580   00032A                     T3CON           equ	810	;# 
   581   00032A                     TMR3CON         equ	810	;# 
   582   00032B                     T3GCON          equ	811	;# 
   583   00032B                     TMR3GCON        equ	811	;# 
   584   00032C                     T3GATE          equ	812	;# 
   585   00032C                     TMR3GATE        equ	812	;# 
   586   00032D                     T3CLK           equ	813	;# 
   587   00032D                     TMR3CLK         equ	813	;# 
   588   00032D                     PR3             equ	813	;# 
   589   00032E                     T4TMR           equ	814	;# 
   590   00032E                     TMR4            equ	814	;# 
   591   00032F                     T4PR            equ	815	;# 
   592   00032F                     PR4             equ	815	;# 
   593   000330                     T4CON           equ	816	;# 
   594   000331                     T4HLT           equ	817	;# 
   595   000332                     T4CLKCON        equ	818	;# 
   596   000332                     T4CLK           equ	818	;# 
   597   000333                     T4RST           equ	819	;# 
   598   000334                     TMR5            equ	820	;# 
   599   000334                     TMR5L           equ	820	;# 
   600   000335                     TMR5H           equ	821	;# 
   601   000336                     T5CON           equ	822	;# 
   602   000336                     TMR5CON         equ	822	;# 
   603   000337                     T5GCON          equ	823	;# 
   604   000337                     TMR5GCON        equ	823	;# 
   605   000338                     T5GATE          equ	824	;# 
   606   000338                     TMR5GATE        equ	824	;# 
   607   000339                     T5CLK           equ	825	;# 
   608   000339                     TMR5CLK         equ	825	;# 
   609   000339                     PR5             equ	825	;# 
   610   00033A                     T6TMR           equ	826	;# 
   611   00033A                     TMR6            equ	826	;# 
   612   00033B                     T6PR            equ	827	;# 
   613   00033B                     PR6             equ	827	;# 
   614   00033C                     T6CON           equ	828	;# 
   615   00033D                     T6HLT           equ	829	;# 
   616   00033E                     T6CLKCON        equ	830	;# 
   617   00033E                     T6CLK           equ	830	;# 
   618   00033F                     T6RST           equ	831	;# 
   619   000340                     CCPR1           equ	832	;# 
   620   000340                     CCPR1L          equ	832	;# 
   621   000341                     CCPR1H          equ	833	;# 
   622   000342                     CCP1CON         equ	834	;# 
   623   000343                     CCP1CAP         equ	835	;# 
   624   000344                     CCPR2           equ	836	;# 
   625   000344                     CCPR2L          equ	836	;# 
   626   000345                     CCPR2H          equ	837	;# 
   627   000346                     CCP2CON         equ	838	;# 
   628   000347                     CCP2CAP         equ	839	;# 
   629   000348                     CCPR3           equ	840	;# 
   630   000348                     CCPR3L          equ	840	;# 
   631   000349                     CCPR3H          equ	841	;# 
   632   00034A                     CCP3CON         equ	842	;# 
   633   00034B                     CCP3CAP         equ	843	;# 
   634   00034C                     CCPTMRS0        equ	844	;# 
   635   00034F                     CRCDATA         equ	847	;# 
   636   00034F                     CRCDATL         equ	847	;# 
   637   000350                     CRCDATH         equ	848	;# 
   638   000351                     CRCACC          equ	849	;# 
   639   000351                     CRCACCL         equ	849	;# 
   640   000352                     CRCACCH         equ	850	;# 
   641   000353                     CRCSHFT         equ	851	;# 
   642   000353                     CRCSHIFTL       equ	851	;# 
   643   000354                     CRCSHIFTH       equ	852	;# 
   644   000355                     CRCXOR          equ	853	;# 
   645   000355                     CRCXORL         equ	853	;# 
   646   000356                     CRCXORH         equ	854	;# 
   647   000357                     CRCCON0         equ	855	;# 
   648   000358                     CRCCON1         equ	856	;# 
   649   00035A                     SCANLADR        equ	858	;# 
   650   00035A                     SCANLADRL       equ	858	;# 
   651   00035B                     SCANLADRH       equ	859	;# 
   652   00035C                     SCANLADRU       equ	860	;# 
   653   00035D                     SCANHADR        equ	861	;# 
   654   00035D                     SCANHADRL       equ	861	;# 
   655   00035E                     SCANHADRH       equ	862	;# 
   656   00035F                     SCANHADRU       equ	863	;# 
   657   000360                     SCANCON0        equ	864	;# 
   658   000361                     SCANTRIG        equ	865	;# 
   659   000362                     IPR0            equ	866	;# 
   660   000363                     IPR1            equ	867	;# 
   661   000364                     IPR2            equ	868	;# 
   662   000365                     IPR3            equ	869	;# 
   663   000366                     IPR4            equ	870	;# 
   664   000367                     IPR5            equ	871	;# 
   665   000368                     IPR6            equ	872	;# 
   666   000369                     IPR7            equ	873	;# 
   667   00036A                     IPR8            equ	874	;# 
   668   00036B                     IPR9            equ	875	;# 
   669   00036C                     IPR10           equ	876	;# 
   670   00036D                     IPR11           equ	877	;# 
   671   00036E                     IPR12           equ	878	;# 
   672   00036F                     IPR13           equ	879	;# 
   673   000370                     IPR14           equ	880	;# 
   674   000371                     IPR15           equ	881	;# 
   675   000373                     STATUS_CSHAD    equ	883	;# 
   676   000374                     WREG_CSHAD      equ	884	;# 
   677   000375                     BSR_CSHAD       equ	885	;# 
   678   000376                     SHADCON         equ	886	;# 
   679   000377                     STATUS_SHAD     equ	887	;# 
   680   000378                     WREG_SHAD       equ	888	;# 
   681   000379                     BSR_SHAD        equ	889	;# 
   682   00037A                     PCLATH_SHAD     equ	890	;# 
   683   00037B                     PCLATU_SHAD     equ	891	;# 
   684   00037C                     FSR0SH          equ	892	;# 
   685   00037C                     FSR0L_SHAD      equ	892	;# 
   686   00037D                     FSR0H_SHAD      equ	893	;# 
   687   00037E                     FSR1SH          equ	894	;# 
   688   00037E                     FSR1L_SHAD      equ	894	;# 
   689   00037F                     FSR1H_SHAD      equ	895	;# 
   690   000380                     FSR2SH          equ	896	;# 
   691   000380                     FSR2L_SHAD      equ	896	;# 
   692   000381                     FSR2H_SHAD      equ	897	;# 
   693   000382                     PRODSH          equ	898	;# 
   694   000382                     PRODL_SHAD      equ	898	;# 
   695   000383                     PRODH_SHAD      equ	899	;# 
   696   0003BC                     CWG1CLK         equ	956	;# 
   697   0003BC                     CWG1CLKCON      equ	956	;# 
   698   0003BD                     CWG1ISM         equ	957	;# 
   699   0003BD                     CWG1DAT         equ	957	;# 
   700   0003BE                     CWG1DBR         equ	958	;# 
   701   0003BF                     CWG1DBF         equ	959	;# 
   702   0003C0                     CWG1CON0        equ	960	;# 
   703   0003C1                     CWG1CON1        equ	961	;# 
   704   0003C2                     CWG1AS0         equ	962	;# 
   705   0003C3                     CWG1AS1         equ	963	;# 
   706   0003C4                     CWG1STR         equ	964	;# 
   707   0003C5                     CWG2CLK         equ	965	;# 
   708   0003C5                     CWG2CLKCON      equ	965	;# 
   709   0003C6                     CWG2ISM         equ	966	;# 
   710   0003C6                     CWG2DAT         equ	966	;# 
   711   0003C7                     CWG2DBR         equ	967	;# 
   712   0003C8                     CWG2DBF         equ	968	;# 
   713   0003C9                     CWG2CON0        equ	969	;# 
   714   0003CA                     CWG2CON1        equ	970	;# 
   715   0003CB                     CWG2AS0         equ	971	;# 
   716   0003CC                     CWG2AS1         equ	972	;# 
   717   0003CD                     CWG2STR         equ	973	;# 
   718   0003CE                     CWG3CLK         equ	974	;# 
   719   0003CE                     CWG3CLKCON      equ	974	;# 
   720   0003CF                     CWG3ISM         equ	975	;# 
   721   0003CF                     CWG3DAT         equ	975	;# 
   722   0003D0                     CWG3DBR         equ	976	;# 
   723   0003D1                     CWG3DBF         equ	977	;# 
   724   0003D2                     CWG3CON0        equ	978	;# 
   725   0003D3                     CWG3CON1        equ	979	;# 
   726   0003D4                     CWG3AS0         equ	980	;# 
   727   0003D5                     CWG3AS1         equ	981	;# 
   728   0003D6                     CWG3STR         equ	982	;# 
   729   0003D7                     FVRCON          equ	983	;# 
   730   0003D8                     ADCPCON         equ	984	;# 
   731   0003D8                     ADCP            equ	984	;# 
   732   0003D9                     ADLTH           equ	985	;# 
   733   0003D9                     ADLTHL          equ	985	;# 
   734   0003DA                     ADLTHH          equ	986	;# 
   735   0003DB                     ADUTH           equ	987	;# 
   736   0003DB                     ADUTHL          equ	987	;# 
   737   0003DC                     ADUTHH          equ	988	;# 
   738   0003DD                     ADERR           equ	989	;# 
   739   0003DD                     ADERRL          equ	989	;# 
   740   0003DE                     ADERRH          equ	990	;# 
   741   0003DF                     ADSTPT          equ	991	;# 
   742   0003DF                     ADSTPTL         equ	991	;# 
   743   0003E0                     ADSTPTH         equ	992	;# 
   744   0003E1                     ADFLTR          equ	993	;# 
   745   0003E1                     ADFLTRL         equ	993	;# 
   746   0003E2                     ADFLTRH         equ	994	;# 
   747   0003E3                     ADACC           equ	995	;# 
   748   0003E3                     ADACCL          equ	995	;# 
   749   0003E4                     ADACCH          equ	996	;# 
   750   0003E5                     ADACCU          equ	997	;# 
   751   0003E6                     ADCNT           equ	998	;# 
   752   0003E7                     ADRPT           equ	999	;# 
   753   0003E8                     ADPREV          equ	1000	;# 
   754   0003E8                     ADPREVL         equ	1000	;# 
   755   0003E9                     ADPREVH         equ	1001	;# 
   756   0003EA                     ADRES           equ	1002	;# 
   757   0003EA                     ADRESL          equ	1002	;# 
   758   0003EB                     ADRESH          equ	1003	;# 
   759   0003EC                     ADPCH           equ	1004	;# 
   760   0003EE                     ADACQ           equ	1006	;# 
   761   0003EE                     ADACQL          equ	1006	;# 
   762   0003EF                     ADACQH          equ	1007	;# 
   763   0003F0                     ADCAP           equ	1008	;# 
   764   0003F1                     ADPRE           equ	1009	;# 
   765   0003F1                     ADPREL          equ	1009	;# 
   766   0003F2                     ADPREH          equ	1010	;# 
   767   0003F3                     ADCON0          equ	1011	;# 
   768   0003F4                     ADCON1          equ	1012	;# 
   769   0003F5                     ADCON2          equ	1013	;# 
   770   0003F6                     ADCON3          equ	1014	;# 
   771   0003F7                     ADSTAT          equ	1015	;# 
   772   0003F8                     ADREF           equ	1016	;# 
   773   0003F9                     ADACT           equ	1017	;# 
   774   0003FA                     ADCLK           equ	1018	;# 
   775   000400                     ANSELA          equ	1024	;# 
   776   000401                     WPUA            equ	1025	;# 
   777   000402                     ODCONA          equ	1026	;# 
   778   000403                     SLRCONA         equ	1027	;# 
   779   000404                     INLVLA          equ	1028	;# 
   780   000405                     IOCAP           equ	1029	;# 
   781   000406                     IOCAN           equ	1030	;# 
   782   000407                     IOCAF           equ	1031	;# 
   783   000408                     ANSELB          equ	1032	;# 
   784   000409                     WPUB            equ	1033	;# 
   785   00040A                     ODCONB          equ	1034	;# 
   786   00040B                     SLRCONB         equ	1035	;# 
   787   00040C                     INLVLB          equ	1036	;# 
   788   00040D                     IOCBP           equ	1037	;# 
   789   00040E                     IOCBN           equ	1038	;# 
   790   00040F                     IOCBF           equ	1039	;# 
   791   000410                     ANSELC          equ	1040	;# 
   792   000411                     WPUC            equ	1041	;# 
   793   000412                     ODCONC          equ	1042	;# 
   794   000413                     SLRCONC         equ	1043	;# 
   795   000414                     INLVLC          equ	1044	;# 
   796   000415                     IOCCP           equ	1045	;# 
   797   000416                     IOCCN           equ	1046	;# 
   798   000417                     IOCCF           equ	1047	;# 
   799   000418                     ANSELD          equ	1048	;# 
   800   000419                     WPUD            equ	1049	;# 
   801   00041A                     ODCOND          equ	1050	;# 
   802   00041B                     SLRCOND         equ	1051	;# 
   803   00041C                     INLVLD          equ	1052	;# 
   804   000420                     ANSELE          equ	1056	;# 
   805   000421                     WPUE            equ	1057	;# 
   806   000422                     ODCONE          equ	1058	;# 
   807   000423                     SLRCONE         equ	1059	;# 
   808   000424                     INLVLE          equ	1060	;# 
   809   000425                     IOCEP           equ	1061	;# 
   810   000426                     IOCEN           equ	1062	;# 
   811   000427                     IOCEF           equ	1063	;# 
   812   000428                     ANSELF          equ	1064	;# 
   813   000429                     WPUF            equ	1065	;# 
   814   00042A                     ODCONF          equ	1066	;# 
   815   00042B                     SLRCONF         equ	1067	;# 
   816   00042C                     INLVLF          equ	1068	;# 
   817   000440                     NCO1ACC         equ	1088	;# 
   818   000440                     NCO1ACCL        equ	1088	;# 
   819   000441                     NCO1ACCH        equ	1089	;# 
   820   000442                     NCO1ACCU        equ	1090	;# 
   821   000443                     NCO1INC         equ	1091	;# 
   822   000443                     NCO1INCL        equ	1091	;# 
   823   000444                     NCO1INCH        equ	1092	;# 
   824   000445                     NCO1INCU        equ	1093	;# 
   825   000446                     NCO1CON         equ	1094	;# 
   826   000447                     NCO1CLK         equ	1095	;# 
   827   000448                     NCO2ACC         equ	1096	;# 
   828   000448                     NCO2ACCL        equ	1096	;# 
   829   000449                     NCO2ACCH        equ	1097	;# 
   830   00044A                     NCO2ACCU        equ	1098	;# 
   831   00044B                     NCO2INC         equ	1099	;# 
   832   00044B                     NCO2INCL        equ	1099	;# 
   833   00044C                     NCO2INCH        equ	1100	;# 
   834   00044D                     NCO2INCU        equ	1101	;# 
   835   00044E                     NCO2CON         equ	1102	;# 
   836   00044F                     NCO2CLK         equ	1103	;# 
   837   000450                     NCO3ACC         equ	1104	;# 
   838   000450                     NCO3ACCL        equ	1104	;# 
   839   000451                     NCO3ACCH        equ	1105	;# 
   840   000452                     NCO3ACCU        equ	1106	;# 
   841   000453                     NCO3INC         equ	1107	;# 
   842   000453                     NCO3INCL        equ	1107	;# 
   843   000454                     NCO3INCH        equ	1108	;# 
   844   000455                     NCO3INCU        equ	1109	;# 
   845   000456                     NCO3CON         equ	1110	;# 
   846   000457                     NCO3CLK         equ	1111	;# 
   847   000459                     IVTLOCK         equ	1113	;# 
   848   00045A                     IVTAD           equ	1114	;# 
   849   00045A                     IVTADL          equ	1114	;# 
   850   00045B                     IVTADH          equ	1115	;# 
   851   00045C                     IVTADU          equ	1116	;# 
   852   00045D                     IVTBASE         equ	1117	;# 
   853   00045D                     IVTBASEL        equ	1117	;# 
   854   00045E                     IVTBASEH        equ	1118	;# 
   855   00045F                     IVTBASEU        equ	1119	;# 
   856   000460                     PWM1ERS         equ	1120	;# 
   857   000461                     PWM1CLK         equ	1121	;# 
   858   000462                     PWM1LDS         equ	1122	;# 
   859   000463                     PWM1PR          equ	1123	;# 
   860   000463                     PWM1PRL         equ	1123	;# 
   861   000464                     PWM1PRH         equ	1124	;# 
   862   000465                     PWM1CPRE        equ	1125	;# 
   863   000466                     PWM1PIPOS       equ	1126	;# 
   864   000467                     PWM1GIR         equ	1127	;# 
   865   000468                     PWM1GIE         equ	1128	;# 
   866   000469                     PWM1CON         equ	1129	;# 
   867   00046A                     PWM1S1CFG       equ	1130	;# 
   868   00046B                     PWM1S1P1        equ	1131	;# 
   869   00046B                     PWM1S1P1L       equ	1131	;# 
   870   00046C                     PWM1S1P1H       equ	1132	;# 
   871   00046D                     PWM1S1P2        equ	1133	;# 
   872   00046D                     PWM1S1P2L       equ	1133	;# 
   873   00046E                     PWM1S1P2H       equ	1134	;# 
   874   00046F                     PWM2ERS         equ	1135	;# 
   875   000470                     PWM2CLK         equ	1136	;# 
   876   000471                     PWM2LDS         equ	1137	;# 
   877   000472                     PWM2PR          equ	1138	;# 
   878   000472                     PWM2PRL         equ	1138	;# 
   879   000473                     PWM2PRH         equ	1139	;# 
   880   000474                     PWM2CPRE        equ	1140	;# 
   881   000475                     PWM2PIPOS       equ	1141	;# 
   882   000476                     PWM2GIR         equ	1142	;# 
   883   000477                     PWM2GIE         equ	1143	;# 
   884   000478                     PWM2CON         equ	1144	;# 
   885   000479                     PWM2S1CFG       equ	1145	;# 
   886   00047A                     PWM2S1P1        equ	1146	;# 
   887   00047A                     PWM2S1P1L       equ	1146	;# 
   888   00047B                     PWM2S1P1H       equ	1147	;# 
   889   00047C                     PWM2S1P2        equ	1148	;# 
   890   00047C                     PWM2S1P2L       equ	1148	;# 
   891   00047D                     PWM2S1P2H       equ	1149	;# 
   892   00047E                     PWM3ERS         equ	1150	;# 
   893   00047F                     PWM3CLK         equ	1151	;# 
   894   000480                     PWM3LDS         equ	1152	;# 
   895   000481                     PWM3PR          equ	1153	;# 
   896   000481                     PWM3PRL         equ	1153	;# 
   897   000482                     PWM3PRH         equ	1154	;# 
   898   000483                     PWM3CPRE        equ	1155	;# 
   899   000484                     PWM3PIPOS       equ	1156	;# 
   900   000485                     PWM3GIR         equ	1157	;# 
   901   000486                     PWM3GIE         equ	1158	;# 
   902   000487                     PWM3CON         equ	1159	;# 
   903   000488                     PWM3S1CFG       equ	1160	;# 
   904   000489                     PWM3S1P1        equ	1161	;# 
   905   000489                     PWM3S1P1L       equ	1161	;# 
   906   00048A                     PWM3S1P1H       equ	1162	;# 
   907   00048B                     PWM3S1P2        equ	1163	;# 
   908   00048B                     PWM3S1P2L       equ	1163	;# 
   909   00048C                     PWM3S1P2H       equ	1164	;# 
   910   00049C                     PWMLOAD         equ	1180	;# 
   911   00049D                     PWMEN           equ	1181	;# 
   912   00049E                     PIE0            equ	1182	;# 
   913   00049F                     PIE1            equ	1183	;# 
   914   0004A0                     PIE2            equ	1184	;# 
   915   0004A1                     PIE3            equ	1185	;# 
   916   0004A2                     PIE4            equ	1186	;# 
   917   0004A3                     PIE5            equ	1187	;# 
   918   0004A4                     PIE6            equ	1188	;# 
   919   0004A5                     PIE7            equ	1189	;# 
   920   0004A6                     PIE8            equ	1190	;# 
   921   0004A7                     PIE9            equ	1191	;# 
   922   0004A8                     PIE10           equ	1192	;# 
   923   0004A9                     PIE11           equ	1193	;# 
   924   0004AA                     PIE12           equ	1194	;# 
   925   0004AB                     PIE13           equ	1195	;# 
   926   0004AC                     PIE14           equ	1196	;# 
   927   0004AD                     PIE15           equ	1197	;# 
   928   0004AE                     PIR0            equ	1198	;# 
   929   0004AF                     PIR1            equ	1199	;# 
   930   0004B0                     PIR2            equ	1200	;# 
   931   0004B1                     PIR3            equ	1201	;# 
   932   0004B2                     PIR4            equ	1202	;# 
   933   0004B3                     PIR5            equ	1203	;# 
   934   0004B4                     PIR6            equ	1204	;# 
   935   0004B5                     PIR7            equ	1205	;# 
   936   0004B6                     PIR8            equ	1206	;# 
   937   0004B7                     PIR9            equ	1207	;# 
   938   0004B8                     PIR10           equ	1208	;# 
   939   0004B9                     PIR11           equ	1209	;# 
   940   0004BA                     PIR12           equ	1210	;# 
   941   0004BB                     PIR13           equ	1211	;# 
   942   0004BC                     PIR14           equ	1212	;# 
   943   0004BD                     PIR15           equ	1213	;# 
   944   0004BE                     LATA            equ	1214	;# 
   945   0004BF                     LATB            equ	1215	;# 
   946   0004C0                     LATC            equ	1216	;# 
   947   0004C1                     LATD            equ	1217	;# 
   948   0004C2                     LATE            equ	1218	;# 
   949   0004C3                     LATF            equ	1219	;# 
   950   0004C6                     TRISA           equ	1222	;# 
   951   0004C7                     TRISB           equ	1223	;# 
   952   0004C8                     TRISC           equ	1224	;# 
   953   0004C9                     TRISD           equ	1225	;# 
   954   0004CA                     TRISE           equ	1226	;# 
   955   0004CB                     TRISF           equ	1227	;# 
   956   0004CE                     PORTA           equ	1230	;# 
   957   0004CF                     PORTB           equ	1231	;# 
   958   0004D0                     PORTC           equ	1232	;# 
   959   0004D1                     PORTD           equ	1233	;# 
   960   0004D2                     PORTE           equ	1234	;# 
   961   0004D3                     PORTF           equ	1235	;# 
   962   0004D6                     INTCON0         equ	1238	;# 
   963   0004D7                     INTCON1         equ	1239	;# 
   964   0004D8                     STATUS          equ	1240	;# 
   965   0004D9                     FSR2            equ	1241	;# 
   966   0004D9                     FSR2L           equ	1241	;# 
   967   0004DA                     FSR2H           equ	1242	;# 
   968   0004DB                     PLUSW2          equ	1243	;# 
   969   0004DC                     PREINC2         equ	1244	;# 
   970   0004DD                     POSTDEC2        equ	1245	;# 
   971   0004DE                     POSTINC2        equ	1246	;# 
   972   0004DF                     INDF2           equ	1247	;# 
   973   0004E0                     BSR             equ	1248	;# 
   974   0004E1                     FSR1            equ	1249	;# 
   975   0004E1                     FSR1L           equ	1249	;# 
   976   0004E2                     FSR1H           equ	1250	;# 
   977   0004E3                     PLUSW1          equ	1251	;# 
   978   0004E4                     PREINC1         equ	1252	;# 
   979   0004E5                     POSTDEC1        equ	1253	;# 
   980   0004E6                     POSTINC1        equ	1254	;# 
   981   0004E7                     INDF1           equ	1255	;# 
   982   0004E8                     WREG            equ	1256	;# 
   983   0004E9                     FSR0            equ	1257	;# 
   984   0004E9                     FSR0L           equ	1257	;# 
   985   0004EA                     FSR0H           equ	1258	;# 
   986   0004EB                     PLUSW0          equ	1259	;# 
   987   0004EC                     PREINC0         equ	1260	;# 
   988   0004ED                     POSTDEC0        equ	1261	;# 
   989   0004EE                     POSTINC0        equ	1262	;# 
   990   0004EF                     INDF0           equ	1263	;# 
   991   0004F0                     PCON0           equ	1264	;# 
   992   0004F1                     PCON1           equ	1265	;# 
   993   0004F2                     CPUDOZE         equ	1266	;# 
   994   0004F3                     PROD            equ	1267	;# 
   995   0004F3                     PRODL           equ	1267	;# 
   996   0004F4                     PRODH           equ	1268	;# 
   997   0004F5                     TABLAT          equ	1269	;# 
   998   0004F6                     TBLPTR          equ	1270	;# 
   999   0004F6                     TBLPTRL         equ	1270	;# 
  1000   0004F7                     TBLPTRH         equ	1271	;# 
  1001   0004F8                     TBLPTRU         equ	1272	;# 
  1002   0004F9                     PCLAT           equ	1273	;# 
  1003   0004F9                     PCL             equ	1273	;# 
  1004   0004FA                     PCLATH          equ	1274	;# 
  1005   0004FB                     PCLATU          equ	1275	;# 
  1006   0004FC                     STKPTR          equ	1276	;# 
  1007   0004FD                     TOS             equ	1277	;# 
  1008   0004FD                     TOSL            equ	1277	;# 
  1009   0004FE                     TOSH            equ	1278	;# 
  1010   0004FF                     TOSU            equ	1279	;# 
  1011   000039                     CLKRCON         equ	57	;# 
  1012   00003A                     CLKRCLK         equ	58	;# 
  1013   000040                     NVMCON0         equ	64	;# 
  1014   000041                     NVMCON1         equ	65	;# 
  1015   000042                     NVMLOCK         equ	66	;# 
  1016   000043                     NVMADR          equ	67	;# 
  1017   000043                     NVMADRL         equ	67	;# 
  1018   000044                     NVMADRH         equ	68	;# 
  1019   000045                     NVMADRU         equ	69	;# 
  1020   000046                     NVMDAT          equ	70	;# 
  1021   000046                     NVMDATL         equ	70	;# 
  1022   000047                     NVMDATH         equ	71	;# 
  1023   000048                     VREGCON         equ	72	;# 
  1024   000049                     BORCON          equ	73	;# 
  1025   00004A                     HLVDCON0        equ	74	;# 
  1026   00004B                     HLVDCON1        equ	75	;# 
  1027   00004C                     ZCDCON          equ	76	;# 
  1028   000060                     PMD0            equ	96	;# 
  1029   000061                     PMD1            equ	97	;# 
  1030   000063                     PMD3            equ	99	;# 
  1031   000064                     PMD4            equ	100	;# 
  1032   000065                     PMD5            equ	101	;# 
  1033   000066                     PMD6            equ	102	;# 
  1034   000067                     PMD7            equ	103	;# 
  1035   000068                     PMD8            equ	104	;# 
  1036   00006A                     MD1CON0         equ	106	;# 
  1037   00006B                     MD1CON1         equ	107	;# 
  1038   00006C                     MD1SRC          equ	108	;# 
  1039   00006D                     MD1CARL         equ	109	;# 
  1040   00006E                     MD1CARH         equ	110	;# 
  1041   00006F                     CMOUT           equ	111	;# 
  1042   000070                     CM1CON0         equ	112	;# 
  1043   000071                     CM1CON1         equ	113	;# 
  1044   000072                     CM1NCH          equ	114	;# 
  1045   000073                     CM1PCH          equ	115	;# 
  1046   000074                     CM2CON0         equ	116	;# 
  1047   000075                     CM2CON1         equ	117	;# 
  1048   000076                     CM2NCH          equ	118	;# 
  1049   000077                     CM2PCH          equ	119	;# 
  1050   000078                     WDTCON0         equ	120	;# 
  1051   000079                     WDTCON1         equ	121	;# 
  1052   00007A                     WDTPS           equ	122	;# 
  1053   00007A                     WDTPSL          equ	122	;# 
  1054   00007B                     WDTPSH          equ	123	;# 
  1055   00007C                     WDTTMR          equ	124	;# 
  1056   00007D                     DAC1DAT         equ	125	;# 
  1057   00007D                     DAC1DATL        equ	125	;# 
  1058   00007F                     DAC1CON         equ	127	;# 
  1059   000080                     SPI1RXB         equ	128	;# 
  1060   000081                     SPI1TXB         equ	129	;# 
  1061   000082                     SPI1TCNT        equ	130	;# 
  1062   000082                     SPI1TCNTL       equ	130	;# 
  1063   000083                     SPI1TCNTH       equ	131	;# 
  1064   000084                     SPI1CON0        equ	132	;# 
  1065   000085                     SPI1CON1        equ	133	;# 
  1066   000086                     SPI1CON2        equ	134	;# 
  1067   000087                     SPI1STATUS      equ	135	;# 
  1068   000088                     SPI1TWIDTH      equ	136	;# 
  1069   000089                     SPI1BAUD        equ	137	;# 
  1070   00008A                     SPI1INTF        equ	138	;# 
  1071   00008B                     SPI1INTE        equ	139	;# 
  1072   00008C                     SPI1CLK         equ	140	;# 
  1073   00008D                     SPI2RXB         equ	141	;# 
  1074   00008E                     SPI2TXB         equ	142	;# 
  1075   00008F                     SPI2TCNT        equ	143	;# 
  1076   00008F                     SPI2TCNTL       equ	143	;# 
  1077   000090                     SPI2TCNTH       equ	144	;# 
  1078   000091                     SPI2CON0        equ	145	;# 
  1079   000092                     SPI2CON1        equ	146	;# 
  1080   000093                     SPI2CON2        equ	147	;# 
  1081   000094                     SPI2STATUS      equ	148	;# 
  1082   000095                     SPI2TWIDTH      equ	149	;# 
  1083   000096                     SPI2BAUD        equ	150	;# 
  1084   000097                     SPI2INTF        equ	151	;# 
  1085   000098                     SPI2INTE        equ	152	;# 
  1086   000099                     SPI2CLK         equ	153	;# 
  1087   0000AC                     ACTCON          equ	172	;# 
  1088   0000AD                     OSCCON1         equ	173	;# 
  1089   0000AE                     OSCCON2         equ	174	;# 
  1090   0000AF                     OSCCON3         equ	175	;# 
  1091   0000B0                     OSCTUNE         equ	176	;# 
  1092   0000B1                     OSCFRQ          equ	177	;# 
  1093   0000B1                     OSCFREQ         equ	177	;# 
  1094   0000B2                     OSCSTAT         equ	178	;# 
  1095   0000B2                     OSCSTAT1        equ	178	;# 
  1096   0000B3                     OSCEN           equ	179	;# 
  1097   0000B4                     PRLOCK          equ	180	;# 
  1098   0000B5                     SCANPR          equ	181	;# 
  1099   0000B6                     DMA1PR          equ	182	;# 
  1100   0000B7                     DMA2PR          equ	183	;# 
  1101   0000B8                     DMA3PR          equ	184	;# 
  1102   0000B9                     DMA4PR          equ	185	;# 
  1103   0000BA                     DMA5PR          equ	186	;# 
  1104   0000BB                     DMA6PR          equ	187	;# 
  1105   0000BE                     MAINPR          equ	190	;# 
  1106   0000BF                     ISRPR           equ	191	;# 
  1107   0000D4                     CLCDATA         equ	212	;# 
  1108   0000D5                     CLCSELECT       equ	213	;# 
  1109   0000D6                     CLCnCON         equ	214	;# 
  1110   0000D7                     CLCnPOL         equ	215	;# 
  1111   0000D8                     CLCnSEL0        equ	216	;# 
  1112   0000D9                     CLCnSEL1        equ	217	;# 
  1113   0000DA                     CLCnSEL2        equ	218	;# 
  1114   0000DB                     CLCnSEL3        equ	219	;# 
  1115   0000DC                     CLCnGLS0        equ	220	;# 
  1116   0000DD                     CLCnGLS1        equ	221	;# 
  1117   0000DE                     CLCnGLS2        equ	222	;# 
  1118   0000DF                     CLCnGLS3        equ	223	;# 
  1119   0000E8                     DMASELECT       equ	232	;# 
  1120   0000E9                     DMAnBUF         equ	233	;# 
  1121   0000EA                     DMAnDCNT        equ	234	;# 
  1122   0000EA                     DMAnDCNTL       equ	234	;# 
  1123   0000EB                     DMAnDCNTH       equ	235	;# 
  1124   0000EC                     DMAnDPTR        equ	236	;# 
  1125   0000EC                     DMAnDPTRL       equ	236	;# 
  1126   0000ED                     DMAnDPTRH       equ	237	;# 
  1127   0000EE                     DMAnDSZ         equ	238	;# 
  1128   0000EE                     DMAnDSZL        equ	238	;# 
  1129   0000EF                     DMAnDSZH        equ	239	;# 
  1130   0000F0                     DMAnDSA         equ	240	;# 
  1131   0000F0                     DMAnDSAL        equ	240	;# 
  1132   0000F1                     DMAnDSAH        equ	241	;# 
  1133   0000F2                     DMAnSCNT        equ	242	;# 
  1134   0000F2                     DMAnSCNTL       equ	242	;# 
  1135   0000F3                     DMAnSCNTH       equ	243	;# 
  1136   0000F4                     DMAnSPTR        equ	244	;# 
  1137   0000F4                     DMAnSPTRL       equ	244	;# 
  1138   0000F5                     DMAnSPTRH       equ	245	;# 
  1139   0000F6                     DMAnSPTRU       equ	246	;# 
  1140   0000F7                     DMAnSSZ         equ	247	;# 
  1141   0000F7                     DMAnSSZL        equ	247	;# 
  1142   0000F8                     DMAnSSZH        equ	248	;# 
  1143   0000F9                     DMAnSSA         equ	249	;# 
  1144   0000F9                     DMAnSSAL        equ	249	;# 
  1145   0000FA                     DMAnSSAH        equ	250	;# 
  1146   0000FB                     DMAnSSAU        equ	251	;# 
  1147   0000FC                     DMAnCON0        equ	252	;# 
  1148   0000FD                     DMAnCON1        equ	253	;# 
  1149   0000FE                     DMAnAIRQ        equ	254	;# 
  1150   0000FF                     DMAnSIRQ        equ	255	;# 
  1151   000200                     PPSLOCK         equ	512	;# 
  1152   000201                     RA0PPS          equ	513	;# 
  1153   000202                     RA1PPS          equ	514	;# 
  1154   000203                     RA2PPS          equ	515	;# 
  1155   000204                     RA3PPS          equ	516	;# 
  1156   000205                     RA4PPS          equ	517	;# 
  1157   000206                     RA5PPS          equ	518	;# 
  1158   000207                     RA6PPS          equ	519	;# 
  1159   000208                     RA7PPS          equ	520	;# 
  1160   000209                     RB0PPS          equ	521	;# 
  1161   00020A                     RB1PPS          equ	522	;# 
  1162   00020B                     RB2PPS          equ	523	;# 
  1163   00020C                     RB3PPS          equ	524	;# 
  1164   00020D                     RB4PPS          equ	525	;# 
  1165   00020E                     RB5PPS          equ	526	;# 
  1166   00020F                     RB6PPS          equ	527	;# 
  1167   000210                     RB7PPS          equ	528	;# 
  1168   000211                     RC0PPS          equ	529	;# 
  1169   000212                     RC1PPS          equ	530	;# 
  1170   000213                     RC2PPS          equ	531	;# 
  1171   000214                     RC3PPS          equ	532	;# 
  1172   000215                     RC4PPS          equ	533	;# 
  1173   000216                     RC5PPS          equ	534	;# 
  1174   000217                     RC6PPS          equ	535	;# 
  1175   000218                     RC7PPS          equ	536	;# 
  1176   000219                     RD0PPS          equ	537	;# 
  1177   00021A                     RD1PPS          equ	538	;# 
  1178   00021B                     RD2PPS          equ	539	;# 
  1179   00021C                     RD3PPS          equ	540	;# 
  1180   00021D                     RD4PPS          equ	541	;# 
  1181   00021E                     RD5PPS          equ	542	;# 
  1182   00021F                     RD6PPS          equ	543	;# 
  1183   000220                     RD7PPS          equ	544	;# 
  1184   000221                     RE0PPS          equ	545	;# 
  1185   000222                     RE1PPS          equ	546	;# 
  1186   000223                     RE2PPS          equ	547	;# 
  1187   000229                     RF0PPS          equ	553	;# 
  1188   00022A                     RF1PPS          equ	554	;# 
  1189   00022B                     RF2PPS          equ	555	;# 
  1190   00022C                     RF3PPS          equ	556	;# 
  1191   00022D                     RF4PPS          equ	557	;# 
  1192   00022E                     RF5PPS          equ	558	;# 
  1193   00022F                     RF6PPS          equ	559	;# 
  1194   000230                     RF7PPS          equ	560	;# 
  1195   00023E                     INT0PPS         equ	574	;# 
  1196   00023F                     INT1PPS         equ	575	;# 
  1197   000240                     INT2PPS         equ	576	;# 
  1198   000241                     T0CKIPPS        equ	577	;# 
  1199   000242                     T1CKIPPS        equ	578	;# 
  1200   000243                     T1GPPS          equ	579	;# 
  1201   000244                     T3CKIPPS        equ	580	;# 
  1202   000245                     T3GPPS          equ	581	;# 
  1203   000246                     T5CKIPPS        equ	582	;# 
  1204   000247                     T5GPPS          equ	583	;# 
  1205   000248                     T2INPPS         equ	584	;# 
  1206   000249                     T4INPPS         equ	585	;# 
  1207   00024A                     T6INPPS         equ	586	;# 
  1208   00024F                     CCP1PPS         equ	591	;# 
  1209   000250                     CCP2PPS         equ	592	;# 
  1210   000251                     CCP3PPS         equ	593	;# 
  1211   000253                     PWM1ERSPPS      equ	595	;# 
  1212   000254                     PWM2ERSPPS      equ	596	;# 
  1213   000255                     PWM3ERSPPS      equ	597	;# 
  1214   000257                     PWMIN0PPS       equ	599	;# 
  1215   000258                     PWMIN1PPS       equ	600	;# 
  1216   000259                     SMT1WINPPS      equ	601	;# 
  1217   00025A                     SMT1SIGPPS      equ	602	;# 
  1218   00025B                     CWG1PPS         equ	603	;# 
  1219   00025B                     CWG1INPPS       equ	603	;# 
  1220   00025C                     CWG2PPS         equ	604	;# 
  1221   00025C                     CWG2INPPS       equ	604	;# 
  1222   00025D                     CWG3PPS         equ	605	;# 
  1223   00025D                     CWG3INPPS       equ	605	;# 
  1224   00025E                     MD1CARLPPS      equ	606	;# 
  1225   00025E                     MDCARLPPS       equ	606	;# 
  1226   00025F                     MD1CARHPPS      equ	607	;# 
  1227   00025F                     MDCARHPPS       equ	607	;# 
  1228   000260                     MD1SRCPPS       equ	608	;# 
  1229   000260                     MDSRCPPS        equ	608	;# 
  1230   000261                     CLCIN0PPS       equ	609	;# 
  1231   000262                     CLCIN1PPS       equ	610	;# 
  1232   000263                     CLCIN2PPS       equ	611	;# 
  1233   000264                     CLCIN3PPS       equ	612	;# 
  1234   000265                     CLCIN4PPS       equ	613	;# 
  1235   000266                     CLCIN5PPS       equ	614	;# 
  1236   000267                     CLCIN6PPS       equ	615	;# 
  1237   000268                     CLCIN7PPS       equ	616	;# 
  1238   000269                     ADACTPPS        equ	617	;# 
  1239   00026A                     SPI1SCKPPS      equ	618	;# 
  1240   00026B                     SPI1SDIPPS      equ	619	;# 
  1241   00026C                     SPI1SSPPS       equ	620	;# 
  1242   00026D                     SPI2SCKPPS      equ	621	;# 
  1243   00026E                     SPI2SDIPPS      equ	622	;# 
  1244   00026F                     SPI2SSPPS       equ	623	;# 
  1245   000270                     I2C1SDAPPS      equ	624	;# 
  1246   000271                     I2C1SCLPPS      equ	625	;# 
  1247   000272                     U1RXPPS         equ	626	;# 
  1248   000273                     U1CTSPPS        equ	627	;# 
  1249   000274                     U2RXPPS         equ	628	;# 
  1250   000275                     U2CTSPPS        equ	629	;# 
  1251   000276                     U3RXPPS         equ	630	;# 
  1252   000277                     U3CTSPPS        equ	631	;# 
  1253   000278                     U4RXPPS         equ	632	;# 
  1254   000279                     U4CTSPPS        equ	633	;# 
  1255   00027A                     U5RXPPS         equ	634	;# 
  1256   00027B                     U5CTSPPS        equ	635	;# 
  1257   000286                     RC4I2C          equ	646	;# 
  1258   000287                     RC3I2C          equ	647	;# 
  1259   000288                     RB2I2C          equ	648	;# 
  1260   000289                     RB1I2C          equ	649	;# 
  1261   00028B                     I2C1RXB         equ	651	;# 
  1262   00028C                     I2C1TXB         equ	652	;# 
  1263   00028D                     I2C1CNT         equ	653	;# 
  1264   00028E                     I2C1ADB0        equ	654	;# 
  1265   00028F                     I2C1ADB1        equ	655	;# 
  1266   000290                     I2C1ADR0        equ	656	;# 
  1267   000291                     I2C1ADR1        equ	657	;# 
  1268   000292                     I2C1ADR2        equ	658	;# 
  1269   000293                     I2C1ADR3        equ	659	;# 
  1270   000294                     I2C1CON0        equ	660	;# 
  1271   000295                     I2C1CON1        equ	661	;# 
  1272   000296                     I2C1CON2        equ	662	;# 
  1273   000297                     I2C1ERR         equ	663	;# 
  1274   000298                     I2C1STAT0       equ	664	;# 
  1275   000299                     I2C1STAT1       equ	665	;# 
  1276   00029A                     I2C1PIR         equ	666	;# 
  1277   00029B                     I2C1PIE         equ	667	;# 
  1278   00029C                     I2C1CLK         equ	668	;# 
  1279   00029D                     I2C1BTO         equ	669	;# 
  1280   0002A1                     U1RXB           equ	673	;# 
  1281   0002A1                     U1RXBL          equ	673	;# 
  1282   0002A2                     U1RXCHK         equ	674	;# 
  1283   0002A3                     U1TXB           equ	675	;# 
  1284   0002A3                     U1TXBL          equ	675	;# 
  1285   0002A4                     U1TXCHK         equ	676	;# 
  1286   0002A5                     U1P1            equ	677	;# 
  1287   0002A5                     U1P1L           equ	677	;# 
  1288   0002A6                     U1P1H           equ	678	;# 
  1289   0002A7                     U1P2            equ	679	;# 
  1290   0002A7                     U1P2L           equ	679	;# 
  1291   0002A8                     U1P2H           equ	680	;# 
  1292   0002A9                     U1P3            equ	681	;# 
  1293   0002A9                     U1P3L           equ	681	;# 
  1294   0002AA                     U1P3H           equ	682	;# 
  1295   0002AB                     U1CON0          equ	683	;# 
  1296   0002AC                     U1CON1          equ	684	;# 
  1297   0002AD                     U1CON2          equ	685	;# 
  1298   0002AE                     U1BRG           equ	686	;# 
  1299   0002AE                     U1BRGL          equ	686	;# 
  1300   0002AF                     U1BRGH          equ	687	;# 
  1301   0002B0                     U1FIFO          equ	688	;# 
  1302   0002B1                     U1UIR           equ	689	;# 
  1303   0002B2                     U1ERRIR         equ	690	;# 
  1304   0002B3                     U1ERRIE         equ	691	;# 
  1305   0002B4                     U2RXB           equ	692	;# 
  1306   0002B4                     U2RXBL          equ	692	;# 
  1307   0002B6                     U2TXB           equ	694	;# 
  1308   0002B6                     U2TXBL          equ	694	;# 
  1309   0002B8                     U2P1            equ	696	;# 
  1310   0002B8                     U2P1L           equ	696	;# 
  1311   0002BA                     U2P2            equ	698	;# 
  1312   0002BA                     U2P2L           equ	698	;# 
  1313   0002BC                     U2P3            equ	700	;# 
  1314   0002BC                     U2P3L           equ	700	;# 
  1315   0002BE                     U2CON0          equ	702	;# 
  1316   0002BF                     U2CON1          equ	703	;# 
  1317   0002C0                     U2CON2          equ	704	;# 
  1318   0002C1                     U2BRG           equ	705	;# 
  1319   0002C1                     U2BRGL          equ	705	;# 
  1320   0002C2                     U2BRGH          equ	706	;# 
  1321   0002C3                     U2FIFO          equ	707	;# 
  1322   0002C4                     U2UIR           equ	708	;# 
  1323   0002C5                     U2ERRIR         equ	709	;# 
  1324   0002C6                     U2ERRIE         equ	710	;# 
  1325   0002C7                     U3RXB           equ	711	;# 
  1326   0002C7                     U3RXBL          equ	711	;# 
  1327   0002C9                     U3TXB           equ	713	;# 
  1328   0002C9                     U3TXBL          equ	713	;# 
  1329   0002CB                     U3P1            equ	715	;# 
  1330   0002CB                     U3P1L           equ	715	;# 
  1331   0002CD                     U3P2            equ	717	;# 
  1332   0002CD                     U3P2L           equ	717	;# 
  1333   0002CF                     U3P3            equ	719	;# 
  1334   0002CF                     U3P3L           equ	719	;# 
  1335   0002D1                     U3CON0          equ	721	;# 
  1336   0002D2                     U3CON1          equ	722	;# 
  1337   0002D3                     U3CON2          equ	723	;# 
  1338   0002D4                     U3BRG           equ	724	;# 
  1339   0002D4                     U3BRGL          equ	724	;# 
  1340   0002D5                     U3BRGH          equ	725	;# 
  1341   0002D6                     U3FIFO          equ	726	;# 
  1342   0002D7                     U3UIR           equ	727	;# 
  1343   0002D8                     U3ERRIR         equ	728	;# 
  1344   0002D9                     U3ERRIE         equ	729	;# 
  1345   0002DA                     U4RXB           equ	730	;# 
  1346   0002DA                     U4RXBL          equ	730	;# 
  1347   0002DC                     U4TXB           equ	732	;# 
  1348   0002DC                     U4TXBL          equ	732	;# 
  1349   0002DE                     U4P1            equ	734	;# 
  1350   0002DE                     U4P1L           equ	734	;# 
  1351   0002E0                     U4P2            equ	736	;# 
  1352   0002E0                     U4P2L           equ	736	;# 
  1353   0002E2                     U4P3            equ	738	;# 
  1354   0002E2                     U4P3L           equ	738	;# 
  1355   0002E4                     U4CON0          equ	740	;# 
  1356   0002E5                     U4CON1          equ	741	;# 
  1357   0002E6                     U4CON2          equ	742	;# 
  1358   0002E7                     U4BRG           equ	743	;# 
  1359   0002E7                     U4BRGL          equ	743	;# 
  1360   0002E8                     U4BRGH          equ	744	;# 
  1361   0002E9                     U4FIFO          equ	745	;# 
  1362   0002EA                     U4UIR           equ	746	;# 
  1363   0002EB                     U4ERRIR         equ	747	;# 
  1364   0002EC                     U4ERRIE         equ	748	;# 
  1365   0002ED                     U5RXB           equ	749	;# 
  1366   0002ED                     U5RXBL          equ	749	;# 
  1367   0002EF                     U5TXB           equ	751	;# 
  1368   0002EF                     U5TXBL          equ	751	;# 
  1369   0002F1                     U5P1            equ	753	;# 
  1370   0002F1                     U5P1L           equ	753	;# 
  1371   0002F3                     U5P2            equ	755	;# 
  1372   0002F3                     U5P2L           equ	755	;# 
  1373   0002F5                     U5P3            equ	757	;# 
  1374   0002F5                     U5P3L           equ	757	;# 
  1375   0002F7                     U5CON0          equ	759	;# 
  1376   0002F8                     U5CON1          equ	760	;# 
  1377   0002F9                     U5CON2          equ	761	;# 
  1378   0002FA                     U5BRG           equ	762	;# 
  1379   0002FA                     U5BRGL          equ	762	;# 
  1380   0002FB                     U5BRGH          equ	763	;# 
  1381   0002FC                     U5FIFO          equ	764	;# 
  1382   0002FD                     U5UIR           equ	765	;# 
  1383   0002FE                     U5ERRIR         equ	766	;# 
  1384   0002FF                     U5ERRIE         equ	767	;# 
  1385   000300                     SMT1TMR         equ	768	;# 
  1386   000300                     SMT1TMRL        equ	768	;# 
  1387   000301                     SMT1TMRH        equ	769	;# 
  1388   000302                     SMT1TMRU        equ	770	;# 
  1389   000303                     SMT1CPR         equ	771	;# 
  1390   000303                     SMT1CPRL        equ	771	;# 
  1391   000304                     SMT1CPRH        equ	772	;# 
  1392   000305                     SMT1CPRU        equ	773	;# 
  1393   000306                     SMT1CPW         equ	774	;# 
  1394   000306                     SMT1CPWL        equ	774	;# 
  1395   000307                     SMT1CPWH        equ	775	;# 
  1396   000308                     SMT1CPWU        equ	776	;# 
  1397   000309                     SMT1PR          equ	777	;# 
  1398   000309                     SMT1PRL         equ	777	;# 
  1399   00030A                     SMT1PRH         equ	778	;# 
  1400   00030B                     SMT1PRU         equ	779	;# 
  1401   00030C                     SMT1CON0        equ	780	;# 
  1402   00030D                     SMT1CON1        equ	781	;# 
  1403   00030E                     SMT1STAT        equ	782	;# 
  1404   00030F                     SMT1CLK         equ	783	;# 
  1405   000310                     SMT1SIG         equ	784	;# 
  1406   000311                     SMT1WIN         equ	785	;# 
  1407   000318                     TMR0L           equ	792	;# 
  1408   000318                     TMR0            equ	792	;# 
  1409   000319                     TMR0H           equ	793	;# 
  1410   000319                     PR0             equ	793	;# 
  1411   00031A                     T0CON0          equ	794	;# 
  1412   00031B                     T0CON1          equ	795	;# 
  1413   00031C                     TMR1            equ	796	;# 
  1414   00031C                     TMR1L           equ	796	;# 
  1415   00031D                     TMR1H           equ	797	;# 
  1416   00031E                     T1CON           equ	798	;# 
  1417   00031E                     TMR1CON         equ	798	;# 
  1418   00031F                     T1GCON          equ	799	;# 
  1419   00031F                     TMR1GCON        equ	799	;# 
  1420   000320                     T1GATE          equ	800	;# 
  1421   000320                     TMR1GATE        equ	800	;# 
  1422   000321                     T1CLK           equ	801	;# 
  1423   000321                     TMR1CLK         equ	801	;# 
  1424   000321                     PR1             equ	801	;# 
  1425   000322                     T2TMR           equ	802	;# 
  1426   000322                     TMR2            equ	802	;# 
  1427   000323                     T2PR            equ	803	;# 
  1428   000323                     PR2             equ	803	;# 
  1429   000324                     T2CON           equ	804	;# 
  1430   000325                     T2HLT           equ	805	;# 
  1431   000326                     T2CLKCON        equ	806	;# 
  1432   000326                     T2CLK           equ	806	;# 
  1433   000327                     T2RST           equ	807	;# 
  1434   000328                     TMR3            equ	808	;# 
  1435   000328                     TMR3L           equ	808	;# 
  1436   000329                     TMR3H           equ	809	;# 
  1437   00032A                     T3CON           equ	810	;# 
  1438   00032A                     TMR3CON         equ	810	;# 
  1439   00032B                     T3GCON          equ	811	;# 
  1440   00032B                     TMR3GCON        equ	811	;# 
  1441   00032C                     T3GATE          equ	812	;# 
  1442   00032C                     TMR3GATE        equ	812	;# 
  1443   00032D                     T3CLK           equ	813	;# 
  1444   00032D                     TMR3CLK         equ	813	;# 
  1445   00032D                     PR3             equ	813	;# 
  1446   00032E                     T4TMR           equ	814	;# 
  1447   00032E                     TMR4            equ	814	;# 
  1448   00032F                     T4PR            equ	815	;# 
  1449   00032F                     PR4             equ	815	;# 
  1450   000330                     T4CON           equ	816	;# 
  1451   000331                     T4HLT           equ	817	;# 
  1452   000332                     T4CLKCON        equ	818	;# 
  1453   000332                     T4CLK           equ	818	;# 
  1454   000333                     T4RST           equ	819	;# 
  1455   000334                     TMR5            equ	820	;# 
  1456   000334                     TMR5L           equ	820	;# 
  1457   000335                     TMR5H           equ	821	;# 
  1458   000336                     T5CON           equ	822	;# 
  1459   000336                     TMR5CON         equ	822	;# 
  1460   000337                     T5GCON          equ	823	;# 
  1461   000337                     TMR5GCON        equ	823	;# 
  1462   000338                     T5GATE          equ	824	;# 
  1463   000338                     TMR5GATE        equ	824	;# 
  1464   000339                     T5CLK           equ	825	;# 
  1465   000339                     TMR5CLK         equ	825	;# 
  1466   000339                     PR5             equ	825	;# 
  1467   00033A                     T6TMR           equ	826	;# 
  1468   00033A                     TMR6            equ	826	;# 
  1469   00033B                     T6PR            equ	827	;# 
  1470   00033B                     PR6             equ	827	;# 
  1471   00033C                     T6CON           equ	828	;# 
  1472   00033D                     T6HLT           equ	829	;# 
  1473   00033E                     T6CLKCON        equ	830	;# 
  1474   00033E                     T6CLK           equ	830	;# 
  1475   00033F                     T6RST           equ	831	;# 
  1476   000340                     CCPR1           equ	832	;# 
  1477   000340                     CCPR1L          equ	832	;# 
  1478   000341                     CCPR1H          equ	833	;# 
  1479   000342                     CCP1CON         equ	834	;# 
  1480   000343                     CCP1CAP         equ	835	;# 
  1481   000344                     CCPR2           equ	836	;# 
  1482   000344                     CCPR2L          equ	836	;# 
  1483   000345                     CCPR2H          equ	837	;# 
  1484   000346                     CCP2CON         equ	838	;# 
  1485   000347                     CCP2CAP         equ	839	;# 
  1486   000348                     CCPR3           equ	840	;# 
  1487   000348                     CCPR3L          equ	840	;# 
  1488   000349                     CCPR3H          equ	841	;# 
  1489   00034A                     CCP3CON         equ	842	;# 
  1490   00034B                     CCP3CAP         equ	843	;# 
  1491   00034C                     CCPTMRS0        equ	844	;# 
  1492   00034F                     CRCDATA         equ	847	;# 
  1493   00034F                     CRCDATL         equ	847	;# 
  1494   000350                     CRCDATH         equ	848	;# 
  1495   000351                     CRCACC          equ	849	;# 
  1496   000351                     CRCACCL         equ	849	;# 
  1497   000352                     CRCACCH         equ	850	;# 
  1498   000353                     CRCSHFT         equ	851	;# 
  1499   000353                     CRCSHIFTL       equ	851	;# 
  1500   000354                     CRCSHIFTH       equ	852	;# 
  1501   000355                     CRCXOR          equ	853	;# 
  1502   000355                     CRCXORL         equ	853	;# 
  1503   000356                     CRCXORH         equ	854	;# 
  1504   000357                     CRCCON0         equ	855	;# 
  1505   000358                     CRCCON1         equ	856	;# 
  1506   00035A                     SCANLADR        equ	858	;# 
  1507   00035A                     SCANLADRL       equ	858	;# 
  1508   00035B                     SCANLADRH       equ	859	;# 
  1509   00035C                     SCANLADRU       equ	860	;# 
  1510   00035D                     SCANHADR        equ	861	;# 
  1511   00035D                     SCANHADRL       equ	861	;# 
  1512   00035E                     SCANHADRH       equ	862	;# 
  1513   00035F                     SCANHADRU       equ	863	;# 
  1514   000360                     SCANCON0        equ	864	;# 
  1515   000361                     SCANTRIG        equ	865	;# 
  1516   000362                     IPR0            equ	866	;# 
  1517   000363                     IPR1            equ	867	;# 
  1518   000364                     IPR2            equ	868	;# 
  1519   000365                     IPR3            equ	869	;# 
  1520   000366                     IPR4            equ	870	;# 
  1521   000367                     IPR5            equ	871	;# 
  1522   000368                     IPR6            equ	872	;# 
  1523   000369                     IPR7            equ	873	;# 
  1524   00036A                     IPR8            equ	874	;# 
  1525   00036B                     IPR9            equ	875	;# 
  1526   00036C                     IPR10           equ	876	;# 
  1527   00036D                     IPR11           equ	877	;# 
  1528   00036E                     IPR12           equ	878	;# 
  1529   00036F                     IPR13           equ	879	;# 
  1530   000370                     IPR14           equ	880	;# 
  1531   000371                     IPR15           equ	881	;# 
  1532   000373                     STATUS_CSHAD    equ	883	;# 
  1533   000374                     WREG_CSHAD      equ	884	;# 
  1534   000375                     BSR_CSHAD       equ	885	;# 
  1535   000376                     SHADCON         equ	886	;# 
  1536   000377                     STATUS_SHAD     equ	887	;# 
  1537   000378                     WREG_SHAD       equ	888	;# 
  1538   000379                     BSR_SHAD        equ	889	;# 
  1539   00037A                     PCLATH_SHAD     equ	890	;# 
  1540   00037B                     PCLATU_SHAD     equ	891	;# 
  1541   00037C                     FSR0SH          equ	892	;# 
  1542   00037C                     FSR0L_SHAD      equ	892	;# 
  1543   00037D                     FSR0H_SHAD      equ	893	;# 
  1544   00037E                     FSR1SH          equ	894	;# 
  1545   00037E                     FSR1L_SHAD      equ	894	;# 
  1546   00037F                     FSR1H_SHAD      equ	895	;# 
  1547   000380                     FSR2SH          equ	896	;# 
  1548   000380                     FSR2L_SHAD      equ	896	;# 
  1549   000381                     FSR2H_SHAD      equ	897	;# 
  1550   000382                     PRODSH          equ	898	;# 
  1551   000382                     PRODL_SHAD      equ	898	;# 
  1552   000383                     PRODH_SHAD      equ	899	;# 
  1553   0003BC                     CWG1CLK         equ	956	;# 
  1554   0003BC                     CWG1CLKCON      equ	956	;# 
  1555   0003BD                     CWG1ISM         equ	957	;# 
  1556   0003BD                     CWG1DAT         equ	957	;# 
  1557   0003BE                     CWG1DBR         equ	958	;# 
  1558   0003BF                     CWG1DBF         equ	959	;# 
  1559   0003C0                     CWG1CON0        equ	960	;# 
  1560   0003C1                     CWG1CON1        equ	961	;# 
  1561   0003C2                     CWG1AS0         equ	962	;# 
  1562   0003C3                     CWG1AS1         equ	963	;# 
  1563   0003C4                     CWG1STR         equ	964	;# 
  1564   0003C5                     CWG2CLK         equ	965	;# 
  1565   0003C5                     CWG2CLKCON      equ	965	;# 
  1566   0003C6                     CWG2ISM         equ	966	;# 
  1567   0003C6                     CWG2DAT         equ	966	;# 
  1568   0003C7                     CWG2DBR         equ	967	;# 
  1569   0003C8                     CWG2DBF         equ	968	;# 
  1570   0003C9                     CWG2CON0        equ	969	;# 
  1571   0003CA                     CWG2CON1        equ	970	;# 
  1572   0003CB                     CWG2AS0         equ	971	;# 
  1573   0003CC                     CWG2AS1         equ	972	;# 
  1574   0003CD                     CWG2STR         equ	973	;# 
  1575   0003CE                     CWG3CLK         equ	974	;# 
  1576   0003CE                     CWG3CLKCON      equ	974	;# 
  1577   0003CF                     CWG3ISM         equ	975	;# 
  1578   0003CF                     CWG3DAT         equ	975	;# 
  1579   0003D0                     CWG3DBR         equ	976	;# 
  1580   0003D1                     CWG3DBF         equ	977	;# 
  1581   0003D2                     CWG3CON0        equ	978	;# 
  1582   0003D3                     CWG3CON1        equ	979	;# 
  1583   0003D4                     CWG3AS0         equ	980	;# 
  1584   0003D5                     CWG3AS1         equ	981	;# 
  1585   0003D6                     CWG3STR         equ	982	;# 
  1586   0003D7                     FVRCON          equ	983	;# 
  1587   0003D8                     ADCPCON         equ	984	;# 
  1588   0003D8                     ADCP            equ	984	;# 
  1589   0003D9                     ADLTH           equ	985	;# 
  1590   0003D9                     ADLTHL          equ	985	;# 
  1591   0003DA                     ADLTHH          equ	986	;# 
  1592   0003DB                     ADUTH           equ	987	;# 
  1593   0003DB                     ADUTHL          equ	987	;# 
  1594   0003DC                     ADUTHH          equ	988	;# 
  1595   0003DD                     ADERR           equ	989	;# 
  1596   0003DD                     ADERRL          equ	989	;# 
  1597   0003DE                     ADERRH          equ	990	;# 
  1598   0003DF                     ADSTPT          equ	991	;# 
  1599   0003DF                     ADSTPTL         equ	991	;# 
  1600   0003E0                     ADSTPTH         equ	992	;# 
  1601   0003E1                     ADFLTR          equ	993	;# 
  1602   0003E1                     ADFLTRL         equ	993	;# 
  1603   0003E2                     ADFLTRH         equ	994	;# 
  1604   0003E3                     ADACC           equ	995	;# 
  1605   0003E3                     ADACCL          equ	995	;# 
  1606   0003E4                     ADACCH          equ	996	;# 
  1607   0003E5                     ADACCU          equ	997	;# 
  1608   0003E6                     ADCNT           equ	998	;# 
  1609   0003E7                     ADRPT           equ	999	;# 
  1610   0003E8                     ADPREV          equ	1000	;# 
  1611   0003E8                     ADPREVL         equ	1000	;# 
  1612   0003E9                     ADPREVH         equ	1001	;# 
  1613   0003EA                     ADRES           equ	1002	;# 
  1614   0003EA                     ADRESL          equ	1002	;# 
  1615   0003EB                     ADRESH          equ	1003	;# 
  1616   0003EC                     ADPCH           equ	1004	;# 
  1617   0003EE                     ADACQ           equ	1006	;# 
  1618   0003EE                     ADACQL          equ	1006	;# 
  1619   0003EF                     ADACQH          equ	1007	;# 
  1620   0003F0                     ADCAP           equ	1008	;# 
  1621   0003F1                     ADPRE           equ	1009	;# 
  1622   0003F1                     ADPREL          equ	1009	;# 
  1623   0003F2                     ADPREH          equ	1010	;# 
  1624   0003F3                     ADCON0          equ	1011	;# 
  1625   0003F4                     ADCON1          equ	1012	;# 
  1626   0003F5                     ADCON2          equ	1013	;# 
  1627   0003F6                     ADCON3          equ	1014	;# 
  1628   0003F7                     ADSTAT          equ	1015	;# 
  1629   0003F8                     ADREF           equ	1016	;# 
  1630   0003F9                     ADACT           equ	1017	;# 
  1631   0003FA                     ADCLK           equ	1018	;# 
  1632   000400                     ANSELA          equ	1024	;# 
  1633   000401                     WPUA            equ	1025	;# 
  1634   000402                     ODCONA          equ	1026	;# 
  1635   000403                     SLRCONA         equ	1027	;# 
  1636   000404                     INLVLA          equ	1028	;# 
  1637   000405                     IOCAP           equ	1029	;# 
  1638   000406                     IOCAN           equ	1030	;# 
  1639   000407                     IOCAF           equ	1031	;# 
  1640   000408                     ANSELB          equ	1032	;# 
  1641   000409                     WPUB            equ	1033	;# 
  1642   00040A                     ODCONB          equ	1034	;# 
  1643   00040B                     SLRCONB         equ	1035	;# 
  1644   00040C                     INLVLB          equ	1036	;# 
  1645   00040D                     IOCBP           equ	1037	;# 
  1646   00040E                     IOCBN           equ	1038	;# 
  1647   00040F                     IOCBF           equ	1039	;# 
  1648   000410                     ANSELC          equ	1040	;# 
  1649   000411                     WPUC            equ	1041	;# 
  1650   000412                     ODCONC          equ	1042	;# 
  1651   000413                     SLRCONC         equ	1043	;# 
  1652   000414                     INLVLC          equ	1044	;# 
  1653   000415                     IOCCP           equ	1045	;# 
  1654   000416                     IOCCN           equ	1046	;# 
  1655   000417                     IOCCF           equ	1047	;# 
  1656   000418                     ANSELD          equ	1048	;# 
  1657   000419                     WPUD            equ	1049	;# 
  1658   00041A                     ODCOND          equ	1050	;# 
  1659   00041B                     SLRCOND         equ	1051	;# 
  1660   00041C                     INLVLD          equ	1052	;# 
  1661   000420                     ANSELE          equ	1056	;# 
  1662   000421                     WPUE            equ	1057	;# 
  1663   000422                     ODCONE          equ	1058	;# 
  1664   000423                     SLRCONE         equ	1059	;# 
  1665   000424                     INLVLE          equ	1060	;# 
  1666   000425                     IOCEP           equ	1061	;# 
  1667   000426                     IOCEN           equ	1062	;# 
  1668   000427                     IOCEF           equ	1063	;# 
  1669   000428                     ANSELF          equ	1064	;# 
  1670   000429                     WPUF            equ	1065	;# 
  1671   00042A                     ODCONF          equ	1066	;# 
  1672   00042B                     SLRCONF         equ	1067	;# 
  1673   00042C                     INLVLF          equ	1068	;# 
  1674   000440                     NCO1ACC         equ	1088	;# 
  1675   000440                     NCO1ACCL        equ	1088	;# 
  1676   000441                     NCO1ACCH        equ	1089	;# 
  1677   000442                     NCO1ACCU        equ	1090	;# 
  1678   000443                     NCO1INC         equ	1091	;# 
  1679   000443                     NCO1INCL        equ	1091	;# 
  1680   000444                     NCO1INCH        equ	1092	;# 
  1681   000445                     NCO1INCU        equ	1093	;# 
  1682   000446                     NCO1CON         equ	1094	;# 
  1683   000447                     NCO1CLK         equ	1095	;# 
  1684   000448                     NCO2ACC         equ	1096	;# 
  1685   000448                     NCO2ACCL        equ	1096	;# 
  1686   000449                     NCO2ACCH        equ	1097	;# 
  1687   00044A                     NCO2ACCU        equ	1098	;# 
  1688   00044B                     NCO2INC         equ	1099	;# 
  1689   00044B                     NCO2INCL        equ	1099	;# 
  1690   00044C                     NCO2INCH        equ	1100	;# 
  1691   00044D                     NCO2INCU        equ	1101	;# 
  1692   00044E                     NCO2CON         equ	1102	;# 
  1693   00044F                     NCO2CLK         equ	1103	;# 
  1694   000450                     NCO3ACC         equ	1104	;# 
  1695   000450                     NCO3ACCL        equ	1104	;# 
  1696   000451                     NCO3ACCH        equ	1105	;# 
  1697   000452                     NCO3ACCU        equ	1106	;# 
  1698   000453                     NCO3INC         equ	1107	;# 
  1699   000453                     NCO3INCL        equ	1107	;# 
  1700   000454                     NCO3INCH        equ	1108	;# 
  1701   000455                     NCO3INCU        equ	1109	;# 
  1702   000456                     NCO3CON         equ	1110	;# 
  1703   000457                     NCO3CLK         equ	1111	;# 
  1704   000459                     IVTLOCK         equ	1113	;# 
  1705   00045A                     IVTAD           equ	1114	;# 
  1706   00045A                     IVTADL          equ	1114	;# 
  1707   00045B                     IVTADH          equ	1115	;# 
  1708   00045C                     IVTADU          equ	1116	;# 
  1709   00045D                     IVTBASE         equ	1117	;# 
  1710   00045D                     IVTBASEL        equ	1117	;# 
  1711   00045E                     IVTBASEH        equ	1118	;# 
  1712   00045F                     IVTBASEU        equ	1119	;# 
  1713   000460                     PWM1ERS         equ	1120	;# 
  1714   000461                     PWM1CLK         equ	1121	;# 
  1715   000462                     PWM1LDS         equ	1122	;# 
  1716   000463                     PWM1PR          equ	1123	;# 
  1717   000463                     PWM1PRL         equ	1123	;# 
  1718   000464                     PWM1PRH         equ	1124	;# 
  1719   000465                     PWM1CPRE        equ	1125	;# 
  1720   000466                     PWM1PIPOS       equ	1126	;# 
  1721   000467                     PWM1GIR         equ	1127	;# 
  1722   000468                     PWM1GIE         equ	1128	;# 
  1723   000469                     PWM1CON         equ	1129	;# 
  1724   00046A                     PWM1S1CFG       equ	1130	;# 
  1725   00046B                     PWM1S1P1        equ	1131	;# 
  1726   00046B                     PWM1S1P1L       equ	1131	;# 
  1727   00046C                     PWM1S1P1H       equ	1132	;# 
  1728   00046D                     PWM1S1P2        equ	1133	;# 
  1729   00046D                     PWM1S1P2L       equ	1133	;# 
  1730   00046E                     PWM1S1P2H       equ	1134	;# 
  1731   00046F                     PWM2ERS         equ	1135	;# 
  1732   000470                     PWM2CLK         equ	1136	;# 
  1733   000471                     PWM2LDS         equ	1137	;# 
  1734   000472                     PWM2PR          equ	1138	;# 
  1735   000472                     PWM2PRL         equ	1138	;# 
  1736   000473                     PWM2PRH         equ	1139	;# 
  1737   000474                     PWM2CPRE        equ	1140	;# 
  1738   000475                     PWM2PIPOS       equ	1141	;# 
  1739   000476                     PWM2GIR         equ	1142	;# 
  1740   000477                     PWM2GIE         equ	1143	;# 
  1741   000478                     PWM2CON         equ	1144	;# 
  1742   000479                     PWM2S1CFG       equ	1145	;# 
  1743   00047A                     PWM2S1P1        equ	1146	;# 
  1744   00047A                     PWM2S1P1L       equ	1146	;# 
  1745   00047B                     PWM2S1P1H       equ	1147	;# 
  1746   00047C                     PWM2S1P2        equ	1148	;# 
  1747   00047C                     PWM2S1P2L       equ	1148	;# 
  1748   00047D                     PWM2S1P2H       equ	1149	;# 
  1749   00047E                     PWM3ERS         equ	1150	;# 
  1750   00047F                     PWM3CLK         equ	1151	;# 
  1751   000480                     PWM3LDS         equ	1152	;# 
  1752   000481                     PWM3PR          equ	1153	;# 
  1753   000481                     PWM3PRL         equ	1153	;# 
  1754   000482                     PWM3PRH         equ	1154	;# 
  1755   000483                     PWM3CPRE        equ	1155	;# 
  1756   000484                     PWM3PIPOS       equ	1156	;# 
  1757   000485                     PWM3GIR         equ	1157	;# 
  1758   000486                     PWM3GIE         equ	1158	;# 
  1759   000487                     PWM3CON         equ	1159	;# 
  1760   000488                     PWM3S1CFG       equ	1160	;# 
  1761   000489                     PWM3S1P1        equ	1161	;# 
  1762   000489                     PWM3S1P1L       equ	1161	;# 
  1763   00048A                     PWM3S1P1H       equ	1162	;# 
  1764   00048B                     PWM3S1P2        equ	1163	;# 
  1765   00048B                     PWM3S1P2L       equ	1163	;# 
  1766   00048C                     PWM3S1P2H       equ	1164	;# 
  1767   00049C                     PWMLOAD         equ	1180	;# 
  1768   00049D                     PWMEN           equ	1181	;# 
  1769   00049E                     PIE0            equ	1182	;# 
  1770   00049F                     PIE1            equ	1183	;# 
  1771   0004A0                     PIE2            equ	1184	;# 
  1772   0004A1                     PIE3            equ	1185	;# 
  1773   0004A2                     PIE4            equ	1186	;# 
  1774   0004A3                     PIE5            equ	1187	;# 
  1775   0004A4                     PIE6            equ	1188	;# 
  1776   0004A5                     PIE7            equ	1189	;# 
  1777   0004A6                     PIE8            equ	1190	;# 
  1778   0004A7                     PIE9            equ	1191	;# 
  1779   0004A8                     PIE10           equ	1192	;# 
  1780   0004A9                     PIE11           equ	1193	;# 
  1781   0004AA                     PIE12           equ	1194	;# 
  1782   0004AB                     PIE13           equ	1195	;# 
  1783   0004AC                     PIE14           equ	1196	;# 
  1784   0004AD                     PIE15           equ	1197	;# 
  1785   0004AE                     PIR0            equ	1198	;# 
  1786   0004AF                     PIR1            equ	1199	;# 
  1787   0004B0                     PIR2            equ	1200	;# 
  1788   0004B1                     PIR3            equ	1201	;# 
  1789   0004B2                     PIR4            equ	1202	;# 
  1790   0004B3                     PIR5            equ	1203	;# 
  1791   0004B4                     PIR6            equ	1204	;# 
  1792   0004B5                     PIR7            equ	1205	;# 
  1793   0004B6                     PIR8            equ	1206	;# 
  1794   0004B7                     PIR9            equ	1207	;# 
  1795   0004B8                     PIR10           equ	1208	;# 
  1796   0004B9                     PIR11           equ	1209	;# 
  1797   0004BA                     PIR12           equ	1210	;# 
  1798   0004BB                     PIR13           equ	1211	;# 
  1799   0004BC                     PIR14           equ	1212	;# 
  1800   0004BD                     PIR15           equ	1213	;# 
  1801   0004BE                     LATA            equ	1214	;# 
  1802   0004BF                     LATB            equ	1215	;# 
  1803   0004C0                     LATC            equ	1216	;# 
  1804   0004C1                     LATD            equ	1217	;# 
  1805   0004C2                     LATE            equ	1218	;# 
  1806   0004C3                     LATF            equ	1219	;# 
  1807   0004C6                     TRISA           equ	1222	;# 
  1808   0004C7                     TRISB           equ	1223	;# 
  1809   0004C8                     TRISC           equ	1224	;# 
  1810   0004C9                     TRISD           equ	1225	;# 
  1811   0004CA                     TRISE           equ	1226	;# 
  1812   0004CB                     TRISF           equ	1227	;# 
  1813   0004CE                     PORTA           equ	1230	;# 
  1814   0004CF                     PORTB           equ	1231	;# 
  1815   0004D0                     PORTC           equ	1232	;# 
  1816   0004D1                     PORTD           equ	1233	;# 
  1817   0004D2                     PORTE           equ	1234	;# 
  1818   0004D3                     PORTF           equ	1235	;# 
  1819   0004D6                     INTCON0         equ	1238	;# 
  1820   0004D7                     INTCON1         equ	1239	;# 
  1821   0004D8                     STATUS          equ	1240	;# 
  1822   0004D9                     FSR2            equ	1241	;# 
  1823   0004D9                     FSR2L           equ	1241	;# 
  1824   0004DA                     FSR2H           equ	1242	;# 
  1825   0004DB                     PLUSW2          equ	1243	;# 
  1826   0004DC                     PREINC2         equ	1244	;# 
  1827   0004DD                     POSTDEC2        equ	1245	;# 
  1828   0004DE                     POSTINC2        equ	1246	;# 
  1829   0004DF                     INDF2           equ	1247	;# 
  1830   0004E0                     BSR             equ	1248	;# 
  1831   0004E1                     FSR1            equ	1249	;# 
  1832   0004E1                     FSR1L           equ	1249	;# 
  1833   0004E2                     FSR1H           equ	1250	;# 
  1834   0004E3                     PLUSW1          equ	1251	;# 
  1835   0004E4                     PREINC1         equ	1252	;# 
  1836   0004E5                     POSTDEC1        equ	1253	;# 
  1837   0004E6                     POSTINC1        equ	1254	;# 
  1838   0004E7                     INDF1           equ	1255	;# 
  1839   0004E8                     WREG            equ	1256	;# 
  1840   0004E9                     FSR0            equ	1257	;# 
  1841   0004E9                     FSR0L           equ	1257	;# 
  1842   0004EA                     FSR0H           equ	1258	;# 
  1843   0004EB                     PLUSW0          equ	1259	;# 
  1844   0004EC                     PREINC0         equ	1260	;# 
  1845   0004ED                     POSTDEC0        equ	1261	;# 
  1846   0004EE                     POSTINC0        equ	1262	;# 
  1847   0004EF                     INDF0           equ	1263	;# 
  1848   0004F0                     PCON0           equ	1264	;# 
  1849   0004F1                     PCON1           equ	1265	;# 
  1850   0004F2                     CPUDOZE         equ	1266	;# 
  1851   0004F3                     PROD            equ	1267	;# 
  1852   0004F3                     PRODL           equ	1267	;# 
  1853   0004F4                     PRODH           equ	1268	;# 
  1854   0004F5                     TABLAT          equ	1269	;# 
  1855   0004F6                     TBLPTR          equ	1270	;# 
  1856   0004F6                     TBLPTRL         equ	1270	;# 
  1857   0004F7                     TBLPTRH         equ	1271	;# 
  1858   0004F8                     TBLPTRU         equ	1272	;# 
  1859   0004F9                     PCLAT           equ	1273	;# 
  1860   0004F9                     PCL             equ	1273	;# 
  1861   0004FA                     PCLATH          equ	1274	;# 
  1862   0004FB                     PCLATU          equ	1275	;# 
  1863   0004FC                     STKPTR          equ	1276	;# 
  1864   0004FD                     TOS             equ	1277	;# 
  1865   0004FD                     TOSL            equ	1277	;# 
  1866   0004FE                     TOSH            equ	1278	;# 
  1867   0004FF                     TOSU            equ	1279	;# 
  1868   000039                     CLKRCON         equ	57	;# 
  1869   00003A                     CLKRCLK         equ	58	;# 
  1870   000040                     NVMCON0         equ	64	;# 
  1871   000041                     NVMCON1         equ	65	;# 
  1872   000042                     NVMLOCK         equ	66	;# 
  1873   000043                     NVMADR          equ	67	;# 
  1874   000043                     NVMADRL         equ	67	;# 
  1875   000044                     NVMADRH         equ	68	;# 
  1876   000045                     NVMADRU         equ	69	;# 
  1877   000046                     NVMDAT          equ	70	;# 
  1878   000046                     NVMDATL         equ	70	;# 
  1879   000047                     NVMDATH         equ	71	;# 
  1880   000048                     VREGCON         equ	72	;# 
  1881   000049                     BORCON          equ	73	;# 
  1882   00004A                     HLVDCON0        equ	74	;# 
  1883   00004B                     HLVDCON1        equ	75	;# 
  1884   00004C                     ZCDCON          equ	76	;# 
  1885   000060                     PMD0            equ	96	;# 
  1886   000061                     PMD1            equ	97	;# 
  1887   000063                     PMD3            equ	99	;# 
  1888   000064                     PMD4            equ	100	;# 
  1889   000065                     PMD5            equ	101	;# 
  1890   000066                     PMD6            equ	102	;# 
  1891   000067                     PMD7            equ	103	;# 
  1892   000068                     PMD8            equ	104	;# 
  1893   00006A                     MD1CON0         equ	106	;# 
  1894   00006B                     MD1CON1         equ	107	;# 
  1895   00006C                     MD1SRC          equ	108	;# 
  1896   00006D                     MD1CARL         equ	109	;# 
  1897   00006E                     MD1CARH         equ	110	;# 
  1898   00006F                     CMOUT           equ	111	;# 
  1899   000070                     CM1CON0         equ	112	;# 
  1900   000071                     CM1CON1         equ	113	;# 
  1901   000072                     CM1NCH          equ	114	;# 
  1902   000073                     CM1PCH          equ	115	;# 
  1903   000074                     CM2CON0         equ	116	;# 
  1904   000075                     CM2CON1         equ	117	;# 
  1905   000076                     CM2NCH          equ	118	;# 
  1906   000077                     CM2PCH          equ	119	;# 
  1907   000078                     WDTCON0         equ	120	;# 
  1908   000079                     WDTCON1         equ	121	;# 
  1909   00007A                     WDTPS           equ	122	;# 
  1910   00007A                     WDTPSL          equ	122	;# 
  1911   00007B                     WDTPSH          equ	123	;# 
  1912   00007C                     WDTTMR          equ	124	;# 
  1913   00007D                     DAC1DAT         equ	125	;# 
  1914   00007D                     DAC1DATL        equ	125	;# 
  1915   00007F                     DAC1CON         equ	127	;# 
  1916   000080                     SPI1RXB         equ	128	;# 
  1917   000081                     SPI1TXB         equ	129	;# 
  1918   000082                     SPI1TCNT        equ	130	;# 
  1919   000082                     SPI1TCNTL       equ	130	;# 
  1920   000083                     SPI1TCNTH       equ	131	;# 
  1921   000084                     SPI1CON0        equ	132	;# 
  1922   000085                     SPI1CON1        equ	133	;# 
  1923   000086                     SPI1CON2        equ	134	;# 
  1924   000087                     SPI1STATUS      equ	135	;# 
  1925   000088                     SPI1TWIDTH      equ	136	;# 
  1926   000089                     SPI1BAUD        equ	137	;# 
  1927   00008A                     SPI1INTF        equ	138	;# 
  1928   00008B                     SPI1INTE        equ	139	;# 
  1929   00008C                     SPI1CLK         equ	140	;# 
  1930   00008D                     SPI2RXB         equ	141	;# 
  1931   00008E                     SPI2TXB         equ	142	;# 
  1932   00008F                     SPI2TCNT        equ	143	;# 
  1933   00008F                     SPI2TCNTL       equ	143	;# 
  1934   000090                     SPI2TCNTH       equ	144	;# 
  1935   000091                     SPI2CON0        equ	145	;# 
  1936   000092                     SPI2CON1        equ	146	;# 
  1937   000093                     SPI2CON2        equ	147	;# 
  1938   000094                     SPI2STATUS      equ	148	;# 
  1939   000095                     SPI2TWIDTH      equ	149	;# 
  1940   000096                     SPI2BAUD        equ	150	;# 
  1941   000097                     SPI2INTF        equ	151	;# 
  1942   000098                     SPI2INTE        equ	152	;# 
  1943   000099                     SPI2CLK         equ	153	;# 
  1944   0000AC                     ACTCON          equ	172	;# 
  1945   0000AD                     OSCCON1         equ	173	;# 
  1946   0000AE                     OSCCON2         equ	174	;# 
  1947   0000AF                     OSCCON3         equ	175	;# 
  1948   0000B0                     OSCTUNE         equ	176	;# 
  1949   0000B1                     OSCFRQ          equ	177	;# 
  1950   0000B1                     OSCFREQ         equ	177	;# 
  1951   0000B2                     OSCSTAT         equ	178	;# 
  1952   0000B2                     OSCSTAT1        equ	178	;# 
  1953   0000B3                     OSCEN           equ	179	;# 
  1954   0000B4                     PRLOCK          equ	180	;# 
  1955   0000B5                     SCANPR          equ	181	;# 
  1956   0000B6                     DMA1PR          equ	182	;# 
  1957   0000B7                     DMA2PR          equ	183	;# 
  1958   0000B8                     DMA3PR          equ	184	;# 
  1959   0000B9                     DMA4PR          equ	185	;# 
  1960   0000BA                     DMA5PR          equ	186	;# 
  1961   0000BB                     DMA6PR          equ	187	;# 
  1962   0000BE                     MAINPR          equ	190	;# 
  1963   0000BF                     ISRPR           equ	191	;# 
  1964   0000D4                     CLCDATA         equ	212	;# 
  1965   0000D5                     CLCSELECT       equ	213	;# 
  1966   0000D6                     CLCnCON         equ	214	;# 
  1967   0000D7                     CLCnPOL         equ	215	;# 
  1968   0000D8                     CLCnSEL0        equ	216	;# 
  1969   0000D9                     CLCnSEL1        equ	217	;# 
  1970   0000DA                     CLCnSEL2        equ	218	;# 
  1971   0000DB                     CLCnSEL3        equ	219	;# 
  1972   0000DC                     CLCnGLS0        equ	220	;# 
  1973   0000DD                     CLCnGLS1        equ	221	;# 
  1974   0000DE                     CLCnGLS2        equ	222	;# 
  1975   0000DF                     CLCnGLS3        equ	223	;# 
  1976   0000E8                     DMASELECT       equ	232	;# 
  1977   0000E9                     DMAnBUF         equ	233	;# 
  1978   0000EA                     DMAnDCNT        equ	234	;# 
  1979   0000EA                     DMAnDCNTL       equ	234	;# 
  1980   0000EB                     DMAnDCNTH       equ	235	;# 
  1981   0000EC                     DMAnDPTR        equ	236	;# 
  1982   0000EC                     DMAnDPTRL       equ	236	;# 
  1983   0000ED                     DMAnDPTRH       equ	237	;# 
  1984   0000EE                     DMAnDSZ         equ	238	;# 
  1985   0000EE                     DMAnDSZL        equ	238	;# 
  1986   0000EF                     DMAnDSZH        equ	239	;# 
  1987   0000F0                     DMAnDSA         equ	240	;# 
  1988   0000F0                     DMAnDSAL        equ	240	;# 
  1989   0000F1                     DMAnDSAH        equ	241	;# 
  1990   0000F2                     DMAnSCNT        equ	242	;# 
  1991   0000F2                     DMAnSCNTL       equ	242	;# 
  1992   0000F3                     DMAnSCNTH       equ	243	;# 
  1993   0000F4                     DMAnSPTR        equ	244	;# 
  1994   0000F4                     DMAnSPTRL       equ	244	;# 
  1995   0000F5                     DMAnSPTRH       equ	245	;# 
  1996   0000F6                     DMAnSPTRU       equ	246	;# 
  1997   0000F7                     DMAnSSZ         equ	247	;# 
  1998   0000F7                     DMAnSSZL        equ	247	;# 
  1999   0000F8                     DMAnSSZH        equ	248	;# 
  2000   0000F9                     DMAnSSA         equ	249	;# 
  2001   0000F9                     DMAnSSAL        equ	249	;# 
  2002   0000FA                     DMAnSSAH        equ	250	;# 
  2003   0000FB                     DMAnSSAU        equ	251	;# 
  2004   0000FC                     DMAnCON0        equ	252	;# 
  2005   0000FD                     DMAnCON1        equ	253	;# 
  2006   0000FE                     DMAnAIRQ        equ	254	;# 
  2007   0000FF                     DMAnSIRQ        equ	255	;# 
  2008   000200                     PPSLOCK         equ	512	;# 
  2009   000201                     RA0PPS          equ	513	;# 
  2010   000202                     RA1PPS          equ	514	;# 
  2011   000203                     RA2PPS          equ	515	;# 
  2012   000204                     RA3PPS          equ	516	;# 
  2013   000205                     RA4PPS          equ	517	;# 
  2014   000206                     RA5PPS          equ	518	;# 
  2015   000207                     RA6PPS          equ	519	;# 
  2016   000208                     RA7PPS          equ	520	;# 
  2017   000209                     RB0PPS          equ	521	;# 
  2018   00020A                     RB1PPS          equ	522	;# 
  2019   00020B                     RB2PPS          equ	523	;# 
  2020   00020C                     RB3PPS          equ	524	;# 
  2021   00020D                     RB4PPS          equ	525	;# 
  2022   00020E                     RB5PPS          equ	526	;# 
  2023   00020F                     RB6PPS          equ	527	;# 
  2024   000210                     RB7PPS          equ	528	;# 
  2025   000211                     RC0PPS          equ	529	;# 
  2026   000212                     RC1PPS          equ	530	;# 
  2027   000213                     RC2PPS          equ	531	;# 
  2028   000214                     RC3PPS          equ	532	;# 
  2029   000215                     RC4PPS          equ	533	;# 
  2030   000216                     RC5PPS          equ	534	;# 
  2031   000217                     RC6PPS          equ	535	;# 
  2032   000218                     RC7PPS          equ	536	;# 
  2033   000219                     RD0PPS          equ	537	;# 
  2034   00021A                     RD1PPS          equ	538	;# 
  2035   00021B                     RD2PPS          equ	539	;# 
  2036   00021C                     RD3PPS          equ	540	;# 
  2037   00021D                     RD4PPS          equ	541	;# 
  2038   00021E                     RD5PPS          equ	542	;# 
  2039   00021F                     RD6PPS          equ	543	;# 
  2040   000220                     RD7PPS          equ	544	;# 
  2041   000221                     RE0PPS          equ	545	;# 
  2042   000222                     RE1PPS          equ	546	;# 
  2043   000223                     RE2PPS          equ	547	;# 
  2044   000229                     RF0PPS          equ	553	;# 
  2045   00022A                     RF1PPS          equ	554	;# 
  2046   00022B                     RF2PPS          equ	555	;# 
  2047   00022C                     RF3PPS          equ	556	;# 
  2048   00022D                     RF4PPS          equ	557	;# 
  2049   00022E                     RF5PPS          equ	558	;# 
  2050   00022F                     RF6PPS          equ	559	;# 
  2051   000230                     RF7PPS          equ	560	;# 
  2052   00023E                     INT0PPS         equ	574	;# 
  2053   00023F                     INT1PPS         equ	575	;# 
  2054   000240                     INT2PPS         equ	576	;# 
  2055   000241                     T0CKIPPS        equ	577	;# 
  2056   000242                     T1CKIPPS        equ	578	;# 
  2057   000243                     T1GPPS          equ	579	;# 
  2058   000244                     T3CKIPPS        equ	580	;# 
  2059   000245                     T3GPPS          equ	581	;# 
  2060   000246                     T5CKIPPS        equ	582	;# 
  2061   000247                     T5GPPS          equ	583	;# 
  2062   000248                     T2INPPS         equ	584	;# 
  2063   000249                     T4INPPS         equ	585	;# 
  2064   00024A                     T6INPPS         equ	586	;# 
  2065   00024F                     CCP1PPS         equ	591	;# 
  2066   000250                     CCP2PPS         equ	592	;# 
  2067   000251                     CCP3PPS         equ	593	;# 
  2068   000253                     PWM1ERSPPS      equ	595	;# 
  2069   000254                     PWM2ERSPPS      equ	596	;# 
  2070   000255                     PWM3ERSPPS      equ	597	;# 
  2071   000257                     PWMIN0PPS       equ	599	;# 
  2072   000258                     PWMIN1PPS       equ	600	;# 
  2073   000259                     SMT1WINPPS      equ	601	;# 
  2074   00025A                     SMT1SIGPPS      equ	602	;# 
  2075   00025B                     CWG1PPS         equ	603	;# 
  2076   00025B                     CWG1INPPS       equ	603	;# 
  2077   00025C                     CWG2PPS         equ	604	;# 
  2078   00025C                     CWG2INPPS       equ	604	;# 
  2079   00025D                     CWG3PPS         equ	605	;# 
  2080   00025D                     CWG3INPPS       equ	605	;# 
  2081   00025E                     MD1CARLPPS      equ	606	;# 
  2082   00025E                     MDCARLPPS       equ	606	;# 
  2083   00025F                     MD1CARHPPS      equ	607	;# 
  2084   00025F                     MDCARHPPS       equ	607	;# 
  2085   000260                     MD1SRCPPS       equ	608	;# 
  2086   000260                     MDSRCPPS        equ	608	;# 
  2087   000261                     CLCIN0PPS       equ	609	;# 
  2088   000262                     CLCIN1PPS       equ	610	;# 
  2089   000263                     CLCIN2PPS       equ	611	;# 
  2090   000264                     CLCIN3PPS       equ	612	;# 
  2091   000265                     CLCIN4PPS       equ	613	;# 
  2092   000266                     CLCIN5PPS       equ	614	;# 
  2093   000267                     CLCIN6PPS       equ	615	;# 
  2094   000268                     CLCIN7PPS       equ	616	;# 
  2095   000269                     ADACTPPS        equ	617	;# 
  2096   00026A                     SPI1SCKPPS      equ	618	;# 
  2097   00026B                     SPI1SDIPPS      equ	619	;# 
  2098   00026C                     SPI1SSPPS       equ	620	;# 
  2099   00026D                     SPI2SCKPPS      equ	621	;# 
  2100   00026E                     SPI2SDIPPS      equ	622	;# 
  2101   00026F                     SPI2SSPPS       equ	623	;# 
  2102   000270                     I2C1SDAPPS      equ	624	;# 
  2103   000271                     I2C1SCLPPS      equ	625	;# 
  2104   000272                     U1RXPPS         equ	626	;# 
  2105   000273                     U1CTSPPS        equ	627	;# 
  2106   000274                     U2RXPPS         equ	628	;# 
  2107   000275                     U2CTSPPS        equ	629	;# 
  2108   000276                     U3RXPPS         equ	630	;# 
  2109   000277                     U3CTSPPS        equ	631	;# 
  2110   000278                     U4RXPPS         equ	632	;# 
  2111   000279                     U4CTSPPS        equ	633	;# 
  2112   00027A                     U5RXPPS         equ	634	;# 
  2113   00027B                     U5CTSPPS        equ	635	;# 
  2114   000286                     RC4I2C          equ	646	;# 
  2115   000287                     RC3I2C          equ	647	;# 
  2116   000288                     RB2I2C          equ	648	;# 
  2117   000289                     RB1I2C          equ	649	;# 
  2118   00028B                     I2C1RXB         equ	651	;# 
  2119   00028C                     I2C1TXB         equ	652	;# 
  2120   00028D                     I2C1CNT         equ	653	;# 
  2121   00028E                     I2C1ADB0        equ	654	;# 
  2122   00028F                     I2C1ADB1        equ	655	;# 
  2123   000290                     I2C1ADR0        equ	656	;# 
  2124   000291                     I2C1ADR1        equ	657	;# 
  2125   000292                     I2C1ADR2        equ	658	;# 
  2126   000293                     I2C1ADR3        equ	659	;# 
  2127   000294                     I2C1CON0        equ	660	;# 
  2128   000295                     I2C1CON1        equ	661	;# 
  2129   000296                     I2C1CON2        equ	662	;# 
  2130   000297                     I2C1ERR         equ	663	;# 
  2131   000298                     I2C1STAT0       equ	664	;# 
  2132   000299                     I2C1STAT1       equ	665	;# 
  2133   00029A                     I2C1PIR         equ	666	;# 
  2134   00029B                     I2C1PIE         equ	667	;# 
  2135   00029C                     I2C1CLK         equ	668	;# 
  2136   00029D                     I2C1BTO         equ	669	;# 
  2137   0002A1                     U1RXB           equ	673	;# 
  2138   0002A1                     U1RXBL          equ	673	;# 
  2139   0002A2                     U1RXCHK         equ	674	;# 
  2140   0002A3                     U1TXB           equ	675	;# 
  2141   0002A3                     U1TXBL          equ	675	;# 
  2142   0002A4                     U1TXCHK         equ	676	;# 
  2143   0002A5                     U1P1            equ	677	;# 
  2144   0002A5                     U1P1L           equ	677	;# 
  2145   0002A6                     U1P1H           equ	678	;# 
  2146   0002A7                     U1P2            equ	679	;# 
  2147   0002A7                     U1P2L           equ	679	;# 
  2148   0002A8                     U1P2H           equ	680	;# 
  2149   0002A9                     U1P3            equ	681	;# 
  2150   0002A9                     U1P3L           equ	681	;# 
  2151   0002AA                     U1P3H           equ	682	;# 
  2152   0002AB                     U1CON0          equ	683	;# 
  2153   0002AC                     U1CON1          equ	684	;# 
  2154   0002AD                     U1CON2          equ	685	;# 
  2155   0002AE                     U1BRG           equ	686	;# 
  2156   0002AE                     U1BRGL          equ	686	;# 
  2157   0002AF                     U1BRGH          equ	687	;# 
  2158   0002B0                     U1FIFO          equ	688	;# 
  2159   0002B1                     U1UIR           equ	689	;# 
  2160   0002B2                     U1ERRIR         equ	690	;# 
  2161   0002B3                     U1ERRIE         equ	691	;# 
  2162   0002B4                     U2RXB           equ	692	;# 
  2163   0002B4                     U2RXBL          equ	692	;# 
  2164   0002B6                     U2TXB           equ	694	;# 
  2165   0002B6                     U2TXBL          equ	694	;# 
  2166   0002B8                     U2P1            equ	696	;# 
  2167   0002B8                     U2P1L           equ	696	;# 
  2168   0002BA                     U2P2            equ	698	;# 
  2169   0002BA                     U2P2L           equ	698	;# 
  2170   0002BC                     U2P3            equ	700	;# 
  2171   0002BC                     U2P3L           equ	700	;# 
  2172   0002BE                     U2CON0          equ	702	;# 
  2173   0002BF                     U2CON1          equ	703	;# 
  2174   0002C0                     U2CON2          equ	704	;# 
  2175   0002C1                     U2BRG           equ	705	;# 
  2176   0002C1                     U2BRGL          equ	705	;# 
  2177   0002C2                     U2BRGH          equ	706	;# 
  2178   0002C3                     U2FIFO          equ	707	;# 
  2179   0002C4                     U2UIR           equ	708	;# 
  2180   0002C5                     U2ERRIR         equ	709	;# 
  2181   0002C6                     U2ERRIE         equ	710	;# 
  2182   0002C7                     U3RXB           equ	711	;# 
  2183   0002C7                     U3RXBL          equ	711	;# 
  2184   0002C9                     U3TXB           equ	713	;# 
  2185   0002C9                     U3TXBL          equ	713	;# 
  2186   0002CB                     U3P1            equ	715	;# 
  2187   0002CB                     U3P1L           equ	715	;# 
  2188   0002CD                     U3P2            equ	717	;# 
  2189   0002CD                     U3P2L           equ	717	;# 
  2190   0002CF                     U3P3            equ	719	;# 
  2191   0002CF                     U3P3L           equ	719	;# 
  2192   0002D1                     U3CON0          equ	721	;# 
  2193   0002D2                     U3CON1          equ	722	;# 
  2194   0002D3                     U3CON2          equ	723	;# 
  2195   0002D4                     U3BRG           equ	724	;# 
  2196   0002D4                     U3BRGL          equ	724	;# 
  2197   0002D5                     U3BRGH          equ	725	;# 
  2198   0002D6                     U3FIFO          equ	726	;# 
  2199   0002D7                     U3UIR           equ	727	;# 
  2200   0002D8                     U3ERRIR         equ	728	;# 
  2201   0002D9                     U3ERRIE         equ	729	;# 
  2202   0002DA                     U4RXB           equ	730	;# 
  2203   0002DA                     U4RXBL          equ	730	;# 
  2204   0002DC                     U4TXB           equ	732	;# 
  2205   0002DC                     U4TXBL          equ	732	;# 
  2206   0002DE                     U4P1            equ	734	;# 
  2207   0002DE                     U4P1L           equ	734	;# 
  2208   0002E0                     U4P2            equ	736	;# 
  2209   0002E0                     U4P2L           equ	736	;# 
  2210   0002E2                     U4P3            equ	738	;# 
  2211   0002E2                     U4P3L           equ	738	;# 
  2212   0002E4                     U4CON0          equ	740	;# 
  2213   0002E5                     U4CON1          equ	741	;# 
  2214   0002E6                     U4CON2          equ	742	;# 
  2215   0002E7                     U4BRG           equ	743	;# 
  2216   0002E7                     U4BRGL          equ	743	;# 
  2217   0002E8                     U4BRGH          equ	744	;# 
  2218   0002E9                     U4FIFO          equ	745	;# 
  2219   0002EA                     U4UIR           equ	746	;# 
  2220   0002EB                     U4ERRIR         equ	747	;# 
  2221   0002EC                     U4ERRIE         equ	748	;# 
  2222   0002ED                     U5RXB           equ	749	;# 
  2223   0002ED                     U5RXBL          equ	749	;# 
  2224   0002EF                     U5TXB           equ	751	;# 
  2225   0002EF                     U5TXBL          equ	751	;# 
  2226   0002F1                     U5P1            equ	753	;# 
  2227   0002F1                     U5P1L           equ	753	;# 
  2228   0002F3                     U5P2            equ	755	;# 
  2229   0002F3                     U5P2L           equ	755	;# 
  2230   0002F5                     U5P3            equ	757	;# 
  2231   0002F5                     U5P3L           equ	757	;# 
  2232   0002F7                     U5CON0          equ	759	;# 
  2233   0002F8                     U5CON1          equ	760	;# 
  2234   0002F9                     U5CON2          equ	761	;# 
  2235   0002FA                     U5BRG           equ	762	;# 
  2236   0002FA                     U5BRGL          equ	762	;# 
  2237   0002FB                     U5BRGH          equ	763	;# 
  2238   0002FC                     U5FIFO          equ	764	;# 
  2239   0002FD                     U5UIR           equ	765	;# 
  2240   0002FE                     U5ERRIR         equ	766	;# 
  2241   0002FF                     U5ERRIE         equ	767	;# 
  2242   000300                     SMT1TMR         equ	768	;# 
  2243   000300                     SMT1TMRL        equ	768	;# 
  2244   000301                     SMT1TMRH        equ	769	;# 
  2245   000302                     SMT1TMRU        equ	770	;# 
  2246   000303                     SMT1CPR         equ	771	;# 
  2247   000303                     SMT1CPRL        equ	771	;# 
  2248   000304                     SMT1CPRH        equ	772	;# 
  2249   000305                     SMT1CPRU        equ	773	;# 
  2250   000306                     SMT1CPW         equ	774	;# 
  2251   000306                     SMT1CPWL        equ	774	;# 
  2252   000307                     SMT1CPWH        equ	775	;# 
  2253   000308                     SMT1CPWU        equ	776	;# 
  2254   000309                     SMT1PR          equ	777	;# 
  2255   000309                     SMT1PRL         equ	777	;# 
  2256   00030A                     SMT1PRH         equ	778	;# 
  2257   00030B                     SMT1PRU         equ	779	;# 
  2258   00030C                     SMT1CON0        equ	780	;# 
  2259   00030D                     SMT1CON1        equ	781	;# 
  2260   00030E                     SMT1STAT        equ	782	;# 
  2261   00030F                     SMT1CLK         equ	783	;# 
  2262   000310                     SMT1SIG         equ	784	;# 
  2263   000311                     SMT1WIN         equ	785	;# 
  2264   000318                     TMR0L           equ	792	;# 
  2265   000318                     TMR0            equ	792	;# 
  2266   000319                     TMR0H           equ	793	;# 
  2267   000319                     PR0             equ	793	;# 
  2268   00031A                     T0CON0          equ	794	;# 
  2269   00031B                     T0CON1          equ	795	;# 
  2270   00031C                     TMR1            equ	796	;# 
  2271   00031C                     TMR1L           equ	796	;# 
  2272   00031D                     TMR1H           equ	797	;# 
  2273   00031E                     T1CON           equ	798	;# 
  2274   00031E                     TMR1CON         equ	798	;# 
  2275   00031F                     T1GCON          equ	799	;# 
  2276   00031F                     TMR1GCON        equ	799	;# 
  2277   000320                     T1GATE          equ	800	;# 
  2278   000320                     TMR1GATE        equ	800	;# 
  2279   000321                     T1CLK           equ	801	;# 
  2280   000321                     TMR1CLK         equ	801	;# 
  2281   000321                     PR1             equ	801	;# 
  2282   000322                     T2TMR           equ	802	;# 
  2283   000322                     TMR2            equ	802	;# 
  2284   000323                     T2PR            equ	803	;# 
  2285   000323                     PR2             equ	803	;# 
  2286   000324                     T2CON           equ	804	;# 
  2287   000325                     T2HLT           equ	805	;# 
  2288   000326                     T2CLKCON        equ	806	;# 
  2289   000326                     T2CLK           equ	806	;# 
  2290   000327                     T2RST           equ	807	;# 
  2291   000328                     TMR3            equ	808	;# 
  2292   000328                     TMR3L           equ	808	;# 
  2293   000329                     TMR3H           equ	809	;# 
  2294   00032A                     T3CON           equ	810	;# 
  2295   00032A                     TMR3CON         equ	810	;# 
  2296   00032B                     T3GCON          equ	811	;# 
  2297   00032B                     TMR3GCON        equ	811	;# 
  2298   00032C                     T3GATE          equ	812	;# 
  2299   00032C                     TMR3GATE        equ	812	;# 
  2300   00032D                     T3CLK           equ	813	;# 
  2301   00032D                     TMR3CLK         equ	813	;# 
  2302   00032D                     PR3             equ	813	;# 
  2303   00032E                     T4TMR           equ	814	;# 
  2304   00032E                     TMR4            equ	814	;# 
  2305   00032F                     T4PR            equ	815	;# 
  2306   00032F                     PR4             equ	815	;# 
  2307   000330                     T4CON           equ	816	;# 
  2308   000331                     T4HLT           equ	817	;# 
  2309   000332                     T4CLKCON        equ	818	;# 
  2310   000332                     T4CLK           equ	818	;# 
  2311   000333                     T4RST           equ	819	;# 
  2312   000334                     TMR5            equ	820	;# 
  2313   000334                     TMR5L           equ	820	;# 
  2314   000335                     TMR5H           equ	821	;# 
  2315   000336                     T5CON           equ	822	;# 
  2316   000336                     TMR5CON         equ	822	;# 
  2317   000337                     T5GCON          equ	823	;# 
  2318   000337                     TMR5GCON        equ	823	;# 
  2319   000338                     T5GATE          equ	824	;# 
  2320   000338                     TMR5GATE        equ	824	;# 
  2321   000339                     T5CLK           equ	825	;# 
  2322   000339                     TMR5CLK         equ	825	;# 
  2323   000339                     PR5             equ	825	;# 
  2324   00033A                     T6TMR           equ	826	;# 
  2325   00033A                     TMR6            equ	826	;# 
  2326   00033B                     T6PR            equ	827	;# 
  2327   00033B                     PR6             equ	827	;# 
  2328   00033C                     T6CON           equ	828	;# 
  2329   00033D                     T6HLT           equ	829	;# 
  2330   00033E                     T6CLKCON        equ	830	;# 
  2331   00033E                     T6CLK           equ	830	;# 
  2332   00033F                     T6RST           equ	831	;# 
  2333   000340                     CCPR1           equ	832	;# 
  2334   000340                     CCPR1L          equ	832	;# 
  2335   000341                     CCPR1H          equ	833	;# 
  2336   000342                     CCP1CON         equ	834	;# 
  2337   000343                     CCP1CAP         equ	835	;# 
  2338   000344                     CCPR2           equ	836	;# 
  2339   000344                     CCPR2L          equ	836	;# 
  2340   000345                     CCPR2H          equ	837	;# 
  2341   000346                     CCP2CON         equ	838	;# 
  2342   000347                     CCP2CAP         equ	839	;# 
  2343   000348                     CCPR3           equ	840	;# 
  2344   000348                     CCPR3L          equ	840	;# 
  2345   000349                     CCPR3H          equ	841	;# 
  2346   00034A                     CCP3CON         equ	842	;# 
  2347   00034B                     CCP3CAP         equ	843	;# 
  2348   00034C                     CCPTMRS0        equ	844	;# 
  2349   00034F                     CRCDATA         equ	847	;# 
  2350   00034F                     CRCDATL         equ	847	;# 
  2351   000350                     CRCDATH         equ	848	;# 
  2352   000351                     CRCACC          equ	849	;# 
  2353   000351                     CRCACCL         equ	849	;# 
  2354   000352                     CRCACCH         equ	850	;# 
  2355   000353                     CRCSHFT         equ	851	;# 
  2356   000353                     CRCSHIFTL       equ	851	;# 
  2357   000354                     CRCSHIFTH       equ	852	;# 
  2358   000355                     CRCXOR          equ	853	;# 
  2359   000355                     CRCXORL         equ	853	;# 
  2360   000356                     CRCXORH         equ	854	;# 
  2361   000357                     CRCCON0         equ	855	;# 
  2362   000358                     CRCCON1         equ	856	;# 
  2363   00035A                     SCANLADR        equ	858	;# 
  2364   00035A                     SCANLADRL       equ	858	;# 
  2365   00035B                     SCANLADRH       equ	859	;# 
  2366   00035C                     SCANLADRU       equ	860	;# 
  2367   00035D                     SCANHADR        equ	861	;# 
  2368   00035D                     SCANHADRL       equ	861	;# 
  2369   00035E                     SCANHADRH       equ	862	;# 
  2370   00035F                     SCANHADRU       equ	863	;# 
  2371   000360                     SCANCON0        equ	864	;# 
  2372   000361                     SCANTRIG        equ	865	;# 
  2373   000362                     IPR0            equ	866	;# 
  2374   000363                     IPR1            equ	867	;# 
  2375   000364                     IPR2            equ	868	;# 
  2376   000365                     IPR3            equ	869	;# 
  2377   000366                     IPR4            equ	870	;# 
  2378   000367                     IPR5            equ	871	;# 
  2379   000368                     IPR6            equ	872	;# 
  2380   000369                     IPR7            equ	873	;# 
  2381   00036A                     IPR8            equ	874	;# 
  2382   00036B                     IPR9            equ	875	;# 
  2383   00036C                     IPR10           equ	876	;# 
  2384   00036D                     IPR11           equ	877	;# 
  2385   00036E                     IPR12           equ	878	;# 
  2386   00036F                     IPR13           equ	879	;# 
  2387   000370                     IPR14           equ	880	;# 
  2388   000371                     IPR15           equ	881	;# 
  2389   000373                     STATUS_CSHAD    equ	883	;# 
  2390   000374                     WREG_CSHAD      equ	884	;# 
  2391   000375                     BSR_CSHAD       equ	885	;# 
  2392   000376                     SHADCON         equ	886	;# 
  2393   000377                     STATUS_SHAD     equ	887	;# 
  2394   000378                     WREG_SHAD       equ	888	;# 
  2395   000379                     BSR_SHAD        equ	889	;# 
  2396   00037A                     PCLATH_SHAD     equ	890	;# 
  2397   00037B                     PCLATU_SHAD     equ	891	;# 
  2398   00037C                     FSR0SH          equ	892	;# 
  2399   00037C                     FSR0L_SHAD      equ	892	;# 
  2400   00037D                     FSR0H_SHAD      equ	893	;# 
  2401   00037E                     FSR1SH          equ	894	;# 
  2402   00037E                     FSR1L_SHAD      equ	894	;# 
  2403   00037F                     FSR1H_SHAD      equ	895	;# 
  2404   000380                     FSR2SH          equ	896	;# 
  2405   000380                     FSR2L_SHAD      equ	896	;# 
  2406   000381                     FSR2H_SHAD      equ	897	;# 
  2407   000382                     PRODSH          equ	898	;# 
  2408   000382                     PRODL_SHAD      equ	898	;# 
  2409   000383                     PRODH_SHAD      equ	899	;# 
  2410   0003BC                     CWG1CLK         equ	956	;# 
  2411   0003BC                     CWG1CLKCON      equ	956	;# 
  2412   0003BD                     CWG1ISM         equ	957	;# 
  2413   0003BD                     CWG1DAT         equ	957	;# 
  2414   0003BE                     CWG1DBR         equ	958	;# 
  2415   0003BF                     CWG1DBF         equ	959	;# 
  2416   0003C0                     CWG1CON0        equ	960	;# 
  2417   0003C1                     CWG1CON1        equ	961	;# 
  2418   0003C2                     CWG1AS0         equ	962	;# 
  2419   0003C3                     CWG1AS1         equ	963	;# 
  2420   0003C4                     CWG1STR         equ	964	;# 
  2421   0003C5                     CWG2CLK         equ	965	;# 
  2422   0003C5                     CWG2CLKCON      equ	965	;# 
  2423   0003C6                     CWG2ISM         equ	966	;# 
  2424   0003C6                     CWG2DAT         equ	966	;# 
  2425   0003C7                     CWG2DBR         equ	967	;# 
  2426   0003C8                     CWG2DBF         equ	968	;# 
  2427   0003C9                     CWG2CON0        equ	969	;# 
  2428   0003CA                     CWG2CON1        equ	970	;# 
  2429   0003CB                     CWG2AS0         equ	971	;# 
  2430   0003CC                     CWG2AS1         equ	972	;# 
  2431   0003CD                     CWG2STR         equ	973	;# 
  2432   0003CE                     CWG3CLK         equ	974	;# 
  2433   0003CE                     CWG3CLKCON      equ	974	;# 
  2434   0003CF                     CWG3ISM         equ	975	;# 
  2435   0003CF                     CWG3DAT         equ	975	;# 
  2436   0003D0                     CWG3DBR         equ	976	;# 
  2437   0003D1                     CWG3DBF         equ	977	;# 
  2438   0003D2                     CWG3CON0        equ	978	;# 
  2439   0003D3                     CWG3CON1        equ	979	;# 
  2440   0003D4                     CWG3AS0         equ	980	;# 
  2441   0003D5                     CWG3AS1         equ	981	;# 
  2442   0003D6                     CWG3STR         equ	982	;# 
  2443   0003D7                     FVRCON          equ	983	;# 
  2444   0003D8                     ADCPCON         equ	984	;# 
  2445   0003D8                     ADCP            equ	984	;# 
  2446   0003D9                     ADLTH           equ	985	;# 
  2447   0003D9                     ADLTHL          equ	985	;# 
  2448   0003DA                     ADLTHH          equ	986	;# 
  2449   0003DB                     ADUTH           equ	987	;# 
  2450   0003DB                     ADUTHL          equ	987	;# 
  2451   0003DC                     ADUTHH          equ	988	;# 
  2452   0003DD                     ADERR           equ	989	;# 
  2453   0003DD                     ADERRL          equ	989	;# 
  2454   0003DE                     ADERRH          equ	990	;# 
  2455   0003DF                     ADSTPT          equ	991	;# 
  2456   0003DF                     ADSTPTL         equ	991	;# 
  2457   0003E0                     ADSTPTH         equ	992	;# 
  2458   0003E1                     ADFLTR          equ	993	;# 
  2459   0003E1                     ADFLTRL         equ	993	;# 
  2460   0003E2                     ADFLTRH         equ	994	;# 
  2461   0003E3                     ADACC           equ	995	;# 
  2462   0003E3                     ADACCL          equ	995	;# 
  2463   0003E4                     ADACCH          equ	996	;# 
  2464   0003E5                     ADACCU          equ	997	;# 
  2465   0003E6                     ADCNT           equ	998	;# 
  2466   0003E7                     ADRPT           equ	999	;# 
  2467   0003E8                     ADPREV          equ	1000	;# 
  2468   0003E8                     ADPREVL         equ	1000	;# 
  2469   0003E9                     ADPREVH         equ	1001	;# 
  2470   0003EA                     ADRES           equ	1002	;# 
  2471   0003EA                     ADRESL          equ	1002	;# 
  2472   0003EB                     ADRESH          equ	1003	;# 
  2473   0003EC                     ADPCH           equ	1004	;# 
  2474   0003EE                     ADACQ           equ	1006	;# 
  2475   0003EE                     ADACQL          equ	1006	;# 
  2476   0003EF                     ADACQH          equ	1007	;# 
  2477   0003F0                     ADCAP           equ	1008	;# 
  2478   0003F1                     ADPRE           equ	1009	;# 
  2479   0003F1                     ADPREL          equ	1009	;# 
  2480   0003F2                     ADPREH          equ	1010	;# 
  2481   0003F3                     ADCON0          equ	1011	;# 
  2482   0003F4                     ADCON1          equ	1012	;# 
  2483   0003F5                     ADCON2          equ	1013	;# 
  2484   0003F6                     ADCON3          equ	1014	;# 
  2485   0003F7                     ADSTAT          equ	1015	;# 
  2486   0003F8                     ADREF           equ	1016	;# 
  2487   0003F9                     ADACT           equ	1017	;# 
  2488   0003FA                     ADCLK           equ	1018	;# 
  2489   000400                     ANSELA          equ	1024	;# 
  2490   000401                     WPUA            equ	1025	;# 
  2491   000402                     ODCONA          equ	1026	;# 
  2492   000403                     SLRCONA         equ	1027	;# 
  2493   000404                     INLVLA          equ	1028	;# 
  2494   000405                     IOCAP           equ	1029	;# 
  2495   000406                     IOCAN           equ	1030	;# 
  2496   000407                     IOCAF           equ	1031	;# 
  2497   000408                     ANSELB          equ	1032	;# 
  2498   000409                     WPUB            equ	1033	;# 
  2499   00040A                     ODCONB          equ	1034	;# 
  2500   00040B                     SLRCONB         equ	1035	;# 
  2501   00040C                     INLVLB          equ	1036	;# 
  2502   00040D                     IOCBP           equ	1037	;# 
  2503   00040E                     IOCBN           equ	1038	;# 
  2504   00040F                     IOCBF           equ	1039	;# 
  2505   000410                     ANSELC          equ	1040	;# 
  2506   000411                     WPUC            equ	1041	;# 
  2507   000412                     ODCONC          equ	1042	;# 
  2508   000413                     SLRCONC         equ	1043	;# 
  2509   000414                     INLVLC          equ	1044	;# 
  2510   000415                     IOCCP           equ	1045	;# 
  2511   000416                     IOCCN           equ	1046	;# 
  2512   000417                     IOCCF           equ	1047	;# 
  2513   000418                     ANSELD          equ	1048	;# 
  2514   000419                     WPUD            equ	1049	;# 
  2515   00041A                     ODCOND          equ	1050	;# 
  2516   00041B                     SLRCOND         equ	1051	;# 
  2517   00041C                     INLVLD          equ	1052	;# 
  2518   000420                     ANSELE          equ	1056	;# 
  2519   000421                     WPUE            equ	1057	;# 
  2520   000422                     ODCONE          equ	1058	;# 
  2521   000423                     SLRCONE         equ	1059	;# 
  2522   000424                     INLVLE          equ	1060	;# 
  2523   000425                     IOCEP           equ	1061	;# 
  2524   000426                     IOCEN           equ	1062	;# 
  2525   000427                     IOCEF           equ	1063	;# 
  2526   000428                     ANSELF          equ	1064	;# 
  2527   000429                     WPUF            equ	1065	;# 
  2528   00042A                     ODCONF          equ	1066	;# 
  2529   00042B                     SLRCONF         equ	1067	;# 
  2530   00042C                     INLVLF          equ	1068	;# 
  2531   000440                     NCO1ACC         equ	1088	;# 
  2532   000440                     NCO1ACCL        equ	1088	;# 
  2533   000441                     NCO1ACCH        equ	1089	;# 
  2534   000442                     NCO1ACCU        equ	1090	;# 
  2535   000443                     NCO1INC         equ	1091	;# 
  2536   000443                     NCO1INCL        equ	1091	;# 
  2537   000444                     NCO1INCH        equ	1092	;# 
  2538   000445                     NCO1INCU        equ	1093	;# 
  2539   000446                     NCO1CON         equ	1094	;# 
  2540   000447                     NCO1CLK         equ	1095	;# 
  2541   000448                     NCO2ACC         equ	1096	;# 
  2542   000448                     NCO2ACCL        equ	1096	;# 
  2543   000449                     NCO2ACCH        equ	1097	;# 
  2544   00044A                     NCO2ACCU        equ	1098	;# 
  2545   00044B                     NCO2INC         equ	1099	;# 
  2546   00044B                     NCO2INCL        equ	1099	;# 
  2547   00044C                     NCO2INCH        equ	1100	;# 
  2548   00044D                     NCO2INCU        equ	1101	;# 
  2549   00044E                     NCO2CON         equ	1102	;# 
  2550   00044F                     NCO2CLK         equ	1103	;# 
  2551   000450                     NCO3ACC         equ	1104	;# 
  2552   000450                     NCO3ACCL        equ	1104	;# 
  2553   000451                     NCO3ACCH        equ	1105	;# 
  2554   000452                     NCO3ACCU        equ	1106	;# 
  2555   000453                     NCO3INC         equ	1107	;# 
  2556   000453                     NCO3INCL        equ	1107	;# 
  2557   000454                     NCO3INCH        equ	1108	;# 
  2558   000455                     NCO3INCU        equ	1109	;# 
  2559   000456                     NCO3CON         equ	1110	;# 
  2560   000457                     NCO3CLK         equ	1111	;# 
  2561   000459                     IVTLOCK         equ	1113	;# 
  2562   00045A                     IVTAD           equ	1114	;# 
  2563   00045A                     IVTADL          equ	1114	;# 
  2564   00045B                     IVTADH          equ	1115	;# 
  2565   00045C                     IVTADU          equ	1116	;# 
  2566   00045D                     IVTBASE         equ	1117	;# 
  2567   00045D                     IVTBASEL        equ	1117	;# 
  2568   00045E                     IVTBASEH        equ	1118	;# 
  2569   00045F                     IVTBASEU        equ	1119	;# 
  2570   000460                     PWM1ERS         equ	1120	;# 
  2571   000461                     PWM1CLK         equ	1121	;# 
  2572   000462                     PWM1LDS         equ	1122	;# 
  2573   000463                     PWM1PR          equ	1123	;# 
  2574   000463                     PWM1PRL         equ	1123	;# 
  2575   000464                     PWM1PRH         equ	1124	;# 
  2576   000465                     PWM1CPRE        equ	1125	;# 
  2577   000466                     PWM1PIPOS       equ	1126	;# 
  2578   000467                     PWM1GIR         equ	1127	;# 
  2579   000468                     PWM1GIE         equ	1128	;# 
  2580   000469                     PWM1CON         equ	1129	;# 
  2581   00046A                     PWM1S1CFG       equ	1130	;# 
  2582   00046B                     PWM1S1P1        equ	1131	;# 
  2583   00046B                     PWM1S1P1L       equ	1131	;# 
  2584   00046C                     PWM1S1P1H       equ	1132	;# 
  2585   00046D                     PWM1S1P2        equ	1133	;# 
  2586   00046D                     PWM1S1P2L       equ	1133	;# 
  2587   00046E                     PWM1S1P2H       equ	1134	;# 
  2588   00046F                     PWM2ERS         equ	1135	;# 
  2589   000470                     PWM2CLK         equ	1136	;# 
  2590   000471                     PWM2LDS         equ	1137	;# 
  2591   000472                     PWM2PR          equ	1138	;# 
  2592   000472                     PWM2PRL         equ	1138	;# 
  2593   000473                     PWM2PRH         equ	1139	;# 
  2594   000474                     PWM2CPRE        equ	1140	;# 
  2595   000475                     PWM2PIPOS       equ	1141	;# 
  2596   000476                     PWM2GIR         equ	1142	;# 
  2597   000477                     PWM2GIE         equ	1143	;# 
  2598   000478                     PWM2CON         equ	1144	;# 
  2599   000479                     PWM2S1CFG       equ	1145	;# 
  2600   00047A                     PWM2S1P1        equ	1146	;# 
  2601   00047A                     PWM2S1P1L       equ	1146	;# 
  2602   00047B                     PWM2S1P1H       equ	1147	;# 
  2603   00047C                     PWM2S1P2        equ	1148	;# 
  2604   00047C                     PWM2S1P2L       equ	1148	;# 
  2605   00047D                     PWM2S1P2H       equ	1149	;# 
  2606   00047E                     PWM3ERS         equ	1150	;# 
  2607   00047F                     PWM3CLK         equ	1151	;# 
  2608   000480                     PWM3LDS         equ	1152	;# 
  2609   000481                     PWM3PR          equ	1153	;# 
  2610   000481                     PWM3PRL         equ	1153	;# 
  2611   000482                     PWM3PRH         equ	1154	;# 
  2612   000483                     PWM3CPRE        equ	1155	;# 
  2613   000484                     PWM3PIPOS       equ	1156	;# 
  2614   000485                     PWM3GIR         equ	1157	;# 
  2615   000486                     PWM3GIE         equ	1158	;# 
  2616   000487                     PWM3CON         equ	1159	;# 
  2617   000488                     PWM3S1CFG       equ	1160	;# 
  2618   000489                     PWM3S1P1        equ	1161	;# 
  2619   000489                     PWM3S1P1L       equ	1161	;# 
  2620   00048A                     PWM3S1P1H       equ	1162	;# 
  2621   00048B                     PWM3S1P2        equ	1163	;# 
  2622   00048B                     PWM3S1P2L       equ	1163	;# 
  2623   00048C                     PWM3S1P2H       equ	1164	;# 
  2624   00049C                     PWMLOAD         equ	1180	;# 
  2625   00049D                     PWMEN           equ	1181	;# 
  2626   00049E                     PIE0            equ	1182	;# 
  2627   00049F                     PIE1            equ	1183	;# 
  2628   0004A0                     PIE2            equ	1184	;# 
  2629   0004A1                     PIE3            equ	1185	;# 
  2630   0004A2                     PIE4            equ	1186	;# 
  2631   0004A3                     PIE5            equ	1187	;# 
  2632   0004A4                     PIE6            equ	1188	;# 
  2633   0004A5                     PIE7            equ	1189	;# 
  2634   0004A6                     PIE8            equ	1190	;# 
  2635   0004A7                     PIE9            equ	1191	;# 
  2636   0004A8                     PIE10           equ	1192	;# 
  2637   0004A9                     PIE11           equ	1193	;# 
  2638   0004AA                     PIE12           equ	1194	;# 
  2639   0004AB                     PIE13           equ	1195	;# 
  2640   0004AC                     PIE14           equ	1196	;# 
  2641   0004AD                     PIE15           equ	1197	;# 
  2642   0004AE                     PIR0            equ	1198	;# 
  2643   0004AF                     PIR1            equ	1199	;# 
  2644   0004B0                     PIR2            equ	1200	;# 
  2645   0004B1                     PIR3            equ	1201	;# 
  2646   0004B2                     PIR4            equ	1202	;# 
  2647   0004B3                     PIR5            equ	1203	;# 
  2648   0004B4                     PIR6            equ	1204	;# 
  2649   0004B5                     PIR7            equ	1205	;# 
  2650   0004B6                     PIR8            equ	1206	;# 
  2651   0004B7                     PIR9            equ	1207	;# 
  2652   0004B8                     PIR10           equ	1208	;# 
  2653   0004B9                     PIR11           equ	1209	;# 
  2654   0004BA                     PIR12           equ	1210	;# 
  2655   0004BB                     PIR13           equ	1211	;# 
  2656   0004BC                     PIR14           equ	1212	;# 
  2657   0004BD                     PIR15           equ	1213	;# 
  2658   0004BE                     LATA            equ	1214	;# 
  2659   0004BF                     LATB            equ	1215	;# 
  2660   0004C0                     LATC            equ	1216	;# 
  2661   0004C1                     LATD            equ	1217	;# 
  2662   0004C2                     LATE            equ	1218	;# 
  2663   0004C3                     LATF            equ	1219	;# 
  2664   0004C6                     TRISA           equ	1222	;# 
  2665   0004C7                     TRISB           equ	1223	;# 
  2666   0004C8                     TRISC           equ	1224	;# 
  2667   0004C9                     TRISD           equ	1225	;# 
  2668   0004CA                     TRISE           equ	1226	;# 
  2669   0004CB                     TRISF           equ	1227	;# 
  2670   0004CE                     PORTA           equ	1230	;# 
  2671   0004CF                     PORTB           equ	1231	;# 
  2672   0004D0                     PORTC           equ	1232	;# 
  2673   0004D1                     PORTD           equ	1233	;# 
  2674   0004D2                     PORTE           equ	1234	;# 
  2675   0004D3                     PORTF           equ	1235	;# 
  2676   0004D6                     INTCON0         equ	1238	;# 
  2677   0004D7                     INTCON1         equ	1239	;# 
  2678   0004D8                     STATUS          equ	1240	;# 
  2679   0004D9                     FSR2            equ	1241	;# 
  2680   0004D9                     FSR2L           equ	1241	;# 
  2681   0004DA                     FSR2H           equ	1242	;# 
  2682   0004DB                     PLUSW2          equ	1243	;# 
  2683   0004DC                     PREINC2         equ	1244	;# 
  2684   0004DD                     POSTDEC2        equ	1245	;# 
  2685   0004DE                     POSTINC2        equ	1246	;# 
  2686   0004DF                     INDF2           equ	1247	;# 
  2687   0004E0                     BSR             equ	1248	;# 
  2688   0004E1                     FSR1            equ	1249	;# 
  2689   0004E1                     FSR1L           equ	1249	;# 
  2690   0004E2                     FSR1H           equ	1250	;# 
  2691   0004E3                     PLUSW1          equ	1251	;# 
  2692   0004E4                     PREINC1         equ	1252	;# 
  2693   0004E5                     POSTDEC1        equ	1253	;# 
  2694   0004E6                     POSTINC1        equ	1254	;# 
  2695   0004E7                     INDF1           equ	1255	;# 
  2696   0004E8                     WREG            equ	1256	;# 
  2697   0004E9                     FSR0            equ	1257	;# 
  2698   0004E9                     FSR0L           equ	1257	;# 
  2699   0004EA                     FSR0H           equ	1258	;# 
  2700   0004EB                     PLUSW0          equ	1259	;# 
  2701   0004EC                     PREINC0         equ	1260	;# 
  2702   0004ED                     POSTDEC0        equ	1261	;# 
  2703   0004EE                     POSTINC0        equ	1262	;# 
  2704   0004EF                     INDF0           equ	1263	;# 
  2705   0004F0                     PCON0           equ	1264	;# 
  2706   0004F1                     PCON1           equ	1265	;# 
  2707   0004F2                     CPUDOZE         equ	1266	;# 
  2708   0004F3                     PROD            equ	1267	;# 
  2709   0004F3                     PRODL           equ	1267	;# 
  2710   0004F4                     PRODH           equ	1268	;# 
  2711   0004F5                     TABLAT          equ	1269	;# 
  2712   0004F6                     TBLPTR          equ	1270	;# 
  2713   0004F6                     TBLPTRL         equ	1270	;# 
  2714   0004F7                     TBLPTRH         equ	1271	;# 
  2715   0004F8                     TBLPTRU         equ	1272	;# 
  2716   0004F9                     PCLAT           equ	1273	;# 
  2717   0004F9                     PCL             equ	1273	;# 
  2718   0004FA                     PCLATH          equ	1274	;# 
  2719   0004FB                     PCLATU          equ	1275	;# 
  2720   0004FC                     STKPTR          equ	1276	;# 
  2721   0004FD                     TOS             equ	1277	;# 
  2722   0004FD                     TOSL            equ	1277	;# 
  2723   0004FE                     TOSH            equ	1278	;# 
  2724   0004FF                     TOSU            equ	1279	;# 
  2725   000039                     CLKRCON         equ	57	;# 
  2726   00003A                     CLKRCLK         equ	58	;# 
  2727   000040                     NVMCON0         equ	64	;# 
  2728   000041                     NVMCON1         equ	65	;# 
  2729   000042                     NVMLOCK         equ	66	;# 
  2730   000043                     NVMADR          equ	67	;# 
  2731   000043                     NVMADRL         equ	67	;# 
  2732   000044                     NVMADRH         equ	68	;# 
  2733   000045                     NVMADRU         equ	69	;# 
  2734   000046                     NVMDAT          equ	70	;# 
  2735   000046                     NVMDATL         equ	70	;# 
  2736   000047                     NVMDATH         equ	71	;# 
  2737   000048                     VREGCON         equ	72	;# 
  2738   000049                     BORCON          equ	73	;# 
  2739   00004A                     HLVDCON0        equ	74	;# 
  2740   00004B                     HLVDCON1        equ	75	;# 
  2741   00004C                     ZCDCON          equ	76	;# 
  2742   000060                     PMD0            equ	96	;# 
  2743   000061                     PMD1            equ	97	;# 
  2744   000063                     PMD3            equ	99	;# 
  2745   000064                     PMD4            equ	100	;# 
  2746   000065                     PMD5            equ	101	;# 
  2747   000066                     PMD6            equ	102	;# 
  2748   000067                     PMD7            equ	103	;# 
  2749   000068                     PMD8            equ	104	;# 
  2750   00006A                     MD1CON0         equ	106	;# 
  2751   00006B                     MD1CON1         equ	107	;# 
  2752   00006C                     MD1SRC          equ	108	;# 
  2753   00006D                     MD1CARL         equ	109	;# 
  2754   00006E                     MD1CARH         equ	110	;# 
  2755   00006F                     CMOUT           equ	111	;# 
  2756   000070                     CM1CON0         equ	112	;# 
  2757   000071                     CM1CON1         equ	113	;# 
  2758   000072                     CM1NCH          equ	114	;# 
  2759   000073                     CM1PCH          equ	115	;# 
  2760   000074                     CM2CON0         equ	116	;# 
  2761   000075                     CM2CON1         equ	117	;# 
  2762   000076                     CM2NCH          equ	118	;# 
  2763   000077                     CM2PCH          equ	119	;# 
  2764   000078                     WDTCON0         equ	120	;# 
  2765   000079                     WDTCON1         equ	121	;# 
  2766   00007A                     WDTPS           equ	122	;# 
  2767   00007A                     WDTPSL          equ	122	;# 
  2768   00007B                     WDTPSH          equ	123	;# 
  2769   00007C                     WDTTMR          equ	124	;# 
  2770   00007D                     DAC1DAT         equ	125	;# 
  2771   00007D                     DAC1DATL        equ	125	;# 
  2772   00007F                     DAC1CON         equ	127	;# 
  2773   000080                     SPI1RXB         equ	128	;# 
  2774   000081                     SPI1TXB         equ	129	;# 
  2775   000082                     SPI1TCNT        equ	130	;# 
  2776   000082                     SPI1TCNTL       equ	130	;# 
  2777   000083                     SPI1TCNTH       equ	131	;# 
  2778   000084                     SPI1CON0        equ	132	;# 
  2779   000085                     SPI1CON1        equ	133	;# 
  2780   000086                     SPI1CON2        equ	134	;# 
  2781   000087                     SPI1STATUS      equ	135	;# 
  2782   000088                     SPI1TWIDTH      equ	136	;# 
  2783   000089                     SPI1BAUD        equ	137	;# 
  2784   00008A                     SPI1INTF        equ	138	;# 
  2785   00008B                     SPI1INTE        equ	139	;# 
  2786   00008C                     SPI1CLK         equ	140	;# 
  2787   00008D                     SPI2RXB         equ	141	;# 
  2788   00008E                     SPI2TXB         equ	142	;# 
  2789   00008F                     SPI2TCNT        equ	143	;# 
  2790   00008F                     SPI2TCNTL       equ	143	;# 
  2791   000090                     SPI2TCNTH       equ	144	;# 
  2792   000091                     SPI2CON0        equ	145	;# 
  2793   000092                     SPI2CON1        equ	146	;# 
  2794   000093                     SPI2CON2        equ	147	;# 
  2795   000094                     SPI2STATUS      equ	148	;# 
  2796   000095                     SPI2TWIDTH      equ	149	;# 
  2797   000096                     SPI2BAUD        equ	150	;# 
  2798   000097                     SPI2INTF        equ	151	;# 
  2799   000098                     SPI2INTE        equ	152	;# 
  2800   000099                     SPI2CLK         equ	153	;# 
  2801   0000AC                     ACTCON          equ	172	;# 
  2802   0000AD                     OSCCON1         equ	173	;# 
  2803   0000AE                     OSCCON2         equ	174	;# 
  2804   0000AF                     OSCCON3         equ	175	;# 
  2805   0000B0                     OSCTUNE         equ	176	;# 
  2806   0000B1                     OSCFRQ          equ	177	;# 
  2807   0000B1                     OSCFREQ         equ	177	;# 
  2808   0000B2                     OSCSTAT         equ	178	;# 
  2809   0000B2                     OSCSTAT1        equ	178	;# 
  2810   0000B3                     OSCEN           equ	179	;# 
  2811   0000B4                     PRLOCK          equ	180	;# 
  2812   0000B5                     SCANPR          equ	181	;# 
  2813   0000B6                     DMA1PR          equ	182	;# 
  2814   0000B7                     DMA2PR          equ	183	;# 
  2815   0000B8                     DMA3PR          equ	184	;# 
  2816   0000B9                     DMA4PR          equ	185	;# 
  2817   0000BA                     DMA5PR          equ	186	;# 
  2818   0000BB                     DMA6PR          equ	187	;# 
  2819   0000BE                     MAINPR          equ	190	;# 
  2820   0000BF                     ISRPR           equ	191	;# 
  2821   0000D4                     CLCDATA         equ	212	;# 
  2822   0000D5                     CLCSELECT       equ	213	;# 
  2823   0000D6                     CLCnCON         equ	214	;# 
  2824   0000D7                     CLCnPOL         equ	215	;# 
  2825   0000D8                     CLCnSEL0        equ	216	;# 
  2826   0000D9                     CLCnSEL1        equ	217	;# 
  2827   0000DA                     CLCnSEL2        equ	218	;# 
  2828   0000DB                     CLCnSEL3        equ	219	;# 
  2829   0000DC                     CLCnGLS0        equ	220	;# 
  2830   0000DD                     CLCnGLS1        equ	221	;# 
  2831   0000DE                     CLCnGLS2        equ	222	;# 
  2832   0000DF                     CLCnGLS3        equ	223	;# 
  2833   0000E8                     DMASELECT       equ	232	;# 
  2834   0000E9                     DMAnBUF         equ	233	;# 
  2835   0000EA                     DMAnDCNT        equ	234	;# 
  2836   0000EA                     DMAnDCNTL       equ	234	;# 
  2837   0000EB                     DMAnDCNTH       equ	235	;# 
  2838   0000EC                     DMAnDPTR        equ	236	;# 
  2839   0000EC                     DMAnDPTRL       equ	236	;# 
  2840   0000ED                     DMAnDPTRH       equ	237	;# 
  2841   0000EE                     DMAnDSZ         equ	238	;# 
  2842   0000EE                     DMAnDSZL        equ	238	;# 
  2843   0000EF                     DMAnDSZH        equ	239	;# 
  2844   0000F0                     DMAnDSA         equ	240	;# 
  2845   0000F0                     DMAnDSAL        equ	240	;# 
  2846   0000F1                     DMAnDSAH        equ	241	;# 
  2847   0000F2                     DMAnSCNT        equ	242	;# 
  2848   0000F2                     DMAnSCNTL       equ	242	;# 
  2849   0000F3                     DMAnSCNTH       equ	243	;# 
  2850   0000F4                     DMAnSPTR        equ	244	;# 
  2851   0000F4                     DMAnSPTRL       equ	244	;# 
  2852   0000F5                     DMAnSPTRH       equ	245	;# 
  2853   0000F6                     DMAnSPTRU       equ	246	;# 
  2854   0000F7                     DMAnSSZ         equ	247	;# 
  2855   0000F7                     DMAnSSZL        equ	247	;# 
  2856   0000F8                     DMAnSSZH        equ	248	;# 
  2857   0000F9                     DMAnSSA         equ	249	;# 
  2858   0000F9                     DMAnSSAL        equ	249	;# 
  2859   0000FA                     DMAnSSAH        equ	250	;# 
  2860   0000FB                     DMAnSSAU        equ	251	;# 
  2861   0000FC                     DMAnCON0        equ	252	;# 
  2862   0000FD                     DMAnCON1        equ	253	;# 
  2863   0000FE                     DMAnAIRQ        equ	254	;# 
  2864   0000FF                     DMAnSIRQ        equ	255	;# 
  2865   000200                     PPSLOCK         equ	512	;# 
  2866   000201                     RA0PPS          equ	513	;# 
  2867   000202                     RA1PPS          equ	514	;# 
  2868   000203                     RA2PPS          equ	515	;# 
  2869   000204                     RA3PPS          equ	516	;# 
  2870   000205                     RA4PPS          equ	517	;# 
  2871   000206                     RA5PPS          equ	518	;# 
  2872   000207                     RA6PPS          equ	519	;# 
  2873   000208                     RA7PPS          equ	520	;# 
  2874   000209                     RB0PPS          equ	521	;# 
  2875   00020A                     RB1PPS          equ	522	;# 
  2876   00020B                     RB2PPS          equ	523	;# 
  2877   00020C                     RB3PPS          equ	524	;# 
  2878   00020D                     RB4PPS          equ	525	;# 
  2879   00020E                     RB5PPS          equ	526	;# 
  2880   00020F                     RB6PPS          equ	527	;# 
  2881   000210                     RB7PPS          equ	528	;# 
  2882   000211                     RC0PPS          equ	529	;# 
  2883   000212                     RC1PPS          equ	530	;# 
  2884   000213                     RC2PPS          equ	531	;# 
  2885   000214                     RC3PPS          equ	532	;# 
  2886   000215                     RC4PPS          equ	533	;# 
  2887   000216                     RC5PPS          equ	534	;# 
  2888   000217                     RC6PPS          equ	535	;# 
  2889   000218                     RC7PPS          equ	536	;# 
  2890   000219                     RD0PPS          equ	537	;# 
  2891   00021A                     RD1PPS          equ	538	;# 
  2892   00021B                     RD2PPS          equ	539	;# 
  2893   00021C                     RD3PPS          equ	540	;# 
  2894   00021D                     RD4PPS          equ	541	;# 
  2895   00021E                     RD5PPS          equ	542	;# 
  2896   00021F                     RD6PPS          equ	543	;# 
  2897   000220                     RD7PPS          equ	544	;# 
  2898   000221                     RE0PPS          equ	545	;# 
  2899   000222                     RE1PPS          equ	546	;# 
  2900   000223                     RE2PPS          equ	547	;# 
  2901   000229                     RF0PPS          equ	553	;# 
  2902   00022A                     RF1PPS          equ	554	;# 
  2903   00022B                     RF2PPS          equ	555	;# 
  2904   00022C                     RF3PPS          equ	556	;# 
  2905   00022D                     RF4PPS          equ	557	;# 
  2906   00022E                     RF5PPS          equ	558	;# 
  2907   00022F                     RF6PPS          equ	559	;# 
  2908   000230                     RF7PPS          equ	560	;# 
  2909   00023E                     INT0PPS         equ	574	;# 
  2910   00023F                     INT1PPS         equ	575	;# 
  2911   000240                     INT2PPS         equ	576	;# 
  2912   000241                     T0CKIPPS        equ	577	;# 
  2913   000242                     T1CKIPPS        equ	578	;# 
  2914   000243                     T1GPPS          equ	579	;# 
  2915   000244                     T3CKIPPS        equ	580	;# 
  2916   000245                     T3GPPS          equ	581	;# 
  2917   000246                     T5CKIPPS        equ	582	;# 
  2918   000247                     T5GPPS          equ	583	;# 
  2919   000248                     T2INPPS         equ	584	;# 
  2920   000249                     T4INPPS         equ	585	;# 
  2921   00024A                     T6INPPS         equ	586	;# 
  2922   00024F                     CCP1PPS         equ	591	;# 
  2923   000250                     CCP2PPS         equ	592	;# 
  2924   000251                     CCP3PPS         equ	593	;# 
  2925   000253                     PWM1ERSPPS      equ	595	;# 
  2926   000254                     PWM2ERSPPS      equ	596	;# 
  2927   000255                     PWM3ERSPPS      equ	597	;# 
  2928   000257                     PWMIN0PPS       equ	599	;# 
  2929   000258                     PWMIN1PPS       equ	600	;# 
  2930   000259                     SMT1WINPPS      equ	601	;# 
  2931   00025A                     SMT1SIGPPS      equ	602	;# 
  2932   00025B                     CWG1PPS         equ	603	;# 
  2933   00025B                     CWG1INPPS       equ	603	;# 
  2934   00025C                     CWG2PPS         equ	604	;# 
  2935   00025C                     CWG2INPPS       equ	604	;# 
  2936   00025D                     CWG3PPS         equ	605	;# 
  2937   00025D                     CWG3INPPS       equ	605	;# 
  2938   00025E                     MD1CARLPPS      equ	606	;# 
  2939   00025E                     MDCARLPPS       equ	606	;# 
  2940   00025F                     MD1CARHPPS      equ	607	;# 
  2941   00025F                     MDCARHPPS       equ	607	;# 
  2942   000260                     MD1SRCPPS       equ	608	;# 
  2943   000260                     MDSRCPPS        equ	608	;# 
  2944   000261                     CLCIN0PPS       equ	609	;# 
  2945   000262                     CLCIN1PPS       equ	610	;# 
  2946   000263                     CLCIN2PPS       equ	611	;# 
  2947   000264                     CLCIN3PPS       equ	612	;# 
  2948   000265                     CLCIN4PPS       equ	613	;# 
  2949   000266                     CLCIN5PPS       equ	614	;# 
  2950   000267                     CLCIN6PPS       equ	615	;# 
  2951   000268                     CLCIN7PPS       equ	616	;# 
  2952   000269                     ADACTPPS        equ	617	;# 
  2953   00026A                     SPI1SCKPPS      equ	618	;# 
  2954   00026B                     SPI1SDIPPS      equ	619	;# 
  2955   00026C                     SPI1SSPPS       equ	620	;# 
  2956   00026D                     SPI2SCKPPS      equ	621	;# 
  2957   00026E                     SPI2SDIPPS      equ	622	;# 
  2958   00026F                     SPI2SSPPS       equ	623	;# 
  2959   000270                     I2C1SDAPPS      equ	624	;# 
  2960   000271                     I2C1SCLPPS      equ	625	;# 
  2961   000272                     U1RXPPS         equ	626	;# 
  2962   000273                     U1CTSPPS        equ	627	;# 
  2963   000274                     U2RXPPS         equ	628	;# 
  2964   000275                     U2CTSPPS        equ	629	;# 
  2965   000276                     U3RXPPS         equ	630	;# 
  2966   000277                     U3CTSPPS        equ	631	;# 
  2967   000278                     U4RXPPS         equ	632	;# 
  2968   000279                     U4CTSPPS        equ	633	;# 
  2969   00027A                     U5RXPPS         equ	634	;# 
  2970   00027B                     U5CTSPPS        equ	635	;# 
  2971   000286                     RC4I2C          equ	646	;# 
  2972   000287                     RC3I2C          equ	647	;# 
  2973   000288                     RB2I2C          equ	648	;# 
  2974   000289                     RB1I2C          equ	649	;# 
  2975   00028B                     I2C1RXB         equ	651	;# 
  2976   00028C                     I2C1TXB         equ	652	;# 
  2977   00028D                     I2C1CNT         equ	653	;# 
  2978   00028E                     I2C1ADB0        equ	654	;# 
  2979   00028F                     I2C1ADB1        equ	655	;# 
  2980   000290                     I2C1ADR0        equ	656	;# 
  2981   000291                     I2C1ADR1        equ	657	;# 
  2982   000292                     I2C1ADR2        equ	658	;# 
  2983   000293                     I2C1ADR3        equ	659	;# 
  2984   000294                     I2C1CON0        equ	660	;# 
  2985   000295                     I2C1CON1        equ	661	;# 
  2986   000296                     I2C1CON2        equ	662	;# 
  2987   000297                     I2C1ERR         equ	663	;# 
  2988   000298                     I2C1STAT0       equ	664	;# 
  2989   000299                     I2C1STAT1       equ	665	;# 
  2990   00029A                     I2C1PIR         equ	666	;# 
  2991   00029B                     I2C1PIE         equ	667	;# 
  2992   00029C                     I2C1CLK         equ	668	;# 
  2993   00029D                     I2C1BTO         equ	669	;# 
  2994   0002A1                     U1RXB           equ	673	;# 
  2995   0002A1                     U1RXBL          equ	673	;# 
  2996   0002A2                     U1RXCHK         equ	674	;# 
  2997   0002A3                     U1TXB           equ	675	;# 
  2998   0002A3                     U1TXBL          equ	675	;# 
  2999   0002A4                     U1TXCHK         equ	676	;# 
  3000   0002A5                     U1P1            equ	677	;# 
  3001   0002A5                     U1P1L           equ	677	;# 
  3002   0002A6                     U1P1H           equ	678	;# 
  3003   0002A7                     U1P2            equ	679	;# 
  3004   0002A7                     U1P2L           equ	679	;# 
  3005   0002A8                     U1P2H           equ	680	;# 
  3006   0002A9                     U1P3            equ	681	;# 
  3007   0002A9                     U1P3L           equ	681	;# 
  3008   0002AA                     U1P3H           equ	682	;# 
  3009   0002AB                     U1CON0          equ	683	;# 
  3010   0002AC                     U1CON1          equ	684	;# 
  3011   0002AD                     U1CON2          equ	685	;# 
  3012   0002AE                     U1BRG           equ	686	;# 
  3013   0002AE                     U1BRGL          equ	686	;# 
  3014   0002AF                     U1BRGH          equ	687	;# 
  3015   0002B0                     U1FIFO          equ	688	;# 
  3016   0002B1                     U1UIR           equ	689	;# 
  3017   0002B2                     U1ERRIR         equ	690	;# 
  3018   0002B3                     U1ERRIE         equ	691	;# 
  3019   0002B4                     U2RXB           equ	692	;# 
  3020   0002B4                     U2RXBL          equ	692	;# 
  3021   0002B6                     U2TXB           equ	694	;# 
  3022   0002B6                     U2TXBL          equ	694	;# 
  3023   0002B8                     U2P1            equ	696	;# 
  3024   0002B8                     U2P1L           equ	696	;# 
  3025   0002BA                     U2P2            equ	698	;# 
  3026   0002BA                     U2P2L           equ	698	;# 
  3027   0002BC                     U2P3            equ	700	;# 
  3028   0002BC                     U2P3L           equ	700	;# 
  3029   0002BE                     U2CON0          equ	702	;# 
  3030   0002BF                     U2CON1          equ	703	;# 
  3031   0002C0                     U2CON2          equ	704	;# 
  3032   0002C1                     U2BRG           equ	705	;# 
  3033   0002C1                     U2BRGL          equ	705	;# 
  3034   0002C2                     U2BRGH          equ	706	;# 
  3035   0002C3                     U2FIFO          equ	707	;# 
  3036   0002C4                     U2UIR           equ	708	;# 
  3037   0002C5                     U2ERRIR         equ	709	;# 
  3038   0002C6                     U2ERRIE         equ	710	;# 
  3039   0002C7                     U3RXB           equ	711	;# 
  3040   0002C7                     U3RXBL          equ	711	;# 
  3041   0002C9                     U3TXB           equ	713	;# 
  3042   0002C9                     U3TXBL          equ	713	;# 
  3043   0002CB                     U3P1            equ	715	;# 
  3044   0002CB                     U3P1L           equ	715	;# 
  3045   0002CD                     U3P2            equ	717	;# 
  3046   0002CD                     U3P2L           equ	717	;# 
  3047   0002CF                     U3P3            equ	719	;# 
  3048   0002CF                     U3P3L           equ	719	;# 
  3049   0002D1                     U3CON0          equ	721	;# 
  3050   0002D2                     U3CON1          equ	722	;# 
  3051   0002D3                     U3CON2          equ	723	;# 
  3052   0002D4                     U3BRG           equ	724	;# 
  3053   0002D4                     U3BRGL          equ	724	;# 
  3054   0002D5                     U3BRGH          equ	725	;# 
  3055   0002D6                     U3FIFO          equ	726	;# 
  3056   0002D7                     U3UIR           equ	727	;# 
  3057   0002D8                     U3ERRIR         equ	728	;# 
  3058   0002D9                     U3ERRIE         equ	729	;# 
  3059   0002DA                     U4RXB           equ	730	;# 
  3060   0002DA                     U4RXBL          equ	730	;# 
  3061   0002DC                     U4TXB           equ	732	;# 
  3062   0002DC                     U4TXBL          equ	732	;# 
  3063   0002DE                     U4P1            equ	734	;# 
  3064   0002DE                     U4P1L           equ	734	;# 
  3065   0002E0                     U4P2            equ	736	;# 
  3066   0002E0                     U4P2L           equ	736	;# 
  3067   0002E2                     U4P3            equ	738	;# 
  3068   0002E2                     U4P3L           equ	738	;# 
  3069   0002E4                     U4CON0          equ	740	;# 
  3070   0002E5                     U4CON1          equ	741	;# 
  3071   0002E6                     U4CON2          equ	742	;# 
  3072   0002E7                     U4BRG           equ	743	;# 
  3073   0002E7                     U4BRGL          equ	743	;# 
  3074   0002E8                     U4BRGH          equ	744	;# 
  3075   0002E9                     U4FIFO          equ	745	;# 
  3076   0002EA                     U4UIR           equ	746	;# 
  3077   0002EB                     U4ERRIR         equ	747	;# 
  3078   0002EC                     U4ERRIE         equ	748	;# 
  3079   0002ED                     U5RXB           equ	749	;# 
  3080   0002ED                     U5RXBL          equ	749	;# 
  3081   0002EF                     U5TXB           equ	751	;# 
  3082   0002EF                     U5TXBL          equ	751	;# 
  3083   0002F1                     U5P1            equ	753	;# 
  3084   0002F1                     U5P1L           equ	753	;# 
  3085   0002F3                     U5P2            equ	755	;# 
  3086   0002F3                     U5P2L           equ	755	;# 
  3087   0002F5                     U5P3            equ	757	;# 
  3088   0002F5                     U5P3L           equ	757	;# 
  3089   0002F7                     U5CON0          equ	759	;# 
  3090   0002F8                     U5CON1          equ	760	;# 
  3091   0002F9                     U5CON2          equ	761	;# 
  3092   0002FA                     U5BRG           equ	762	;# 
  3093   0002FA                     U5BRGL          equ	762	;# 
  3094   0002FB                     U5BRGH          equ	763	;# 
  3095   0002FC                     U5FIFO          equ	764	;# 
  3096   0002FD                     U5UIR           equ	765	;# 
  3097   0002FE                     U5ERRIR         equ	766	;# 
  3098   0002FF                     U5ERRIE         equ	767	;# 
  3099   000300                     SMT1TMR         equ	768	;# 
  3100   000300                     SMT1TMRL        equ	768	;# 
  3101   000301                     SMT1TMRH        equ	769	;# 
  3102   000302                     SMT1TMRU        equ	770	;# 
  3103   000303                     SMT1CPR         equ	771	;# 
  3104   000303                     SMT1CPRL        equ	771	;# 
  3105   000304                     SMT1CPRH        equ	772	;# 
  3106   000305                     SMT1CPRU        equ	773	;# 
  3107   000306                     SMT1CPW         equ	774	;# 
  3108   000306                     SMT1CPWL        equ	774	;# 
  3109   000307                     SMT1CPWH        equ	775	;# 
  3110   000308                     SMT1CPWU        equ	776	;# 
  3111   000309                     SMT1PR          equ	777	;# 
  3112   000309                     SMT1PRL         equ	777	;# 
  3113   00030A                     SMT1PRH         equ	778	;# 
  3114   00030B                     SMT1PRU         equ	779	;# 
  3115   00030C                     SMT1CON0        equ	780	;# 
  3116   00030D                     SMT1CON1        equ	781	;# 
  3117   00030E                     SMT1STAT        equ	782	;# 
  3118   00030F                     SMT1CLK         equ	783	;# 
  3119   000310                     SMT1SIG         equ	784	;# 
  3120   000311                     SMT1WIN         equ	785	;# 
  3121   000318                     TMR0L           equ	792	;# 
  3122   000318                     TMR0            equ	792	;# 
  3123   000319                     TMR0H           equ	793	;# 
  3124   000319                     PR0             equ	793	;# 
  3125   00031A                     T0CON0          equ	794	;# 
  3126   00031B                     T0CON1          equ	795	;# 
  3127   00031C                     TMR1            equ	796	;# 
  3128   00031C                     TMR1L           equ	796	;# 
  3129   00031D                     TMR1H           equ	797	;# 
  3130   00031E                     T1CON           equ	798	;# 
  3131   00031E                     TMR1CON         equ	798	;# 
  3132   00031F                     T1GCON          equ	799	;# 
  3133   00031F                     TMR1GCON        equ	799	;# 
  3134   000320                     T1GATE          equ	800	;# 
  3135   000320                     TMR1GATE        equ	800	;# 
  3136   000321                     T1CLK           equ	801	;# 
  3137   000321                     TMR1CLK         equ	801	;# 
  3138   000321                     PR1             equ	801	;# 
  3139   000322                     T2TMR           equ	802	;# 
  3140   000322                     TMR2            equ	802	;# 
  3141   000323                     T2PR            equ	803	;# 
  3142   000323                     PR2             equ	803	;# 
  3143   000324                     T2CON           equ	804	;# 
  3144   000325                     T2HLT           equ	805	;# 
  3145   000326                     T2CLKCON        equ	806	;# 
  3146   000326                     T2CLK           equ	806	;# 
  3147   000327                     T2RST           equ	807	;# 
  3148   000328                     TMR3            equ	808	;# 
  3149   000328                     TMR3L           equ	808	;# 
  3150   000329                     TMR3H           equ	809	;# 
  3151   00032A                     T3CON           equ	810	;# 
  3152   00032A                     TMR3CON         equ	810	;# 
  3153   00032B                     T3GCON          equ	811	;# 
  3154   00032B                     TMR3GCON        equ	811	;# 
  3155   00032C                     T3GATE          equ	812	;# 
  3156   00032C                     TMR3GATE        equ	812	;# 
  3157   00032D                     T3CLK           equ	813	;# 
  3158   00032D                     TMR3CLK         equ	813	;# 
  3159   00032D                     PR3             equ	813	;# 
  3160   00032E                     T4TMR           equ	814	;# 
  3161   00032E                     TMR4            equ	814	;# 
  3162   00032F                     T4PR            equ	815	;# 
  3163   00032F                     PR4             equ	815	;# 
  3164   000330                     T4CON           equ	816	;# 
  3165   000331                     T4HLT           equ	817	;# 
  3166   000332                     T4CLKCON        equ	818	;# 
  3167   000332                     T4CLK           equ	818	;# 
  3168   000333                     T4RST           equ	819	;# 
  3169   000334                     TMR5            equ	820	;# 
  3170   000334                     TMR5L           equ	820	;# 
  3171   000335                     TMR5H           equ	821	;# 
  3172   000336                     T5CON           equ	822	;# 
  3173   000336                     TMR5CON         equ	822	;# 
  3174   000337                     T5GCON          equ	823	;# 
  3175   000337                     TMR5GCON        equ	823	;# 
  3176   000338                     T5GATE          equ	824	;# 
  3177   000338                     TMR5GATE        equ	824	;# 
  3178   000339                     T5CLK           equ	825	;# 
  3179   000339                     TMR5CLK         equ	825	;# 
  3180   000339                     PR5             equ	825	;# 
  3181   00033A                     T6TMR           equ	826	;# 
  3182   00033A                     TMR6            equ	826	;# 
  3183   00033B                     T6PR            equ	827	;# 
  3184   00033B                     PR6             equ	827	;# 
  3185   00033C                     T6CON           equ	828	;# 
  3186   00033D                     T6HLT           equ	829	;# 
  3187   00033E                     T6CLKCON        equ	830	;# 
  3188   00033E                     T6CLK           equ	830	;# 
  3189   00033F                     T6RST           equ	831	;# 
  3190   000340                     CCPR1           equ	832	;# 
  3191   000340                     CCPR1L          equ	832	;# 
  3192   000341                     CCPR1H          equ	833	;# 
  3193   000342                     CCP1CON         equ	834	;# 
  3194   000343                     CCP1CAP         equ	835	;# 
  3195   000344                     CCPR2           equ	836	;# 
  3196   000344                     CCPR2L          equ	836	;# 
  3197   000345                     CCPR2H          equ	837	;# 
  3198   000346                     CCP2CON         equ	838	;# 
  3199   000347                     CCP2CAP         equ	839	;# 
  3200   000348                     CCPR3           equ	840	;# 
  3201   000348                     CCPR3L          equ	840	;# 
  3202   000349                     CCPR3H          equ	841	;# 
  3203   00034A                     CCP3CON         equ	842	;# 
  3204   00034B                     CCP3CAP         equ	843	;# 
  3205   00034C                     CCPTMRS0        equ	844	;# 
  3206   00034F                     CRCDATA         equ	847	;# 
  3207   00034F                     CRCDATL         equ	847	;# 
  3208   000350                     CRCDATH         equ	848	;# 
  3209   000351                     CRCACC          equ	849	;# 
  3210   000351                     CRCACCL         equ	849	;# 
  3211   000352                     CRCACCH         equ	850	;# 
  3212   000353                     CRCSHFT         equ	851	;# 
  3213   000353                     CRCSHIFTL       equ	851	;# 
  3214   000354                     CRCSHIFTH       equ	852	;# 
  3215   000355                     CRCXOR          equ	853	;# 
  3216   000355                     CRCXORL         equ	853	;# 
  3217   000356                     CRCXORH         equ	854	;# 
  3218   000357                     CRCCON0         equ	855	;# 
  3219   000358                     CRCCON1         equ	856	;# 
  3220   00035A                     SCANLADR        equ	858	;# 
  3221   00035A                     SCANLADRL       equ	858	;# 
  3222   00035B                     SCANLADRH       equ	859	;# 
  3223   00035C                     SCANLADRU       equ	860	;# 
  3224   00035D                     SCANHADR        equ	861	;# 
  3225   00035D                     SCANHADRL       equ	861	;# 
  3226   00035E                     SCANHADRH       equ	862	;# 
  3227   00035F                     SCANHADRU       equ	863	;# 
  3228   000360                     SCANCON0        equ	864	;# 
  3229   000361                     SCANTRIG        equ	865	;# 
  3230   000362                     IPR0            equ	866	;# 
  3231   000363                     IPR1            equ	867	;# 
  3232   000364                     IPR2            equ	868	;# 
  3233   000365                     IPR3            equ	869	;# 
  3234   000366                     IPR4            equ	870	;# 
  3235   000367                     IPR5            equ	871	;# 
  3236   000368                     IPR6            equ	872	;# 
  3237   000369                     IPR7            equ	873	;# 
  3238   00036A                     IPR8            equ	874	;# 
  3239   00036B                     IPR9            equ	875	;# 
  3240   00036C                     IPR10           equ	876	;# 
  3241   00036D                     IPR11           equ	877	;# 
  3242   00036E                     IPR12           equ	878	;# 
  3243   00036F                     IPR13           equ	879	;# 
  3244   000370                     IPR14           equ	880	;# 
  3245   000371                     IPR15           equ	881	;# 
  3246   000373                     STATUS_CSHAD    equ	883	;# 
  3247   000374                     WREG_CSHAD      equ	884	;# 
  3248   000375                     BSR_CSHAD       equ	885	;# 
  3249   000376                     SHADCON         equ	886	;# 
  3250   000377                     STATUS_SHAD     equ	887	;# 
  3251   000378                     WREG_SHAD       equ	888	;# 
  3252   000379                     BSR_SHAD        equ	889	;# 
  3253   00037A                     PCLATH_SHAD     equ	890	;# 
  3254   00037B                     PCLATU_SHAD     equ	891	;# 
  3255   00037C                     FSR0SH          equ	892	;# 
  3256   00037C                     FSR0L_SHAD      equ	892	;# 
  3257   00037D                     FSR0H_SHAD      equ	893	;# 
  3258   00037E                     FSR1SH          equ	894	;# 
  3259   00037E                     FSR1L_SHAD      equ	894	;# 
  3260   00037F                     FSR1H_SHAD      equ	895	;# 
  3261   000380                     FSR2SH          equ	896	;# 
  3262   000380                     FSR2L_SHAD      equ	896	;# 
  3263   000381                     FSR2H_SHAD      equ	897	;# 
  3264   000382                     PRODSH          equ	898	;# 
  3265   000382                     PRODL_SHAD      equ	898	;# 
  3266   000383                     PRODH_SHAD      equ	899	;# 
  3267   0003BC                     CWG1CLK         equ	956	;# 
  3268   0003BC                     CWG1CLKCON      equ	956	;# 
  3269   0003BD                     CWG1ISM         equ	957	;# 
  3270   0003BD                     CWG1DAT         equ	957	;# 
  3271   0003BE                     CWG1DBR         equ	958	;# 
  3272   0003BF                     CWG1DBF         equ	959	;# 
  3273   0003C0                     CWG1CON0        equ	960	;# 
  3274   0003C1                     CWG1CON1        equ	961	;# 
  3275   0003C2                     CWG1AS0         equ	962	;# 
  3276   0003C3                     CWG1AS1         equ	963	;# 
  3277   0003C4                     CWG1STR         equ	964	;# 
  3278   0003C5                     CWG2CLK         equ	965	;# 
  3279   0003C5                     CWG2CLKCON      equ	965	;# 
  3280   0003C6                     CWG2ISM         equ	966	;# 
  3281   0003C6                     CWG2DAT         equ	966	;# 
  3282   0003C7                     CWG2DBR         equ	967	;# 
  3283   0003C8                     CWG2DBF         equ	968	;# 
  3284   0003C9                     CWG2CON0        equ	969	;# 
  3285   0003CA                     CWG2CON1        equ	970	;# 
  3286   0003CB                     CWG2AS0         equ	971	;# 
  3287   0003CC                     CWG2AS1         equ	972	;# 
  3288   0003CD                     CWG2STR         equ	973	;# 
  3289   0003CE                     CWG3CLK         equ	974	;# 
  3290   0003CE                     CWG3CLKCON      equ	974	;# 
  3291   0003CF                     CWG3ISM         equ	975	;# 
  3292   0003CF                     CWG3DAT         equ	975	;# 
  3293   0003D0                     CWG3DBR         equ	976	;# 
  3294   0003D1                     CWG3DBF         equ	977	;# 
  3295   0003D2                     CWG3CON0        equ	978	;# 
  3296   0003D3                     CWG3CON1        equ	979	;# 
  3297   0003D4                     CWG3AS0         equ	980	;# 
  3298   0003D5                     CWG3AS1         equ	981	;# 
  3299   0003D6                     CWG3STR         equ	982	;# 
  3300   0003D7                     FVRCON          equ	983	;# 
  3301   0003D8                     ADCPCON         equ	984	;# 
  3302   0003D8                     ADCP            equ	984	;# 
  3303   0003D9                     ADLTH           equ	985	;# 
  3304   0003D9                     ADLTHL          equ	985	;# 
  3305   0003DA                     ADLTHH          equ	986	;# 
  3306   0003DB                     ADUTH           equ	987	;# 
  3307   0003DB                     ADUTHL          equ	987	;# 
  3308   0003DC                     ADUTHH          equ	988	;# 
  3309   0003DD                     ADERR           equ	989	;# 
  3310   0003DD                     ADERRL          equ	989	;# 
  3311   0003DE                     ADERRH          equ	990	;# 
  3312   0003DF                     ADSTPT          equ	991	;# 
  3313   0003DF                     ADSTPTL         equ	991	;# 
  3314   0003E0                     ADSTPTH         equ	992	;# 
  3315   0003E1                     ADFLTR          equ	993	;# 
  3316   0003E1                     ADFLTRL         equ	993	;# 
  3317   0003E2                     ADFLTRH         equ	994	;# 
  3318   0003E3                     ADACC           equ	995	;# 
  3319   0003E3                     ADACCL          equ	995	;# 
  3320   0003E4                     ADACCH          equ	996	;# 
  3321   0003E5                     ADACCU          equ	997	;# 
  3322   0003E6                     ADCNT           equ	998	;# 
  3323   0003E7                     ADRPT           equ	999	;# 
  3324   0003E8                     ADPREV          equ	1000	;# 
  3325   0003E8                     ADPREVL         equ	1000	;# 
  3326   0003E9                     ADPREVH         equ	1001	;# 
  3327   0003EA                     ADRES           equ	1002	;# 
  3328   0003EA                     ADRESL          equ	1002	;# 
  3329   0003EB                     ADRESH          equ	1003	;# 
  3330   0003EC                     ADPCH           equ	1004	;# 
  3331   0003EE                     ADACQ           equ	1006	;# 
  3332   0003EE                     ADACQL          equ	1006	;# 
  3333   0003EF                     ADACQH          equ	1007	;# 
  3334   0003F0                     ADCAP           equ	1008	;# 
  3335   0003F1                     ADPRE           equ	1009	;# 
  3336   0003F1                     ADPREL          equ	1009	;# 
  3337   0003F2                     ADPREH          equ	1010	;# 
  3338   0003F3                     ADCON0          equ	1011	;# 
  3339   0003F4                     ADCON1          equ	1012	;# 
  3340   0003F5                     ADCON2          equ	1013	;# 
  3341   0003F6                     ADCON3          equ	1014	;# 
  3342   0003F7                     ADSTAT          equ	1015	;# 
  3343   0003F8                     ADREF           equ	1016	;# 
  3344   0003F9                     ADACT           equ	1017	;# 
  3345   0003FA                     ADCLK           equ	1018	;# 
  3346   000400                     ANSELA          equ	1024	;# 
  3347   000401                     WPUA            equ	1025	;# 
  3348   000402                     ODCONA          equ	1026	;# 
  3349   000403                     SLRCONA         equ	1027	;# 
  3350   000404                     INLVLA          equ	1028	;# 
  3351   000405                     IOCAP           equ	1029	;# 
  3352   000406                     IOCAN           equ	1030	;# 
  3353   000407                     IOCAF           equ	1031	;# 
  3354   000408                     ANSELB          equ	1032	;# 
  3355   000409                     WPUB            equ	1033	;# 
  3356   00040A                     ODCONB          equ	1034	;# 
  3357   00040B                     SLRCONB         equ	1035	;# 
  3358   00040C                     INLVLB          equ	1036	;# 
  3359   00040D                     IOCBP           equ	1037	;# 
  3360   00040E                     IOCBN           equ	1038	;# 
  3361   00040F                     IOCBF           equ	1039	;# 
  3362   000410                     ANSELC          equ	1040	;# 
  3363   000411                     WPUC            equ	1041	;# 
  3364   000412                     ODCONC          equ	1042	;# 
  3365   000413                     SLRCONC         equ	1043	;# 
  3366   000414                     INLVLC          equ	1044	;# 
  3367   000415                     IOCCP           equ	1045	;# 
  3368   000416                     IOCCN           equ	1046	;# 
  3369   000417                     IOCCF           equ	1047	;# 
  3370   000418                     ANSELD          equ	1048	;# 
  3371   000419                     WPUD            equ	1049	;# 
  3372   00041A                     ODCOND          equ	1050	;# 
  3373   00041B                     SLRCOND         equ	1051	;# 
  3374   00041C                     INLVLD          equ	1052	;# 
  3375   000420                     ANSELE          equ	1056	;# 
  3376   000421                     WPUE            equ	1057	;# 
  3377   000422                     ODCONE          equ	1058	;# 
  3378   000423                     SLRCONE         equ	1059	;# 
  3379   000424                     INLVLE          equ	1060	;# 
  3380   000425                     IOCEP           equ	1061	;# 
  3381   000426                     IOCEN           equ	1062	;# 
  3382   000427                     IOCEF           equ	1063	;# 
  3383   000428                     ANSELF          equ	1064	;# 
  3384   000429                     WPUF            equ	1065	;# 
  3385   00042A                     ODCONF          equ	1066	;# 
  3386   00042B                     SLRCONF         equ	1067	;# 
  3387   00042C                     INLVLF          equ	1068	;# 
  3388   000440                     NCO1ACC         equ	1088	;# 
  3389   000440                     NCO1ACCL        equ	1088	;# 
  3390   000441                     NCO1ACCH        equ	1089	;# 
  3391   000442                     NCO1ACCU        equ	1090	;# 
  3392   000443                     NCO1INC         equ	1091	;# 
  3393   000443                     NCO1INCL        equ	1091	;# 
  3394   000444                     NCO1INCH        equ	1092	;# 
  3395   000445                     NCO1INCU        equ	1093	;# 
  3396   000446                     NCO1CON         equ	1094	;# 
  3397   000447                     NCO1CLK         equ	1095	;# 
  3398   000448                     NCO2ACC         equ	1096	;# 
  3399   000448                     NCO2ACCL        equ	1096	;# 
  3400   000449                     NCO2ACCH        equ	1097	;# 
  3401   00044A                     NCO2ACCU        equ	1098	;# 
  3402   00044B                     NCO2INC         equ	1099	;# 
  3403   00044B                     NCO2INCL        equ	1099	;# 
  3404   00044C                     NCO2INCH        equ	1100	;# 
  3405   00044D                     NCO2INCU        equ	1101	;# 
  3406   00044E                     NCO2CON         equ	1102	;# 
  3407   00044F                     NCO2CLK         equ	1103	;# 
  3408   000450                     NCO3ACC         equ	1104	;# 
  3409   000450                     NCO3ACCL        equ	1104	;# 
  3410   000451                     NCO3ACCH        equ	1105	;# 
  3411   000452                     NCO3ACCU        equ	1106	;# 
  3412   000453                     NCO3INC         equ	1107	;# 
  3413   000453                     NCO3INCL        equ	1107	;# 
  3414   000454                     NCO3INCH        equ	1108	;# 
  3415   000455                     NCO3INCU        equ	1109	;# 
  3416   000456                     NCO3CON         equ	1110	;# 
  3417   000457                     NCO3CLK         equ	1111	;# 
  3418   000459                     IVTLOCK         equ	1113	;# 
  3419   00045A                     IVTAD           equ	1114	;# 
  3420   00045A                     IVTADL          equ	1114	;# 
  3421   00045B                     IVTADH          equ	1115	;# 
  3422   00045C                     IVTADU          equ	1116	;# 
  3423   00045D                     IVTBASE         equ	1117	;# 
  3424   00045D                     IVTBASEL        equ	1117	;# 
  3425   00045E                     IVTBASEH        equ	1118	;# 
  3426   00045F                     IVTBASEU        equ	1119	;# 
  3427   000460                     PWM1ERS         equ	1120	;# 
  3428   000461                     PWM1CLK         equ	1121	;# 
  3429   000462                     PWM1LDS         equ	1122	;# 
  3430   000463                     PWM1PR          equ	1123	;# 
  3431   000463                     PWM1PRL         equ	1123	;# 
  3432   000464                     PWM1PRH         equ	1124	;# 
  3433   000465                     PWM1CPRE        equ	1125	;# 
  3434   000466                     PWM1PIPOS       equ	1126	;# 
  3435   000467                     PWM1GIR         equ	1127	;# 
  3436   000468                     PWM1GIE         equ	1128	;# 
  3437   000469                     PWM1CON         equ	1129	;# 
  3438   00046A                     PWM1S1CFG       equ	1130	;# 
  3439   00046B                     PWM1S1P1        equ	1131	;# 
  3440   00046B                     PWM1S1P1L       equ	1131	;# 
  3441   00046C                     PWM1S1P1H       equ	1132	;# 
  3442   00046D                     PWM1S1P2        equ	1133	;# 
  3443   00046D                     PWM1S1P2L       equ	1133	;# 
  3444   00046E                     PWM1S1P2H       equ	1134	;# 
  3445   00046F                     PWM2ERS         equ	1135	;# 
  3446   000470                     PWM2CLK         equ	1136	;# 
  3447   000471                     PWM2LDS         equ	1137	;# 
  3448   000472                     PWM2PR          equ	1138	;# 
  3449   000472                     PWM2PRL         equ	1138	;# 
  3450   000473                     PWM2PRH         equ	1139	;# 
  3451   000474                     PWM2CPRE        equ	1140	;# 
  3452   000475                     PWM2PIPOS       equ	1141	;# 
  3453   000476                     PWM2GIR         equ	1142	;# 
  3454   000477                     PWM2GIE         equ	1143	;# 
  3455   000478                     PWM2CON         equ	1144	;# 
  3456   000479                     PWM2S1CFG       equ	1145	;# 
  3457   00047A                     PWM2S1P1        equ	1146	;# 
  3458   00047A                     PWM2S1P1L       equ	1146	;# 
  3459   00047B                     PWM2S1P1H       equ	1147	;# 
  3460   00047C                     PWM2S1P2        equ	1148	;# 
  3461   00047C                     PWM2S1P2L       equ	1148	;# 
  3462   00047D                     PWM2S1P2H       equ	1149	;# 
  3463   00047E                     PWM3ERS         equ	1150	;# 
  3464   00047F                     PWM3CLK         equ	1151	;# 
  3465   000480                     PWM3LDS         equ	1152	;# 
  3466   000481                     PWM3PR          equ	1153	;# 
  3467   000481                     PWM3PRL         equ	1153	;# 
  3468   000482                     PWM3PRH         equ	1154	;# 
  3469   000483                     PWM3CPRE        equ	1155	;# 
  3470   000484                     PWM3PIPOS       equ	1156	;# 
  3471   000485                     PWM3GIR         equ	1157	;# 
  3472   000486                     PWM3GIE         equ	1158	;# 
  3473   000487                     PWM3CON         equ	1159	;# 
  3474   000488                     PWM3S1CFG       equ	1160	;# 
  3475   000489                     PWM3S1P1        equ	1161	;# 
  3476   000489                     PWM3S1P1L       equ	1161	;# 
  3477   00048A                     PWM3S1P1H       equ	1162	;# 
  3478   00048B                     PWM3S1P2        equ	1163	;# 
  3479   00048B                     PWM3S1P2L       equ	1163	;# 
  3480   00048C                     PWM3S1P2H       equ	1164	;# 
  3481   00049C                     PWMLOAD         equ	1180	;# 
  3482   00049D                     PWMEN           equ	1181	;# 
  3483   00049E                     PIE0            equ	1182	;# 
  3484   00049F                     PIE1            equ	1183	;# 
  3485   0004A0                     PIE2            equ	1184	;# 
  3486   0004A1                     PIE3            equ	1185	;# 
  3487   0004A2                     PIE4            equ	1186	;# 
  3488   0004A3                     PIE5            equ	1187	;# 
  3489   0004A4                     PIE6            equ	1188	;# 
  3490   0004A5                     PIE7            equ	1189	;# 
  3491   0004A6                     PIE8            equ	1190	;# 
  3492   0004A7                     PIE9            equ	1191	;# 
  3493   0004A8                     PIE10           equ	1192	;# 
  3494   0004A9                     PIE11           equ	1193	;# 
  3495   0004AA                     PIE12           equ	1194	;# 
  3496   0004AB                     PIE13           equ	1195	;# 
  3497   0004AC                     PIE14           equ	1196	;# 
  3498   0004AD                     PIE15           equ	1197	;# 
  3499   0004AE                     PIR0            equ	1198	;# 
  3500   0004AF                     PIR1            equ	1199	;# 
  3501   0004B0                     PIR2            equ	1200	;# 
  3502   0004B1                     PIR3            equ	1201	;# 
  3503   0004B2                     PIR4            equ	1202	;# 
  3504   0004B3                     PIR5            equ	1203	;# 
  3505   0004B4                     PIR6            equ	1204	;# 
  3506   0004B5                     PIR7            equ	1205	;# 
  3507   0004B6                     PIR8            equ	1206	;# 
  3508   0004B7                     PIR9            equ	1207	;# 
  3509   0004B8                     PIR10           equ	1208	;# 
  3510   0004B9                     PIR11           equ	1209	;# 
  3511   0004BA                     PIR12           equ	1210	;# 
  3512   0004BB                     PIR13           equ	1211	;# 
  3513   0004BC                     PIR14           equ	1212	;# 
  3514   0004BD                     PIR15           equ	1213	;# 
  3515   0004BE                     LATA            equ	1214	;# 
  3516   0004BF                     LATB            equ	1215	;# 
  3517   0004C0                     LATC            equ	1216	;# 
  3518   0004C1                     LATD            equ	1217	;# 
  3519   0004C2                     LATE            equ	1218	;# 
  3520   0004C3                     LATF            equ	1219	;# 
  3521   0004C6                     TRISA           equ	1222	;# 
  3522   0004C7                     TRISB           equ	1223	;# 
  3523   0004C8                     TRISC           equ	1224	;# 
  3524   0004C9                     TRISD           equ	1225	;# 
  3525   0004CA                     TRISE           equ	1226	;# 
  3526   0004CB                     TRISF           equ	1227	;# 
  3527   0004CE                     PORTA           equ	1230	;# 
  3528   0004CF                     PORTB           equ	1231	;# 
  3529   0004D0                     PORTC           equ	1232	;# 
  3530   0004D1                     PORTD           equ	1233	;# 
  3531   0004D2                     PORTE           equ	1234	;# 
  3532   0004D3                     PORTF           equ	1235	;# 
  3533   0004D6                     INTCON0         equ	1238	;# 
  3534   0004D7                     INTCON1         equ	1239	;# 
  3535   0004D8                     STATUS          equ	1240	;# 
  3536   0004D9                     FSR2            equ	1241	;# 
  3537   0004D9                     FSR2L           equ	1241	;# 
  3538   0004DA                     FSR2H           equ	1242	;# 
  3539   0004DB                     PLUSW2          equ	1243	;# 
  3540   0004DC                     PREINC2         equ	1244	;# 
  3541   0004DD                     POSTDEC2        equ	1245	;# 
  3542   0004DE                     POSTINC2        equ	1246	;# 
  3543   0004DF                     INDF2           equ	1247	;# 
  3544   0004E0                     BSR             equ	1248	;# 
  3545   0004E1                     FSR1            equ	1249	;# 
  3546   0004E1                     FSR1L           equ	1249	;# 
  3547   0004E2                     FSR1H           equ	1250	;# 
  3548   0004E3                     PLUSW1          equ	1251	;# 
  3549   0004E4                     PREINC1         equ	1252	;# 
  3550   0004E5                     POSTDEC1        equ	1253	;# 
  3551   0004E6                     POSTINC1        equ	1254	;# 
  3552   0004E7                     INDF1           equ	1255	;# 
  3553   0004E8                     WREG            equ	1256	;# 
  3554   0004E9                     FSR0            equ	1257	;# 
  3555   0004E9                     FSR0L           equ	1257	;# 
  3556   0004EA                     FSR0H           equ	1258	;# 
  3557   0004EB                     PLUSW0          equ	1259	;# 
  3558   0004EC                     PREINC0         equ	1260	;# 
  3559   0004ED                     POSTDEC0        equ	1261	;# 
  3560   0004EE                     POSTINC0        equ	1262	;# 
  3561   0004EF                     INDF0           equ	1263	;# 
  3562   0004F0                     PCON0           equ	1264	;# 
  3563   0004F1                     PCON1           equ	1265	;# 
  3564   0004F2                     CPUDOZE         equ	1266	;# 
  3565   0004F3                     PROD            equ	1267	;# 
  3566   0004F3                     PRODL           equ	1267	;# 
  3567   0004F4                     PRODH           equ	1268	;# 
  3568   0004F5                     TABLAT          equ	1269	;# 
  3569   0004F6                     TBLPTR          equ	1270	;# 
  3570   0004F6                     TBLPTRL         equ	1270	;# 
  3571   0004F7                     TBLPTRH         equ	1271	;# 
  3572   0004F8                     TBLPTRU         equ	1272	;# 
  3573   0004F9                     PCLAT           equ	1273	;# 
  3574   0004F9                     PCL             equ	1273	;# 
  3575   0004FA                     PCLATH          equ	1274	;# 
  3576   0004FB                     PCLATU          equ	1275	;# 
  3577   0004FC                     STKPTR          equ	1276	;# 
  3578   0004FD                     TOS             equ	1277	;# 
  3579   0004FD                     TOSL            equ	1277	;# 
  3580   0004FE                     TOSH            equ	1278	;# 
  3581   0004FF                     TOSU            equ	1279	;# 
  3582   000039                     CLKRCON         equ	57	;# 
  3583   00003A                     CLKRCLK         equ	58	;# 
  3584   000040                     NVMCON0         equ	64	;# 
  3585   000041                     NVMCON1         equ	65	;# 
  3586   000042                     NVMLOCK         equ	66	;# 
  3587   000043                     NVMADR          equ	67	;# 
  3588   000043                     NVMADRL         equ	67	;# 
  3589   000044                     NVMADRH         equ	68	;# 
  3590   000045                     NVMADRU         equ	69	;# 
  3591   000046                     NVMDAT          equ	70	;# 
  3592   000046                     NVMDATL         equ	70	;# 
  3593   000047                     NVMDATH         equ	71	;# 
  3594   000048                     VREGCON         equ	72	;# 
  3595   000049                     BORCON          equ	73	;# 
  3596   00004A                     HLVDCON0        equ	74	;# 
  3597   00004B                     HLVDCON1        equ	75	;# 
  3598   00004C                     ZCDCON          equ	76	;# 
  3599   000060                     PMD0            equ	96	;# 
  3600   000061                     PMD1            equ	97	;# 
  3601   000063                     PMD3            equ	99	;# 
  3602   000064                     PMD4            equ	100	;# 
  3603   000065                     PMD5            equ	101	;# 
  3604   000066                     PMD6            equ	102	;# 
  3605   000067                     PMD7            equ	103	;# 
  3606   000068                     PMD8            equ	104	;# 
  3607   00006A                     MD1CON0         equ	106	;# 
  3608   00006B                     MD1CON1         equ	107	;# 
  3609   00006C                     MD1SRC          equ	108	;# 
  3610   00006D                     MD1CARL         equ	109	;# 
  3611   00006E                     MD1CARH         equ	110	;# 
  3612   00006F                     CMOUT           equ	111	;# 
  3613   000070                     CM1CON0         equ	112	;# 
  3614   000071                     CM1CON1         equ	113	;# 
  3615   000072                     CM1NCH          equ	114	;# 
  3616   000073                     CM1PCH          equ	115	;# 
  3617   000074                     CM2CON0         equ	116	;# 
  3618   000075                     CM2CON1         equ	117	;# 
  3619   000076                     CM2NCH          equ	118	;# 
  3620   000077                     CM2PCH          equ	119	;# 
  3621   000078                     WDTCON0         equ	120	;# 
  3622   000079                     WDTCON1         equ	121	;# 
  3623   00007A                     WDTPS           equ	122	;# 
  3624   00007A                     WDTPSL          equ	122	;# 
  3625   00007B                     WDTPSH          equ	123	;# 
  3626   00007C                     WDTTMR          equ	124	;# 
  3627   00007D                     DAC1DAT         equ	125	;# 
  3628   00007D                     DAC1DATL        equ	125	;# 
  3629   00007F                     DAC1CON         equ	127	;# 
  3630   000080                     SPI1RXB         equ	128	;# 
  3631   000081                     SPI1TXB         equ	129	;# 
  3632   000082                     SPI1TCNT        equ	130	;# 
  3633   000082                     SPI1TCNTL       equ	130	;# 
  3634   000083                     SPI1TCNTH       equ	131	;# 
  3635   000084                     SPI1CON0        equ	132	;# 
  3636   000085                     SPI1CON1        equ	133	;# 
  3637   000086                     SPI1CON2        equ	134	;# 
  3638   000087                     SPI1STATUS      equ	135	;# 
  3639   000088                     SPI1TWIDTH      equ	136	;# 
  3640   000089                     SPI1BAUD        equ	137	;# 
  3641   00008A                     SPI1INTF        equ	138	;# 
  3642   00008B                     SPI1INTE        equ	139	;# 
  3643   00008C                     SPI1CLK         equ	140	;# 
  3644   00008D                     SPI2RXB         equ	141	;# 
  3645   00008E                     SPI2TXB         equ	142	;# 
  3646   00008F                     SPI2TCNT        equ	143	;# 
  3647   00008F                     SPI2TCNTL       equ	143	;# 
  3648   000090                     SPI2TCNTH       equ	144	;# 
  3649   000091                     SPI2CON0        equ	145	;# 
  3650   000092                     SPI2CON1        equ	146	;# 
  3651   000093                     SPI2CON2        equ	147	;# 
  3652   000094                     SPI2STATUS      equ	148	;# 
  3653   000095                     SPI2TWIDTH      equ	149	;# 
  3654   000096                     SPI2BAUD        equ	150	;# 
  3655   000097                     SPI2INTF        equ	151	;# 
  3656   000098                     SPI2INTE        equ	152	;# 
  3657   000099                     SPI2CLK         equ	153	;# 
  3658   0000AC                     ACTCON          equ	172	;# 
  3659   0000AD                     OSCCON1         equ	173	;# 
  3660   0000AE                     OSCCON2         equ	174	;# 
  3661   0000AF                     OSCCON3         equ	175	;# 
  3662   0000B0                     OSCTUNE         equ	176	;# 
  3663   0000B1                     OSCFRQ          equ	177	;# 
  3664   0000B1                     OSCFREQ         equ	177	;# 
  3665   0000B2                     OSCSTAT         equ	178	;# 
  3666   0000B2                     OSCSTAT1        equ	178	;# 
  3667   0000B3                     OSCEN           equ	179	;# 
  3668   0000B4                     PRLOCK          equ	180	;# 
  3669   0000B5                     SCANPR          equ	181	;# 
  3670   0000B6                     DMA1PR          equ	182	;# 
  3671   0000B7                     DMA2PR          equ	183	;# 
  3672   0000B8                     DMA3PR          equ	184	;# 
  3673   0000B9                     DMA4PR          equ	185	;# 
  3674   0000BA                     DMA5PR          equ	186	;# 
  3675   0000BB                     DMA6PR          equ	187	;# 
  3676   0000BE                     MAINPR          equ	190	;# 
  3677   0000BF                     ISRPR           equ	191	;# 
  3678   0000D4                     CLCDATA         equ	212	;# 
  3679   0000D5                     CLCSELECT       equ	213	;# 
  3680   0000D6                     CLCnCON         equ	214	;# 
  3681   0000D7                     CLCnPOL         equ	215	;# 
  3682   0000D8                     CLCnSEL0        equ	216	;# 
  3683   0000D9                     CLCnSEL1        equ	217	;# 
  3684   0000DA                     CLCnSEL2        equ	218	;# 
  3685   0000DB                     CLCnSEL3        equ	219	;# 
  3686   0000DC                     CLCnGLS0        equ	220	;# 
  3687   0000DD                     CLCnGLS1        equ	221	;# 
  3688   0000DE                     CLCnGLS2        equ	222	;# 
  3689   0000DF                     CLCnGLS3        equ	223	;# 
  3690   0000E8                     DMASELECT       equ	232	;# 
  3691   0000E9                     DMAnBUF         equ	233	;# 
  3692   0000EA                     DMAnDCNT        equ	234	;# 
  3693   0000EA                     DMAnDCNTL       equ	234	;# 
  3694   0000EB                     DMAnDCNTH       equ	235	;# 
  3695   0000EC                     DMAnDPTR        equ	236	;# 
  3696   0000EC                     DMAnDPTRL       equ	236	;# 
  3697   0000ED                     DMAnDPTRH       equ	237	;# 
  3698   0000EE                     DMAnDSZ         equ	238	;# 
  3699   0000EE                     DMAnDSZL        equ	238	;# 
  3700   0000EF                     DMAnDSZH        equ	239	;# 
  3701   0000F0                     DMAnDSA         equ	240	;# 
  3702   0000F0                     DMAnDSAL        equ	240	;# 
  3703   0000F1                     DMAnDSAH        equ	241	;# 
  3704   0000F2                     DMAnSCNT        equ	242	;# 
  3705   0000F2                     DMAnSCNTL       equ	242	;# 
  3706   0000F3                     DMAnSCNTH       equ	243	;# 
  3707   0000F4                     DMAnSPTR        equ	244	;# 
  3708   0000F4                     DMAnSPTRL       equ	244	;# 
  3709   0000F5                     DMAnSPTRH       equ	245	;# 
  3710   0000F6                     DMAnSPTRU       equ	246	;# 
  3711   0000F7                     DMAnSSZ         equ	247	;# 
  3712   0000F7                     DMAnSSZL        equ	247	;# 
  3713   0000F8                     DMAnSSZH        equ	248	;# 
  3714   0000F9                     DMAnSSA         equ	249	;# 
  3715   0000F9                     DMAnSSAL        equ	249	;# 
  3716   0000FA                     DMAnSSAH        equ	250	;# 
  3717   0000FB                     DMAnSSAU        equ	251	;# 
  3718   0000FC                     DMAnCON0        equ	252	;# 
  3719   0000FD                     DMAnCON1        equ	253	;# 
  3720   0000FE                     DMAnAIRQ        equ	254	;# 
  3721   0000FF                     DMAnSIRQ        equ	255	;# 
  3722   000200                     PPSLOCK         equ	512	;# 
  3723   000201                     RA0PPS          equ	513	;# 
  3724   000202                     RA1PPS          equ	514	;# 
  3725   000203                     RA2PPS          equ	515	;# 
  3726   000204                     RA3PPS          equ	516	;# 
  3727   000205                     RA4PPS          equ	517	;# 
  3728   000206                     RA5PPS          equ	518	;# 
  3729   000207                     RA6PPS          equ	519	;# 
  3730   000208                     RA7PPS          equ	520	;# 
  3731   000209                     RB0PPS          equ	521	;# 
  3732   00020A                     RB1PPS          equ	522	;# 
  3733   00020B                     RB2PPS          equ	523	;# 
  3734   00020C                     RB3PPS          equ	524	;# 
  3735   00020D                     RB4PPS          equ	525	;# 
  3736   00020E                     RB5PPS          equ	526	;# 
  3737   00020F                     RB6PPS          equ	527	;# 
  3738   000210                     RB7PPS          equ	528	;# 
  3739   000211                     RC0PPS          equ	529	;# 
  3740   000212                     RC1PPS          equ	530	;# 
  3741   000213                     RC2PPS          equ	531	;# 
  3742   000214                     RC3PPS          equ	532	;# 
  3743   000215                     RC4PPS          equ	533	;# 
  3744   000216                     RC5PPS          equ	534	;# 
  3745   000217                     RC6PPS          equ	535	;# 
  3746   000218                     RC7PPS          equ	536	;# 
  3747   000219                     RD0PPS          equ	537	;# 
  3748   00021A                     RD1PPS          equ	538	;# 
  3749   00021B                     RD2PPS          equ	539	;# 
  3750   00021C                     RD3PPS          equ	540	;# 
  3751   00021D                     RD4PPS          equ	541	;# 
  3752   00021E                     RD5PPS          equ	542	;# 
  3753   00021F                     RD6PPS          equ	543	;# 
  3754   000220                     RD7PPS          equ	544	;# 
  3755   000221                     RE0PPS          equ	545	;# 
  3756   000222                     RE1PPS          equ	546	;# 
  3757   000223                     RE2PPS          equ	547	;# 
  3758   000229                     RF0PPS          equ	553	;# 
  3759   00022A                     RF1PPS          equ	554	;# 
  3760   00022B                     RF2PPS          equ	555	;# 
  3761   00022C                     RF3PPS          equ	556	;# 
  3762   00022D                     RF4PPS          equ	557	;# 
  3763   00022E                     RF5PPS          equ	558	;# 
  3764   00022F                     RF6PPS          equ	559	;# 
  3765   000230                     RF7PPS          equ	560	;# 
  3766   00023E                     INT0PPS         equ	574	;# 
  3767   00023F                     INT1PPS         equ	575	;# 
  3768   000240                     INT2PPS         equ	576	;# 
  3769   000241                     T0CKIPPS        equ	577	;# 
  3770   000242                     T1CKIPPS        equ	578	;# 
  3771   000243                     T1GPPS          equ	579	;# 
  3772   000244                     T3CKIPPS        equ	580	;# 
  3773   000245                     T3GPPS          equ	581	;# 
  3774   000246                     T5CKIPPS        equ	582	;# 
  3775   000247                     T5GPPS          equ	583	;# 
  3776   000248                     T2INPPS         equ	584	;# 
  3777   000249                     T4INPPS         equ	585	;# 
  3778   00024A                     T6INPPS         equ	586	;# 
  3779   00024F                     CCP1PPS         equ	591	;# 
  3780   000250                     CCP2PPS         equ	592	;# 
  3781   000251                     CCP3PPS         equ	593	;# 
  3782   000253                     PWM1ERSPPS      equ	595	;# 
  3783   000254                     PWM2ERSPPS      equ	596	;# 
  3784   000255                     PWM3ERSPPS      equ	597	;# 
  3785   000257                     PWMIN0PPS       equ	599	;# 
  3786   000258                     PWMIN1PPS       equ	600	;# 
  3787   000259                     SMT1WINPPS      equ	601	;# 
  3788   00025A                     SMT1SIGPPS      equ	602	;# 
  3789   00025B                     CWG1PPS         equ	603	;# 
  3790   00025B                     CWG1INPPS       equ	603	;# 
  3791   00025C                     CWG2PPS         equ	604	;# 
  3792   00025C                     CWG2INPPS       equ	604	;# 
  3793   00025D                     CWG3PPS         equ	605	;# 
  3794   00025D                     CWG3INPPS       equ	605	;# 
  3795   00025E                     MD1CARLPPS      equ	606	;# 
  3796   00025E                     MDCARLPPS       equ	606	;# 
  3797   00025F                     MD1CARHPPS      equ	607	;# 
  3798   00025F                     MDCARHPPS       equ	607	;# 
  3799   000260                     MD1SRCPPS       equ	608	;# 
  3800   000260                     MDSRCPPS        equ	608	;# 
  3801   000261                     CLCIN0PPS       equ	609	;# 
  3802   000262                     CLCIN1PPS       equ	610	;# 
  3803   000263                     CLCIN2PPS       equ	611	;# 
  3804   000264                     CLCIN3PPS       equ	612	;# 
  3805   000265                     CLCIN4PPS       equ	613	;# 
  3806   000266                     CLCIN5PPS       equ	614	;# 
  3807   000267                     CLCIN6PPS       equ	615	;# 
  3808   000268                     CLCIN7PPS       equ	616	;# 
  3809   000269                     ADACTPPS        equ	617	;# 
  3810   00026A                     SPI1SCKPPS      equ	618	;# 
  3811   00026B                     SPI1SDIPPS      equ	619	;# 
  3812   00026C                     SPI1SSPPS       equ	620	;# 
  3813   00026D                     SPI2SCKPPS      equ	621	;# 
  3814   00026E                     SPI2SDIPPS      equ	622	;# 
  3815   00026F                     SPI2SSPPS       equ	623	;# 
  3816   000270                     I2C1SDAPPS      equ	624	;# 
  3817   000271                     I2C1SCLPPS      equ	625	;# 
  3818   000272                     U1RXPPS         equ	626	;# 
  3819   000273                     U1CTSPPS        equ	627	;# 
  3820   000274                     U2RXPPS         equ	628	;# 
  3821   000275                     U2CTSPPS        equ	629	;# 
  3822   000276                     U3RXPPS         equ	630	;# 
  3823   000277                     U3CTSPPS        equ	631	;# 
  3824   000278                     U4RXPPS         equ	632	;# 
  3825   000279                     U4CTSPPS        equ	633	;# 
  3826   00027A                     U5RXPPS         equ	634	;# 
  3827   00027B                     U5CTSPPS        equ	635	;# 
  3828   000286                     RC4I2C          equ	646	;# 
  3829   000287                     RC3I2C          equ	647	;# 
  3830   000288                     RB2I2C          equ	648	;# 
  3831   000289                     RB1I2C          equ	649	;# 
  3832   00028B                     I2C1RXB         equ	651	;# 
  3833   00028C                     I2C1TXB         equ	652	;# 
  3834   00028D                     I2C1CNT         equ	653	;# 
  3835   00028E                     I2C1ADB0        equ	654	;# 
  3836   00028F                     I2C1ADB1        equ	655	;# 
  3837   000290                     I2C1ADR0        equ	656	;# 
  3838   000291                     I2C1ADR1        equ	657	;# 
  3839   000292                     I2C1ADR2        equ	658	;# 
  3840   000293                     I2C1ADR3        equ	659	;# 
  3841   000294                     I2C1CON0        equ	660	;# 
  3842   000295                     I2C1CON1        equ	661	;# 
  3843   000296                     I2C1CON2        equ	662	;# 
  3844   000297                     I2C1ERR         equ	663	;# 
  3845   000298                     I2C1STAT0       equ	664	;# 
  3846   000299                     I2C1STAT1       equ	665	;# 
  3847   00029A                     I2C1PIR         equ	666	;# 
  3848   00029B                     I2C1PIE         equ	667	;# 
  3849   00029C                     I2C1CLK         equ	668	;# 
  3850   00029D                     I2C1BTO         equ	669	;# 
  3851   0002A1                     U1RXB           equ	673	;# 
  3852   0002A1                     U1RXBL          equ	673	;# 
  3853   0002A2                     U1RXCHK         equ	674	;# 
  3854   0002A3                     U1TXB           equ	675	;# 
  3855   0002A3                     U1TXBL          equ	675	;# 
  3856   0002A4                     U1TXCHK         equ	676	;# 
  3857   0002A5                     U1P1            equ	677	;# 
  3858   0002A5                     U1P1L           equ	677	;# 
  3859   0002A6                     U1P1H           equ	678	;# 
  3860   0002A7                     U1P2            equ	679	;# 
  3861   0002A7                     U1P2L           equ	679	;# 
  3862   0002A8                     U1P2H           equ	680	;# 
  3863   0002A9                     U1P3            equ	681	;# 
  3864   0002A9                     U1P3L           equ	681	;# 
  3865   0002AA                     U1P3H           equ	682	;# 
  3866   0002AB                     U1CON0          equ	683	;# 
  3867   0002AC                     U1CON1          equ	684	;# 
  3868   0002AD                     U1CON2          equ	685	;# 
  3869   0002AE                     U1BRG           equ	686	;# 
  3870   0002AE                     U1BRGL          equ	686	;# 
  3871   0002AF                     U1BRGH          equ	687	;# 
  3872   0002B0                     U1FIFO          equ	688	;# 
  3873   0002B1                     U1UIR           equ	689	;# 
  3874   0002B2                     U1ERRIR         equ	690	;# 
  3875   0002B3                     U1ERRIE         equ	691	;# 
  3876   0002B4                     U2RXB           equ	692	;# 
  3877   0002B4                     U2RXBL          equ	692	;# 
  3878   0002B6                     U2TXB           equ	694	;# 
  3879   0002B6                     U2TXBL          equ	694	;# 
  3880   0002B8                     U2P1            equ	696	;# 
  3881   0002B8                     U2P1L           equ	696	;# 
  3882   0002BA                     U2P2            equ	698	;# 
  3883   0002BA                     U2P2L           equ	698	;# 
  3884   0002BC                     U2P3            equ	700	;# 
  3885   0002BC                     U2P3L           equ	700	;# 
  3886   0002BE                     U2CON0          equ	702	;# 
  3887   0002BF                     U2CON1          equ	703	;# 
  3888   0002C0                     U2CON2          equ	704	;# 
  3889   0002C1                     U2BRG           equ	705	;# 
  3890   0002C1                     U2BRGL          equ	705	;# 
  3891   0002C2                     U2BRGH          equ	706	;# 
  3892   0002C3                     U2FIFO          equ	707	;# 
  3893   0002C4                     U2UIR           equ	708	;# 
  3894   0002C5                     U2ERRIR         equ	709	;# 
  3895   0002C6                     U2ERRIE         equ	710	;# 
  3896   0002C7                     U3RXB           equ	711	;# 
  3897   0002C7                     U3RXBL          equ	711	;# 
  3898   0002C9                     U3TXB           equ	713	;# 
  3899   0002C9                     U3TXBL          equ	713	;# 
  3900   0002CB                     U3P1            equ	715	;# 
  3901   0002CB                     U3P1L           equ	715	;# 
  3902   0002CD                     U3P2            equ	717	;# 
  3903   0002CD                     U3P2L           equ	717	;# 
  3904   0002CF                     U3P3            equ	719	;# 
  3905   0002CF                     U3P3L           equ	719	;# 
  3906   0002D1                     U3CON0          equ	721	;# 
  3907   0002D2                     U3CON1          equ	722	;# 
  3908   0002D3                     U3CON2          equ	723	;# 
  3909   0002D4                     U3BRG           equ	724	;# 
  3910   0002D4                     U3BRGL          equ	724	;# 
  3911   0002D5                     U3BRGH          equ	725	;# 
  3912   0002D6                     U3FIFO          equ	726	;# 
  3913   0002D7                     U3UIR           equ	727	;# 
  3914   0002D8                     U3ERRIR         equ	728	;# 
  3915   0002D9                     U3ERRIE         equ	729	;# 
  3916   0002DA                     U4RXB           equ	730	;# 
  3917   0002DA                     U4RXBL          equ	730	;# 
  3918   0002DC                     U4TXB           equ	732	;# 
  3919   0002DC                     U4TXBL          equ	732	;# 
  3920   0002DE                     U4P1            equ	734	;# 
  3921   0002DE                     U4P1L           equ	734	;# 
  3922   0002E0                     U4P2            equ	736	;# 
  3923   0002E0                     U4P2L           equ	736	;# 
  3924   0002E2                     U4P3            equ	738	;# 
  3925   0002E2                     U4P3L           equ	738	;# 
  3926   0002E4                     U4CON0          equ	740	;# 
  3927   0002E5                     U4CON1          equ	741	;# 
  3928   0002E6                     U4CON2          equ	742	;# 
  3929   0002E7                     U4BRG           equ	743	;# 
  3930   0002E7                     U4BRGL          equ	743	;# 
  3931   0002E8                     U4BRGH          equ	744	;# 
  3932   0002E9                     U4FIFO          equ	745	;# 
  3933   0002EA                     U4UIR           equ	746	;# 
  3934   0002EB                     U4ERRIR         equ	747	;# 
  3935   0002EC                     U4ERRIE         equ	748	;# 
  3936   0002ED                     U5RXB           equ	749	;# 
  3937   0002ED                     U5RXBL          equ	749	;# 
  3938   0002EF                     U5TXB           equ	751	;# 
  3939   0002EF                     U5TXBL          equ	751	;# 
  3940   0002F1                     U5P1            equ	753	;# 
  3941   0002F1                     U5P1L           equ	753	;# 
  3942   0002F3                     U5P2            equ	755	;# 
  3943   0002F3                     U5P2L           equ	755	;# 
  3944   0002F5                     U5P3            equ	757	;# 
  3945   0002F5                     U5P3L           equ	757	;# 
  3946   0002F7                     U5CON0          equ	759	;# 
  3947   0002F8                     U5CON1          equ	760	;# 
  3948   0002F9                     U5CON2          equ	761	;# 
  3949   0002FA                     U5BRG           equ	762	;# 
  3950   0002FA                     U5BRGL          equ	762	;# 
  3951   0002FB                     U5BRGH          equ	763	;# 
  3952   0002FC                     U5FIFO          equ	764	;# 
  3953   0002FD                     U5UIR           equ	765	;# 
  3954   0002FE                     U5ERRIR         equ	766	;# 
  3955   0002FF                     U5ERRIE         equ	767	;# 
  3956   000300                     SMT1TMR         equ	768	;# 
  3957   000300                     SMT1TMRL        equ	768	;# 
  3958   000301                     SMT1TMRH        equ	769	;# 
  3959   000302                     SMT1TMRU        equ	770	;# 
  3960   000303                     SMT1CPR         equ	771	;# 
  3961   000303                     SMT1CPRL        equ	771	;# 
  3962   000304                     SMT1CPRH        equ	772	;# 
  3963   000305                     SMT1CPRU        equ	773	;# 
  3964   000306                     SMT1CPW         equ	774	;# 
  3965   000306                     SMT1CPWL        equ	774	;# 
  3966   000307                     SMT1CPWH        equ	775	;# 
  3967   000308                     SMT1CPWU        equ	776	;# 
  3968   000309                     SMT1PR          equ	777	;# 
  3969   000309                     SMT1PRL         equ	777	;# 
  3970   00030A                     SMT1PRH         equ	778	;# 
  3971   00030B                     SMT1PRU         equ	779	;# 
  3972   00030C                     SMT1CON0        equ	780	;# 
  3973   00030D                     SMT1CON1        equ	781	;# 
  3974   00030E                     SMT1STAT        equ	782	;# 
  3975   00030F                     SMT1CLK         equ	783	;# 
  3976   000310                     SMT1SIG         equ	784	;# 
  3977   000311                     SMT1WIN         equ	785	;# 
  3978   000318                     TMR0L           equ	792	;# 
  3979   000318                     TMR0            equ	792	;# 
  3980   000319                     TMR0H           equ	793	;# 
  3981   000319                     PR0             equ	793	;# 
  3982   00031A                     T0CON0          equ	794	;# 
  3983   00031B                     T0CON1          equ	795	;# 
  3984   00031C                     TMR1            equ	796	;# 
  3985   00031C                     TMR1L           equ	796	;# 
  3986   00031D                     TMR1H           equ	797	;# 
  3987   00031E                     T1CON           equ	798	;# 
  3988   00031E                     TMR1CON         equ	798	;# 
  3989   00031F                     T1GCON          equ	799	;# 
  3990   00031F                     TMR1GCON        equ	799	;# 
  3991   000320                     T1GATE          equ	800	;# 
  3992   000320                     TMR1GATE        equ	800	;# 
  3993   000321                     T1CLK           equ	801	;# 
  3994   000321                     TMR1CLK         equ	801	;# 
  3995   000321                     PR1             equ	801	;# 
  3996   000322                     T2TMR           equ	802	;# 
  3997   000322                     TMR2            equ	802	;# 
  3998   000323                     T2PR            equ	803	;# 
  3999   000323                     PR2             equ	803	;# 
  4000   000324                     T2CON           equ	804	;# 
  4001   000325                     T2HLT           equ	805	;# 
  4002   000326                     T2CLKCON        equ	806	;# 
  4003   000326                     T2CLK           equ	806	;# 
  4004   000327                     T2RST           equ	807	;# 
  4005   000328                     TMR3            equ	808	;# 
  4006   000328                     TMR3L           equ	808	;# 
  4007   000329                     TMR3H           equ	809	;# 
  4008   00032A                     T3CON           equ	810	;# 
  4009   00032A                     TMR3CON         equ	810	;# 
  4010   00032B                     T3GCON          equ	811	;# 
  4011   00032B                     TMR3GCON        equ	811	;# 
  4012   00032C                     T3GATE          equ	812	;# 
  4013   00032C                     TMR3GATE        equ	812	;# 
  4014   00032D                     T3CLK           equ	813	;# 
  4015   00032D                     TMR3CLK         equ	813	;# 
  4016   00032D                     PR3             equ	813	;# 
  4017   00032E                     T4TMR           equ	814	;# 
  4018   00032E                     TMR4            equ	814	;# 
  4019   00032F                     T4PR            equ	815	;# 
  4020   00032F                     PR4             equ	815	;# 
  4021   000330                     T4CON           equ	816	;# 
  4022   000331                     T4HLT           equ	817	;# 
  4023   000332                     T4CLKCON        equ	818	;# 
  4024   000332                     T4CLK           equ	818	;# 
  4025   000333                     T4RST           equ	819	;# 
  4026   000334                     TMR5            equ	820	;# 
  4027   000334                     TMR5L           equ	820	;# 
  4028   000335                     TMR5H           equ	821	;# 
  4029   000336                     T5CON           equ	822	;# 
  4030   000336                     TMR5CON         equ	822	;# 
  4031   000337                     T5GCON          equ	823	;# 
  4032   000337                     TMR5GCON        equ	823	;# 
  4033   000338                     T5GATE          equ	824	;# 
  4034   000338                     TMR5GATE        equ	824	;# 
  4035   000339                     T5CLK           equ	825	;# 
  4036   000339                     TMR5CLK         equ	825	;# 
  4037   000339                     PR5             equ	825	;# 
  4038   00033A                     T6TMR           equ	826	;# 
  4039   00033A                     TMR6            equ	826	;# 
  4040   00033B                     T6PR            equ	827	;# 
  4041   00033B                     PR6             equ	827	;# 
  4042   00033C                     T6CON           equ	828	;# 
  4043   00033D                     T6HLT           equ	829	;# 
  4044   00033E                     T6CLKCON        equ	830	;# 
  4045   00033E                     T6CLK           equ	830	;# 
  4046   00033F                     T6RST           equ	831	;# 
  4047   000340                     CCPR1           equ	832	;# 
  4048   000340                     CCPR1L          equ	832	;# 
  4049   000341                     CCPR1H          equ	833	;# 
  4050   000342                     CCP1CON         equ	834	;# 
  4051   000343                     CCP1CAP         equ	835	;# 
  4052   000344                     CCPR2           equ	836	;# 
  4053   000344                     CCPR2L          equ	836	;# 
  4054   000345                     CCPR2H          equ	837	;# 
  4055   000346                     CCP2CON         equ	838	;# 
  4056   000347                     CCP2CAP         equ	839	;# 
  4057   000348                     CCPR3           equ	840	;# 
  4058   000348                     CCPR3L          equ	840	;# 
  4059   000349                     CCPR3H          equ	841	;# 
  4060   00034A                     CCP3CON         equ	842	;# 
  4061   00034B                     CCP3CAP         equ	843	;# 
  4062   00034C                     CCPTMRS0        equ	844	;# 
  4063   00034F                     CRCDATA         equ	847	;# 
  4064   00034F                     CRCDATL         equ	847	;# 
  4065   000350                     CRCDATH         equ	848	;# 
  4066   000351                     CRCACC          equ	849	;# 
  4067   000351                     CRCACCL         equ	849	;# 
  4068   000352                     CRCACCH         equ	850	;# 
  4069   000353                     CRCSHFT         equ	851	;# 
  4070   000353                     CRCSHIFTL       equ	851	;# 
  4071   000354                     CRCSHIFTH       equ	852	;# 
  4072   000355                     CRCXOR          equ	853	;# 
  4073   000355                     CRCXORL         equ	853	;# 
  4074   000356                     CRCXORH         equ	854	;# 
  4075   000357                     CRCCON0         equ	855	;# 
  4076   000358                     CRCCON1         equ	856	;# 
  4077   00035A                     SCANLADR        equ	858	;# 
  4078   00035A                     SCANLADRL       equ	858	;# 
  4079   00035B                     SCANLADRH       equ	859	;# 
  4080   00035C                     SCANLADRU       equ	860	;# 
  4081   00035D                     SCANHADR        equ	861	;# 
  4082   00035D                     SCANHADRL       equ	861	;# 
  4083   00035E                     SCANHADRH       equ	862	;# 
  4084   00035F                     SCANHADRU       equ	863	;# 
  4085   000360                     SCANCON0        equ	864	;# 
  4086   000361                     SCANTRIG        equ	865	;# 
  4087   000362                     IPR0            equ	866	;# 
  4088   000363                     IPR1            equ	867	;# 
  4089   000364                     IPR2            equ	868	;# 
  4090   000365                     IPR3            equ	869	;# 
  4091   000366                     IPR4            equ	870	;# 
  4092   000367                     IPR5            equ	871	;# 
  4093   000368                     IPR6            equ	872	;# 
  4094   000369                     IPR7            equ	873	;# 
  4095   00036A                     IPR8            equ	874	;# 
  4096   00036B                     IPR9            equ	875	;# 
  4097   00036C                     IPR10           equ	876	;# 
  4098   00036D                     IPR11           equ	877	;# 
  4099   00036E                     IPR12           equ	878	;# 
  4100   00036F                     IPR13           equ	879	;# 
  4101   000370                     IPR14           equ	880	;# 
  4102   000371                     IPR15           equ	881	;# 
  4103   000373                     STATUS_CSHAD    equ	883	;# 
  4104   000374                     WREG_CSHAD      equ	884	;# 
  4105   000375                     BSR_CSHAD       equ	885	;# 
  4106   000376                     SHADCON         equ	886	;# 
  4107   000377                     STATUS_SHAD     equ	887	;# 
  4108   000378                     WREG_SHAD       equ	888	;# 
  4109   000379                     BSR_SHAD        equ	889	;# 
  4110   00037A                     PCLATH_SHAD     equ	890	;# 
  4111   00037B                     PCLATU_SHAD     equ	891	;# 
  4112   00037C                     FSR0SH          equ	892	;# 
  4113   00037C                     FSR0L_SHAD      equ	892	;# 
  4114   00037D                     FSR0H_SHAD      equ	893	;# 
  4115   00037E                     FSR1SH          equ	894	;# 
  4116   00037E                     FSR1L_SHAD      equ	894	;# 
  4117   00037F                     FSR1H_SHAD      equ	895	;# 
  4118   000380                     FSR2SH          equ	896	;# 
  4119   000380                     FSR2L_SHAD      equ	896	;# 
  4120   000381                     FSR2H_SHAD      equ	897	;# 
  4121   000382                     PRODSH          equ	898	;# 
  4122   000382                     PRODL_SHAD      equ	898	;# 
  4123   000383                     PRODH_SHAD      equ	899	;# 
  4124   0003BC                     CWG1CLK         equ	956	;# 
  4125   0003BC                     CWG1CLKCON      equ	956	;# 
  4126   0003BD                     CWG1ISM         equ	957	;# 
  4127   0003BD                     CWG1DAT         equ	957	;# 
  4128   0003BE                     CWG1DBR         equ	958	;# 
  4129   0003BF                     CWG1DBF         equ	959	;# 
  4130   0003C0                     CWG1CON0        equ	960	;# 
  4131   0003C1                     CWG1CON1        equ	961	;# 
  4132   0003C2                     CWG1AS0         equ	962	;# 
  4133   0003C3                     CWG1AS1         equ	963	;# 
  4134   0003C4                     CWG1STR         equ	964	;# 
  4135   0003C5                     CWG2CLK         equ	965	;# 
  4136   0003C5                     CWG2CLKCON      equ	965	;# 
  4137   0003C6                     CWG2ISM         equ	966	;# 
  4138   0003C6                     CWG2DAT         equ	966	;# 
  4139   0003C7                     CWG2DBR         equ	967	;# 
  4140   0003C8                     CWG2DBF         equ	968	;# 
  4141   0003C9                     CWG2CON0        equ	969	;# 
  4142   0003CA                     CWG2CON1        equ	970	;# 
  4143   0003CB                     CWG2AS0         equ	971	;# 
  4144   0003CC                     CWG2AS1         equ	972	;# 
  4145   0003CD                     CWG2STR         equ	973	;# 
  4146   0003CE                     CWG3CLK         equ	974	;# 
  4147   0003CE                     CWG3CLKCON      equ	974	;# 
  4148   0003CF                     CWG3ISM         equ	975	;# 
  4149   0003CF                     CWG3DAT         equ	975	;# 
  4150   0003D0                     CWG3DBR         equ	976	;# 
  4151   0003D1                     CWG3DBF         equ	977	;# 
  4152   0003D2                     CWG3CON0        equ	978	;# 
  4153   0003D3                     CWG3CON1        equ	979	;# 
  4154   0003D4                     CWG3AS0         equ	980	;# 
  4155   0003D5                     CWG3AS1         equ	981	;# 
  4156   0003D6                     CWG3STR         equ	982	;# 
  4157   0003D7                     FVRCON          equ	983	;# 
  4158   0003D8                     ADCPCON         equ	984	;# 
  4159   0003D8                     ADCP            equ	984	;# 
  4160   0003D9                     ADLTH           equ	985	;# 
  4161   0003D9                     ADLTHL          equ	985	;# 
  4162   0003DA                     ADLTHH          equ	986	;# 
  4163   0003DB                     ADUTH           equ	987	;# 
  4164   0003DB                     ADUTHL          equ	987	;# 
  4165   0003DC                     ADUTHH          equ	988	;# 
  4166   0003DD                     ADERR           equ	989	;# 
  4167   0003DD                     ADERRL          equ	989	;# 
  4168   0003DE                     ADERRH          equ	990	;# 
  4169   0003DF                     ADSTPT          equ	991	;# 
  4170   0003DF                     ADSTPTL         equ	991	;# 
  4171   0003E0                     ADSTPTH         equ	992	;# 
  4172   0003E1                     ADFLTR          equ	993	;# 
  4173   0003E1                     ADFLTRL         equ	993	;# 
  4174   0003E2                     ADFLTRH         equ	994	;# 
  4175   0003E3                     ADACC           equ	995	;# 
  4176   0003E3                     ADACCL          equ	995	;# 
  4177   0003E4                     ADACCH          equ	996	;# 
  4178   0003E5                     ADACCU          equ	997	;# 
  4179   0003E6                     ADCNT           equ	998	;# 
  4180   0003E7                     ADRPT           equ	999	;# 
  4181   0003E8                     ADPREV          equ	1000	;# 
  4182   0003E8                     ADPREVL         equ	1000	;# 
  4183   0003E9                     ADPREVH         equ	1001	;# 
  4184   0003EA                     ADRES           equ	1002	;# 
  4185   0003EA                     ADRESL          equ	1002	;# 
  4186   0003EB                     ADRESH          equ	1003	;# 
  4187   0003EC                     ADPCH           equ	1004	;# 
  4188   0003EE                     ADACQ           equ	1006	;# 
  4189   0003EE                     ADACQL          equ	1006	;# 
  4190   0003EF                     ADACQH          equ	1007	;# 
  4191   0003F0                     ADCAP           equ	1008	;# 
  4192   0003F1                     ADPRE           equ	1009	;# 
  4193   0003F1                     ADPREL          equ	1009	;# 
  4194   0003F2                     ADPREH          equ	1010	;# 
  4195   0003F3                     ADCON0          equ	1011	;# 
  4196   0003F4                     ADCON1          equ	1012	;# 
  4197   0003F5                     ADCON2          equ	1013	;# 
  4198   0003F6                     ADCON3          equ	1014	;# 
  4199   0003F7                     ADSTAT          equ	1015	;# 
  4200   0003F8                     ADREF           equ	1016	;# 
  4201   0003F9                     ADACT           equ	1017	;# 
  4202   0003FA                     ADCLK           equ	1018	;# 
  4203   000400                     ANSELA          equ	1024	;# 
  4204   000401                     WPUA            equ	1025	;# 
  4205   000402                     ODCONA          equ	1026	;# 
  4206   000403                     SLRCONA         equ	1027	;# 
  4207   000404                     INLVLA          equ	1028	;# 
  4208   000405                     IOCAP           equ	1029	;# 
  4209   000406                     IOCAN           equ	1030	;# 
  4210   000407                     IOCAF           equ	1031	;# 
  4211   000408                     ANSELB          equ	1032	;# 
  4212   000409                     WPUB            equ	1033	;# 
  4213   00040A                     ODCONB          equ	1034	;# 
  4214   00040B                     SLRCONB         equ	1035	;# 
  4215   00040C                     INLVLB          equ	1036	;# 
  4216   00040D                     IOCBP           equ	1037	;# 
  4217   00040E                     IOCBN           equ	1038	;# 
  4218   00040F                     IOCBF           equ	1039	;# 
  4219   000410                     ANSELC          equ	1040	;# 
  4220   000411                     WPUC            equ	1041	;# 
  4221   000412                     ODCONC          equ	1042	;# 
  4222   000413                     SLRCONC         equ	1043	;# 
  4223   000414                     INLVLC          equ	1044	;# 
  4224   000415                     IOCCP           equ	1045	;# 
  4225   000416                     IOCCN           equ	1046	;# 
  4226   000417                     IOCCF           equ	1047	;# 
  4227   000418                     ANSELD          equ	1048	;# 
  4228   000419                     WPUD            equ	1049	;# 
  4229   00041A                     ODCOND          equ	1050	;# 
  4230   00041B                     SLRCOND         equ	1051	;# 
  4231   00041C                     INLVLD          equ	1052	;# 
  4232   000420                     ANSELE          equ	1056	;# 
  4233   000421                     WPUE            equ	1057	;# 
  4234   000422                     ODCONE          equ	1058	;# 
  4235   000423                     SLRCONE         equ	1059	;# 
  4236   000424                     INLVLE          equ	1060	;# 
  4237   000425                     IOCEP           equ	1061	;# 
  4238   000426                     IOCEN           equ	1062	;# 
  4239   000427                     IOCEF           equ	1063	;# 
  4240   000428                     ANSELF          equ	1064	;# 
  4241   000429                     WPUF            equ	1065	;# 
  4242   00042A                     ODCONF          equ	1066	;# 
  4243   00042B                     SLRCONF         equ	1067	;# 
  4244   00042C                     INLVLF          equ	1068	;# 
  4245   000440                     NCO1ACC         equ	1088	;# 
  4246   000440                     NCO1ACCL        equ	1088	;# 
  4247   000441                     NCO1ACCH        equ	1089	;# 
  4248   000442                     NCO1ACCU        equ	1090	;# 
  4249   000443                     NCO1INC         equ	1091	;# 
  4250   000443                     NCO1INCL        equ	1091	;# 
  4251   000444                     NCO1INCH        equ	1092	;# 
  4252   000445                     NCO1INCU        equ	1093	;# 
  4253   000446                     NCO1CON         equ	1094	;# 
  4254   000447                     NCO1CLK         equ	1095	;# 
  4255   000448                     NCO2ACC         equ	1096	;# 
  4256   000448                     NCO2ACCL        equ	1096	;# 
  4257   000449                     NCO2ACCH        equ	1097	;# 
  4258   00044A                     NCO2ACCU        equ	1098	;# 
  4259   00044B                     NCO2INC         equ	1099	;# 
  4260   00044B                     NCO2INCL        equ	1099	;# 
  4261   00044C                     NCO2INCH        equ	1100	;# 
  4262   00044D                     NCO2INCU        equ	1101	;# 
  4263   00044E                     NCO2CON         equ	1102	;# 
  4264   00044F                     NCO2CLK         equ	1103	;# 
  4265   000450                     NCO3ACC         equ	1104	;# 
  4266   000450                     NCO3ACCL        equ	1104	;# 
  4267   000451                     NCO3ACCH        equ	1105	;# 
  4268   000452                     NCO3ACCU        equ	1106	;# 
  4269   000453                     NCO3INC         equ	1107	;# 
  4270   000453                     NCO3INCL        equ	1107	;# 
  4271   000454                     NCO3INCH        equ	1108	;# 
  4272   000455                     NCO3INCU        equ	1109	;# 
  4273   000456                     NCO3CON         equ	1110	;# 
  4274   000457                     NCO3CLK         equ	1111	;# 
  4275   000459                     IVTLOCK         equ	1113	;# 
  4276   00045A                     IVTAD           equ	1114	;# 
  4277   00045A                     IVTADL          equ	1114	;# 
  4278   00045B                     IVTADH          equ	1115	;# 
  4279   00045C                     IVTADU          equ	1116	;# 
  4280   00045D                     IVTBASE         equ	1117	;# 
  4281   00045D                     IVTBASEL        equ	1117	;# 
  4282   00045E                     IVTBASEH        equ	1118	;# 
  4283   00045F                     IVTBASEU        equ	1119	;# 
  4284   000460                     PWM1ERS         equ	1120	;# 
  4285   000461                     PWM1CLK         equ	1121	;# 
  4286   000462                     PWM1LDS         equ	1122	;# 
  4287   000463                     PWM1PR          equ	1123	;# 
  4288   000463                     PWM1PRL         equ	1123	;# 
  4289   000464                     PWM1PRH         equ	1124	;# 
  4290   000465                     PWM1CPRE        equ	1125	;# 
  4291   000466                     PWM1PIPOS       equ	1126	;# 
  4292   000467                     PWM1GIR         equ	1127	;# 
  4293   000468                     PWM1GIE         equ	1128	;# 
  4294   000469                     PWM1CON         equ	1129	;# 
  4295   00046A                     PWM1S1CFG       equ	1130	;# 
  4296   00046B                     PWM1S1P1        equ	1131	;# 
  4297   00046B                     PWM1S1P1L       equ	1131	;# 
  4298   00046C                     PWM1S1P1H       equ	1132	;# 
  4299   00046D                     PWM1S1P2        equ	1133	;# 
  4300   00046D                     PWM1S1P2L       equ	1133	;# 
  4301   00046E                     PWM1S1P2H       equ	1134	;# 
  4302   00046F                     PWM2ERS         equ	1135	;# 
  4303   000470                     PWM2CLK         equ	1136	;# 
  4304   000471                     PWM2LDS         equ	1137	;# 
  4305   000472                     PWM2PR          equ	1138	;# 
  4306   000472                     PWM2PRL         equ	1138	;# 
  4307   000473                     PWM2PRH         equ	1139	;# 
  4308   000474                     PWM2CPRE        equ	1140	;# 
  4309   000475                     PWM2PIPOS       equ	1141	;# 
  4310   000476                     PWM2GIR         equ	1142	;# 
  4311   000477                     PWM2GIE         equ	1143	;# 
  4312   000478                     PWM2CON         equ	1144	;# 
  4313   000479                     PWM2S1CFG       equ	1145	;# 
  4314   00047A                     PWM2S1P1        equ	1146	;# 
  4315   00047A                     PWM2S1P1L       equ	1146	;# 
  4316   00047B                     PWM2S1P1H       equ	1147	;# 
  4317   00047C                     PWM2S1P2        equ	1148	;# 
  4318   00047C                     PWM2S1P2L       equ	1148	;# 
  4319   00047D                     PWM2S1P2H       equ	1149	;# 
  4320   00047E                     PWM3ERS         equ	1150	;# 
  4321   00047F                     PWM3CLK         equ	1151	;# 
  4322   000480                     PWM3LDS         equ	1152	;# 
  4323   000481                     PWM3PR          equ	1153	;# 
  4324   000481                     PWM3PRL         equ	1153	;# 
  4325   000482                     PWM3PRH         equ	1154	;# 
  4326   000483                     PWM3CPRE        equ	1155	;# 
  4327   000484                     PWM3PIPOS       equ	1156	;# 
  4328   000485                     PWM3GIR         equ	1157	;# 
  4329   000486                     PWM3GIE         equ	1158	;# 
  4330   000487                     PWM3CON         equ	1159	;# 
  4331   000488                     PWM3S1CFG       equ	1160	;# 
  4332   000489                     PWM3S1P1        equ	1161	;# 
  4333   000489                     PWM3S1P1L       equ	1161	;# 
  4334   00048A                     PWM3S1P1H       equ	1162	;# 
  4335   00048B                     PWM3S1P2        equ	1163	;# 
  4336   00048B                     PWM3S1P2L       equ	1163	;# 
  4337   00048C                     PWM3S1P2H       equ	1164	;# 
  4338   00049C                     PWMLOAD         equ	1180	;# 
  4339   00049D                     PWMEN           equ	1181	;# 
  4340   00049E                     PIE0            equ	1182	;# 
  4341   00049F                     PIE1            equ	1183	;# 
  4342   0004A0                     PIE2            equ	1184	;# 
  4343   0004A1                     PIE3            equ	1185	;# 
  4344   0004A2                     PIE4            equ	1186	;# 
  4345   0004A3                     PIE5            equ	1187	;# 
  4346   0004A4                     PIE6            equ	1188	;# 
  4347   0004A5                     PIE7            equ	1189	;# 
  4348   0004A6                     PIE8            equ	1190	;# 
  4349   0004A7                     PIE9            equ	1191	;# 
  4350   0004A8                     PIE10           equ	1192	;# 
  4351   0004A9                     PIE11           equ	1193	;# 
  4352   0004AA                     PIE12           equ	1194	;# 
  4353   0004AB                     PIE13           equ	1195	;# 
  4354   0004AC                     PIE14           equ	1196	;# 
  4355   0004AD                     PIE15           equ	1197	;# 
  4356   0004AE                     PIR0            equ	1198	;# 
  4357   0004AF                     PIR1            equ	1199	;# 
  4358   0004B0                     PIR2            equ	1200	;# 
  4359   0004B1                     PIR3            equ	1201	;# 
  4360   0004B2                     PIR4            equ	1202	;# 
  4361   0004B3                     PIR5            equ	1203	;# 
  4362   0004B4                     PIR6            equ	1204	;# 
  4363   0004B5                     PIR7            equ	1205	;# 
  4364   0004B6                     PIR8            equ	1206	;# 
  4365   0004B7                     PIR9            equ	1207	;# 
  4366   0004B8                     PIR10           equ	1208	;# 
  4367   0004B9                     PIR11           equ	1209	;# 
  4368   0004BA                     PIR12           equ	1210	;# 
  4369   0004BB                     PIR13           equ	1211	;# 
  4370   0004BC                     PIR14           equ	1212	;# 
  4371   0004BD                     PIR15           equ	1213	;# 
  4372   0004BE                     LATA            equ	1214	;# 
  4373   0004BF                     LATB            equ	1215	;# 
  4374   0004C0                     LATC            equ	1216	;# 
  4375   0004C1                     LATD            equ	1217	;# 
  4376   0004C2                     LATE            equ	1218	;# 
  4377   0004C3                     LATF            equ	1219	;# 
  4378   0004C6                     TRISA           equ	1222	;# 
  4379   0004C7                     TRISB           equ	1223	;# 
  4380   0004C8                     TRISC           equ	1224	;# 
  4381   0004C9                     TRISD           equ	1225	;# 
  4382   0004CA                     TRISE           equ	1226	;# 
  4383   0004CB                     TRISF           equ	1227	;# 
  4384   0004CE                     PORTA           equ	1230	;# 
  4385   0004CF                     PORTB           equ	1231	;# 
  4386   0004D0                     PORTC           equ	1232	;# 
  4387   0004D1                     PORTD           equ	1233	;# 
  4388   0004D2                     PORTE           equ	1234	;# 
  4389   0004D3                     PORTF           equ	1235	;# 
  4390   0004D6                     INTCON0         equ	1238	;# 
  4391   0004D7                     INTCON1         equ	1239	;# 
  4392   0004D8                     STATUS          equ	1240	;# 
  4393   0004D9                     FSR2            equ	1241	;# 
  4394   0004D9                     FSR2L           equ	1241	;# 
  4395   0004DA                     FSR2H           equ	1242	;# 
  4396   0004DB                     PLUSW2          equ	1243	;# 
  4397   0004DC                     PREINC2         equ	1244	;# 
  4398   0004DD                     POSTDEC2        equ	1245	;# 
  4399   0004DE                     POSTINC2        equ	1246	;# 
  4400   0004DF                     INDF2           equ	1247	;# 
  4401   0004E0                     BSR             equ	1248	;# 
  4402   0004E1                     FSR1            equ	1249	;# 
  4403   0004E1                     FSR1L           equ	1249	;# 
  4404   0004E2                     FSR1H           equ	1250	;# 
  4405   0004E3                     PLUSW1          equ	1251	;# 
  4406   0004E4                     PREINC1         equ	1252	;# 
  4407   0004E5                     POSTDEC1        equ	1253	;# 
  4408   0004E6                     POSTINC1        equ	1254	;# 
  4409   0004E7                     INDF1           equ	1255	;# 
  4410   0004E8                     WREG            equ	1256	;# 
  4411   0004E9                     FSR0            equ	1257	;# 
  4412   0004E9                     FSR0L           equ	1257	;# 
  4413   0004EA                     FSR0H           equ	1258	;# 
  4414   0004EB                     PLUSW0          equ	1259	;# 
  4415   0004EC                     PREINC0         equ	1260	;# 
  4416   0004ED                     POSTDEC0        equ	1261	;# 
  4417   0004EE                     POSTINC0        equ	1262	;# 
  4418   0004EF                     INDF0           equ	1263	;# 
  4419   0004F0                     PCON0           equ	1264	;# 
  4420   0004F1                     PCON1           equ	1265	;# 
  4421   0004F2                     CPUDOZE         equ	1266	;# 
  4422   0004F3                     PROD            equ	1267	;# 
  4423   0004F3                     PRODL           equ	1267	;# 
  4424   0004F4                     PRODH           equ	1268	;# 
  4425   0004F5                     TABLAT          equ	1269	;# 
  4426   0004F6                     TBLPTR          equ	1270	;# 
  4427   0004F6                     TBLPTRL         equ	1270	;# 
  4428   0004F7                     TBLPTRH         equ	1271	;# 
  4429   0004F8                     TBLPTRU         equ	1272	;# 
  4430   0004F9                     PCLAT           equ	1273	;# 
  4431   0004F9                     PCL             equ	1273	;# 
  4432   0004FA                     PCLATH          equ	1274	;# 
  4433   0004FB                     PCLATU          equ	1275	;# 
  4434   0004FC                     STKPTR          equ	1276	;# 
  4435   0004FD                     TOS             equ	1277	;# 
  4436   0004FD                     TOSL            equ	1277	;# 
  4437   0004FE                     TOSH            equ	1278	;# 
  4438   0004FF                     TOSU            equ	1279	;# 
  4439   000039                     CLKRCON         equ	57	;# 
  4440   00003A                     CLKRCLK         equ	58	;# 
  4441   000040                     NVMCON0         equ	64	;# 
  4442   000041                     NVMCON1         equ	65	;# 
  4443   000042                     NVMLOCK         equ	66	;# 
  4444   000043                     NVMADR          equ	67	;# 
  4445   000043                     NVMADRL         equ	67	;# 
  4446   000044                     NVMADRH         equ	68	;# 
  4447   000045                     NVMADRU         equ	69	;# 
  4448   000046                     NVMDAT          equ	70	;# 
  4449   000046                     NVMDATL         equ	70	;# 
  4450   000047                     NVMDATH         equ	71	;# 
  4451   000048                     VREGCON         equ	72	;# 
  4452   000049                     BORCON          equ	73	;# 
  4453   00004A                     HLVDCON0        equ	74	;# 
  4454   00004B                     HLVDCON1        equ	75	;# 
  4455   00004C                     ZCDCON          equ	76	;# 
  4456   000060                     PMD0            equ	96	;# 
  4457   000061                     PMD1            equ	97	;# 
  4458   000063                     PMD3            equ	99	;# 
  4459   000064                     PMD4            equ	100	;# 
  4460   000065                     PMD5            equ	101	;# 
  4461   000066                     PMD6            equ	102	;# 
  4462   000067                     PMD7            equ	103	;# 
  4463   000068                     PMD8            equ	104	;# 
  4464   00006A                     MD1CON0         equ	106	;# 
  4465   00006B                     MD1CON1         equ	107	;# 
  4466   00006C                     MD1SRC          equ	108	;# 
  4467   00006D                     MD1CARL         equ	109	;# 
  4468   00006E                     MD1CARH         equ	110	;# 
  4469   00006F                     CMOUT           equ	111	;# 
  4470   000070                     CM1CON0         equ	112	;# 
  4471   000071                     CM1CON1         equ	113	;# 
  4472   000072                     CM1NCH          equ	114	;# 
  4473   000073                     CM1PCH          equ	115	;# 
  4474   000074                     CM2CON0         equ	116	;# 
  4475   000075                     CM2CON1         equ	117	;# 
  4476   000076                     CM2NCH          equ	118	;# 
  4477   000077                     CM2PCH          equ	119	;# 
  4478   000078                     WDTCON0         equ	120	;# 
  4479   000079                     WDTCON1         equ	121	;# 
  4480   00007A                     WDTPS           equ	122	;# 
  4481   00007A                     WDTPSL          equ	122	;# 
  4482   00007B                     WDTPSH          equ	123	;# 
  4483   00007C                     WDTTMR          equ	124	;# 
  4484   00007D                     DAC1DAT         equ	125	;# 
  4485   00007D                     DAC1DATL        equ	125	;# 
  4486   00007F                     DAC1CON         equ	127	;# 
  4487   000080                     SPI1RXB         equ	128	;# 
  4488   000081                     SPI1TXB         equ	129	;# 
  4489   000082                     SPI1TCNT        equ	130	;# 
  4490   000082                     SPI1TCNTL       equ	130	;# 
  4491   000083                     SPI1TCNTH       equ	131	;# 
  4492   000084                     SPI1CON0        equ	132	;# 
  4493   000085                     SPI1CON1        equ	133	;# 
  4494   000086                     SPI1CON2        equ	134	;# 
  4495   000087                     SPI1STATUS      equ	135	;# 
  4496   000088                     SPI1TWIDTH      equ	136	;# 
  4497   000089                     SPI1BAUD        equ	137	;# 
  4498   00008A                     SPI1INTF        equ	138	;# 
  4499   00008B                     SPI1INTE        equ	139	;# 
  4500   00008C                     SPI1CLK         equ	140	;# 
  4501   00008D                     SPI2RXB         equ	141	;# 
  4502   00008E                     SPI2TXB         equ	142	;# 
  4503   00008F                     SPI2TCNT        equ	143	;# 
  4504   00008F                     SPI2TCNTL       equ	143	;# 
  4505   000090                     SPI2TCNTH       equ	144	;# 
  4506   000091                     SPI2CON0        equ	145	;# 
  4507   000092                     SPI2CON1        equ	146	;# 
  4508   000093                     SPI2CON2        equ	147	;# 
  4509   000094                     SPI2STATUS      equ	148	;# 
  4510   000095                     SPI2TWIDTH      equ	149	;# 
  4511   000096                     SPI2BAUD        equ	150	;# 
  4512   000097                     SPI2INTF        equ	151	;# 
  4513   000098                     SPI2INTE        equ	152	;# 
  4514   000099                     SPI2CLK         equ	153	;# 
  4515   0000AC                     ACTCON          equ	172	;# 
  4516   0000AD                     OSCCON1         equ	173	;# 
  4517   0000AE                     OSCCON2         equ	174	;# 
  4518   0000AF                     OSCCON3         equ	175	;# 
  4519   0000B0                     OSCTUNE         equ	176	;# 
  4520   0000B1                     OSCFRQ          equ	177	;# 
  4521   0000B1                     OSCFREQ         equ	177	;# 
  4522   0000B2                     OSCSTAT         equ	178	;# 
  4523   0000B2                     OSCSTAT1        equ	178	;# 
  4524   0000B3                     OSCEN           equ	179	;# 
  4525   0000B4                     PRLOCK          equ	180	;# 
  4526   0000B5                     SCANPR          equ	181	;# 
  4527   0000B6                     DMA1PR          equ	182	;# 
  4528   0000B7                     DMA2PR          equ	183	;# 
  4529   0000B8                     DMA3PR          equ	184	;# 
  4530   0000B9                     DMA4PR          equ	185	;# 
  4531   0000BA                     DMA5PR          equ	186	;# 
  4532   0000BB                     DMA6PR          equ	187	;# 
  4533   0000BE                     MAINPR          equ	190	;# 
  4534   0000BF                     ISRPR           equ	191	;# 
  4535   0000D4                     CLCDATA         equ	212	;# 
  4536   0000D5                     CLCSELECT       equ	213	;# 
  4537   0000D6                     CLCnCON         equ	214	;# 
  4538   0000D7                     CLCnPOL         equ	215	;# 
  4539   0000D8                     CLCnSEL0        equ	216	;# 
  4540   0000D9                     CLCnSEL1        equ	217	;# 
  4541   0000DA                     CLCnSEL2        equ	218	;# 
  4542   0000DB                     CLCnSEL3        equ	219	;# 
  4543   0000DC                     CLCnGLS0        equ	220	;# 
  4544   0000DD                     CLCnGLS1        equ	221	;# 
  4545   0000DE                     CLCnGLS2        equ	222	;# 
  4546   0000DF                     CLCnGLS3        equ	223	;# 
  4547   0000E8                     DMASELECT       equ	232	;# 
  4548   0000E9                     DMAnBUF         equ	233	;# 
  4549   0000EA                     DMAnDCNT        equ	234	;# 
  4550   0000EA                     DMAnDCNTL       equ	234	;# 
  4551   0000EB                     DMAnDCNTH       equ	235	;# 
  4552   0000EC                     DMAnDPTR        equ	236	;# 
  4553   0000EC                     DMAnDPTRL       equ	236	;# 
  4554   0000ED                     DMAnDPTRH       equ	237	;# 
  4555   0000EE                     DMAnDSZ         equ	238	;# 
  4556   0000EE                     DMAnDSZL        equ	238	;# 
  4557   0000EF                     DMAnDSZH        equ	239	;# 
  4558   0000F0                     DMAnDSA         equ	240	;# 
  4559   0000F0                     DMAnDSAL        equ	240	;# 
  4560   0000F1                     DMAnDSAH        equ	241	;# 
  4561   0000F2                     DMAnSCNT        equ	242	;# 
  4562   0000F2                     DMAnSCNTL       equ	242	;# 
  4563   0000F3                     DMAnSCNTH       equ	243	;# 
  4564   0000F4                     DMAnSPTR        equ	244	;# 
  4565   0000F4                     DMAnSPTRL       equ	244	;# 
  4566   0000F5                     DMAnSPTRH       equ	245	;# 
  4567   0000F6                     DMAnSPTRU       equ	246	;# 
  4568   0000F7                     DMAnSSZ         equ	247	;# 
  4569   0000F7                     DMAnSSZL        equ	247	;# 
  4570   0000F8                     DMAnSSZH        equ	248	;# 
  4571   0000F9                     DMAnSSA         equ	249	;# 
  4572   0000F9                     DMAnSSAL        equ	249	;# 
  4573   0000FA                     DMAnSSAH        equ	250	;# 
  4574   0000FB                     DMAnSSAU        equ	251	;# 
  4575   0000FC                     DMAnCON0        equ	252	;# 
  4576   0000FD                     DMAnCON1        equ	253	;# 
  4577   0000FE                     DMAnAIRQ        equ	254	;# 
  4578   0000FF                     DMAnSIRQ        equ	255	;# 
  4579   000200                     PPSLOCK         equ	512	;# 
  4580   000201                     RA0PPS          equ	513	;# 
  4581   000202                     RA1PPS          equ	514	;# 
  4582   000203                     RA2PPS          equ	515	;# 
  4583   000204                     RA3PPS          equ	516	;# 
  4584   000205                     RA4PPS          equ	517	;# 
  4585   000206                     RA5PPS          equ	518	;# 
  4586   000207                     RA6PPS          equ	519	;# 
  4587   000208                     RA7PPS          equ	520	;# 
  4588   000209                     RB0PPS          equ	521	;# 
  4589   00020A                     RB1PPS          equ	522	;# 
  4590   00020B                     RB2PPS          equ	523	;# 
  4591   00020C                     RB3PPS          equ	524	;# 
  4592   00020D                     RB4PPS          equ	525	;# 
  4593   00020E                     RB5PPS          equ	526	;# 
  4594   00020F                     RB6PPS          equ	527	;# 
  4595   000210                     RB7PPS          equ	528	;# 
  4596   000211                     RC0PPS          equ	529	;# 
  4597   000212                     RC1PPS          equ	530	;# 
  4598   000213                     RC2PPS          equ	531	;# 
  4599   000214                     RC3PPS          equ	532	;# 
  4600   000215                     RC4PPS          equ	533	;# 
  4601   000216                     RC5PPS          equ	534	;# 
  4602   000217                     RC6PPS          equ	535	;# 
  4603   000218                     RC7PPS          equ	536	;# 
  4604   000219                     RD0PPS          equ	537	;# 
  4605   00021A                     RD1PPS          equ	538	;# 
  4606   00021B                     RD2PPS          equ	539	;# 
  4607   00021C                     RD3PPS          equ	540	;# 
  4608   00021D                     RD4PPS          equ	541	;# 
  4609   00021E                     RD5PPS          equ	542	;# 
  4610   00021F                     RD6PPS          equ	543	;# 
  4611   000220                     RD7PPS          equ	544	;# 
  4612   000221                     RE0PPS          equ	545	;# 
  4613   000222                     RE1PPS          equ	546	;# 
  4614   000223                     RE2PPS          equ	547	;# 
  4615   000229                     RF0PPS          equ	553	;# 
  4616   00022A                     RF1PPS          equ	554	;# 
  4617   00022B                     RF2PPS          equ	555	;# 
  4618   00022C                     RF3PPS          equ	556	;# 
  4619   00022D                     RF4PPS          equ	557	;# 
  4620   00022E                     RF5PPS          equ	558	;# 
  4621   00022F                     RF6PPS          equ	559	;# 
  4622   000230                     RF7PPS          equ	560	;# 
  4623   00023E                     INT0PPS         equ	574	;# 
  4624   00023F                     INT1PPS         equ	575	;# 
  4625   000240                     INT2PPS         equ	576	;# 
  4626   000241                     T0CKIPPS        equ	577	;# 
  4627   000242                     T1CKIPPS        equ	578	;# 
  4628   000243                     T1GPPS          equ	579	;# 
  4629   000244                     T3CKIPPS        equ	580	;# 
  4630   000245                     T3GPPS          equ	581	;# 
  4631   000246                     T5CKIPPS        equ	582	;# 
  4632   000247                     T5GPPS          equ	583	;# 
  4633   000248                     T2INPPS         equ	584	;# 
  4634   000249                     T4INPPS         equ	585	;# 
  4635   00024A                     T6INPPS         equ	586	;# 
  4636   00024F                     CCP1PPS         equ	591	;# 
  4637   000250                     CCP2PPS         equ	592	;# 
  4638   000251                     CCP3PPS         equ	593	;# 
  4639   000253                     PWM1ERSPPS      equ	595	;# 
  4640   000254                     PWM2ERSPPS      equ	596	;# 
  4641   000255                     PWM3ERSPPS      equ	597	;# 
  4642   000257                     PWMIN0PPS       equ	599	;# 
  4643   000258                     PWMIN1PPS       equ	600	;# 
  4644   000259                     SMT1WINPPS      equ	601	;# 
  4645   00025A                     SMT1SIGPPS      equ	602	;# 
  4646   00025B                     CWG1PPS         equ	603	;# 
  4647   00025B                     CWG1INPPS       equ	603	;# 
  4648   00025C                     CWG2PPS         equ	604	;# 
  4649   00025C                     CWG2INPPS       equ	604	;# 
  4650   00025D                     CWG3PPS         equ	605	;# 
  4651   00025D                     CWG3INPPS       equ	605	;# 
  4652   00025E                     MD1CARLPPS      equ	606	;# 
  4653   00025E                     MDCARLPPS       equ	606	;# 
  4654   00025F                     MD1CARHPPS      equ	607	;# 
  4655   00025F                     MDCARHPPS       equ	607	;# 
  4656   000260                     MD1SRCPPS       equ	608	;# 
  4657   000260                     MDSRCPPS        equ	608	;# 
  4658   000261                     CLCIN0PPS       equ	609	;# 
  4659   000262                     CLCIN1PPS       equ	610	;# 
  4660   000263                     CLCIN2PPS       equ	611	;# 
  4661   000264                     CLCIN3PPS       equ	612	;# 
  4662   000265                     CLCIN4PPS       equ	613	;# 
  4663   000266                     CLCIN5PPS       equ	614	;# 
  4664   000267                     CLCIN6PPS       equ	615	;# 
  4665   000268                     CLCIN7PPS       equ	616	;# 
  4666   000269                     ADACTPPS        equ	617	;# 
  4667   00026A                     SPI1SCKPPS      equ	618	;# 
  4668   00026B                     SPI1SDIPPS      equ	619	;# 
  4669   00026C                     SPI1SSPPS       equ	620	;# 
  4670   00026D                     SPI2SCKPPS      equ	621	;# 
  4671   00026E                     SPI2SDIPPS      equ	622	;# 
  4672   00026F                     SPI2SSPPS       equ	623	;# 
  4673   000270                     I2C1SDAPPS      equ	624	;# 
  4674   000271                     I2C1SCLPPS      equ	625	;# 
  4675   000272                     U1RXPPS         equ	626	;# 
  4676   000273                     U1CTSPPS        equ	627	;# 
  4677   000274                     U2RXPPS         equ	628	;# 
  4678   000275                     U2CTSPPS        equ	629	;# 
  4679   000276                     U3RXPPS         equ	630	;# 
  4680   000277                     U3CTSPPS        equ	631	;# 
  4681   000278                     U4RXPPS         equ	632	;# 
  4682   000279                     U4CTSPPS        equ	633	;# 
  4683   00027A                     U5RXPPS         equ	634	;# 
  4684   00027B                     U5CTSPPS        equ	635	;# 
  4685   000286                     RC4I2C          equ	646	;# 
  4686   000287                     RC3I2C          equ	647	;# 
  4687   000288                     RB2I2C          equ	648	;# 
  4688   000289                     RB1I2C          equ	649	;# 
  4689   00028B                     I2C1RXB         equ	651	;# 
  4690   00028C                     I2C1TXB         equ	652	;# 
  4691   00028D                     I2C1CNT         equ	653	;# 
  4692   00028E                     I2C1ADB0        equ	654	;# 
  4693   00028F                     I2C1ADB1        equ	655	;# 
  4694   000290                     I2C1ADR0        equ	656	;# 
  4695   000291                     I2C1ADR1        equ	657	;# 
  4696   000292                     I2C1ADR2        equ	658	;# 
  4697   000293                     I2C1ADR3        equ	659	;# 
  4698   000294                     I2C1CON0        equ	660	;# 
  4699   000295                     I2C1CON1        equ	661	;# 
  4700   000296                     I2C1CON2        equ	662	;# 
  4701   000297                     I2C1ERR         equ	663	;# 
  4702   000298                     I2C1STAT0       equ	664	;# 
  4703   000299                     I2C1STAT1       equ	665	;# 
  4704   00029A                     I2C1PIR         equ	666	;# 
  4705   00029B                     I2C1PIE         equ	667	;# 
  4706   00029C                     I2C1CLK         equ	668	;# 
  4707   00029D                     I2C1BTO         equ	669	;# 
  4708   0002A1                     U1RXB           equ	673	;# 
  4709   0002A1                     U1RXBL          equ	673	;# 
  4710   0002A2                     U1RXCHK         equ	674	;# 
  4711   0002A3                     U1TXB           equ	675	;# 
  4712   0002A3                     U1TXBL          equ	675	;# 
  4713   0002A4                     U1TXCHK         equ	676	;# 
  4714   0002A5                     U1P1            equ	677	;# 
  4715   0002A5                     U1P1L           equ	677	;# 
  4716   0002A6                     U1P1H           equ	678	;# 
  4717   0002A7                     U1P2            equ	679	;# 
  4718   0002A7                     U1P2L           equ	679	;# 
  4719   0002A8                     U1P2H           equ	680	;# 
  4720   0002A9                     U1P3            equ	681	;# 
  4721   0002A9                     U1P3L           equ	681	;# 
  4722   0002AA                     U1P3H           equ	682	;# 
  4723   0002AB                     U1CON0          equ	683	;# 
  4724   0002AC                     U1CON1          equ	684	;# 
  4725   0002AD                     U1CON2          equ	685	;# 
  4726   0002AE                     U1BRG           equ	686	;# 
  4727   0002AE                     U1BRGL          equ	686	;# 
  4728   0002AF                     U1BRGH          equ	687	;# 
  4729   0002B0                     U1FIFO          equ	688	;# 
  4730   0002B1                     U1UIR           equ	689	;# 
  4731   0002B2                     U1ERRIR         equ	690	;# 
  4732   0002B3                     U1ERRIE         equ	691	;# 
  4733   0002B4                     U2RXB           equ	692	;# 
  4734   0002B4                     U2RXBL          equ	692	;# 
  4735   0002B6                     U2TXB           equ	694	;# 
  4736   0002B6                     U2TXBL          equ	694	;# 
  4737   0002B8                     U2P1            equ	696	;# 
  4738   0002B8                     U2P1L           equ	696	;# 
  4739   0002BA                     U2P2            equ	698	;# 
  4740   0002BA                     U2P2L           equ	698	;# 
  4741   0002BC                     U2P3            equ	700	;# 
  4742   0002BC                     U2P3L           equ	700	;# 
  4743   0002BE                     U2CON0          equ	702	;# 
  4744   0002BF                     U2CON1          equ	703	;# 
  4745   0002C0                     U2CON2          equ	704	;# 
  4746   0002C1                     U2BRG           equ	705	;# 
  4747   0002C1                     U2BRGL          equ	705	;# 
  4748   0002C2                     U2BRGH          equ	706	;# 
  4749   0002C3                     U2FIFO          equ	707	;# 
  4750   0002C4                     U2UIR           equ	708	;# 
  4751   0002C5                     U2ERRIR         equ	709	;# 
  4752   0002C6                     U2ERRIE         equ	710	;# 
  4753   0002C7                     U3RXB           equ	711	;# 
  4754   0002C7                     U3RXBL          equ	711	;# 
  4755   0002C9                     U3TXB           equ	713	;# 
  4756   0002C9                     U3TXBL          equ	713	;# 
  4757   0002CB                     U3P1            equ	715	;# 
  4758   0002CB                     U3P1L           equ	715	;# 
  4759   0002CD                     U3P2            equ	717	;# 
  4760   0002CD                     U3P2L           equ	717	;# 
  4761   0002CF                     U3P3            equ	719	;# 
  4762   0002CF                     U3P3L           equ	719	;# 
  4763   0002D1                     U3CON0          equ	721	;# 
  4764   0002D2                     U3CON1          equ	722	;# 
  4765   0002D3                     U3CON2          equ	723	;# 
  4766   0002D4                     U3BRG           equ	724	;# 
  4767   0002D4                     U3BRGL          equ	724	;# 
  4768   0002D5                     U3BRGH          equ	725	;# 
  4769   0002D6                     U3FIFO          equ	726	;# 
  4770   0002D7                     U3UIR           equ	727	;# 
  4771   0002D8                     U3ERRIR         equ	728	;# 
  4772   0002D9                     U3ERRIE         equ	729	;# 
  4773   0002DA                     U4RXB           equ	730	;# 
  4774   0002DA                     U4RXBL          equ	730	;# 
  4775   0002DC                     U4TXB           equ	732	;# 
  4776   0002DC                     U4TXBL          equ	732	;# 
  4777   0002DE                     U4P1            equ	734	;# 
  4778   0002DE                     U4P1L           equ	734	;# 
  4779   0002E0                     U4P2            equ	736	;# 
  4780   0002E0                     U4P2L           equ	736	;# 
  4781   0002E2                     U4P3            equ	738	;# 
  4782   0002E2                     U4P3L           equ	738	;# 
  4783   0002E4                     U4CON0          equ	740	;# 
  4784   0002E5                     U4CON1          equ	741	;# 
  4785   0002E6                     U4CON2          equ	742	;# 
  4786   0002E7                     U4BRG           equ	743	;# 
  4787   0002E7                     U4BRGL          equ	743	;# 
  4788   0002E8                     U4BRGH          equ	744	;# 
  4789   0002E9                     U4FIFO          equ	745	;# 
  4790   0002EA                     U4UIR           equ	746	;# 
  4791   0002EB                     U4ERRIR         equ	747	;# 
  4792   0002EC                     U4ERRIE         equ	748	;# 
  4793   0002ED                     U5RXB           equ	749	;# 
  4794   0002ED                     U5RXBL          equ	749	;# 
  4795   0002EF                     U5TXB           equ	751	;# 
  4796   0002EF                     U5TXBL          equ	751	;# 
  4797   0002F1                     U5P1            equ	753	;# 
  4798   0002F1                     U5P1L           equ	753	;# 
  4799   0002F3                     U5P2            equ	755	;# 
  4800   0002F3                     U5P2L           equ	755	;# 
  4801   0002F5                     U5P3            equ	757	;# 
  4802   0002F5                     U5P3L           equ	757	;# 
  4803   0002F7                     U5CON0          equ	759	;# 
  4804   0002F8                     U5CON1          equ	760	;# 
  4805   0002F9                     U5CON2          equ	761	;# 
  4806   0002FA                     U5BRG           equ	762	;# 
  4807   0002FA                     U5BRGL          equ	762	;# 
  4808   0002FB                     U5BRGH          equ	763	;# 
  4809   0002FC                     U5FIFO          equ	764	;# 
  4810   0002FD                     U5UIR           equ	765	;# 
  4811   0002FE                     U5ERRIR         equ	766	;# 
  4812   0002FF                     U5ERRIE         equ	767	;# 
  4813   000300                     SMT1TMR         equ	768	;# 
  4814   000300                     SMT1TMRL        equ	768	;# 
  4815   000301                     SMT1TMRH        equ	769	;# 
  4816   000302                     SMT1TMRU        equ	770	;# 
  4817   000303                     SMT1CPR         equ	771	;# 
  4818   000303                     SMT1CPRL        equ	771	;# 
  4819   000304                     SMT1CPRH        equ	772	;# 
  4820   000305                     SMT1CPRU        equ	773	;# 
  4821   000306                     SMT1CPW         equ	774	;# 
  4822   000306                     SMT1CPWL        equ	774	;# 
  4823   000307                     SMT1CPWH        equ	775	;# 
  4824   000308                     SMT1CPWU        equ	776	;# 
  4825   000309                     SMT1PR          equ	777	;# 
  4826   000309                     SMT1PRL         equ	777	;# 
  4827   00030A                     SMT1PRH         equ	778	;# 
  4828   00030B                     SMT1PRU         equ	779	;# 
  4829   00030C                     SMT1CON0        equ	780	;# 
  4830   00030D                     SMT1CON1        equ	781	;# 
  4831   00030E                     SMT1STAT        equ	782	;# 
  4832   00030F                     SMT1CLK         equ	783	;# 
  4833   000310                     SMT1SIG         equ	784	;# 
  4834   000311                     SMT1WIN         equ	785	;# 
  4835   000318                     TMR0L           equ	792	;# 
  4836   000318                     TMR0            equ	792	;# 
  4837   000319                     TMR0H           equ	793	;# 
  4838   000319                     PR0             equ	793	;# 
  4839   00031A                     T0CON0          equ	794	;# 
  4840   00031B                     T0CON1          equ	795	;# 
  4841   00031C                     TMR1            equ	796	;# 
  4842   00031C                     TMR1L           equ	796	;# 
  4843   00031D                     TMR1H           equ	797	;# 
  4844   00031E                     T1CON           equ	798	;# 
  4845   00031E                     TMR1CON         equ	798	;# 
  4846   00031F                     T1GCON          equ	799	;# 
  4847   00031F                     TMR1GCON        equ	799	;# 
  4848   000320                     T1GATE          equ	800	;# 
  4849   000320                     TMR1GATE        equ	800	;# 
  4850   000321                     T1CLK           equ	801	;# 
  4851   000321                     TMR1CLK         equ	801	;# 
  4852   000321                     PR1             equ	801	;# 
  4853   000322                     T2TMR           equ	802	;# 
  4854   000322                     TMR2            equ	802	;# 
  4855   000323                     T2PR            equ	803	;# 
  4856   000323                     PR2             equ	803	;# 
  4857   000324                     T2CON           equ	804	;# 
  4858   000325                     T2HLT           equ	805	;# 
  4859   000326                     T2CLKCON        equ	806	;# 
  4860   000326                     T2CLK           equ	806	;# 
  4861   000327                     T2RST           equ	807	;# 
  4862   000328                     TMR3            equ	808	;# 
  4863   000328                     TMR3L           equ	808	;# 
  4864   000329                     TMR3H           equ	809	;# 
  4865   00032A                     T3CON           equ	810	;# 
  4866   00032A                     TMR3CON         equ	810	;# 
  4867   00032B                     T3GCON          equ	811	;# 
  4868   00032B                     TMR3GCON        equ	811	;# 
  4869   00032C                     T3GATE          equ	812	;# 
  4870   00032C                     TMR3GATE        equ	812	;# 
  4871   00032D                     T3CLK           equ	813	;# 
  4872   00032D                     TMR3CLK         equ	813	;# 
  4873   00032D                     PR3             equ	813	;# 
  4874   00032E                     T4TMR           equ	814	;# 
  4875   00032E                     TMR4            equ	814	;# 
  4876   00032F                     T4PR            equ	815	;# 
  4877   00032F                     PR4             equ	815	;# 
  4878   000330                     T4CON           equ	816	;# 
  4879   000331                     T4HLT           equ	817	;# 
  4880   000332                     T4CLKCON        equ	818	;# 
  4881   000332                     T4CLK           equ	818	;# 
  4882   000333                     T4RST           equ	819	;# 
  4883   000334                     TMR5            equ	820	;# 
  4884   000334                     TMR5L           equ	820	;# 
  4885   000335                     TMR5H           equ	821	;# 
  4886   000336                     T5CON           equ	822	;# 
  4887   000336                     TMR5CON         equ	822	;# 
  4888   000337                     T5GCON          equ	823	;# 
  4889   000337                     TMR5GCON        equ	823	;# 
  4890   000338                     T5GATE          equ	824	;# 
  4891   000338                     TMR5GATE        equ	824	;# 
  4892   000339                     T5CLK           equ	825	;# 
  4893   000339                     TMR5CLK         equ	825	;# 
  4894   000339                     PR5             equ	825	;# 
  4895   00033A                     T6TMR           equ	826	;# 
  4896   00033A                     TMR6            equ	826	;# 
  4897   00033B                     T6PR            equ	827	;# 
  4898   00033B                     PR6             equ	827	;# 
  4899   00033C                     T6CON           equ	828	;# 
  4900   00033D                     T6HLT           equ	829	;# 
  4901   00033E                     T6CLKCON        equ	830	;# 
  4902   00033E                     T6CLK           equ	830	;# 
  4903   00033F                     T6RST           equ	831	;# 
  4904   000340                     CCPR1           equ	832	;# 
  4905   000340                     CCPR1L          equ	832	;# 
  4906   000341                     CCPR1H          equ	833	;# 
  4907   000342                     CCP1CON         equ	834	;# 
  4908   000343                     CCP1CAP         equ	835	;# 
  4909   000344                     CCPR2           equ	836	;# 
  4910   000344                     CCPR2L          equ	836	;# 
  4911   000345                     CCPR2H          equ	837	;# 
  4912   000346                     CCP2CON         equ	838	;# 
  4913   000347                     CCP2CAP         equ	839	;# 
  4914   000348                     CCPR3           equ	840	;# 
  4915   000348                     CCPR3L          equ	840	;# 
  4916   000349                     CCPR3H          equ	841	;# 
  4917   00034A                     CCP3CON         equ	842	;# 
  4918   00034B                     CCP3CAP         equ	843	;# 
  4919   00034C                     CCPTMRS0        equ	844	;# 
  4920   00034F                     CRCDATA         equ	847	;# 
  4921   00034F                     CRCDATL         equ	847	;# 
  4922   000350                     CRCDATH         equ	848	;# 
  4923   000351                     CRCACC          equ	849	;# 
  4924   000351                     CRCACCL         equ	849	;# 
  4925   000352                     CRCACCH         equ	850	;# 
  4926   000353                     CRCSHFT         equ	851	;# 
  4927   000353                     CRCSHIFTL       equ	851	;# 
  4928   000354                     CRCSHIFTH       equ	852	;# 
  4929   000355                     CRCXOR          equ	853	;# 
  4930   000355                     CRCXORL         equ	853	;# 
  4931   000356                     CRCXORH         equ	854	;# 
  4932   000357                     CRCCON0         equ	855	;# 
  4933   000358                     CRCCON1         equ	856	;# 
  4934   00035A                     SCANLADR        equ	858	;# 
  4935   00035A                     SCANLADRL       equ	858	;# 
  4936   00035B                     SCANLADRH       equ	859	;# 
  4937   00035C                     SCANLADRU       equ	860	;# 
  4938   00035D                     SCANHADR        equ	861	;# 
  4939   00035D                     SCANHADRL       equ	861	;# 
  4940   00035E                     SCANHADRH       equ	862	;# 
  4941   00035F                     SCANHADRU       equ	863	;# 
  4942   000360                     SCANCON0        equ	864	;# 
  4943   000361                     SCANTRIG        equ	865	;# 
  4944   000362                     IPR0            equ	866	;# 
  4945   000363                     IPR1            equ	867	;# 
  4946   000364                     IPR2            equ	868	;# 
  4947   000365                     IPR3            equ	869	;# 
  4948   000366                     IPR4            equ	870	;# 
  4949   000367                     IPR5            equ	871	;# 
  4950   000368                     IPR6            equ	872	;# 
  4951   000369                     IPR7            equ	873	;# 
  4952   00036A                     IPR8            equ	874	;# 
  4953   00036B                     IPR9            equ	875	;# 
  4954   00036C                     IPR10           equ	876	;# 
  4955   00036D                     IPR11           equ	877	;# 
  4956   00036E                     IPR12           equ	878	;# 
  4957   00036F                     IPR13           equ	879	;# 
  4958   000370                     IPR14           equ	880	;# 
  4959   000371                     IPR15           equ	881	;# 
  4960   000373                     STATUS_CSHAD    equ	883	;# 
  4961   000374                     WREG_CSHAD      equ	884	;# 
  4962   000375                     BSR_CSHAD       equ	885	;# 
  4963   000376                     SHADCON         equ	886	;# 
  4964   000377                     STATUS_SHAD     equ	887	;# 
  4965   000378                     WREG_SHAD       equ	888	;# 
  4966   000379                     BSR_SHAD        equ	889	;# 
  4967   00037A                     PCLATH_SHAD     equ	890	;# 
  4968   00037B                     PCLATU_SHAD     equ	891	;# 
  4969   00037C                     FSR0SH          equ	892	;# 
  4970   00037C                     FSR0L_SHAD      equ	892	;# 
  4971   00037D                     FSR0H_SHAD      equ	893	;# 
  4972   00037E                     FSR1SH          equ	894	;# 
  4973   00037E                     FSR1L_SHAD      equ	894	;# 
  4974   00037F                     FSR1H_SHAD      equ	895	;# 
  4975   000380                     FSR2SH          equ	896	;# 
  4976   000380                     FSR2L_SHAD      equ	896	;# 
  4977   000381                     FSR2H_SHAD      equ	897	;# 
  4978   000382                     PRODSH          equ	898	;# 
  4979   000382                     PRODL_SHAD      equ	898	;# 
  4980   000383                     PRODH_SHAD      equ	899	;# 
  4981   0003BC                     CWG1CLK         equ	956	;# 
  4982   0003BC                     CWG1CLKCON      equ	956	;# 
  4983   0003BD                     CWG1ISM         equ	957	;# 
  4984   0003BD                     CWG1DAT         equ	957	;# 
  4985   0003BE                     CWG1DBR         equ	958	;# 
  4986   0003BF                     CWG1DBF         equ	959	;# 
  4987   0003C0                     CWG1CON0        equ	960	;# 
  4988   0003C1                     CWG1CON1        equ	961	;# 
  4989   0003C2                     CWG1AS0         equ	962	;# 
  4990   0003C3                     CWG1AS1         equ	963	;# 
  4991   0003C4                     CWG1STR         equ	964	;# 
  4992   0003C5                     CWG2CLK         equ	965	;# 
  4993   0003C5                     CWG2CLKCON      equ	965	;# 
  4994   0003C6                     CWG2ISM         equ	966	;# 
  4995   0003C6                     CWG2DAT         equ	966	;# 
  4996   0003C7                     CWG2DBR         equ	967	;# 
  4997   0003C8                     CWG2DBF         equ	968	;# 
  4998   0003C9                     CWG2CON0        equ	969	;# 
  4999   0003CA                     CWG2CON1        equ	970	;# 
  5000   0003CB                     CWG2AS0         equ	971	;# 
  5001   0003CC                     CWG2AS1         equ	972	;# 
  5002   0003CD                     CWG2STR         equ	973	;# 
  5003   0003CE                     CWG3CLK         equ	974	;# 
  5004   0003CE                     CWG3CLKCON      equ	974	;# 
  5005   0003CF                     CWG3ISM         equ	975	;# 
  5006   0003CF                     CWG3DAT         equ	975	;# 
  5007   0003D0                     CWG3DBR         equ	976	;# 
  5008   0003D1                     CWG3DBF         equ	977	;# 
  5009   0003D2                     CWG3CON0        equ	978	;# 
  5010   0003D3                     CWG3CON1        equ	979	;# 
  5011   0003D4                     CWG3AS0         equ	980	;# 
  5012   0003D5                     CWG3AS1         equ	981	;# 
  5013   0003D6                     CWG3STR         equ	982	;# 
  5014   0003D7                     FVRCON          equ	983	;# 
  5015   0003D8                     ADCPCON         equ	984	;# 
  5016   0003D8                     ADCP            equ	984	;# 
  5017   0003D9                     ADLTH           equ	985	;# 
  5018   0003D9                     ADLTHL          equ	985	;# 
  5019   0003DA                     ADLTHH          equ	986	;# 
  5020   0003DB                     ADUTH           equ	987	;# 
  5021   0003DB                     ADUTHL          equ	987	;# 
  5022   0003DC                     ADUTHH          equ	988	;# 
  5023   0003DD                     ADERR           equ	989	;# 
  5024   0003DD                     ADERRL          equ	989	;# 
  5025   0003DE                     ADERRH          equ	990	;# 
  5026   0003DF                     ADSTPT          equ	991	;# 
  5027   0003DF                     ADSTPTL         equ	991	;# 
  5028   0003E0                     ADSTPTH         equ	992	;# 
  5029   0003E1                     ADFLTR          equ	993	;# 
  5030   0003E1                     ADFLTRL         equ	993	;# 
  5031   0003E2                     ADFLTRH         equ	994	;# 
  5032   0003E3                     ADACC           equ	995	;# 
  5033   0003E3                     ADACCL          equ	995	;# 
  5034   0003E4                     ADACCH          equ	996	;# 
  5035   0003E5                     ADACCU          equ	997	;# 
  5036   0003E6                     ADCNT           equ	998	;# 
  5037   0003E7                     ADRPT           equ	999	;# 
  5038   0003E8                     ADPREV          equ	1000	;# 
  5039   0003E8                     ADPREVL         equ	1000	;# 
  5040   0003E9                     ADPREVH         equ	1001	;# 
  5041   0003EA                     ADRES           equ	1002	;# 
  5042   0003EA                     ADRESL          equ	1002	;# 
  5043   0003EB                     ADRESH          equ	1003	;# 
  5044   0003EC                     ADPCH           equ	1004	;# 
  5045   0003EE                     ADACQ           equ	1006	;# 
  5046   0003EE                     ADACQL          equ	1006	;# 
  5047   0003EF                     ADACQH          equ	1007	;# 
  5048   0003F0                     ADCAP           equ	1008	;# 
  5049   0003F1                     ADPRE           equ	1009	;# 
  5050   0003F1                     ADPREL          equ	1009	;# 
  5051   0003F2                     ADPREH          equ	1010	;# 
  5052   0003F3                     ADCON0          equ	1011	;# 
  5053   0003F4                     ADCON1          equ	1012	;# 
  5054   0003F5                     ADCON2          equ	1013	;# 
  5055   0003F6                     ADCON3          equ	1014	;# 
  5056   0003F7                     ADSTAT          equ	1015	;# 
  5057   0003F8                     ADREF           equ	1016	;# 
  5058   0003F9                     ADACT           equ	1017	;# 
  5059   0003FA                     ADCLK           equ	1018	;# 
  5060   000400                     ANSELA          equ	1024	;# 
  5061   000401                     WPUA            equ	1025	;# 
  5062   000402                     ODCONA          equ	1026	;# 
  5063   000403                     SLRCONA         equ	1027	;# 
  5064   000404                     INLVLA          equ	1028	;# 
  5065   000405                     IOCAP           equ	1029	;# 
  5066   000406                     IOCAN           equ	1030	;# 
  5067   000407                     IOCAF           equ	1031	;# 
  5068   000408                     ANSELB          equ	1032	;# 
  5069   000409                     WPUB            equ	1033	;# 
  5070   00040A                     ODCONB          equ	1034	;# 
  5071   00040B                     SLRCONB         equ	1035	;# 
  5072   00040C                     INLVLB          equ	1036	;# 
  5073   00040D                     IOCBP           equ	1037	;# 
  5074   00040E                     IOCBN           equ	1038	;# 
  5075   00040F                     IOCBF           equ	1039	;# 
  5076   000410                     ANSELC          equ	1040	;# 
  5077   000411                     WPUC            equ	1041	;# 
  5078   000412                     ODCONC          equ	1042	;# 
  5079   000413                     SLRCONC         equ	1043	;# 
  5080   000414                     INLVLC          equ	1044	;# 
  5081   000415                     IOCCP           equ	1045	;# 
  5082   000416                     IOCCN           equ	1046	;# 
  5083   000417                     IOCCF           equ	1047	;# 
  5084   000418                     ANSELD          equ	1048	;# 
  5085   000419                     WPUD            equ	1049	;# 
  5086   00041A                     ODCOND          equ	1050	;# 
  5087   00041B                     SLRCOND         equ	1051	;# 
  5088   00041C                     INLVLD          equ	1052	;# 
  5089   000420                     ANSELE          equ	1056	;# 
  5090   000421                     WPUE            equ	1057	;# 
  5091   000422                     ODCONE          equ	1058	;# 
  5092   000423                     SLRCONE         equ	1059	;# 
  5093   000424                     INLVLE          equ	1060	;# 
  5094   000425                     IOCEP           equ	1061	;# 
  5095   000426                     IOCEN           equ	1062	;# 
  5096   000427                     IOCEF           equ	1063	;# 
  5097   000428                     ANSELF          equ	1064	;# 
  5098   000429                     WPUF            equ	1065	;# 
  5099   00042A                     ODCONF          equ	1066	;# 
  5100   00042B                     SLRCONF         equ	1067	;# 
  5101   00042C                     INLVLF          equ	1068	;# 
  5102   000440                     NCO1ACC         equ	1088	;# 
  5103   000440                     NCO1ACCL        equ	1088	;# 
  5104   000441                     NCO1ACCH        equ	1089	;# 
  5105   000442                     NCO1ACCU        equ	1090	;# 
  5106   000443                     NCO1INC         equ	1091	;# 
  5107   000443                     NCO1INCL        equ	1091	;# 
  5108   000444                     NCO1INCH        equ	1092	;# 
  5109   000445                     NCO1INCU        equ	1093	;# 
  5110   000446                     NCO1CON         equ	1094	;# 
  5111   000447                     NCO1CLK         equ	1095	;# 
  5112   000448                     NCO2ACC         equ	1096	;# 
  5113   000448                     NCO2ACCL        equ	1096	;# 
  5114   000449                     NCO2ACCH        equ	1097	;# 
  5115   00044A                     NCO2ACCU        equ	1098	;# 
  5116   00044B                     NCO2INC         equ	1099	;# 
  5117   00044B                     NCO2INCL        equ	1099	;# 
  5118   00044C                     NCO2INCH        equ	1100	;# 
  5119   00044D                     NCO2INCU        equ	1101	;# 
  5120   00044E                     NCO2CON         equ	1102	;# 
  5121   00044F                     NCO2CLK         equ	1103	;# 
  5122   000450                     NCO3ACC         equ	1104	;# 
  5123   000450                     NCO3ACCL        equ	1104	;# 
  5124   000451                     NCO3ACCH        equ	1105	;# 
  5125   000452                     NCO3ACCU        equ	1106	;# 
  5126   000453                     NCO3INC         equ	1107	;# 
  5127   000453                     NCO3INCL        equ	1107	;# 
  5128   000454                     NCO3INCH        equ	1108	;# 
  5129   000455                     NCO3INCU        equ	1109	;# 
  5130   000456                     NCO3CON         equ	1110	;# 
  5131   000457                     NCO3CLK         equ	1111	;# 
  5132   000459                     IVTLOCK         equ	1113	;# 
  5133   00045A                     IVTAD           equ	1114	;# 
  5134   00045A                     IVTADL          equ	1114	;# 
  5135   00045B                     IVTADH          equ	1115	;# 
  5136   00045C                     IVTADU          equ	1116	;# 
  5137   00045D                     IVTBASE         equ	1117	;# 
  5138   00045D                     IVTBASEL        equ	1117	;# 
  5139   00045E                     IVTBASEH        equ	1118	;# 
  5140   00045F                     IVTBASEU        equ	1119	;# 
  5141   000460                     PWM1ERS         equ	1120	;# 
  5142   000461                     PWM1CLK         equ	1121	;# 
  5143   000462                     PWM1LDS         equ	1122	;# 
  5144   000463                     PWM1PR          equ	1123	;# 
  5145   000463                     PWM1PRL         equ	1123	;# 
  5146   000464                     PWM1PRH         equ	1124	;# 
  5147   000465                     PWM1CPRE        equ	1125	;# 
  5148   000466                     PWM1PIPOS       equ	1126	;# 
  5149   000467                     PWM1GIR         equ	1127	;# 
  5150   000468                     PWM1GIE         equ	1128	;# 
  5151   000469                     PWM1CON         equ	1129	;# 
  5152   00046A                     PWM1S1CFG       equ	1130	;# 
  5153   00046B                     PWM1S1P1        equ	1131	;# 
  5154   00046B                     PWM1S1P1L       equ	1131	;# 
  5155   00046C                     PWM1S1P1H       equ	1132	;# 
  5156   00046D                     PWM1S1P2        equ	1133	;# 
  5157   00046D                     PWM1S1P2L       equ	1133	;# 
  5158   00046E                     PWM1S1P2H       equ	1134	;# 
  5159   00046F                     PWM2ERS         equ	1135	;# 
  5160   000470                     PWM2CLK         equ	1136	;# 
  5161   000471                     PWM2LDS         equ	1137	;# 
  5162   000472                     PWM2PR          equ	1138	;# 
  5163   000472                     PWM2PRL         equ	1138	;# 
  5164   000473                     PWM2PRH         equ	1139	;# 
  5165   000474                     PWM2CPRE        equ	1140	;# 
  5166   000475                     PWM2PIPOS       equ	1141	;# 
  5167   000476                     PWM2GIR         equ	1142	;# 
  5168   000477                     PWM2GIE         equ	1143	;# 
  5169   000478                     PWM2CON         equ	1144	;# 
  5170   000479                     PWM2S1CFG       equ	1145	;# 
  5171   00047A                     PWM2S1P1        equ	1146	;# 
  5172   00047A                     PWM2S1P1L       equ	1146	;# 
  5173   00047B                     PWM2S1P1H       equ	1147	;# 
  5174   00047C                     PWM2S1P2        equ	1148	;# 
  5175   00047C                     PWM2S1P2L       equ	1148	;# 
  5176   00047D                     PWM2S1P2H       equ	1149	;# 
  5177   00047E                     PWM3ERS         equ	1150	;# 
  5178   00047F                     PWM3CLK         equ	1151	;# 
  5179   000480                     PWM3LDS         equ	1152	;# 
  5180   000481                     PWM3PR          equ	1153	;# 
  5181   000481                     PWM3PRL         equ	1153	;# 
  5182   000482                     PWM3PRH         equ	1154	;# 
  5183   000483                     PWM3CPRE        equ	1155	;# 
  5184   000484                     PWM3PIPOS       equ	1156	;# 
  5185   000485                     PWM3GIR         equ	1157	;# 
  5186   000486                     PWM3GIE         equ	1158	;# 
  5187   000487                     PWM3CON         equ	1159	;# 
  5188   000488                     PWM3S1CFG       equ	1160	;# 
  5189   000489                     PWM3S1P1        equ	1161	;# 
  5190   000489                     PWM3S1P1L       equ	1161	;# 
  5191   00048A                     PWM3S1P1H       equ	1162	;# 
  5192   00048B                     PWM3S1P2        equ	1163	;# 
  5193   00048B                     PWM3S1P2L       equ	1163	;# 
  5194   00048C                     PWM3S1P2H       equ	1164	;# 
  5195   00049C                     PWMLOAD         equ	1180	;# 
  5196   00049D                     PWMEN           equ	1181	;# 
  5197   00049E                     PIE0            equ	1182	;# 
  5198   00049F                     PIE1            equ	1183	;# 
  5199   0004A0                     PIE2            equ	1184	;# 
  5200   0004A1                     PIE3            equ	1185	;# 
  5201   0004A2                     PIE4            equ	1186	;# 
  5202   0004A3                     PIE5            equ	1187	;# 
  5203   0004A4                     PIE6            equ	1188	;# 
  5204   0004A5                     PIE7            equ	1189	;# 
  5205   0004A6                     PIE8            equ	1190	;# 
  5206   0004A7                     PIE9            equ	1191	;# 
  5207   0004A8                     PIE10           equ	1192	;# 
  5208   0004A9                     PIE11           equ	1193	;# 
  5209   0004AA                     PIE12           equ	1194	;# 
  5210   0004AB                     PIE13           equ	1195	;# 
  5211   0004AC                     PIE14           equ	1196	;# 
  5212   0004AD                     PIE15           equ	1197	;# 
  5213   0004AE                     PIR0            equ	1198	;# 
  5214   0004AF                     PIR1            equ	1199	;# 
  5215   0004B0                     PIR2            equ	1200	;# 
  5216   0004B1                     PIR3            equ	1201	;# 
  5217   0004B2                     PIR4            equ	1202	;# 
  5218   0004B3                     PIR5            equ	1203	;# 
  5219   0004B4                     PIR6            equ	1204	;# 
  5220   0004B5                     PIR7            equ	1205	;# 
  5221   0004B6                     PIR8            equ	1206	;# 
  5222   0004B7                     PIR9            equ	1207	;# 
  5223   0004B8                     PIR10           equ	1208	;# 
  5224   0004B9                     PIR11           equ	1209	;# 
  5225   0004BA                     PIR12           equ	1210	;# 
  5226   0004BB                     PIR13           equ	1211	;# 
  5227   0004BC                     PIR14           equ	1212	;# 
  5228   0004BD                     PIR15           equ	1213	;# 
  5229   0004BE                     LATA            equ	1214	;# 
  5230   0004BF                     LATB            equ	1215	;# 
  5231   0004C0                     LATC            equ	1216	;# 
  5232   0004C1                     LATD            equ	1217	;# 
  5233   0004C2                     LATE            equ	1218	;# 
  5234   0004C3                     LATF            equ	1219	;# 
  5235   0004C6                     TRISA           equ	1222	;# 
  5236   0004C7                     TRISB           equ	1223	;# 
  5237   0004C8                     TRISC           equ	1224	;# 
  5238   0004C9                     TRISD           equ	1225	;# 
  5239   0004CA                     TRISE           equ	1226	;# 
  5240   0004CB                     TRISF           equ	1227	;# 
  5241   0004CE                     PORTA           equ	1230	;# 
  5242   0004CF                     PORTB           equ	1231	;# 
  5243   0004D0                     PORTC           equ	1232	;# 
  5244   0004D1                     PORTD           equ	1233	;# 
  5245   0004D2                     PORTE           equ	1234	;# 
  5246   0004D3                     PORTF           equ	1235	;# 
  5247   0004D6                     INTCON0         equ	1238	;# 
  5248   0004D7                     INTCON1         equ	1239	;# 
  5249   0004D8                     STATUS          equ	1240	;# 
  5250   0004D9                     FSR2            equ	1241	;# 
  5251   0004D9                     FSR2L           equ	1241	;# 
  5252   0004DA                     FSR2H           equ	1242	;# 
  5253   0004DB                     PLUSW2          equ	1243	;# 
  5254   0004DC                     PREINC2         equ	1244	;# 
  5255   0004DD                     POSTDEC2        equ	1245	;# 
  5256   0004DE                     POSTINC2        equ	1246	;# 
  5257   0004DF                     INDF2           equ	1247	;# 
  5258   0004E0                     BSR             equ	1248	;# 
  5259   0004E1                     FSR1            equ	1249	;# 
  5260   0004E1                     FSR1L           equ	1249	;# 
  5261   0004E2                     FSR1H           equ	1250	;# 
  5262   0004E3                     PLUSW1          equ	1251	;# 
  5263   0004E4                     PREINC1         equ	1252	;# 
  5264   0004E5                     POSTDEC1        equ	1253	;# 
  5265   0004E6                     POSTINC1        equ	1254	;# 
  5266   0004E7                     INDF1           equ	1255	;# 
  5267   0004E8                     WREG            equ	1256	;# 
  5268   0004E9                     FSR0            equ	1257	;# 
  5269   0004E9                     FSR0L           equ	1257	;# 
  5270   0004EA                     FSR0H           equ	1258	;# 
  5271   0004EB                     PLUSW0          equ	1259	;# 
  5272   0004EC                     PREINC0         equ	1260	;# 
  5273   0004ED                     POSTDEC0        equ	1261	;# 
  5274   0004EE                     POSTINC0        equ	1262	;# 
  5275   0004EF                     INDF0           equ	1263	;# 
  5276   0004F0                     PCON0           equ	1264	;# 
  5277   0004F1                     PCON1           equ	1265	;# 
  5278   0004F2                     CPUDOZE         equ	1266	;# 
  5279   0004F3                     PROD            equ	1267	;# 
  5280   0004F3                     PRODL           equ	1267	;# 
  5281   0004F4                     PRODH           equ	1268	;# 
  5282   0004F5                     TABLAT          equ	1269	;# 
  5283   0004F6                     TBLPTR          equ	1270	;# 
  5284   0004F6                     TBLPTRL         equ	1270	;# 
  5285   0004F7                     TBLPTRH         equ	1271	;# 
  5286   0004F8                     TBLPTRU         equ	1272	;# 
  5287   0004F9                     PCLAT           equ	1273	;# 
  5288   0004F9                     PCL             equ	1273	;# 
  5289   0004FA                     PCLATH          equ	1274	;# 
  5290   0004FB                     PCLATU          equ	1275	;# 
  5291   0004FC                     STKPTR          equ	1276	;# 
  5292   0004FD                     TOS             equ	1277	;# 
  5293   0004FD                     TOSL            equ	1277	;# 
  5294   0004FE                     TOSH            equ	1278	;# 
  5295   0004FF                     TOSU            equ	1279	;# 
  5296   000039                     CLKRCON         equ	57	;# 
  5297   00003A                     CLKRCLK         equ	58	;# 
  5298   000040                     NVMCON0         equ	64	;# 
  5299   000041                     NVMCON1         equ	65	;# 
  5300   000042                     NVMLOCK         equ	66	;# 
  5301   000043                     NVMADR          equ	67	;# 
  5302   000043                     NVMADRL         equ	67	;# 
  5303   000044                     NVMADRH         equ	68	;# 
  5304   000045                     NVMADRU         equ	69	;# 
  5305   000046                     NVMDAT          equ	70	;# 
  5306   000046                     NVMDATL         equ	70	;# 
  5307   000047                     NVMDATH         equ	71	;# 
  5308   000048                     VREGCON         equ	72	;# 
  5309   000049                     BORCON          equ	73	;# 
  5310   00004A                     HLVDCON0        equ	74	;# 
  5311   00004B                     HLVDCON1        equ	75	;# 
  5312   00004C                     ZCDCON          equ	76	;# 
  5313   000060                     PMD0            equ	96	;# 
  5314   000061                     PMD1            equ	97	;# 
  5315   000063                     PMD3            equ	99	;# 
  5316   000064                     PMD4            equ	100	;# 
  5317   000065                     PMD5            equ	101	;# 
  5318   000066                     PMD6            equ	102	;# 
  5319   000067                     PMD7            equ	103	;# 
  5320   000068                     PMD8            equ	104	;# 
  5321   00006A                     MD1CON0         equ	106	;# 
  5322   00006B                     MD1CON1         equ	107	;# 
  5323   00006C                     MD1SRC          equ	108	;# 
  5324   00006D                     MD1CARL         equ	109	;# 
  5325   00006E                     MD1CARH         equ	110	;# 
  5326   00006F                     CMOUT           equ	111	;# 
  5327   000070                     CM1CON0         equ	112	;# 
  5328   000071                     CM1CON1         equ	113	;# 
  5329   000072                     CM1NCH          equ	114	;# 
  5330   000073                     CM1PCH          equ	115	;# 
  5331   000074                     CM2CON0         equ	116	;# 
  5332   000075                     CM2CON1         equ	117	;# 
  5333   000076                     CM2NCH          equ	118	;# 
  5334   000077                     CM2PCH          equ	119	;# 
  5335   000078                     WDTCON0         equ	120	;# 
  5336   000079                     WDTCON1         equ	121	;# 
  5337   00007A                     WDTPS           equ	122	;# 
  5338   00007A                     WDTPSL          equ	122	;# 
  5339   00007B                     WDTPSH          equ	123	;# 
  5340   00007C                     WDTTMR          equ	124	;# 
  5341   00007D                     DAC1DAT         equ	125	;# 
  5342   00007D                     DAC1DATL        equ	125	;# 
  5343   00007F                     DAC1CON         equ	127	;# 
  5344   000080                     SPI1RXB         equ	128	;# 
  5345   000081                     SPI1TXB         equ	129	;# 
  5346   000082                     SPI1TCNT        equ	130	;# 
  5347   000082                     SPI1TCNTL       equ	130	;# 
  5348   000083                     SPI1TCNTH       equ	131	;# 
  5349   000084                     SPI1CON0        equ	132	;# 
  5350   000085                     SPI1CON1        equ	133	;# 
  5351   000086                     SPI1CON2        equ	134	;# 
  5352   000087                     SPI1STATUS      equ	135	;# 
  5353   000088                     SPI1TWIDTH      equ	136	;# 
  5354   000089                     SPI1BAUD        equ	137	;# 
  5355   00008A                     SPI1INTF        equ	138	;# 
  5356   00008B                     SPI1INTE        equ	139	;# 
  5357   00008C                     SPI1CLK         equ	140	;# 
  5358   00008D                     SPI2RXB         equ	141	;# 
  5359   00008E                     SPI2TXB         equ	142	;# 
  5360   00008F                     SPI2TCNT        equ	143	;# 
  5361   00008F                     SPI2TCNTL       equ	143	;# 
  5362   000090                     SPI2TCNTH       equ	144	;# 
  5363   000091                     SPI2CON0        equ	145	;# 
  5364   000092                     SPI2CON1        equ	146	;# 
  5365   000093                     SPI2CON2        equ	147	;# 
  5366   000094                     SPI2STATUS      equ	148	;# 
  5367   000095                     SPI2TWIDTH      equ	149	;# 
  5368   000096                     SPI2BAUD        equ	150	;# 
  5369   000097                     SPI2INTF        equ	151	;# 
  5370   000098                     SPI2INTE        equ	152	;# 
  5371   000099                     SPI2CLK         equ	153	;# 
  5372   0000AC                     ACTCON          equ	172	;# 
  5373   0000AD                     OSCCON1         equ	173	;# 
  5374   0000AE                     OSCCON2         equ	174	;# 
  5375   0000AF                     OSCCON3         equ	175	;# 
  5376   0000B0                     OSCTUNE         equ	176	;# 
  5377   0000B1                     OSCFRQ          equ	177	;# 
  5378   0000B1                     OSCFREQ         equ	177	;# 
  5379   0000B2                     OSCSTAT         equ	178	;# 
  5380   0000B2                     OSCSTAT1        equ	178	;# 
  5381   0000B3                     OSCEN           equ	179	;# 
  5382   0000B4                     PRLOCK          equ	180	;# 
  5383   0000B5                     SCANPR          equ	181	;# 
  5384   0000B6                     DMA1PR          equ	182	;# 
  5385   0000B7                     DMA2PR          equ	183	;# 
  5386   0000B8                     DMA3PR          equ	184	;# 
  5387   0000B9                     DMA4PR          equ	185	;# 
  5388   0000BA                     DMA5PR          equ	186	;# 
  5389   0000BB                     DMA6PR          equ	187	;# 
  5390   0000BE                     MAINPR          equ	190	;# 
  5391   0000BF                     ISRPR           equ	191	;# 
  5392   0000D4                     CLCDATA         equ	212	;# 
  5393   0000D5                     CLCSELECT       equ	213	;# 
  5394   0000D6                     CLCnCON         equ	214	;# 
  5395   0000D7                     CLCnPOL         equ	215	;# 
  5396   0000D8                     CLCnSEL0        equ	216	;# 
  5397   0000D9                     CLCnSEL1        equ	217	;# 
  5398   0000DA                     CLCnSEL2        equ	218	;# 
  5399   0000DB                     CLCnSEL3        equ	219	;# 
  5400   0000DC                     CLCnGLS0        equ	220	;# 
  5401   0000DD                     CLCnGLS1        equ	221	;# 
  5402   0000DE                     CLCnGLS2        equ	222	;# 
  5403   0000DF                     CLCnGLS3        equ	223	;# 
  5404   0000E8                     DMASELECT       equ	232	;# 
  5405   0000E9                     DMAnBUF         equ	233	;# 
  5406   0000EA                     DMAnDCNT        equ	234	;# 
  5407   0000EA                     DMAnDCNTL       equ	234	;# 
  5408   0000EB                     DMAnDCNTH       equ	235	;# 
  5409   0000EC                     DMAnDPTR        equ	236	;# 
  5410   0000EC                     DMAnDPTRL       equ	236	;# 
  5411   0000ED                     DMAnDPTRH       equ	237	;# 
  5412   0000EE                     DMAnDSZ         equ	238	;# 
  5413   0000EE                     DMAnDSZL        equ	238	;# 
  5414   0000EF                     DMAnDSZH        equ	239	;# 
  5415   0000F0                     DMAnDSA         equ	240	;# 
  5416   0000F0                     DMAnDSAL        equ	240	;# 
  5417   0000F1                     DMAnDSAH        equ	241	;# 
  5418   0000F2                     DMAnSCNT        equ	242	;# 
  5419   0000F2                     DMAnSCNTL       equ	242	;# 
  5420   0000F3                     DMAnSCNTH       equ	243	;# 
  5421   0000F4                     DMAnSPTR        equ	244	;# 
  5422   0000F4                     DMAnSPTRL       equ	244	;# 
  5423   0000F5                     DMAnSPTRH       equ	245	;# 
  5424   0000F6                     DMAnSPTRU       equ	246	;# 
  5425   0000F7                     DMAnSSZ         equ	247	;# 
  5426   0000F7                     DMAnSSZL        equ	247	;# 
  5427   0000F8                     DMAnSSZH        equ	248	;# 
  5428   0000F9                     DMAnSSA         equ	249	;# 
  5429   0000F9                     DMAnSSAL        equ	249	;# 
  5430   0000FA                     DMAnSSAH        equ	250	;# 
  5431   0000FB                     DMAnSSAU        equ	251	;# 
  5432   0000FC                     DMAnCON0        equ	252	;# 
  5433   0000FD                     DMAnCON1        equ	253	;# 
  5434   0000FE                     DMAnAIRQ        equ	254	;# 
  5435   0000FF                     DMAnSIRQ        equ	255	;# 
  5436   000200                     PPSLOCK         equ	512	;# 
  5437   000201                     RA0PPS          equ	513	;# 
  5438   000202                     RA1PPS          equ	514	;# 
  5439   000203                     RA2PPS          equ	515	;# 
  5440   000204                     RA3PPS          equ	516	;# 
  5441   000205                     RA4PPS          equ	517	;# 
  5442   000206                     RA5PPS          equ	518	;# 
  5443   000207                     RA6PPS          equ	519	;# 
  5444   000208                     RA7PPS          equ	520	;# 
  5445   000209                     RB0PPS          equ	521	;# 
  5446   00020A                     RB1PPS          equ	522	;# 
  5447   00020B                     RB2PPS          equ	523	;# 
  5448   00020C                     RB3PPS          equ	524	;# 
  5449   00020D                     RB4PPS          equ	525	;# 
  5450   00020E                     RB5PPS          equ	526	;# 
  5451   00020F                     RB6PPS          equ	527	;# 
  5452   000210                     RB7PPS          equ	528	;# 
  5453   000211                     RC0PPS          equ	529	;# 
  5454   000212                     RC1PPS          equ	530	;# 
  5455   000213                     RC2PPS          equ	531	;# 
  5456   000214                     RC3PPS          equ	532	;# 
  5457   000215                     RC4PPS          equ	533	;# 
  5458   000216                     RC5PPS          equ	534	;# 
  5459   000217                     RC6PPS          equ	535	;# 
  5460   000218                     RC7PPS          equ	536	;# 
  5461   000219                     RD0PPS          equ	537	;# 
  5462   00021A                     RD1PPS          equ	538	;# 
  5463   00021B                     RD2PPS          equ	539	;# 
  5464   00021C                     RD3PPS          equ	540	;# 
  5465   00021D                     RD4PPS          equ	541	;# 
  5466   00021E                     RD5PPS          equ	542	;# 
  5467   00021F                     RD6PPS          equ	543	;# 
  5468   000220                     RD7PPS          equ	544	;# 
  5469   000221                     RE0PPS          equ	545	;# 
  5470   000222                     RE1PPS          equ	546	;# 
  5471   000223                     RE2PPS          equ	547	;# 
  5472   000229                     RF0PPS          equ	553	;# 
  5473   00022A                     RF1PPS          equ	554	;# 
  5474   00022B                     RF2PPS          equ	555	;# 
  5475   00022C                     RF3PPS          equ	556	;# 
  5476   00022D                     RF4PPS          equ	557	;# 
  5477   00022E                     RF5PPS          equ	558	;# 
  5478   00022F                     RF6PPS          equ	559	;# 
  5479   000230                     RF7PPS          equ	560	;# 
  5480   00023E                     INT0PPS         equ	574	;# 
  5481   00023F                     INT1PPS         equ	575	;# 
  5482   000240                     INT2PPS         equ	576	;# 
  5483   000241                     T0CKIPPS        equ	577	;# 
  5484   000242                     T1CKIPPS        equ	578	;# 
  5485   000243                     T1GPPS          equ	579	;# 
  5486   000244                     T3CKIPPS        equ	580	;# 
  5487   000245                     T3GPPS          equ	581	;# 
  5488   000246                     T5CKIPPS        equ	582	;# 
  5489   000247                     T5GPPS          equ	583	;# 
  5490   000248                     T2INPPS         equ	584	;# 
  5491   000249                     T4INPPS         equ	585	;# 
  5492   00024A                     T6INPPS         equ	586	;# 
  5493   00024F                     CCP1PPS         equ	591	;# 
  5494   000250                     CCP2PPS         equ	592	;# 
  5495   000251                     CCP3PPS         equ	593	;# 
  5496   000253                     PWM1ERSPPS      equ	595	;# 
  5497   000254                     PWM2ERSPPS      equ	596	;# 
  5498   000255                     PWM3ERSPPS      equ	597	;# 
  5499   000257                     PWMIN0PPS       equ	599	;# 
  5500   000258                     PWMIN1PPS       equ	600	;# 
  5501   000259                     SMT1WINPPS      equ	601	;# 
  5502   00025A                     SMT1SIGPPS      equ	602	;# 
  5503   00025B                     CWG1PPS         equ	603	;# 
  5504   00025B                     CWG1INPPS       equ	603	;# 
  5505   00025C                     CWG2PPS         equ	604	;# 
  5506   00025C                     CWG2INPPS       equ	604	;# 
  5507   00025D                     CWG3PPS         equ	605	;# 
  5508   00025D                     CWG3INPPS       equ	605	;# 
  5509   00025E                     MD1CARLPPS      equ	606	;# 
  5510   00025E                     MDCARLPPS       equ	606	;# 
  5511   00025F                     MD1CARHPPS      equ	607	;# 
  5512   00025F                     MDCARHPPS       equ	607	;# 
  5513   000260                     MD1SRCPPS       equ	608	;# 
  5514   000260                     MDSRCPPS        equ	608	;# 
  5515   000261                     CLCIN0PPS       equ	609	;# 
  5516   000262                     CLCIN1PPS       equ	610	;# 
  5517   000263                     CLCIN2PPS       equ	611	;# 
  5518   000264                     CLCIN3PPS       equ	612	;# 
  5519   000265                     CLCIN4PPS       equ	613	;# 
  5520   000266                     CLCIN5PPS       equ	614	;# 
  5521   000267                     CLCIN6PPS       equ	615	;# 
  5522   000268                     CLCIN7PPS       equ	616	;# 
  5523   000269                     ADACTPPS        equ	617	;# 
  5524   00026A                     SPI1SCKPPS      equ	618	;# 
  5525   00026B                     SPI1SDIPPS      equ	619	;# 
  5526   00026C                     SPI1SSPPS       equ	620	;# 
  5527   00026D                     SPI2SCKPPS      equ	621	;# 
  5528   00026E                     SPI2SDIPPS      equ	622	;# 
  5529   00026F                     SPI2SSPPS       equ	623	;# 
  5530   000270                     I2C1SDAPPS      equ	624	;# 
  5531   000271                     I2C1SCLPPS      equ	625	;# 
  5532   000272                     U1RXPPS         equ	626	;# 
  5533   000273                     U1CTSPPS        equ	627	;# 
  5534   000274                     U2RXPPS         equ	628	;# 
  5535   000275                     U2CTSPPS        equ	629	;# 
  5536   000276                     U3RXPPS         equ	630	;# 
  5537   000277                     U3CTSPPS        equ	631	;# 
  5538   000278                     U4RXPPS         equ	632	;# 
  5539   000279                     U4CTSPPS        equ	633	;# 
  5540   00027A                     U5RXPPS         equ	634	;# 
  5541   00027B                     U5CTSPPS        equ	635	;# 
  5542   000286                     RC4I2C          equ	646	;# 
  5543   000287                     RC3I2C          equ	647	;# 
  5544   000288                     RB2I2C          equ	648	;# 
  5545   000289                     RB1I2C          equ	649	;# 
  5546   00028B                     I2C1RXB         equ	651	;# 
  5547   00028C                     I2C1TXB         equ	652	;# 
  5548   00028D                     I2C1CNT         equ	653	;# 
  5549   00028E                     I2C1ADB0        equ	654	;# 
  5550   00028F                     I2C1ADB1        equ	655	;# 
  5551   000290                     I2C1ADR0        equ	656	;# 
  5552   000291                     I2C1ADR1        equ	657	;# 
  5553   000292                     I2C1ADR2        equ	658	;# 
  5554   000293                     I2C1ADR3        equ	659	;# 
  5555   000294                     I2C1CON0        equ	660	;# 
  5556   000295                     I2C1CON1        equ	661	;# 
  5557   000296                     I2C1CON2        equ	662	;# 
  5558   000297                     I2C1ERR         equ	663	;# 
  5559   000298                     I2C1STAT0       equ	664	;# 
  5560   000299                     I2C1STAT1       equ	665	;# 
  5561   00029A                     I2C1PIR         equ	666	;# 
  5562   00029B                     I2C1PIE         equ	667	;# 
  5563   00029C                     I2C1CLK         equ	668	;# 
  5564   00029D                     I2C1BTO         equ	669	;# 
  5565   0002A1                     U1RXB           equ	673	;# 
  5566   0002A1                     U1RXBL          equ	673	;# 
  5567   0002A2                     U1RXCHK         equ	674	;# 
  5568   0002A3                     U1TXB           equ	675	;# 
  5569   0002A3                     U1TXBL          equ	675	;# 
  5570   0002A4                     U1TXCHK         equ	676	;# 
  5571   0002A5                     U1P1            equ	677	;# 
  5572   0002A5                     U1P1L           equ	677	;# 
  5573   0002A6                     U1P1H           equ	678	;# 
  5574   0002A7                     U1P2            equ	679	;# 
  5575   0002A7                     U1P2L           equ	679	;# 
  5576   0002A8                     U1P2H           equ	680	;# 
  5577   0002A9                     U1P3            equ	681	;# 
  5578   0002A9                     U1P3L           equ	681	;# 
  5579   0002AA                     U1P3H           equ	682	;# 
  5580   0002AB                     U1CON0          equ	683	;# 
  5581   0002AC                     U1CON1          equ	684	;# 
  5582   0002AD                     U1CON2          equ	685	;# 
  5583   0002AE                     U1BRG           equ	686	;# 
  5584   0002AE                     U1BRGL          equ	686	;# 
  5585   0002AF                     U1BRGH          equ	687	;# 
  5586   0002B0                     U1FIFO          equ	688	;# 
  5587   0002B1                     U1UIR           equ	689	;# 
  5588   0002B2                     U1ERRIR         equ	690	;# 
  5589   0002B3                     U1ERRIE         equ	691	;# 
  5590   0002B4                     U2RXB           equ	692	;# 
  5591   0002B4                     U2RXBL          equ	692	;# 
  5592   0002B6                     U2TXB           equ	694	;# 
  5593   0002B6                     U2TXBL          equ	694	;# 
  5594   0002B8                     U2P1            equ	696	;# 
  5595   0002B8                     U2P1L           equ	696	;# 
  5596   0002BA                     U2P2            equ	698	;# 
  5597   0002BA                     U2P2L           equ	698	;# 
  5598   0002BC                     U2P3            equ	700	;# 
  5599   0002BC                     U2P3L           equ	700	;# 
  5600   0002BE                     U2CON0          equ	702	;# 
  5601   0002BF                     U2CON1          equ	703	;# 
  5602   0002C0                     U2CON2          equ	704	;# 
  5603   0002C1                     U2BRG           equ	705	;# 
  5604   0002C1                     U2BRGL          equ	705	;# 
  5605   0002C2                     U2BRGH          equ	706	;# 
  5606   0002C3                     U2FIFO          equ	707	;# 
  5607   0002C4                     U2UIR           equ	708	;# 
  5608   0002C5                     U2ERRIR         equ	709	;# 
  5609   0002C6                     U2ERRIE         equ	710	;# 
  5610   0002C7                     U3RXB           equ	711	;# 
  5611   0002C7                     U3RXBL          equ	711	;# 
  5612   0002C9                     U3TXB           equ	713	;# 
  5613   0002C9                     U3TXBL          equ	713	;# 
  5614   0002CB                     U3P1            equ	715	;# 
  5615   0002CB                     U3P1L           equ	715	;# 
  5616   0002CD                     U3P2            equ	717	;# 
  5617   0002CD                     U3P2L           equ	717	;# 
  5618   0002CF                     U3P3            equ	719	;# 
  5619   0002CF                     U3P3L           equ	719	;# 
  5620   0002D1                     U3CON0          equ	721	;# 
  5621   0002D2                     U3CON1          equ	722	;# 
  5622   0002D3                     U3CON2          equ	723	;# 
  5623   0002D4                     U3BRG           equ	724	;# 
  5624   0002D4                     U3BRGL          equ	724	;# 
  5625   0002D5                     U3BRGH          equ	725	;# 
  5626   0002D6                     U3FIFO          equ	726	;# 
  5627   0002D7                     U3UIR           equ	727	;# 
  5628   0002D8                     U3ERRIR         equ	728	;# 
  5629   0002D9                     U3ERRIE         equ	729	;# 
  5630   0002DA                     U4RXB           equ	730	;# 
  5631   0002DA                     U4RXBL          equ	730	;# 
  5632   0002DC                     U4TXB           equ	732	;# 
  5633   0002DC                     U4TXBL          equ	732	;# 
  5634   0002DE                     U4P1            equ	734	;# 
  5635   0002DE                     U4P1L           equ	734	;# 
  5636   0002E0                     U4P2            equ	736	;# 
  5637   0002E0                     U4P2L           equ	736	;# 
  5638   0002E2                     U4P3            equ	738	;# 
  5639   0002E2                     U4P3L           equ	738	;# 
  5640   0002E4                     U4CON0          equ	740	;# 
  5641   0002E5                     U4CON1          equ	741	;# 
  5642   0002E6                     U4CON2          equ	742	;# 
  5643   0002E7                     U4BRG           equ	743	;# 
  5644   0002E7                     U4BRGL          equ	743	;# 
  5645   0002E8                     U4BRGH          equ	744	;# 
  5646   0002E9                     U4FIFO          equ	745	;# 
  5647   0002EA                     U4UIR           equ	746	;# 
  5648   0002EB                     U4ERRIR         equ	747	;# 
  5649   0002EC                     U4ERRIE         equ	748	;# 
  5650   0002ED                     U5RXB           equ	749	;# 
  5651   0002ED                     U5RXBL          equ	749	;# 
  5652   0002EF                     U5TXB           equ	751	;# 
  5653   0002EF                     U5TXBL          equ	751	;# 
  5654   0002F1                     U5P1            equ	753	;# 
  5655   0002F1                     U5P1L           equ	753	;# 
  5656   0002F3                     U5P2            equ	755	;# 
  5657   0002F3                     U5P2L           equ	755	;# 
  5658   0002F5                     U5P3            equ	757	;# 
  5659   0002F5                     U5P3L           equ	757	;# 
  5660   0002F7                     U5CON0          equ	759	;# 
  5661   0002F8                     U5CON1          equ	760	;# 
  5662   0002F9                     U5CON2          equ	761	;# 
  5663   0002FA                     U5BRG           equ	762	;# 
  5664   0002FA                     U5BRGL          equ	762	;# 
  5665   0002FB                     U5BRGH          equ	763	;# 
  5666   0002FC                     U5FIFO          equ	764	;# 
  5667   0002FD                     U5UIR           equ	765	;# 
  5668   0002FE                     U5ERRIR         equ	766	;# 
  5669   0002FF                     U5ERRIE         equ	767	;# 
  5670   000300                     SMT1TMR         equ	768	;# 
  5671   000300                     SMT1TMRL        equ	768	;# 
  5672   000301                     SMT1TMRH        equ	769	;# 
  5673   000302                     SMT1TMRU        equ	770	;# 
  5674   000303                     SMT1CPR         equ	771	;# 
  5675   000303                     SMT1CPRL        equ	771	;# 
  5676   000304                     SMT1CPRH        equ	772	;# 
  5677   000305                     SMT1CPRU        equ	773	;# 
  5678   000306                     SMT1CPW         equ	774	;# 
  5679   000306                     SMT1CPWL        equ	774	;# 
  5680   000307                     SMT1CPWH        equ	775	;# 
  5681   000308                     SMT1CPWU        equ	776	;# 
  5682   000309                     SMT1PR          equ	777	;# 
  5683   000309                     SMT1PRL         equ	777	;# 
  5684   00030A                     SMT1PRH         equ	778	;# 
  5685   00030B                     SMT1PRU         equ	779	;# 
  5686   00030C                     SMT1CON0        equ	780	;# 
  5687   00030D                     SMT1CON1        equ	781	;# 
  5688   00030E                     SMT1STAT        equ	782	;# 
  5689   00030F                     SMT1CLK         equ	783	;# 
  5690   000310                     SMT1SIG         equ	784	;# 
  5691   000311                     SMT1WIN         equ	785	;# 
  5692   000318                     TMR0L           equ	792	;# 
  5693   000318                     TMR0            equ	792	;# 
  5694   000319                     TMR0H           equ	793	;# 
  5695   000319                     PR0             equ	793	;# 
  5696   00031A                     T0CON0          equ	794	;# 
  5697   00031B                     T0CON1          equ	795	;# 
  5698   00031C                     TMR1            equ	796	;# 
  5699   00031C                     TMR1L           equ	796	;# 
  5700   00031D                     TMR1H           equ	797	;# 
  5701   00031E                     T1CON           equ	798	;# 
  5702   00031E                     TMR1CON         equ	798	;# 
  5703   00031F                     T1GCON          equ	799	;# 
  5704   00031F                     TMR1GCON        equ	799	;# 
  5705   000320                     T1GATE          equ	800	;# 
  5706   000320                     TMR1GATE        equ	800	;# 
  5707   000321                     T1CLK           equ	801	;# 
  5708   000321                     TMR1CLK         equ	801	;# 
  5709   000321                     PR1             equ	801	;# 
  5710   000322                     T2TMR           equ	802	;# 
  5711   000322                     TMR2            equ	802	;# 
  5712   000323                     T2PR            equ	803	;# 
  5713   000323                     PR2             equ	803	;# 
  5714   000324                     T2CON           equ	804	;# 
  5715   000325                     T2HLT           equ	805	;# 
  5716   000326                     T2CLKCON        equ	806	;# 
  5717   000326                     T2CLK           equ	806	;# 
  5718   000327                     T2RST           equ	807	;# 
  5719   000328                     TMR3            equ	808	;# 
  5720   000328                     TMR3L           equ	808	;# 
  5721   000329                     TMR3H           equ	809	;# 
  5722   00032A                     T3CON           equ	810	;# 
  5723   00032A                     TMR3CON         equ	810	;# 
  5724   00032B                     T3GCON          equ	811	;# 
  5725   00032B                     TMR3GCON        equ	811	;# 
  5726   00032C                     T3GATE          equ	812	;# 
  5727   00032C                     TMR3GATE        equ	812	;# 
  5728   00032D                     T3CLK           equ	813	;# 
  5729   00032D                     TMR3CLK         equ	813	;# 
  5730   00032D                     PR3             equ	813	;# 
  5731   00032E                     T4TMR           equ	814	;# 
  5732   00032E                     TMR4            equ	814	;# 
  5733   00032F                     T4PR            equ	815	;# 
  5734   00032F                     PR4             equ	815	;# 
  5735   000330                     T4CON           equ	816	;# 
  5736   000331                     T4HLT           equ	817	;# 
  5737   000332                     T4CLKCON        equ	818	;# 
  5738   000332                     T4CLK           equ	818	;# 
  5739   000333                     T4RST           equ	819	;# 
  5740   000334                     TMR5            equ	820	;# 
  5741   000334                     TMR5L           equ	820	;# 
  5742   000335                     TMR5H           equ	821	;# 
  5743   000336                     T5CON           equ	822	;# 
  5744   000336                     TMR5CON         equ	822	;# 
  5745   000337                     T5GCON          equ	823	;# 
  5746   000337                     TMR5GCON        equ	823	;# 
  5747   000338                     T5GATE          equ	824	;# 
  5748   000338                     TMR5GATE        equ	824	;# 
  5749   000339                     T5CLK           equ	825	;# 
  5750   000339                     TMR5CLK         equ	825	;# 
  5751   000339                     PR5             equ	825	;# 
  5752   00033A                     T6TMR           equ	826	;# 
  5753   00033A                     TMR6            equ	826	;# 
  5754   00033B                     T6PR            equ	827	;# 
  5755   00033B                     PR6             equ	827	;# 
  5756   00033C                     T6CON           equ	828	;# 
  5757   00033D                     T6HLT           equ	829	;# 
  5758   00033E                     T6CLKCON        equ	830	;# 
  5759   00033E                     T6CLK           equ	830	;# 
  5760   00033F                     T6RST           equ	831	;# 
  5761   000340                     CCPR1           equ	832	;# 
  5762   000340                     CCPR1L          equ	832	;# 
  5763   000341                     CCPR1H          equ	833	;# 
  5764   000342                     CCP1CON         equ	834	;# 
  5765   000343                     CCP1CAP         equ	835	;# 
  5766   000344                     CCPR2           equ	836	;# 
  5767   000344                     CCPR2L          equ	836	;# 
  5768   000345                     CCPR2H          equ	837	;# 
  5769   000346                     CCP2CON         equ	838	;# 
  5770   000347                     CCP2CAP         equ	839	;# 
  5771   000348                     CCPR3           equ	840	;# 
  5772   000348                     CCPR3L          equ	840	;# 
  5773   000349                     CCPR3H          equ	841	;# 
  5774   00034A                     CCP3CON         equ	842	;# 
  5775   00034B                     CCP3CAP         equ	843	;# 
  5776   00034C                     CCPTMRS0        equ	844	;# 
  5777   00034F                     CRCDATA         equ	847	;# 
  5778   00034F                     CRCDATL         equ	847	;# 
  5779   000350                     CRCDATH         equ	848	;# 
  5780   000351                     CRCACC          equ	849	;# 
  5781   000351                     CRCACCL         equ	849	;# 
  5782   000352                     CRCACCH         equ	850	;# 
  5783   000353                     CRCSHFT         equ	851	;# 
  5784   000353                     CRCSHIFTL       equ	851	;# 
  5785   000354                     CRCSHIFTH       equ	852	;# 
  5786   000355                     CRCXOR          equ	853	;# 
  5787   000355                     CRCXORL         equ	853	;# 
  5788   000356                     CRCXORH         equ	854	;# 
  5789   000357                     CRCCON0         equ	855	;# 
  5790   000358                     CRCCON1         equ	856	;# 
  5791   00035A                     SCANLADR        equ	858	;# 
  5792   00035A                     SCANLADRL       equ	858	;# 
  5793   00035B                     SCANLADRH       equ	859	;# 
  5794   00035C                     SCANLADRU       equ	860	;# 
  5795   00035D                     SCANHADR        equ	861	;# 
  5796   00035D                     SCANHADRL       equ	861	;# 
  5797   00035E                     SCANHADRH       equ	862	;# 
  5798   00035F                     SCANHADRU       equ	863	;# 
  5799   000360                     SCANCON0        equ	864	;# 
  5800   000361                     SCANTRIG        equ	865	;# 
  5801   000362                     IPR0            equ	866	;# 
  5802   000363                     IPR1            equ	867	;# 
  5803   000364                     IPR2            equ	868	;# 
  5804   000365                     IPR3            equ	869	;# 
  5805   000366                     IPR4            equ	870	;# 
  5806   000367                     IPR5            equ	871	;# 
  5807   000368                     IPR6            equ	872	;# 
  5808   000369                     IPR7            equ	873	;# 
  5809   00036A                     IPR8            equ	874	;# 
  5810   00036B                     IPR9            equ	875	;# 
  5811   00036C                     IPR10           equ	876	;# 
  5812   00036D                     IPR11           equ	877	;# 
  5813   00036E                     IPR12           equ	878	;# 
  5814   00036F                     IPR13           equ	879	;# 
  5815   000370                     IPR14           equ	880	;# 
  5816   000371                     IPR15           equ	881	;# 
  5817   000373                     STATUS_CSHAD    equ	883	;# 
  5818   000374                     WREG_CSHAD      equ	884	;# 
  5819   000375                     BSR_CSHAD       equ	885	;# 
  5820   000376                     SHADCON         equ	886	;# 
  5821   000377                     STATUS_SHAD     equ	887	;# 
  5822   000378                     WREG_SHAD       equ	888	;# 
  5823   000379                     BSR_SHAD        equ	889	;# 
  5824   00037A                     PCLATH_SHAD     equ	890	;# 
  5825   00037B                     PCLATU_SHAD     equ	891	;# 
  5826   00037C                     FSR0SH          equ	892	;# 
  5827   00037C                     FSR0L_SHAD      equ	892	;# 
  5828   00037D                     FSR0H_SHAD      equ	893	;# 
  5829   00037E                     FSR1SH          equ	894	;# 
  5830   00037E                     FSR1L_SHAD      equ	894	;# 
  5831   00037F                     FSR1H_SHAD      equ	895	;# 
  5832   000380                     FSR2SH          equ	896	;# 
  5833   000380                     FSR2L_SHAD      equ	896	;# 
  5834   000381                     FSR2H_SHAD      equ	897	;# 
  5835   000382                     PRODSH          equ	898	;# 
  5836   000382                     PRODL_SHAD      equ	898	;# 
  5837   000383                     PRODH_SHAD      equ	899	;# 
  5838   0003BC                     CWG1CLK         equ	956	;# 
  5839   0003BC                     CWG1CLKCON      equ	956	;# 
  5840   0003BD                     CWG1ISM         equ	957	;# 
  5841   0003BD                     CWG1DAT         equ	957	;# 
  5842   0003BE                     CWG1DBR         equ	958	;# 
  5843   0003BF                     CWG1DBF         equ	959	;# 
  5844   0003C0                     CWG1CON0        equ	960	;# 
  5845   0003C1                     CWG1CON1        equ	961	;# 
  5846   0003C2                     CWG1AS0         equ	962	;# 
  5847   0003C3                     CWG1AS1         equ	963	;# 
  5848   0003C4                     CWG1STR         equ	964	;# 
  5849   0003C5                     CWG2CLK         equ	965	;# 
  5850   0003C5                     CWG2CLKCON      equ	965	;# 
  5851   0003C6                     CWG2ISM         equ	966	;# 
  5852   0003C6                     CWG2DAT         equ	966	;# 
  5853   0003C7                     CWG2DBR         equ	967	;# 
  5854   0003C8                     CWG2DBF         equ	968	;# 
  5855   0003C9                     CWG2CON0        equ	969	;# 
  5856   0003CA                     CWG2CON1        equ	970	;# 
  5857   0003CB                     CWG2AS0         equ	971	;# 
  5858   0003CC                     CWG2AS1         equ	972	;# 
  5859   0003CD                     CWG2STR         equ	973	;# 
  5860   0003CE                     CWG3CLK         equ	974	;# 
  5861   0003CE                     CWG3CLKCON      equ	974	;# 
  5862   0003CF                     CWG3ISM         equ	975	;# 
  5863   0003CF                     CWG3DAT         equ	975	;# 
  5864   0003D0                     CWG3DBR         equ	976	;# 
  5865   0003D1                     CWG3DBF         equ	977	;# 
  5866   0003D2                     CWG3CON0        equ	978	;# 
  5867   0003D3                     CWG3CON1        equ	979	;# 
  5868   0003D4                     CWG3AS0         equ	980	;# 
  5869   0003D5                     CWG3AS1         equ	981	;# 
  5870   0003D6                     CWG3STR         equ	982	;# 
  5871   0003D7                     FVRCON          equ	983	;# 
  5872   0003D8                     ADCPCON         equ	984	;# 
  5873   0003D8                     ADCP            equ	984	;# 
  5874   0003D9                     ADLTH           equ	985	;# 
  5875   0003D9                     ADLTHL          equ	985	;# 
  5876   0003DA                     ADLTHH          equ	986	;# 
  5877   0003DB                     ADUTH           equ	987	;# 
  5878   0003DB                     ADUTHL          equ	987	;# 
  5879   0003DC                     ADUTHH          equ	988	;# 
  5880   0003DD                     ADERR           equ	989	;# 
  5881   0003DD                     ADERRL          equ	989	;# 
  5882   0003DE                     ADERRH          equ	990	;# 
  5883   0003DF                     ADSTPT          equ	991	;# 
  5884   0003DF                     ADSTPTL         equ	991	;# 
  5885   0003E0                     ADSTPTH         equ	992	;# 
  5886   0003E1                     ADFLTR          equ	993	;# 
  5887   0003E1                     ADFLTRL         equ	993	;# 
  5888   0003E2                     ADFLTRH         equ	994	;# 
  5889   0003E3                     ADACC           equ	995	;# 
  5890   0003E3                     ADACCL          equ	995	;# 
  5891   0003E4                     ADACCH          equ	996	;# 
  5892   0003E5                     ADACCU          equ	997	;# 
  5893   0003E6                     ADCNT           equ	998	;# 
  5894   0003E7                     ADRPT           equ	999	;# 
  5895   0003E8                     ADPREV          equ	1000	;# 
  5896   0003E8                     ADPREVL         equ	1000	;# 
  5897   0003E9                     ADPREVH         equ	1001	;# 
  5898   0003EA                     ADRES           equ	1002	;# 
  5899   0003EA                     ADRESL          equ	1002	;# 
  5900   0003EB                     ADRESH          equ	1003	;# 
  5901   0003EC                     ADPCH           equ	1004	;# 
  5902   0003EE                     ADACQ           equ	1006	;# 
  5903   0003EE                     ADACQL          equ	1006	;# 
  5904   0003EF                     ADACQH          equ	1007	;# 
  5905   0003F0                     ADCAP           equ	1008	;# 
  5906   0003F1                     ADPRE           equ	1009	;# 
  5907   0003F1                     ADPREL          equ	1009	;# 
  5908   0003F2                     ADPREH          equ	1010	;# 
  5909   0003F3                     ADCON0          equ	1011	;# 
  5910   0003F4                     ADCON1          equ	1012	;# 
  5911   0003F5                     ADCON2          equ	1013	;# 
  5912   0003F6                     ADCON3          equ	1014	;# 
  5913   0003F7                     ADSTAT          equ	1015	;# 
  5914   0003F8                     ADREF           equ	1016	;# 
  5915   0003F9                     ADACT           equ	1017	;# 
  5916   0003FA                     ADCLK           equ	1018	;# 
  5917   000400                     ANSELA          equ	1024	;# 
  5918   000401                     WPUA            equ	1025	;# 
  5919   000402                     ODCONA          equ	1026	;# 
  5920   000403                     SLRCONA         equ	1027	;# 
  5921   000404                     INLVLA          equ	1028	;# 
  5922   000405                     IOCAP           equ	1029	;# 
  5923   000406                     IOCAN           equ	1030	;# 
  5924   000407                     IOCAF           equ	1031	;# 
  5925   000408                     ANSELB          equ	1032	;# 
  5926   000409                     WPUB            equ	1033	;# 
  5927   00040A                     ODCONB          equ	1034	;# 
  5928   00040B                     SLRCONB         equ	1035	;# 
  5929   00040C                     INLVLB          equ	1036	;# 
  5930   00040D                     IOCBP           equ	1037	;# 
  5931   00040E                     IOCBN           equ	1038	;# 
  5932   00040F                     IOCBF           equ	1039	;# 
  5933   000410                     ANSELC          equ	1040	;# 
  5934   000411                     WPUC            equ	1041	;# 
  5935   000412                     ODCONC          equ	1042	;# 
  5936   000413                     SLRCONC         equ	1043	;# 
  5937   000414                     INLVLC          equ	1044	;# 
  5938   000415                     IOCCP           equ	1045	;# 
  5939   000416                     IOCCN           equ	1046	;# 
  5940   000417                     IOCCF           equ	1047	;# 
  5941   000418                     ANSELD          equ	1048	;# 
  5942   000419                     WPUD            equ	1049	;# 
  5943   00041A                     ODCOND          equ	1050	;# 
  5944   00041B                     SLRCOND         equ	1051	;# 
  5945   00041C                     INLVLD          equ	1052	;# 
  5946   000420                     ANSELE          equ	1056	;# 
  5947   000421                     WPUE            equ	1057	;# 
  5948   000422                     ODCONE          equ	1058	;# 
  5949   000423                     SLRCONE         equ	1059	;# 
  5950   000424                     INLVLE          equ	1060	;# 
  5951   000425                     IOCEP           equ	1061	;# 
  5952   000426                     IOCEN           equ	1062	;# 
  5953   000427                     IOCEF           equ	1063	;# 
  5954   000428                     ANSELF          equ	1064	;# 
  5955   000429                     WPUF            equ	1065	;# 
  5956   00042A                     ODCONF          equ	1066	;# 
  5957   00042B                     SLRCONF         equ	1067	;# 
  5958   00042C                     INLVLF          equ	1068	;# 
  5959   000440                     NCO1ACC         equ	1088	;# 
  5960   000440                     NCO1ACCL        equ	1088	;# 
  5961   000441                     NCO1ACCH        equ	1089	;# 
  5962   000442                     NCO1ACCU        equ	1090	;# 
  5963   000443                     NCO1INC         equ	1091	;# 
  5964   000443                     NCO1INCL        equ	1091	;# 
  5965   000444                     NCO1INCH        equ	1092	;# 
  5966   000445                     NCO1INCU        equ	1093	;# 
  5967   000446                     NCO1CON         equ	1094	;# 
  5968   000447                     NCO1CLK         equ	1095	;# 
  5969   000448                     NCO2ACC         equ	1096	;# 
  5970   000448                     NCO2ACCL        equ	1096	;# 
  5971   000449                     NCO2ACCH        equ	1097	;# 
  5972   00044A                     NCO2ACCU        equ	1098	;# 
  5973   00044B                     NCO2INC         equ	1099	;# 
  5974   00044B                     NCO2INCL        equ	1099	;# 
  5975   00044C                     NCO2INCH        equ	1100	;# 
  5976   00044D                     NCO2INCU        equ	1101	;# 
  5977   00044E                     NCO2CON         equ	1102	;# 
  5978   00044F                     NCO2CLK         equ	1103	;# 
  5979   000450                     NCO3ACC         equ	1104	;# 
  5980   000450                     NCO3ACCL        equ	1104	;# 
  5981   000451                     NCO3ACCH        equ	1105	;# 
  5982   000452                     NCO3ACCU        equ	1106	;# 
  5983   000453                     NCO3INC         equ	1107	;# 
  5984   000453                     NCO3INCL        equ	1107	;# 
  5985   000454                     NCO3INCH        equ	1108	;# 
  5986   000455                     NCO3INCU        equ	1109	;# 
  5987   000456                     NCO3CON         equ	1110	;# 
  5988   000457                     NCO3CLK         equ	1111	;# 
  5989   000459                     IVTLOCK         equ	1113	;# 
  5990   00045A                     IVTAD           equ	1114	;# 
  5991   00045A                     IVTADL          equ	1114	;# 
  5992   00045B                     IVTADH          equ	1115	;# 
  5993   00045C                     IVTADU          equ	1116	;# 
  5994   00045D                     IVTBASE         equ	1117	;# 
  5995   00045D                     IVTBASEL        equ	1117	;# 
  5996   00045E                     IVTBASEH        equ	1118	;# 
  5997   00045F                     IVTBASEU        equ	1119	;# 
  5998   000460                     PWM1ERS         equ	1120	;# 
  5999   000461                     PWM1CLK         equ	1121	;# 
  6000   000462                     PWM1LDS         equ	1122	;# 
  6001   000463                     PWM1PR          equ	1123	;# 
  6002   000463                     PWM1PRL         equ	1123	;# 
  6003   000464                     PWM1PRH         equ	1124	;# 
  6004   000465                     PWM1CPRE        equ	1125	;# 
  6005   000466                     PWM1PIPOS       equ	1126	;# 
  6006   000467                     PWM1GIR         equ	1127	;# 
  6007   000468                     PWM1GIE         equ	1128	;# 
  6008   000469                     PWM1CON         equ	1129	;# 
  6009   00046A                     PWM1S1CFG       equ	1130	;# 
  6010   00046B                     PWM1S1P1        equ	1131	;# 
  6011   00046B                     PWM1S1P1L       equ	1131	;# 
  6012   00046C                     PWM1S1P1H       equ	1132	;# 
  6013   00046D                     PWM1S1P2        equ	1133	;# 
  6014   00046D                     PWM1S1P2L       equ	1133	;# 
  6015   00046E                     PWM1S1P2H       equ	1134	;# 
  6016   00046F                     PWM2ERS         equ	1135	;# 
  6017   000470                     PWM2CLK         equ	1136	;# 
  6018   000471                     PWM2LDS         equ	1137	;# 
  6019   000472                     PWM2PR          equ	1138	;# 
  6020   000472                     PWM2PRL         equ	1138	;# 
  6021   000473                     PWM2PRH         equ	1139	;# 
  6022   000474                     PWM2CPRE        equ	1140	;# 
  6023   000475                     PWM2PIPOS       equ	1141	;# 
  6024   000476                     PWM2GIR         equ	1142	;# 
  6025   000477                     PWM2GIE         equ	1143	;# 
  6026   000478                     PWM2CON         equ	1144	;# 
  6027   000479                     PWM2S1CFG       equ	1145	;# 
  6028   00047A                     PWM2S1P1        equ	1146	;# 
  6029   00047A                     PWM2S1P1L       equ	1146	;# 
  6030   00047B                     PWM2S1P1H       equ	1147	;# 
  6031   00047C                     PWM2S1P2        equ	1148	;# 
  6032   00047C                     PWM2S1P2L       equ	1148	;# 
  6033   00047D                     PWM2S1P2H       equ	1149	;# 
  6034   00047E                     PWM3ERS         equ	1150	;# 
  6035   00047F                     PWM3CLK         equ	1151	;# 
  6036   000480                     PWM3LDS         equ	1152	;# 
  6037   000481                     PWM3PR          equ	1153	;# 
  6038   000481                     PWM3PRL         equ	1153	;# 
  6039   000482                     PWM3PRH         equ	1154	;# 
  6040   000483                     PWM3CPRE        equ	1155	;# 
  6041   000484                     PWM3PIPOS       equ	1156	;# 
  6042   000485                     PWM3GIR         equ	1157	;# 
  6043   000486                     PWM3GIE         equ	1158	;# 
  6044   000487                     PWM3CON         equ	1159	;# 
  6045   000488                     PWM3S1CFG       equ	1160	;# 
  6046   000489                     PWM3S1P1        equ	1161	;# 
  6047   000489                     PWM3S1P1L       equ	1161	;# 
  6048   00048A                     PWM3S1P1H       equ	1162	;# 
  6049   00048B                     PWM3S1P2        equ	1163	;# 
  6050   00048B                     PWM3S1P2L       equ	1163	;# 
  6051   00048C                     PWM3S1P2H       equ	1164	;# 
  6052   00049C                     PWMLOAD         equ	1180	;# 
  6053   00049D                     PWMEN           equ	1181	;# 
  6054   00049E                     PIE0            equ	1182	;# 
  6055   00049F                     PIE1            equ	1183	;# 
  6056   0004A0                     PIE2            equ	1184	;# 
  6057   0004A1                     PIE3            equ	1185	;# 
  6058   0004A2                     PIE4            equ	1186	;# 
  6059   0004A3                     PIE5            equ	1187	;# 
  6060   0004A4                     PIE6            equ	1188	;# 
  6061   0004A5                     PIE7            equ	1189	;# 
  6062   0004A6                     PIE8            equ	1190	;# 
  6063   0004A7                     PIE9            equ	1191	;# 
  6064   0004A8                     PIE10           equ	1192	;# 
  6065   0004A9                     PIE11           equ	1193	;# 
  6066   0004AA                     PIE12           equ	1194	;# 
  6067   0004AB                     PIE13           equ	1195	;# 
  6068   0004AC                     PIE14           equ	1196	;# 
  6069   0004AD                     PIE15           equ	1197	;# 
  6070   0004AE                     PIR0            equ	1198	;# 
  6071   0004AF                     PIR1            equ	1199	;# 
  6072   0004B0                     PIR2            equ	1200	;# 
  6073   0004B1                     PIR3            equ	1201	;# 
  6074   0004B2                     PIR4            equ	1202	;# 
  6075   0004B3                     PIR5            equ	1203	;# 
  6076   0004B4                     PIR6            equ	1204	;# 
  6077   0004B5                     PIR7            equ	1205	;# 
  6078   0004B6                     PIR8            equ	1206	;# 
  6079   0004B7                     PIR9            equ	1207	;# 
  6080   0004B8                     PIR10           equ	1208	;# 
  6081   0004B9                     PIR11           equ	1209	;# 
  6082   0004BA                     PIR12           equ	1210	;# 
  6083   0004BB                     PIR13           equ	1211	;# 
  6084   0004BC                     PIR14           equ	1212	;# 
  6085   0004BD                     PIR15           equ	1213	;# 
  6086   0004BE                     LATA            equ	1214	;# 
  6087   0004BF                     LATB            equ	1215	;# 
  6088   0004C0                     LATC            equ	1216	;# 
  6089   0004C1                     LATD            equ	1217	;# 
  6090   0004C2                     LATE            equ	1218	;# 
  6091   0004C3                     LATF            equ	1219	;# 
  6092   0004C6                     TRISA           equ	1222	;# 
  6093   0004C7                     TRISB           equ	1223	;# 
  6094   0004C8                     TRISC           equ	1224	;# 
  6095   0004C9                     TRISD           equ	1225	;# 
  6096   0004CA                     TRISE           equ	1226	;# 
  6097   0004CB                     TRISF           equ	1227	;# 
  6098   0004CE                     PORTA           equ	1230	;# 
  6099   0004CF                     PORTB           equ	1231	;# 
  6100   0004D0                     PORTC           equ	1232	;# 
  6101   0004D1                     PORTD           equ	1233	;# 
  6102   0004D2                     PORTE           equ	1234	;# 
  6103   0004D3                     PORTF           equ	1235	;# 
  6104   0004D6                     INTCON0         equ	1238	;# 
  6105   0004D7                     INTCON1         equ	1239	;# 
  6106   0004D8                     STATUS          equ	1240	;# 
  6107   0004D9                     FSR2            equ	1241	;# 
  6108   0004D9                     FSR2L           equ	1241	;# 
  6109   0004DA                     FSR2H           equ	1242	;# 
  6110   0004DB                     PLUSW2          equ	1243	;# 
  6111   0004DC                     PREINC2         equ	1244	;# 
  6112   0004DD                     POSTDEC2        equ	1245	;# 
  6113   0004DE                     POSTINC2        equ	1246	;# 
  6114   0004DF                     INDF2           equ	1247	;# 
  6115   0004E0                     BSR             equ	1248	;# 
  6116   0004E1                     FSR1            equ	1249	;# 
  6117   0004E1                     FSR1L           equ	1249	;# 
  6118   0004E2                     FSR1H           equ	1250	;# 
  6119   0004E3                     PLUSW1          equ	1251	;# 
  6120   0004E4                     PREINC1         equ	1252	;# 
  6121   0004E5                     POSTDEC1        equ	1253	;# 
  6122   0004E6                     POSTINC1        equ	1254	;# 
  6123   0004E7                     INDF1           equ	1255	;# 
  6124   0004E8                     WREG            equ	1256	;# 
  6125   0004E9                     FSR0            equ	1257	;# 
  6126   0004E9                     FSR0L           equ	1257	;# 
  6127   0004EA                     FSR0H           equ	1258	;# 
  6128   0004EB                     PLUSW0          equ	1259	;# 
  6129   0004EC                     PREINC0         equ	1260	;# 
  6130   0004ED                     POSTDEC0        equ	1261	;# 
  6131   0004EE                     POSTINC0        equ	1262	;# 
  6132   0004EF                     INDF0           equ	1263	;# 
  6133   0004F0                     PCON0           equ	1264	;# 
  6134   0004F1                     PCON1           equ	1265	;# 
  6135   0004F2                     CPUDOZE         equ	1266	;# 
  6136   0004F3                     PROD            equ	1267	;# 
  6137   0004F3                     PRODL           equ	1267	;# 
  6138   0004F4                     PRODH           equ	1268	;# 
  6139   0004F5                     TABLAT          equ	1269	;# 
  6140   0004F6                     TBLPTR          equ	1270	;# 
  6141   0004F6                     TBLPTRL         equ	1270	;# 
  6142   0004F7                     TBLPTRH         equ	1271	;# 
  6143   0004F8                     TBLPTRU         equ	1272	;# 
  6144   0004F9                     PCLAT           equ	1273	;# 
  6145   0004F9                     PCL             equ	1273	;# 
  6146   0004FA                     PCLATH          equ	1274	;# 
  6147   0004FB                     PCLATU          equ	1275	;# 
  6148   0004FC                     STKPTR          equ	1276	;# 
  6149   0004FD                     TOS             equ	1277	;# 
  6150   0004FD                     TOSL            equ	1277	;# 
  6151   0004FE                     TOSH            equ	1278	;# 
  6152   0004FF                     TOSU            equ	1279	;# 
  6153   000039                     CLKRCON         equ	57	;# 
  6154   00003A                     CLKRCLK         equ	58	;# 
  6155   000040                     NVMCON0         equ	64	;# 
  6156   000041                     NVMCON1         equ	65	;# 
  6157   000042                     NVMLOCK         equ	66	;# 
  6158   000043                     NVMADR          equ	67	;# 
  6159   000043                     NVMADRL         equ	67	;# 
  6160   000044                     NVMADRH         equ	68	;# 
  6161   000045                     NVMADRU         equ	69	;# 
  6162   000046                     NVMDAT          equ	70	;# 
  6163   000046                     NVMDATL         equ	70	;# 
  6164   000047                     NVMDATH         equ	71	;# 
  6165   000048                     VREGCON         equ	72	;# 
  6166   000049                     BORCON          equ	73	;# 
  6167   00004A                     HLVDCON0        equ	74	;# 
  6168   00004B                     HLVDCON1        equ	75	;# 
  6169   00004C                     ZCDCON          equ	76	;# 
  6170   000060                     PMD0            equ	96	;# 
  6171   000061                     PMD1            equ	97	;# 
  6172   000063                     PMD3            equ	99	;# 
  6173   000064                     PMD4            equ	100	;# 
  6174   000065                     PMD5            equ	101	;# 
  6175   000066                     PMD6            equ	102	;# 
  6176   000067                     PMD7            equ	103	;# 
  6177   000068                     PMD8            equ	104	;# 
  6178   00006A                     MD1CON0         equ	106	;# 
  6179   00006B                     MD1CON1         equ	107	;# 
  6180   00006C                     MD1SRC          equ	108	;# 
  6181   00006D                     MD1CARL         equ	109	;# 
  6182   00006E                     MD1CARH         equ	110	;# 
  6183   00006F                     CMOUT           equ	111	;# 
  6184   000070                     CM1CON0         equ	112	;# 
  6185   000071                     CM1CON1         equ	113	;# 
  6186   000072                     CM1NCH          equ	114	;# 
  6187   000073                     CM1PCH          equ	115	;# 
  6188   000074                     CM2CON0         equ	116	;# 
  6189   000075                     CM2CON1         equ	117	;# 
  6190   000076                     CM2NCH          equ	118	;# 
  6191   000077                     CM2PCH          equ	119	;# 
  6192   000078                     WDTCON0         equ	120	;# 
  6193   000079                     WDTCON1         equ	121	;# 
  6194   00007A                     WDTPS           equ	122	;# 
  6195   00007A                     WDTPSL          equ	122	;# 
  6196   00007B                     WDTPSH          equ	123	;# 
  6197   00007C                     WDTTMR          equ	124	;# 
  6198   00007D                     DAC1DAT         equ	125	;# 
  6199   00007D                     DAC1DATL        equ	125	;# 
  6200   00007F                     DAC1CON         equ	127	;# 
  6201   000080                     SPI1RXB         equ	128	;# 
  6202   000081                     SPI1TXB         equ	129	;# 
  6203   000082                     SPI1TCNT        equ	130	;# 
  6204   000082                     SPI1TCNTL       equ	130	;# 
  6205   000083                     SPI1TCNTH       equ	131	;# 
  6206   000084                     SPI1CON0        equ	132	;# 
  6207   000085                     SPI1CON1        equ	133	;# 
  6208   000086                     SPI1CON2        equ	134	;# 
  6209   000087                     SPI1STATUS      equ	135	;# 
  6210   000088                     SPI1TWIDTH      equ	136	;# 
  6211   000089                     SPI1BAUD        equ	137	;# 
  6212   00008A                     SPI1INTF        equ	138	;# 
  6213   00008B                     SPI1INTE        equ	139	;# 
  6214   00008C                     SPI1CLK         equ	140	;# 
  6215   00008D                     SPI2RXB         equ	141	;# 
  6216   00008E                     SPI2TXB         equ	142	;# 
  6217   00008F                     SPI2TCNT        equ	143	;# 
  6218   00008F                     SPI2TCNTL       equ	143	;# 
  6219   000090                     SPI2TCNTH       equ	144	;# 
  6220   000091                     SPI2CON0        equ	145	;# 
  6221   000092                     SPI2CON1        equ	146	;# 
  6222   000093                     SPI2CON2        equ	147	;# 
  6223   000094                     SPI2STATUS      equ	148	;# 
  6224   000095                     SPI2TWIDTH      equ	149	;# 
  6225   000096                     SPI2BAUD        equ	150	;# 
  6226   000097                     SPI2INTF        equ	151	;# 
  6227   000098                     SPI2INTE        equ	152	;# 
  6228   000099                     SPI2CLK         equ	153	;# 
  6229   0000AC                     ACTCON          equ	172	;# 
  6230   0000AD                     OSCCON1         equ	173	;# 
  6231   0000AE                     OSCCON2         equ	174	;# 
  6232   0000AF                     OSCCON3         equ	175	;# 
  6233   0000B0                     OSCTUNE         equ	176	;# 
  6234   0000B1                     OSCFRQ          equ	177	;# 
  6235   0000B1                     OSCFREQ         equ	177	;# 
  6236   0000B2                     OSCSTAT         equ	178	;# 
  6237   0000B2                     OSCSTAT1        equ	178	;# 
  6238   0000B3                     OSCEN           equ	179	;# 
  6239   0000B4                     PRLOCK          equ	180	;# 
  6240   0000B5                     SCANPR          equ	181	;# 
  6241   0000B6                     DMA1PR          equ	182	;# 
  6242   0000B7                     DMA2PR          equ	183	;# 
  6243   0000B8                     DMA3PR          equ	184	;# 
  6244   0000B9                     DMA4PR          equ	185	;# 
  6245   0000BA                     DMA5PR          equ	186	;# 
  6246   0000BB                     DMA6PR          equ	187	;# 
  6247   0000BE                     MAINPR          equ	190	;# 
  6248   0000BF                     ISRPR           equ	191	;# 
  6249   0000D4                     CLCDATA         equ	212	;# 
  6250   0000D5                     CLCSELECT       equ	213	;# 
  6251   0000D6                     CLCnCON         equ	214	;# 
  6252   0000D7                     CLCnPOL         equ	215	;# 
  6253   0000D8                     CLCnSEL0        equ	216	;# 
  6254   0000D9                     CLCnSEL1        equ	217	;# 
  6255   0000DA                     CLCnSEL2        equ	218	;# 
  6256   0000DB                     CLCnSEL3        equ	219	;# 
  6257   0000DC                     CLCnGLS0        equ	220	;# 
  6258   0000DD                     CLCnGLS1        equ	221	;# 
  6259   0000DE                     CLCnGLS2        equ	222	;# 
  6260   0000DF                     CLCnGLS3        equ	223	;# 
  6261   0000E8                     DMASELECT       equ	232	;# 
  6262   0000E9                     DMAnBUF         equ	233	;# 
  6263   0000EA                     DMAnDCNT        equ	234	;# 
  6264   0000EA                     DMAnDCNTL       equ	234	;# 
  6265   0000EB                     DMAnDCNTH       equ	235	;# 
  6266   0000EC                     DMAnDPTR        equ	236	;# 
  6267   0000EC                     DMAnDPTRL       equ	236	;# 
  6268   0000ED                     DMAnDPTRH       equ	237	;# 
  6269   0000EE                     DMAnDSZ         equ	238	;# 
  6270   0000EE                     DMAnDSZL        equ	238	;# 
  6271   0000EF                     DMAnDSZH        equ	239	;# 
  6272   0000F0                     DMAnDSA         equ	240	;# 
  6273   0000F0                     DMAnDSAL        equ	240	;# 
  6274   0000F1                     DMAnDSAH        equ	241	;# 
  6275   0000F2                     DMAnSCNT        equ	242	;# 
  6276   0000F2                     DMAnSCNTL       equ	242	;# 
  6277   0000F3                     DMAnSCNTH       equ	243	;# 
  6278   0000F4                     DMAnSPTR        equ	244	;# 
  6279   0000F4                     DMAnSPTRL       equ	244	;# 
  6280   0000F5                     DMAnSPTRH       equ	245	;# 
  6281   0000F6                     DMAnSPTRU       equ	246	;# 
  6282   0000F7                     DMAnSSZ         equ	247	;# 
  6283   0000F7                     DMAnSSZL        equ	247	;# 
  6284   0000F8                     DMAnSSZH        equ	248	;# 
  6285   0000F9                     DMAnSSA         equ	249	;# 
  6286   0000F9                     DMAnSSAL        equ	249	;# 
  6287   0000FA                     DMAnSSAH        equ	250	;# 
  6288   0000FB                     DMAnSSAU        equ	251	;# 
  6289   0000FC                     DMAnCON0        equ	252	;# 
  6290   0000FD                     DMAnCON1        equ	253	;# 
  6291   0000FE                     DMAnAIRQ        equ	254	;# 
  6292   0000FF                     DMAnSIRQ        equ	255	;# 
  6293   000200                     PPSLOCK         equ	512	;# 
  6294   000201                     RA0PPS          equ	513	;# 
  6295   000202                     RA1PPS          equ	514	;# 
  6296   000203                     RA2PPS          equ	515	;# 
  6297   000204                     RA3PPS          equ	516	;# 
  6298   000205                     RA4PPS          equ	517	;# 
  6299   000206                     RA5PPS          equ	518	;# 
  6300   000207                     RA6PPS          equ	519	;# 
  6301   000208                     RA7PPS          equ	520	;# 
  6302   000209                     RB0PPS          equ	521	;# 
  6303   00020A                     RB1PPS          equ	522	;# 
  6304   00020B                     RB2PPS          equ	523	;# 
  6305   00020C                     RB3PPS          equ	524	;# 
  6306   00020D                     RB4PPS          equ	525	;# 
  6307   00020E                     RB5PPS          equ	526	;# 
  6308   00020F                     RB6PPS          equ	527	;# 
  6309   000210                     RB7PPS          equ	528	;# 
  6310   000211                     RC0PPS          equ	529	;# 
  6311   000212                     RC1PPS          equ	530	;# 
  6312   000213                     RC2PPS          equ	531	;# 
  6313   000214                     RC3PPS          equ	532	;# 
  6314   000215                     RC4PPS          equ	533	;# 
  6315   000216                     RC5PPS          equ	534	;# 
  6316   000217                     RC6PPS          equ	535	;# 
  6317   000218                     RC7PPS          equ	536	;# 
  6318   000219                     RD0PPS          equ	537	;# 
  6319   00021A                     RD1PPS          equ	538	;# 
  6320   00021B                     RD2PPS          equ	539	;# 
  6321   00021C                     RD3PPS          equ	540	;# 
  6322   00021D                     RD4PPS          equ	541	;# 
  6323   00021E                     RD5PPS          equ	542	;# 
  6324   00021F                     RD6PPS          equ	543	;# 
  6325   000220                     RD7PPS          equ	544	;# 
  6326   000221                     RE0PPS          equ	545	;# 
  6327   000222                     RE1PPS          equ	546	;# 
  6328   000223                     RE2PPS          equ	547	;# 
  6329   000229                     RF0PPS          equ	553	;# 
  6330   00022A                     RF1PPS          equ	554	;# 
  6331   00022B                     RF2PPS          equ	555	;# 
  6332   00022C                     RF3PPS          equ	556	;# 
  6333   00022D                     RF4PPS          equ	557	;# 
  6334   00022E                     RF5PPS          equ	558	;# 
  6335   00022F                     RF6PPS          equ	559	;# 
  6336   000230                     RF7PPS          equ	560	;# 
  6337   00023E                     INT0PPS         equ	574	;# 
  6338   00023F                     INT1PPS         equ	575	;# 
  6339   000240                     INT2PPS         equ	576	;# 
  6340   000241                     T0CKIPPS        equ	577	;# 
  6341   000242                     T1CKIPPS        equ	578	;# 
  6342   000243                     T1GPPS          equ	579	;# 
  6343   000244                     T3CKIPPS        equ	580	;# 
  6344   000245                     T3GPPS          equ	581	;# 
  6345   000246                     T5CKIPPS        equ	582	;# 
  6346   000247                     T5GPPS          equ	583	;# 
  6347   000248                     T2INPPS         equ	584	;# 
  6348   000249                     T4INPPS         equ	585	;# 
  6349   00024A                     T6INPPS         equ	586	;# 
  6350   00024F                     CCP1PPS         equ	591	;# 
  6351   000250                     CCP2PPS         equ	592	;# 
  6352   000251                     CCP3PPS         equ	593	;# 
  6353   000253                     PWM1ERSPPS      equ	595	;# 
  6354   000254                     PWM2ERSPPS      equ	596	;# 
  6355   000255                     PWM3ERSPPS      equ	597	;# 
  6356   000257                     PWMIN0PPS       equ	599	;# 
  6357   000258                     PWMIN1PPS       equ	600	;# 
  6358   000259                     SMT1WINPPS      equ	601	;# 
  6359   00025A                     SMT1SIGPPS      equ	602	;# 
  6360   00025B                     CWG1PPS         equ	603	;# 
  6361   00025B                     CWG1INPPS       equ	603	;# 
  6362   00025C                     CWG2PPS         equ	604	;# 
  6363   00025C                     CWG2INPPS       equ	604	;# 
  6364   00025D                     CWG3PPS         equ	605	;# 
  6365   00025D                     CWG3INPPS       equ	605	;# 
  6366   00025E                     MD1CARLPPS      equ	606	;# 
  6367   00025E                     MDCARLPPS       equ	606	;# 
  6368   00025F                     MD1CARHPPS      equ	607	;# 
  6369   00025F                     MDCARHPPS       equ	607	;# 
  6370   000260                     MD1SRCPPS       equ	608	;# 
  6371   000260                     MDSRCPPS        equ	608	;# 
  6372   000261                     CLCIN0PPS       equ	609	;# 
  6373   000262                     CLCIN1PPS       equ	610	;# 
  6374   000263                     CLCIN2PPS       equ	611	;# 
  6375   000264                     CLCIN3PPS       equ	612	;# 
  6376   000265                     CLCIN4PPS       equ	613	;# 
  6377   000266                     CLCIN5PPS       equ	614	;# 
  6378   000267                     CLCIN6PPS       equ	615	;# 
  6379   000268                     CLCIN7PPS       equ	616	;# 
  6380   000269                     ADACTPPS        equ	617	;# 
  6381   00026A                     SPI1SCKPPS      equ	618	;# 
  6382   00026B                     SPI1SDIPPS      equ	619	;# 
  6383   00026C                     SPI1SSPPS       equ	620	;# 
  6384   00026D                     SPI2SCKPPS      equ	621	;# 
  6385   00026E                     SPI2SDIPPS      equ	622	;# 
  6386   00026F                     SPI2SSPPS       equ	623	;# 
  6387   000270                     I2C1SDAPPS      equ	624	;# 
  6388   000271                     I2C1SCLPPS      equ	625	;# 
  6389   000272                     U1RXPPS         equ	626	;# 
  6390   000273                     U1CTSPPS        equ	627	;# 
  6391   000274                     U2RXPPS         equ	628	;# 
  6392   000275                     U2CTSPPS        equ	629	;# 
  6393   000276                     U3RXPPS         equ	630	;# 
  6394   000277                     U3CTSPPS        equ	631	;# 
  6395   000278                     U4RXPPS         equ	632	;# 
  6396   000279                     U4CTSPPS        equ	633	;# 
  6397   00027A                     U5RXPPS         equ	634	;# 
  6398   00027B                     U5CTSPPS        equ	635	;# 
  6399   000286                     RC4I2C          equ	646	;# 
  6400   000287                     RC3I2C          equ	647	;# 
  6401   000288                     RB2I2C          equ	648	;# 
  6402   000289                     RB1I2C          equ	649	;# 
  6403   00028B                     I2C1RXB         equ	651	;# 
  6404   00028C                     I2C1TXB         equ	652	;# 
  6405   00028D                     I2C1CNT         equ	653	;# 
  6406   00028E                     I2C1ADB0        equ	654	;# 
  6407   00028F                     I2C1ADB1        equ	655	;# 
  6408   000290                     I2C1ADR0        equ	656	;# 
  6409   000291                     I2C1ADR1        equ	657	;# 
  6410   000292                     I2C1ADR2        equ	658	;# 
  6411   000293                     I2C1ADR3        equ	659	;# 
  6412   000294                     I2C1CON0        equ	660	;# 
  6413   000295                     I2C1CON1        equ	661	;# 
  6414   000296                     I2C1CON2        equ	662	;# 
  6415   000297                     I2C1ERR         equ	663	;# 
  6416   000298                     I2C1STAT0       equ	664	;# 
  6417   000299                     I2C1STAT1       equ	665	;# 
  6418   00029A                     I2C1PIR         equ	666	;# 
  6419   00029B                     I2C1PIE         equ	667	;# 
  6420   00029C                     I2C1CLK         equ	668	;# 
  6421   00029D                     I2C1BTO         equ	669	;# 
  6422   0002A1                     U1RXB           equ	673	;# 
  6423   0002A1                     U1RXBL          equ	673	;# 
  6424   0002A2                     U1RXCHK         equ	674	;# 
  6425   0002A3                     U1TXB           equ	675	;# 
  6426   0002A3                     U1TXBL          equ	675	;# 
  6427   0002A4                     U1TXCHK         equ	676	;# 
  6428   0002A5                     U1P1            equ	677	;# 
  6429   0002A5                     U1P1L           equ	677	;# 
  6430   0002A6                     U1P1H           equ	678	;# 
  6431   0002A7                     U1P2            equ	679	;# 
  6432   0002A7                     U1P2L           equ	679	;# 
  6433   0002A8                     U1P2H           equ	680	;# 
  6434   0002A9                     U1P3            equ	681	;# 
  6435   0002A9                     U1P3L           equ	681	;# 
  6436   0002AA                     U1P3H           equ	682	;# 
  6437   0002AB                     U1CON0          equ	683	;# 
  6438   0002AC                     U1CON1          equ	684	;# 
  6439   0002AD                     U1CON2          equ	685	;# 
  6440   0002AE                     U1BRG           equ	686	;# 
  6441   0002AE                     U1BRGL          equ	686	;# 
  6442   0002AF                     U1BRGH          equ	687	;# 
  6443   0002B0                     U1FIFO          equ	688	;# 
  6444   0002B1                     U1UIR           equ	689	;# 
  6445   0002B2                     U1ERRIR         equ	690	;# 
  6446   0002B3                     U1ERRIE         equ	691	;# 
  6447   0002B4                     U2RXB           equ	692	;# 
  6448   0002B4                     U2RXBL          equ	692	;# 
  6449   0002B6                     U2TXB           equ	694	;# 
  6450   0002B6                     U2TXBL          equ	694	;# 
  6451   0002B8                     U2P1            equ	696	;# 
  6452   0002B8                     U2P1L           equ	696	;# 
  6453   0002BA                     U2P2            equ	698	;# 
  6454   0002BA                     U2P2L           equ	698	;# 
  6455   0002BC                     U2P3            equ	700	;# 
  6456   0002BC                     U2P3L           equ	700	;# 
  6457   0002BE                     U2CON0          equ	702	;# 
  6458   0002BF                     U2CON1          equ	703	;# 
  6459   0002C0                     U2CON2          equ	704	;# 
  6460   0002C1                     U2BRG           equ	705	;# 
  6461   0002C1                     U2BRGL          equ	705	;# 
  6462   0002C2                     U2BRGH          equ	706	;# 
  6463   0002C3                     U2FIFO          equ	707	;# 
  6464   0002C4                     U2UIR           equ	708	;# 
  6465   0002C5                     U2ERRIR         equ	709	;# 
  6466   0002C6                     U2ERRIE         equ	710	;# 
  6467   0002C7                     U3RXB           equ	711	;# 
  6468   0002C7                     U3RXBL          equ	711	;# 
  6469   0002C9                     U3TXB           equ	713	;# 
  6470   0002C9                     U3TXBL          equ	713	;# 
  6471   0002CB                     U3P1            equ	715	;# 
  6472   0002CB                     U3P1L           equ	715	;# 
  6473   0002CD                     U3P2            equ	717	;# 
  6474   0002CD                     U3P2L           equ	717	;# 
  6475   0002CF                     U3P3            equ	719	;# 
  6476   0002CF                     U3P3L           equ	719	;# 
  6477   0002D1                     U3CON0          equ	721	;# 
  6478   0002D2                     U3CON1          equ	722	;# 
  6479   0002D3                     U3CON2          equ	723	;# 
  6480   0002D4                     U3BRG           equ	724	;# 
  6481   0002D4                     U3BRGL          equ	724	;# 
  6482   0002D5                     U3BRGH          equ	725	;# 
  6483   0002D6                     U3FIFO          equ	726	;# 
  6484   0002D7                     U3UIR           equ	727	;# 
  6485   0002D8                     U3ERRIR         equ	728	;# 
  6486   0002D9                     U3ERRIE         equ	729	;# 
  6487   0002DA                     U4RXB           equ	730	;# 
  6488   0002DA                     U4RXBL          equ	730	;# 
  6489   0002DC                     U4TXB           equ	732	;# 
  6490   0002DC                     U4TXBL          equ	732	;# 
  6491   0002DE                     U4P1            equ	734	;# 
  6492   0002DE                     U4P1L           equ	734	;# 
  6493   0002E0                     U4P2            equ	736	;# 
  6494   0002E0                     U4P2L           equ	736	;# 
  6495   0002E2                     U4P3            equ	738	;# 
  6496   0002E2                     U4P3L           equ	738	;# 
  6497   0002E4                     U4CON0          equ	740	;# 
  6498   0002E5                     U4CON1          equ	741	;# 
  6499   0002E6                     U4CON2          equ	742	;# 
  6500   0002E7                     U4BRG           equ	743	;# 
  6501   0002E7                     U4BRGL          equ	743	;# 
  6502   0002E8                     U4BRGH          equ	744	;# 
  6503   0002E9                     U4FIFO          equ	745	;# 
  6504   0002EA                     U4UIR           equ	746	;# 
  6505   0002EB                     U4ERRIR         equ	747	;# 
  6506   0002EC                     U4ERRIE         equ	748	;# 
  6507   0002ED                     U5RXB           equ	749	;# 
  6508   0002ED                     U5RXBL          equ	749	;# 
  6509   0002EF                     U5TXB           equ	751	;# 
  6510   0002EF                     U5TXBL          equ	751	;# 
  6511   0002F1                     U5P1            equ	753	;# 
  6512   0002F1                     U5P1L           equ	753	;# 
  6513   0002F3                     U5P2            equ	755	;# 
  6514   0002F3                     U5P2L           equ	755	;# 
  6515   0002F5                     U5P3            equ	757	;# 
  6516   0002F5                     U5P3L           equ	757	;# 
  6517   0002F7                     U5CON0          equ	759	;# 
  6518   0002F8                     U5CON1          equ	760	;# 
  6519   0002F9                     U5CON2          equ	761	;# 
  6520   0002FA                     U5BRG           equ	762	;# 
  6521   0002FA                     U5BRGL          equ	762	;# 
  6522   0002FB                     U5BRGH          equ	763	;# 
  6523   0002FC                     U5FIFO          equ	764	;# 
  6524   0002FD                     U5UIR           equ	765	;# 
  6525   0002FE                     U5ERRIR         equ	766	;# 
  6526   0002FF                     U5ERRIE         equ	767	;# 
  6527   000300                     SMT1TMR         equ	768	;# 
  6528   000300                     SMT1TMRL        equ	768	;# 
  6529   000301                     SMT1TMRH        equ	769	;# 
  6530   000302                     SMT1TMRU        equ	770	;# 
  6531   000303                     SMT1CPR         equ	771	;# 
  6532   000303                     SMT1CPRL        equ	771	;# 
  6533   000304                     SMT1CPRH        equ	772	;# 
  6534   000305                     SMT1CPRU        equ	773	;# 
  6535   000306                     SMT1CPW         equ	774	;# 
  6536   000306                     SMT1CPWL        equ	774	;# 
  6537   000307                     SMT1CPWH        equ	775	;# 
  6538   000308                     SMT1CPWU        equ	776	;# 
  6539   000309                     SMT1PR          equ	777	;# 
  6540   000309                     SMT1PRL         equ	777	;# 
  6541   00030A                     SMT1PRH         equ	778	;# 
  6542   00030B                     SMT1PRU         equ	779	;# 
  6543   00030C                     SMT1CON0        equ	780	;# 
  6544   00030D                     SMT1CON1        equ	781	;# 
  6545   00030E                     SMT1STAT        equ	782	;# 
  6546   00030F                     SMT1CLK         equ	783	;# 
  6547   000310                     SMT1SIG         equ	784	;# 
  6548   000311                     SMT1WIN         equ	785	;# 
  6549   000318                     TMR0L           equ	792	;# 
  6550   000318                     TMR0            equ	792	;# 
  6551   000319                     TMR0H           equ	793	;# 
  6552   000319                     PR0             equ	793	;# 
  6553   00031A                     T0CON0          equ	794	;# 
  6554   00031B                     T0CON1          equ	795	;# 
  6555   00031C                     TMR1            equ	796	;# 
  6556   00031C                     TMR1L           equ	796	;# 
  6557   00031D                     TMR1H           equ	797	;# 
  6558   00031E                     T1CON           equ	798	;# 
  6559   00031E                     TMR1CON         equ	798	;# 
  6560   00031F                     T1GCON          equ	799	;# 
  6561   00031F                     TMR1GCON        equ	799	;# 
  6562   000320                     T1GATE          equ	800	;# 
  6563   000320                     TMR1GATE        equ	800	;# 
  6564   000321                     T1CLK           equ	801	;# 
  6565   000321                     TMR1CLK         equ	801	;# 
  6566   000321                     PR1             equ	801	;# 
  6567   000322                     T2TMR           equ	802	;# 
  6568   000322                     TMR2            equ	802	;# 
  6569   000323                     T2PR            equ	803	;# 
  6570   000323                     PR2             equ	803	;# 
  6571   000324                     T2CON           equ	804	;# 
  6572   000325                     T2HLT           equ	805	;# 
  6573   000326                     T2CLKCON        equ	806	;# 
  6574   000326                     T2CLK           equ	806	;# 
  6575   000327                     T2RST           equ	807	;# 
  6576   000328                     TMR3            equ	808	;# 
  6577   000328                     TMR3L           equ	808	;# 
  6578   000329                     TMR3H           equ	809	;# 
  6579   00032A                     T3CON           equ	810	;# 
  6580   00032A                     TMR3CON         equ	810	;# 
  6581   00032B                     T3GCON          equ	811	;# 
  6582   00032B                     TMR3GCON        equ	811	;# 
  6583   00032C                     T3GATE          equ	812	;# 
  6584   00032C                     TMR3GATE        equ	812	;# 
  6585   00032D                     T3CLK           equ	813	;# 
  6586   00032D                     TMR3CLK         equ	813	;# 
  6587   00032D                     PR3             equ	813	;# 
  6588   00032E                     T4TMR           equ	814	;# 
  6589   00032E                     TMR4            equ	814	;# 
  6590   00032F                     T4PR            equ	815	;# 
  6591   00032F                     PR4             equ	815	;# 
  6592   000330                     T4CON           equ	816	;# 
  6593   000331                     T4HLT           equ	817	;# 
  6594   000332                     T4CLKCON        equ	818	;# 
  6595   000332                     T4CLK           equ	818	;# 
  6596   000333                     T4RST           equ	819	;# 
  6597   000334                     TMR5            equ	820	;# 
  6598   000334                     TMR5L           equ	820	;# 
  6599   000335                     TMR5H           equ	821	;# 
  6600   000336                     T5CON           equ	822	;# 
  6601   000336                     TMR5CON         equ	822	;# 
  6602   000337                     T5GCON          equ	823	;# 
  6603   000337                     TMR5GCON        equ	823	;# 
  6604   000338                     T5GATE          equ	824	;# 
  6605   000338                     TMR5GATE        equ	824	;# 
  6606   000339                     T5CLK           equ	825	;# 
  6607   000339                     TMR5CLK         equ	825	;# 
  6608   000339                     PR5             equ	825	;# 
  6609   00033A                     T6TMR           equ	826	;# 
  6610   00033A                     TMR6            equ	826	;# 
  6611   00033B                     T6PR            equ	827	;# 
  6612   00033B                     PR6             equ	827	;# 
  6613   00033C                     T6CON           equ	828	;# 
  6614   00033D                     T6HLT           equ	829	;# 
  6615   00033E                     T6CLKCON        equ	830	;# 
  6616   00033E                     T6CLK           equ	830	;# 
  6617   00033F                     T6RST           equ	831	;# 
  6618   000340                     CCPR1           equ	832	;# 
  6619   000340                     CCPR1L          equ	832	;# 
  6620   000341                     CCPR1H          equ	833	;# 
  6621   000342                     CCP1CON         equ	834	;# 
  6622   000343                     CCP1CAP         equ	835	;# 
  6623   000344                     CCPR2           equ	836	;# 
  6624   000344                     CCPR2L          equ	836	;# 
  6625   000345                     CCPR2H          equ	837	;# 
  6626   000346                     CCP2CON         equ	838	;# 
  6627   000347                     CCP2CAP         equ	839	;# 
  6628   000348                     CCPR3           equ	840	;# 
  6629   000348                     CCPR3L          equ	840	;# 
  6630   000349                     CCPR3H          equ	841	;# 
  6631   00034A                     CCP3CON         equ	842	;# 
  6632   00034B                     CCP3CAP         equ	843	;# 
  6633   00034C                     CCPTMRS0        equ	844	;# 
  6634   00034F                     CRCDATA         equ	847	;# 
  6635   00034F                     CRCDATL         equ	847	;# 
  6636   000350                     CRCDATH         equ	848	;# 
  6637   000351                     CRCACC          equ	849	;# 
  6638   000351                     CRCACCL         equ	849	;# 
  6639   000352                     CRCACCH         equ	850	;# 
  6640   000353                     CRCSHFT         equ	851	;# 
  6641   000353                     CRCSHIFTL       equ	851	;# 
  6642   000354                     CRCSHIFTH       equ	852	;# 
  6643   000355                     CRCXOR          equ	853	;# 
  6644   000355                     CRCXORL         equ	853	;# 
  6645   000356                     CRCXORH         equ	854	;# 
  6646   000357                     CRCCON0         equ	855	;# 
  6647   000358                     CRCCON1         equ	856	;# 
  6648   00035A                     SCANLADR        equ	858	;# 
  6649   00035A                     SCANLADRL       equ	858	;# 
  6650   00035B                     SCANLADRH       equ	859	;# 
  6651   00035C                     SCANLADRU       equ	860	;# 
  6652   00035D                     SCANHADR        equ	861	;# 
  6653   00035D                     SCANHADRL       equ	861	;# 
  6654   00035E                     SCANHADRH       equ	862	;# 
  6655   00035F                     SCANHADRU       equ	863	;# 
  6656   000360                     SCANCON0        equ	864	;# 
  6657   000361                     SCANTRIG        equ	865	;# 
  6658   000362                     IPR0            equ	866	;# 
  6659   000363                     IPR1            equ	867	;# 
  6660   000364                     IPR2            equ	868	;# 
  6661   000365                     IPR3            equ	869	;# 
  6662   000366                     IPR4            equ	870	;# 
  6663   000367                     IPR5            equ	871	;# 
  6664   000368                     IPR6            equ	872	;# 
  6665   000369                     IPR7            equ	873	;# 
  6666   00036A                     IPR8            equ	874	;# 
  6667   00036B                     IPR9            equ	875	;# 
  6668   00036C                     IPR10           equ	876	;# 
  6669   00036D                     IPR11           equ	877	;# 
  6670   00036E                     IPR12           equ	878	;# 
  6671   00036F                     IPR13           equ	879	;# 
  6672   000370                     IPR14           equ	880	;# 
  6673   000371                     IPR15           equ	881	;# 
  6674   000373                     STATUS_CSHAD    equ	883	;# 
  6675   000374                     WREG_CSHAD      equ	884	;# 
  6676   000375                     BSR_CSHAD       equ	885	;# 
  6677   000376                     SHADCON         equ	886	;# 
  6678   000377                     STATUS_SHAD     equ	887	;# 
  6679   000378                     WREG_SHAD       equ	888	;# 
  6680   000379                     BSR_SHAD        equ	889	;# 
  6681   00037A                     PCLATH_SHAD     equ	890	;# 
  6682   00037B                     PCLATU_SHAD     equ	891	;# 
  6683   00037C                     FSR0SH          equ	892	;# 
  6684   00037C                     FSR0L_SHAD      equ	892	;# 
  6685   00037D                     FSR0H_SHAD      equ	893	;# 
  6686   00037E                     FSR1SH          equ	894	;# 
  6687   00037E                     FSR1L_SHAD      equ	894	;# 
  6688   00037F                     FSR1H_SHAD      equ	895	;# 
  6689   000380                     FSR2SH          equ	896	;# 
  6690   000380                     FSR2L_SHAD      equ	896	;# 
  6691   000381                     FSR2H_SHAD      equ	897	;# 
  6692   000382                     PRODSH          equ	898	;# 
  6693   000382                     PRODL_SHAD      equ	898	;# 
  6694   000383                     PRODH_SHAD      equ	899	;# 
  6695   0003BC                     CWG1CLK         equ	956	;# 
  6696   0003BC                     CWG1CLKCON      equ	956	;# 
  6697   0003BD                     CWG1ISM         equ	957	;# 
  6698   0003BD                     CWG1DAT         equ	957	;# 
  6699   0003BE                     CWG1DBR         equ	958	;# 
  6700   0003BF                     CWG1DBF         equ	959	;# 
  6701   0003C0                     CWG1CON0        equ	960	;# 
  6702   0003C1                     CWG1CON1        equ	961	;# 
  6703   0003C2                     CWG1AS0         equ	962	;# 
  6704   0003C3                     CWG1AS1         equ	963	;# 
  6705   0003C4                     CWG1STR         equ	964	;# 
  6706   0003C5                     CWG2CLK         equ	965	;# 
  6707   0003C5                     CWG2CLKCON      equ	965	;# 
  6708   0003C6                     CWG2ISM         equ	966	;# 
  6709   0003C6                     CWG2DAT         equ	966	;# 
  6710   0003C7                     CWG2DBR         equ	967	;# 
  6711   0003C8                     CWG2DBF         equ	968	;# 
  6712   0003C9                     CWG2CON0        equ	969	;# 
  6713   0003CA                     CWG2CON1        equ	970	;# 
  6714   0003CB                     CWG2AS0         equ	971	;# 
  6715   0003CC                     CWG2AS1         equ	972	;# 
  6716   0003CD                     CWG2STR         equ	973	;# 
  6717   0003CE                     CWG3CLK         equ	974	;# 
  6718   0003CE                     CWG3CLKCON      equ	974	;# 
  6719   0003CF                     CWG3ISM         equ	975	;# 
  6720   0003CF                     CWG3DAT         equ	975	;# 
  6721   0003D0                     CWG3DBR         equ	976	;# 
  6722   0003D1                     CWG3DBF         equ	977	;# 
  6723   0003D2                     CWG3CON0        equ	978	;# 
  6724   0003D3                     CWG3CON1        equ	979	;# 
  6725   0003D4                     CWG3AS0         equ	980	;# 
  6726   0003D5                     CWG3AS1         equ	981	;# 
  6727   0003D6                     CWG3STR         equ	982	;# 
  6728   0003D7                     FVRCON          equ	983	;# 
  6729   0003D8                     ADCPCON         equ	984	;# 
  6730   0003D8                     ADCP            equ	984	;# 
  6731   0003D9                     ADLTH           equ	985	;# 
  6732   0003D9                     ADLTHL          equ	985	;# 
  6733   0003DA                     ADLTHH          equ	986	;# 
  6734   0003DB                     ADUTH           equ	987	;# 
  6735   0003DB                     ADUTHL          equ	987	;# 
  6736   0003DC                     ADUTHH          equ	988	;# 
  6737   0003DD                     ADERR           equ	989	;# 
  6738   0003DD                     ADERRL          equ	989	;# 
  6739   0003DE                     ADERRH          equ	990	;# 
  6740   0003DF                     ADSTPT          equ	991	;# 
  6741   0003DF                     ADSTPTL         equ	991	;# 
  6742   0003E0                     ADSTPTH         equ	992	;# 
  6743   0003E1                     ADFLTR          equ	993	;# 
  6744   0003E1                     ADFLTRL         equ	993	;# 
  6745   0003E2                     ADFLTRH         equ	994	;# 
  6746   0003E3                     ADACC           equ	995	;# 
  6747   0003E3                     ADACCL          equ	995	;# 
  6748   0003E4                     ADACCH          equ	996	;# 
  6749   0003E5                     ADACCU          equ	997	;# 
  6750   0003E6                     ADCNT           equ	998	;# 
  6751   0003E7                     ADRPT           equ	999	;# 
  6752   0003E8                     ADPREV          equ	1000	;# 
  6753   0003E8                     ADPREVL         equ	1000	;# 
  6754   0003E9                     ADPREVH         equ	1001	;# 
  6755   0003EA                     ADRES           equ	1002	;# 
  6756   0003EA                     ADRESL          equ	1002	;# 
  6757   0003EB                     ADRESH          equ	1003	;# 
  6758   0003EC                     ADPCH           equ	1004	;# 
  6759   0003EE                     ADACQ           equ	1006	;# 
  6760   0003EE                     ADACQL          equ	1006	;# 
  6761   0003EF                     ADACQH          equ	1007	;# 
  6762   0003F0                     ADCAP           equ	1008	;# 
  6763   0003F1                     ADPRE           equ	1009	;# 
  6764   0003F1                     ADPREL          equ	1009	;# 
  6765   0003F2                     ADPREH          equ	1010	;# 
  6766   0003F3                     ADCON0          equ	1011	;# 
  6767   0003F4                     ADCON1          equ	1012	;# 
  6768   0003F5                     ADCON2          equ	1013	;# 
  6769   0003F6                     ADCON3          equ	1014	;# 
  6770   0003F7                     ADSTAT          equ	1015	;# 
  6771   0003F8                     ADREF           equ	1016	;# 
  6772   0003F9                     ADACT           equ	1017	;# 
  6773   0003FA                     ADCLK           equ	1018	;# 
  6774   000400                     ANSELA          equ	1024	;# 
  6775   000401                     WPUA            equ	1025	;# 
  6776   000402                     ODCONA          equ	1026	;# 
  6777   000403                     SLRCONA         equ	1027	;# 
  6778   000404                     INLVLA          equ	1028	;# 
  6779   000405                     IOCAP           equ	1029	;# 
  6780   000406                     IOCAN           equ	1030	;# 
  6781   000407                     IOCAF           equ	1031	;# 
  6782   000408                     ANSELB          equ	1032	;# 
  6783   000409                     WPUB            equ	1033	;# 
  6784   00040A                     ODCONB          equ	1034	;# 
  6785   00040B                     SLRCONB         equ	1035	;# 
  6786   00040C                     INLVLB          equ	1036	;# 
  6787   00040D                     IOCBP           equ	1037	;# 
  6788   00040E                     IOCBN           equ	1038	;# 
  6789   00040F                     IOCBF           equ	1039	;# 
  6790   000410                     ANSELC          equ	1040	;# 
  6791   000411                     WPUC            equ	1041	;# 
  6792   000412                     ODCONC          equ	1042	;# 
  6793   000413                     SLRCONC         equ	1043	;# 
  6794   000414                     INLVLC          equ	1044	;# 
  6795   000415                     IOCCP           equ	1045	;# 
  6796   000416                     IOCCN           equ	1046	;# 
  6797   000417                     IOCCF           equ	1047	;# 
  6798   000418                     ANSELD          equ	1048	;# 
  6799   000419                     WPUD            equ	1049	;# 
  6800   00041A                     ODCOND          equ	1050	;# 
  6801   00041B                     SLRCOND         equ	1051	;# 
  6802   00041C                     INLVLD          equ	1052	;# 
  6803   000420                     ANSELE          equ	1056	;# 
  6804   000421                     WPUE            equ	1057	;# 
  6805   000422                     ODCONE          equ	1058	;# 
  6806   000423                     SLRCONE         equ	1059	;# 
  6807   000424                     INLVLE          equ	1060	;# 
  6808   000425                     IOCEP           equ	1061	;# 
  6809   000426                     IOCEN           equ	1062	;# 
  6810   000427                     IOCEF           equ	1063	;# 
  6811   000428                     ANSELF          equ	1064	;# 
  6812   000429                     WPUF            equ	1065	;# 
  6813   00042A                     ODCONF          equ	1066	;# 
  6814   00042B                     SLRCONF         equ	1067	;# 
  6815   00042C                     INLVLF          equ	1068	;# 
  6816   000440                     NCO1ACC         equ	1088	;# 
  6817   000440                     NCO1ACCL        equ	1088	;# 
  6818   000441                     NCO1ACCH        equ	1089	;# 
  6819   000442                     NCO1ACCU        equ	1090	;# 
  6820   000443                     NCO1INC         equ	1091	;# 
  6821   000443                     NCO1INCL        equ	1091	;# 
  6822   000444                     NCO1INCH        equ	1092	;# 
  6823   000445                     NCO1INCU        equ	1093	;# 
  6824   000446                     NCO1CON         equ	1094	;# 
  6825   000447                     NCO1CLK         equ	1095	;# 
  6826   000448                     NCO2ACC         equ	1096	;# 
  6827   000448                     NCO2ACCL        equ	1096	;# 
  6828   000449                     NCO2ACCH        equ	1097	;# 
  6829   00044A                     NCO2ACCU        equ	1098	;# 
  6830   00044B                     NCO2INC         equ	1099	;# 
  6831   00044B                     NCO2INCL        equ	1099	;# 
  6832   00044C                     NCO2INCH        equ	1100	;# 
  6833   00044D                     NCO2INCU        equ	1101	;# 
  6834   00044E                     NCO2CON         equ	1102	;# 
  6835   00044F                     NCO2CLK         equ	1103	;# 
  6836   000450                     NCO3ACC         equ	1104	;# 
  6837   000450                     NCO3ACCL        equ	1104	;# 
  6838   000451                     NCO3ACCH        equ	1105	;# 
  6839   000452                     NCO3ACCU        equ	1106	;# 
  6840   000453                     NCO3INC         equ	1107	;# 
  6841   000453                     NCO3INCL        equ	1107	;# 
  6842   000454                     NCO3INCH        equ	1108	;# 
  6843   000455                     NCO3INCU        equ	1109	;# 
  6844   000456                     NCO3CON         equ	1110	;# 
  6845   000457                     NCO3CLK         equ	1111	;# 
  6846   000459                     IVTLOCK         equ	1113	;# 
  6847   00045A                     IVTAD           equ	1114	;# 
  6848   00045A                     IVTADL          equ	1114	;# 
  6849   00045B                     IVTADH          equ	1115	;# 
  6850   00045C                     IVTADU          equ	1116	;# 
  6851   00045D                     IVTBASE         equ	1117	;# 
  6852   00045D                     IVTBASEL        equ	1117	;# 
  6853   00045E                     IVTBASEH        equ	1118	;# 
  6854   00045F                     IVTBASEU        equ	1119	;# 
  6855   000460                     PWM1ERS         equ	1120	;# 
  6856   000461                     PWM1CLK         equ	1121	;# 
  6857   000462                     PWM1LDS         equ	1122	;# 
  6858   000463                     PWM1PR          equ	1123	;# 
  6859   000463                     PWM1PRL         equ	1123	;# 
  6860   000464                     PWM1PRH         equ	1124	;# 
  6861   000465                     PWM1CPRE        equ	1125	;# 
  6862   000466                     PWM1PIPOS       equ	1126	;# 
  6863   000467                     PWM1GIR         equ	1127	;# 
  6864   000468                     PWM1GIE         equ	1128	;# 
  6865   000469                     PWM1CON         equ	1129	;# 
  6866   00046A                     PWM1S1CFG       equ	1130	;# 
  6867   00046B                     PWM1S1P1        equ	1131	;# 
  6868   00046B                     PWM1S1P1L       equ	1131	;# 
  6869   00046C                     PWM1S1P1H       equ	1132	;# 
  6870   00046D                     PWM1S1P2        equ	1133	;# 
  6871   00046D                     PWM1S1P2L       equ	1133	;# 
  6872   00046E                     PWM1S1P2H       equ	1134	;# 
  6873   00046F                     PWM2ERS         equ	1135	;# 
  6874   000470                     PWM2CLK         equ	1136	;# 
  6875   000471                     PWM2LDS         equ	1137	;# 
  6876   000472                     PWM2PR          equ	1138	;# 
  6877   000472                     PWM2PRL         equ	1138	;# 
  6878   000473                     PWM2PRH         equ	1139	;# 
  6879   000474                     PWM2CPRE        equ	1140	;# 
  6880   000475                     PWM2PIPOS       equ	1141	;# 
  6881   000476                     PWM2GIR         equ	1142	;# 
  6882   000477                     PWM2GIE         equ	1143	;# 
  6883   000478                     PWM2CON         equ	1144	;# 
  6884   000479                     PWM2S1CFG       equ	1145	;# 
  6885   00047A                     PWM2S1P1        equ	1146	;# 
  6886   00047A                     PWM2S1P1L       equ	1146	;# 
  6887   00047B                     PWM2S1P1H       equ	1147	;# 
  6888   00047C                     PWM2S1P2        equ	1148	;# 
  6889   00047C                     PWM2S1P2L       equ	1148	;# 
  6890   00047D                     PWM2S1P2H       equ	1149	;# 
  6891   00047E                     PWM3ERS         equ	1150	;# 
  6892   00047F                     PWM3CLK         equ	1151	;# 
  6893   000480                     PWM3LDS         equ	1152	;# 
  6894   000481                     PWM3PR          equ	1153	;# 
  6895   000481                     PWM3PRL         equ	1153	;# 
  6896   000482                     PWM3PRH         equ	1154	;# 
  6897   000483                     PWM3CPRE        equ	1155	;# 
  6898   000484                     PWM3PIPOS       equ	1156	;# 
  6899   000485                     PWM3GIR         equ	1157	;# 
  6900   000486                     PWM3GIE         equ	1158	;# 
  6901   000487                     PWM3CON         equ	1159	;# 
  6902   000488                     PWM3S1CFG       equ	1160	;# 
  6903   000489                     PWM3S1P1        equ	1161	;# 
  6904   000489                     PWM3S1P1L       equ	1161	;# 
  6905   00048A                     PWM3S1P1H       equ	1162	;# 
  6906   00048B                     PWM3S1P2        equ	1163	;# 
  6907   00048B                     PWM3S1P2L       equ	1163	;# 
  6908   00048C                     PWM3S1P2H       equ	1164	;# 
  6909   00049C                     PWMLOAD         equ	1180	;# 
  6910   00049D                     PWMEN           equ	1181	;# 
  6911   00049E                     PIE0            equ	1182	;# 
  6912   00049F                     PIE1            equ	1183	;# 
  6913   0004A0                     PIE2            equ	1184	;# 
  6914   0004A1                     PIE3            equ	1185	;# 
  6915   0004A2                     PIE4            equ	1186	;# 
  6916   0004A3                     PIE5            equ	1187	;# 
  6917   0004A4                     PIE6            equ	1188	;# 
  6918   0004A5                     PIE7            equ	1189	;# 
  6919   0004A6                     PIE8            equ	1190	;# 
  6920   0004A7                     PIE9            equ	1191	;# 
  6921   0004A8                     PIE10           equ	1192	;# 
  6922   0004A9                     PIE11           equ	1193	;# 
  6923   0004AA                     PIE12           equ	1194	;# 
  6924   0004AB                     PIE13           equ	1195	;# 
  6925   0004AC                     PIE14           equ	1196	;# 
  6926   0004AD                     PIE15           equ	1197	;# 
  6927   0004AE                     PIR0            equ	1198	;# 
  6928   0004AF                     PIR1            equ	1199	;# 
  6929   0004B0                     PIR2            equ	1200	;# 
  6930   0004B1                     PIR3            equ	1201	;# 
  6931   0004B2                     PIR4            equ	1202	;# 
  6932   0004B3                     PIR5            equ	1203	;# 
  6933   0004B4                     PIR6            equ	1204	;# 
  6934   0004B5                     PIR7            equ	1205	;# 
  6935   0004B6                     PIR8            equ	1206	;# 
  6936   0004B7                     PIR9            equ	1207	;# 
  6937   0004B8                     PIR10           equ	1208	;# 
  6938   0004B9                     PIR11           equ	1209	;# 
  6939   0004BA                     PIR12           equ	1210	;# 
  6940   0004BB                     PIR13           equ	1211	;# 
  6941   0004BC                     PIR14           equ	1212	;# 
  6942   0004BD                     PIR15           equ	1213	;# 
  6943   0004BE                     LATA            equ	1214	;# 
  6944   0004BF                     LATB            equ	1215	;# 
  6945   0004C0                     LATC            equ	1216	;# 
  6946   0004C1                     LATD            equ	1217	;# 
  6947   0004C2                     LATE            equ	1218	;# 
  6948   0004C3                     LATF            equ	1219	;# 
  6949   0004C6                     TRISA           equ	1222	;# 
  6950   0004C7                     TRISB           equ	1223	;# 
  6951   0004C8                     TRISC           equ	1224	;# 
  6952   0004C9                     TRISD           equ	1225	;# 
  6953   0004CA                     TRISE           equ	1226	;# 
  6954   0004CB                     TRISF           equ	1227	;# 
  6955   0004CE                     PORTA           equ	1230	;# 
  6956   0004CF                     PORTB           equ	1231	;# 
  6957   0004D0                     PORTC           equ	1232	;# 
  6958   0004D1                     PORTD           equ	1233	;# 
  6959   0004D2                     PORTE           equ	1234	;# 
  6960   0004D3                     PORTF           equ	1235	;# 
  6961   0004D6                     INTCON0         equ	1238	;# 
  6962   0004D7                     INTCON1         equ	1239	;# 
  6963   0004D8                     STATUS          equ	1240	;# 
  6964   0004D9                     FSR2            equ	1241	;# 
  6965   0004D9                     FSR2L           equ	1241	;# 
  6966   0004DA                     FSR2H           equ	1242	;# 
  6967   0004DB                     PLUSW2          equ	1243	;# 
  6968   0004DC                     PREINC2         equ	1244	;# 
  6969   0004DD                     POSTDEC2        equ	1245	;# 
  6970   0004DE                     POSTINC2        equ	1246	;# 
  6971   0004DF                     INDF2           equ	1247	;# 
  6972   0004E0                     BSR             equ	1248	;# 
  6973   0004E1                     FSR1            equ	1249	;# 
  6974   0004E1                     FSR1L           equ	1249	;# 
  6975   0004E2                     FSR1H           equ	1250	;# 
  6976   0004E3                     PLUSW1          equ	1251	;# 
  6977   0004E4                     PREINC1         equ	1252	;# 
  6978   0004E5                     POSTDEC1        equ	1253	;# 
  6979   0004E6                     POSTINC1        equ	1254	;# 
  6980   0004E7                     INDF1           equ	1255	;# 
  6981   0004E8                     WREG            equ	1256	;# 
  6982   0004E9                     FSR0            equ	1257	;# 
  6983   0004E9                     FSR0L           equ	1257	;# 
  6984   0004EA                     FSR0H           equ	1258	;# 
  6985   0004EB                     PLUSW0          equ	1259	;# 
  6986   0004EC                     PREINC0         equ	1260	;# 
  6987   0004ED                     POSTDEC0        equ	1261	;# 
  6988   0004EE                     POSTINC0        equ	1262	;# 
  6989   0004EF                     INDF0           equ	1263	;# 
  6990   0004F0                     PCON0           equ	1264	;# 
  6991   0004F1                     PCON1           equ	1265	;# 
  6992   0004F2                     CPUDOZE         equ	1266	;# 
  6993   0004F3                     PROD            equ	1267	;# 
  6994   0004F3                     PRODL           equ	1267	;# 
  6995   0004F4                     PRODH           equ	1268	;# 
  6996   0004F5                     TABLAT          equ	1269	;# 
  6997   0004F6                     TBLPTR          equ	1270	;# 
  6998   0004F6                     TBLPTRL         equ	1270	;# 
  6999   0004F7                     TBLPTRH         equ	1271	;# 
  7000   0004F8                     TBLPTRU         equ	1272	;# 
  7001   0004F9                     PCLAT           equ	1273	;# 
  7002   0004F9                     PCL             equ	1273	;# 
  7003   0004FA                     PCLATH          equ	1274	;# 
  7004   0004FB                     PCLATU          equ	1275	;# 
  7005   0004FC                     STKPTR          equ	1276	;# 
  7006   0004FD                     TOS             equ	1277	;# 
  7007   0004FD                     TOSL            equ	1277	;# 
  7008   0004FE                     TOSH            equ	1278	;# 
  7009   0004FF                     TOSU            equ	1279	;# 
  7010   000039                     CLKRCON         equ	57	;# 
  7011   00003A                     CLKRCLK         equ	58	;# 
  7012   000040                     NVMCON0         equ	64	;# 
  7013   000041                     NVMCON1         equ	65	;# 
  7014   000042                     NVMLOCK         equ	66	;# 
  7015   000043                     NVMADR          equ	67	;# 
  7016   000043                     NVMADRL         equ	67	;# 
  7017   000044                     NVMADRH         equ	68	;# 
  7018   000045                     NVMADRU         equ	69	;# 
  7019   000046                     NVMDAT          equ	70	;# 
  7020   000046                     NVMDATL         equ	70	;# 
  7021   000047                     NVMDATH         equ	71	;# 
  7022   000048                     VREGCON         equ	72	;# 
  7023   000049                     BORCON          equ	73	;# 
  7024   00004A                     HLVDCON0        equ	74	;# 
  7025   00004B                     HLVDCON1        equ	75	;# 
  7026   00004C                     ZCDCON          equ	76	;# 
  7027   000060                     PMD0            equ	96	;# 
  7028   000061                     PMD1            equ	97	;# 
  7029   000063                     PMD3            equ	99	;# 
  7030   000064                     PMD4            equ	100	;# 
  7031   000065                     PMD5            equ	101	;# 
  7032   000066                     PMD6            equ	102	;# 
  7033   000067                     PMD7            equ	103	;# 
  7034   000068                     PMD8            equ	104	;# 
  7035   00006A                     MD1CON0         equ	106	;# 
  7036   00006B                     MD1CON1         equ	107	;# 
  7037   00006C                     MD1SRC          equ	108	;# 
  7038   00006D                     MD1CARL         equ	109	;# 
  7039   00006E                     MD1CARH         equ	110	;# 
  7040   00006F                     CMOUT           equ	111	;# 
  7041   000070                     CM1CON0         equ	112	;# 
  7042   000071                     CM1CON1         equ	113	;# 
  7043   000072                     CM1NCH          equ	114	;# 
  7044   000073                     CM1PCH          equ	115	;# 
  7045   000074                     CM2CON0         equ	116	;# 
  7046   000075                     CM2CON1         equ	117	;# 
  7047   000076                     CM2NCH          equ	118	;# 
  7048   000077                     CM2PCH          equ	119	;# 
  7049   000078                     WDTCON0         equ	120	;# 
  7050   000079                     WDTCON1         equ	121	;# 
  7051   00007A                     WDTPS           equ	122	;# 
  7052   00007A                     WDTPSL          equ	122	;# 
  7053   00007B                     WDTPSH          equ	123	;# 
  7054   00007C                     WDTTMR          equ	124	;# 
  7055   00007D                     DAC1DAT         equ	125	;# 
  7056   00007D                     DAC1DATL        equ	125	;# 
  7057   00007F                     DAC1CON         equ	127	;# 
  7058   000080                     SPI1RXB         equ	128	;# 
  7059   000081                     SPI1TXB         equ	129	;# 
  7060   000082                     SPI1TCNT        equ	130	;# 
  7061   000082                     SPI1TCNTL       equ	130	;# 
  7062   000083                     SPI1TCNTH       equ	131	;# 
  7063   000084                     SPI1CON0        equ	132	;# 
  7064   000085                     SPI1CON1        equ	133	;# 
  7065   000086                     SPI1CON2        equ	134	;# 
  7066   000087                     SPI1STATUS      equ	135	;# 
  7067   000088                     SPI1TWIDTH      equ	136	;# 
  7068   000089                     SPI1BAUD        equ	137	;# 
  7069   00008A                     SPI1INTF        equ	138	;# 
  7070   00008B                     SPI1INTE        equ	139	;# 
  7071   00008C                     SPI1CLK         equ	140	;# 
  7072   00008D                     SPI2RXB         equ	141	;# 
  7073   00008E                     SPI2TXB         equ	142	;# 
  7074   00008F                     SPI2TCNT        equ	143	;# 
  7075   00008F                     SPI2TCNTL       equ	143	;# 
  7076   000090                     SPI2TCNTH       equ	144	;# 
  7077   000091                     SPI2CON0        equ	145	;# 
  7078   000092                     SPI2CON1        equ	146	;# 
  7079   000093                     SPI2CON2        equ	147	;# 
  7080   000094                     SPI2STATUS      equ	148	;# 
  7081   000095                     SPI2TWIDTH      equ	149	;# 
  7082   000096                     SPI2BAUD        equ	150	;# 
  7083   000097                     SPI2INTF        equ	151	;# 
  7084   000098                     SPI2INTE        equ	152	;# 
  7085   000099                     SPI2CLK         equ	153	;# 
  7086   0000AC                     ACTCON          equ	172	;# 
  7087   0000AD                     OSCCON1         equ	173	;# 
  7088   0000AE                     OSCCON2         equ	174	;# 
  7089   0000AF                     OSCCON3         equ	175	;# 
  7090   0000B0                     OSCTUNE         equ	176	;# 
  7091   0000B1                     OSCFRQ          equ	177	;# 
  7092   0000B1                     OSCFREQ         equ	177	;# 
  7093   0000B2                     OSCSTAT         equ	178	;# 
  7094   0000B2                     OSCSTAT1        equ	178	;# 
  7095   0000B3                     OSCEN           equ	179	;# 
  7096   0000B4                     PRLOCK          equ	180	;# 
  7097   0000B5                     SCANPR          equ	181	;# 
  7098   0000B6                     DMA1PR          equ	182	;# 
  7099   0000B7                     DMA2PR          equ	183	;# 
  7100   0000B8                     DMA3PR          equ	184	;# 
  7101   0000B9                     DMA4PR          equ	185	;# 
  7102   0000BA                     DMA5PR          equ	186	;# 
  7103   0000BB                     DMA6PR          equ	187	;# 
  7104   0000BE                     MAINPR          equ	190	;# 
  7105   0000BF                     ISRPR           equ	191	;# 
  7106   0000D4                     CLCDATA         equ	212	;# 
  7107   0000D5                     CLCSELECT       equ	213	;# 
  7108   0000D6                     CLCnCON         equ	214	;# 
  7109   0000D7                     CLCnPOL         equ	215	;# 
  7110   0000D8                     CLCnSEL0        equ	216	;# 
  7111   0000D9                     CLCnSEL1        equ	217	;# 
  7112   0000DA                     CLCnSEL2        equ	218	;# 
  7113   0000DB                     CLCnSEL3        equ	219	;# 
  7114   0000DC                     CLCnGLS0        equ	220	;# 
  7115   0000DD                     CLCnGLS1        equ	221	;# 
  7116   0000DE                     CLCnGLS2        equ	222	;# 
  7117   0000DF                     CLCnGLS3        equ	223	;# 
  7118   0000E8                     DMASELECT       equ	232	;# 
  7119   0000E9                     DMAnBUF         equ	233	;# 
  7120   0000EA                     DMAnDCNT        equ	234	;# 
  7121   0000EA                     DMAnDCNTL       equ	234	;# 
  7122   0000EB                     DMAnDCNTH       equ	235	;# 
  7123   0000EC                     DMAnDPTR        equ	236	;# 
  7124   0000EC                     DMAnDPTRL       equ	236	;# 
  7125   0000ED                     DMAnDPTRH       equ	237	;# 
  7126   0000EE                     DMAnDSZ         equ	238	;# 
  7127   0000EE                     DMAnDSZL        equ	238	;# 
  7128   0000EF                     DMAnDSZH        equ	239	;# 
  7129   0000F0                     DMAnDSA         equ	240	;# 
  7130   0000F0                     DMAnDSAL        equ	240	;# 
  7131   0000F1                     DMAnDSAH        equ	241	;# 
  7132   0000F2                     DMAnSCNT        equ	242	;# 
  7133   0000F2                     DMAnSCNTL       equ	242	;# 
  7134   0000F3                     DMAnSCNTH       equ	243	;# 
  7135   0000F4                     DMAnSPTR        equ	244	;# 
  7136   0000F4                     DMAnSPTRL       equ	244	;# 
  7137   0000F5                     DMAnSPTRH       equ	245	;# 
  7138   0000F6                     DMAnSPTRU       equ	246	;# 
  7139   0000F7                     DMAnSSZ         equ	247	;# 
  7140   0000F7                     DMAnSSZL        equ	247	;# 
  7141   0000F8                     DMAnSSZH        equ	248	;# 
  7142   0000F9                     DMAnSSA         equ	249	;# 
  7143   0000F9                     DMAnSSAL        equ	249	;# 
  7144   0000FA                     DMAnSSAH        equ	250	;# 
  7145   0000FB                     DMAnSSAU        equ	251	;# 
  7146   0000FC                     DMAnCON0        equ	252	;# 
  7147   0000FD                     DMAnCON1        equ	253	;# 
  7148   0000FE                     DMAnAIRQ        equ	254	;# 
  7149   0000FF                     DMAnSIRQ        equ	255	;# 
  7150   000200                     PPSLOCK         equ	512	;# 
  7151   000201                     RA0PPS          equ	513	;# 
  7152   000202                     RA1PPS          equ	514	;# 
  7153   000203                     RA2PPS          equ	515	;# 
  7154   000204                     RA3PPS          equ	516	;# 
  7155   000205                     RA4PPS          equ	517	;# 
  7156   000206                     RA5PPS          equ	518	;# 
  7157   000207                     RA6PPS          equ	519	;# 
  7158   000208                     RA7PPS          equ	520	;# 
  7159   000209                     RB0PPS          equ	521	;# 
  7160   00020A                     RB1PPS          equ	522	;# 
  7161   00020B                     RB2PPS          equ	523	;# 
  7162   00020C                     RB3PPS          equ	524	;# 
  7163   00020D                     RB4PPS          equ	525	;# 
  7164   00020E                     RB5PPS          equ	526	;# 
  7165   00020F                     RB6PPS          equ	527	;# 
  7166   000210                     RB7PPS          equ	528	;# 
  7167   000211                     RC0PPS          equ	529	;# 
  7168   000212                     RC1PPS          equ	530	;# 
  7169   000213                     RC2PPS          equ	531	;# 
  7170   000214                     RC3PPS          equ	532	;# 
  7171   000215                     RC4PPS          equ	533	;# 
  7172   000216                     RC5PPS          equ	534	;# 
  7173   000217                     RC6PPS          equ	535	;# 
  7174   000218                     RC7PPS          equ	536	;# 
  7175   000219                     RD0PPS          equ	537	;# 
  7176   00021A                     RD1PPS          equ	538	;# 
  7177   00021B                     RD2PPS          equ	539	;# 
  7178   00021C                     RD3PPS          equ	540	;# 
  7179   00021D                     RD4PPS          equ	541	;# 
  7180   00021E                     RD5PPS          equ	542	;# 
  7181   00021F                     RD6PPS          equ	543	;# 
  7182   000220                     RD7PPS          equ	544	;# 
  7183   000221                     RE0PPS          equ	545	;# 
  7184   000222                     RE1PPS          equ	546	;# 
  7185   000223                     RE2PPS          equ	547	;# 
  7186   000229                     RF0PPS          equ	553	;# 
  7187   00022A                     RF1PPS          equ	554	;# 
  7188   00022B                     RF2PPS          equ	555	;# 
  7189   00022C                     RF3PPS          equ	556	;# 
  7190   00022D                     RF4PPS          equ	557	;# 
  7191   00022E                     RF5PPS          equ	558	;# 
  7192   00022F                     RF6PPS          equ	559	;# 
  7193   000230                     RF7PPS          equ	560	;# 
  7194   00023E                     INT0PPS         equ	574	;# 
  7195   00023F                     INT1PPS         equ	575	;# 
  7196   000240                     INT2PPS         equ	576	;# 
  7197   000241                     T0CKIPPS        equ	577	;# 
  7198   000242                     T1CKIPPS        equ	578	;# 
  7199   000243                     T1GPPS          equ	579	;# 
  7200   000244                     T3CKIPPS        equ	580	;# 
  7201   000245                     T3GPPS          equ	581	;# 
  7202   000246                     T5CKIPPS        equ	582	;# 
  7203   000247                     T5GPPS          equ	583	;# 
  7204   000248                     T2INPPS         equ	584	;# 
  7205   000249                     T4INPPS         equ	585	;# 
  7206   00024A                     T6INPPS         equ	586	;# 
  7207   00024F                     CCP1PPS         equ	591	;# 
  7208   000250                     CCP2PPS         equ	592	;# 
  7209   000251                     CCP3PPS         equ	593	;# 
  7210   000253                     PWM1ERSPPS      equ	595	;# 
  7211   000254                     PWM2ERSPPS      equ	596	;# 
  7212   000255                     PWM3ERSPPS      equ	597	;# 
  7213   000257                     PWMIN0PPS       equ	599	;# 
  7214   000258                     PWMIN1PPS       equ	600	;# 
  7215   000259                     SMT1WINPPS      equ	601	;# 
  7216   00025A                     SMT1SIGPPS      equ	602	;# 
  7217   00025B                     CWG1PPS         equ	603	;# 
  7218   00025B                     CWG1INPPS       equ	603	;# 
  7219   00025C                     CWG2PPS         equ	604	;# 
  7220   00025C                     CWG2INPPS       equ	604	;# 
  7221   00025D                     CWG3PPS         equ	605	;# 
  7222   00025D                     CWG3INPPS       equ	605	;# 
  7223   00025E                     MD1CARLPPS      equ	606	;# 
  7224   00025E                     MDCARLPPS       equ	606	;# 
  7225   00025F                     MD1CARHPPS      equ	607	;# 
  7226   00025F                     MDCARHPPS       equ	607	;# 
  7227   000260                     MD1SRCPPS       equ	608	;# 
  7228   000260                     MDSRCPPS        equ	608	;# 
  7229   000261                     CLCIN0PPS       equ	609	;# 
  7230   000262                     CLCIN1PPS       equ	610	;# 
  7231   000263                     CLCIN2PPS       equ	611	;# 
  7232   000264                     CLCIN3PPS       equ	612	;# 
  7233   000265                     CLCIN4PPS       equ	613	;# 
  7234   000266                     CLCIN5PPS       equ	614	;# 
  7235   000267                     CLCIN6PPS       equ	615	;# 
  7236   000268                     CLCIN7PPS       equ	616	;# 
  7237   000269                     ADACTPPS        equ	617	;# 
  7238   00026A                     SPI1SCKPPS      equ	618	;# 
  7239   00026B                     SPI1SDIPPS      equ	619	;# 
  7240   00026C                     SPI1SSPPS       equ	620	;# 
  7241   00026D                     SPI2SCKPPS      equ	621	;# 
  7242   00026E                     SPI2SDIPPS      equ	622	;# 
  7243   00026F                     SPI2SSPPS       equ	623	;# 
  7244   000270                     I2C1SDAPPS      equ	624	;# 
  7245   000271                     I2C1SCLPPS      equ	625	;# 
  7246   000272                     U1RXPPS         equ	626	;# 
  7247   000273                     U1CTSPPS        equ	627	;# 
  7248   000274                     U2RXPPS         equ	628	;# 
  7249   000275                     U2CTSPPS        equ	629	;# 
  7250   000276                     U3RXPPS         equ	630	;# 
  7251   000277                     U3CTSPPS        equ	631	;# 
  7252   000278                     U4RXPPS         equ	632	;# 
  7253   000279                     U4CTSPPS        equ	633	;# 
  7254   00027A                     U5RXPPS         equ	634	;# 
  7255   00027B                     U5CTSPPS        equ	635	;# 
  7256   000286                     RC4I2C          equ	646	;# 
  7257   000287                     RC3I2C          equ	647	;# 
  7258   000288                     RB2I2C          equ	648	;# 
  7259   000289                     RB1I2C          equ	649	;# 
  7260   00028B                     I2C1RXB         equ	651	;# 
  7261   00028C                     I2C1TXB         equ	652	;# 
  7262   00028D                     I2C1CNT         equ	653	;# 
  7263   00028E                     I2C1ADB0        equ	654	;# 
  7264   00028F                     I2C1ADB1        equ	655	;# 
  7265   000290                     I2C1ADR0        equ	656	;# 
  7266   000291                     I2C1ADR1        equ	657	;# 
  7267   000292                     I2C1ADR2        equ	658	;# 
  7268   000293                     I2C1ADR3        equ	659	;# 
  7269   000294                     I2C1CON0        equ	660	;# 
  7270   000295                     I2C1CON1        equ	661	;# 
  7271   000296                     I2C1CON2        equ	662	;# 
  7272   000297                     I2C1ERR         equ	663	;# 
  7273   000298                     I2C1STAT0       equ	664	;# 
  7274   000299                     I2C1STAT1       equ	665	;# 
  7275   00029A                     I2C1PIR         equ	666	;# 
  7276   00029B                     I2C1PIE         equ	667	;# 
  7277   00029C                     I2C1CLK         equ	668	;# 
  7278   00029D                     I2C1BTO         equ	669	;# 
  7279   0002A1                     U1RXB           equ	673	;# 
  7280   0002A1                     U1RXBL          equ	673	;# 
  7281   0002A2                     U1RXCHK         equ	674	;# 
  7282   0002A3                     U1TXB           equ	675	;# 
  7283   0002A3                     U1TXBL          equ	675	;# 
  7284   0002A4                     U1TXCHK         equ	676	;# 
  7285   0002A5                     U1P1            equ	677	;# 
  7286   0002A5                     U1P1L           equ	677	;# 
  7287   0002A6                     U1P1H           equ	678	;# 
  7288   0002A7                     U1P2            equ	679	;# 
  7289   0002A7                     U1P2L           equ	679	;# 
  7290   0002A8                     U1P2H           equ	680	;# 
  7291   0002A9                     U1P3            equ	681	;# 
  7292   0002A9                     U1P3L           equ	681	;# 
  7293   0002AA                     U1P3H           equ	682	;# 
  7294   0002AB                     U1CON0          equ	683	;# 
  7295   0002AC                     U1CON1          equ	684	;# 
  7296   0002AD                     U1CON2          equ	685	;# 
  7297   0002AE                     U1BRG           equ	686	;# 
  7298   0002AE                     U1BRGL          equ	686	;# 
  7299   0002AF                     U1BRGH          equ	687	;# 
  7300   0002B0                     U1FIFO          equ	688	;# 
  7301   0002B1                     U1UIR           equ	689	;# 
  7302   0002B2                     U1ERRIR         equ	690	;# 
  7303   0002B3                     U1ERRIE         equ	691	;# 
  7304   0002B4                     U2RXB           equ	692	;# 
  7305   0002B4                     U2RXBL          equ	692	;# 
  7306   0002B6                     U2TXB           equ	694	;# 
  7307   0002B6                     U2TXBL          equ	694	;# 
  7308   0002B8                     U2P1            equ	696	;# 
  7309   0002B8                     U2P1L           equ	696	;# 
  7310   0002BA                     U2P2            equ	698	;# 
  7311   0002BA                     U2P2L           equ	698	;# 
  7312   0002BC                     U2P3            equ	700	;# 
  7313   0002BC                     U2P3L           equ	700	;# 
  7314   0002BE                     U2CON0          equ	702	;# 
  7315   0002BF                     U2CON1          equ	703	;# 
  7316   0002C0                     U2CON2          equ	704	;# 
  7317   0002C1                     U2BRG           equ	705	;# 
  7318   0002C1                     U2BRGL          equ	705	;# 
  7319   0002C2                     U2BRGH          equ	706	;# 
  7320   0002C3                     U2FIFO          equ	707	;# 
  7321   0002C4                     U2UIR           equ	708	;# 
  7322   0002C5                     U2ERRIR         equ	709	;# 
  7323   0002C6                     U2ERRIE         equ	710	;# 
  7324   0002C7                     U3RXB           equ	711	;# 
  7325   0002C7                     U3RXBL          equ	711	;# 
  7326   0002C9                     U3TXB           equ	713	;# 
  7327   0002C9                     U3TXBL          equ	713	;# 
  7328   0002CB                     U3P1            equ	715	;# 
  7329   0002CB                     U3P1L           equ	715	;# 
  7330   0002CD                     U3P2            equ	717	;# 
  7331   0002CD                     U3P2L           equ	717	;# 
  7332   0002CF                     U3P3            equ	719	;# 
  7333   0002CF                     U3P3L           equ	719	;# 
  7334   0002D1                     U3CON0          equ	721	;# 
  7335   0002D2                     U3CON1          equ	722	;# 
  7336   0002D3                     U3CON2          equ	723	;# 
  7337   0002D4                     U3BRG           equ	724	;# 
  7338   0002D4                     U3BRGL          equ	724	;# 
  7339   0002D5                     U3BRGH          equ	725	;# 
  7340   0002D6                     U3FIFO          equ	726	;# 
  7341   0002D7                     U3UIR           equ	727	;# 
  7342   0002D8                     U3ERRIR         equ	728	;# 
  7343   0002D9                     U3ERRIE         equ	729	;# 
  7344   0002DA                     U4RXB           equ	730	;# 
  7345   0002DA                     U4RXBL          equ	730	;# 
  7346   0002DC                     U4TXB           equ	732	;# 
  7347   0002DC                     U4TXBL          equ	732	;# 
  7348   0002DE                     U4P1            equ	734	;# 
  7349   0002DE                     U4P1L           equ	734	;# 
  7350   0002E0                     U4P2            equ	736	;# 
  7351   0002E0                     U4P2L           equ	736	;# 
  7352   0002E2                     U4P3            equ	738	;# 
  7353   0002E2                     U4P3L           equ	738	;# 
  7354   0002E4                     U4CON0          equ	740	;# 
  7355   0002E5                     U4CON1          equ	741	;# 
  7356   0002E6                     U4CON2          equ	742	;# 
  7357   0002E7                     U4BRG           equ	743	;# 
  7358   0002E7                     U4BRGL          equ	743	;# 
  7359   0002E8                     U4BRGH          equ	744	;# 
  7360   0002E9                     U4FIFO          equ	745	;# 
  7361   0002EA                     U4UIR           equ	746	;# 
  7362   0002EB                     U4ERRIR         equ	747	;# 
  7363   0002EC                     U4ERRIE         equ	748	;# 
  7364   0002ED                     U5RXB           equ	749	;# 
  7365   0002ED                     U5RXBL          equ	749	;# 
  7366   0002EF                     U5TXB           equ	751	;# 
  7367   0002EF                     U5TXBL          equ	751	;# 
  7368   0002F1                     U5P1            equ	753	;# 
  7369   0002F1                     U5P1L           equ	753	;# 
  7370   0002F3                     U5P2            equ	755	;# 
  7371   0002F3                     U5P2L           equ	755	;# 
  7372   0002F5                     U5P3            equ	757	;# 
  7373   0002F5                     U5P3L           equ	757	;# 
  7374   0002F7                     U5CON0          equ	759	;# 
  7375   0002F8                     U5CON1          equ	760	;# 
  7376   0002F9                     U5CON2          equ	761	;# 
  7377   0002FA                     U5BRG           equ	762	;# 
  7378   0002FA                     U5BRGL          equ	762	;# 
  7379   0002FB                     U5BRGH          equ	763	;# 
  7380   0002FC                     U5FIFO          equ	764	;# 
  7381   0002FD                     U5UIR           equ	765	;# 
  7382   0002FE                     U5ERRIR         equ	766	;# 
  7383   0002FF                     U5ERRIE         equ	767	;# 
  7384   000300                     SMT1TMR         equ	768	;# 
  7385   000300                     SMT1TMRL        equ	768	;# 
  7386   000301                     SMT1TMRH        equ	769	;# 
  7387   000302                     SMT1TMRU        equ	770	;# 
  7388   000303                     SMT1CPR         equ	771	;# 
  7389   000303                     SMT1CPRL        equ	771	;# 
  7390   000304                     SMT1CPRH        equ	772	;# 
  7391   000305                     SMT1CPRU        equ	773	;# 
  7392   000306                     SMT1CPW         equ	774	;# 
  7393   000306                     SMT1CPWL        equ	774	;# 
  7394   000307                     SMT1CPWH        equ	775	;# 
  7395   000308                     SMT1CPWU        equ	776	;# 
  7396   000309                     SMT1PR          equ	777	;# 
  7397   000309                     SMT1PRL         equ	777	;# 
  7398   00030A                     SMT1PRH         equ	778	;# 
  7399   00030B                     SMT1PRU         equ	779	;# 
  7400   00030C                     SMT1CON0        equ	780	;# 
  7401   00030D                     SMT1CON1        equ	781	;# 
  7402   00030E                     SMT1STAT        equ	782	;# 
  7403   00030F                     SMT1CLK         equ	783	;# 
  7404   000310                     SMT1SIG         equ	784	;# 
  7405   000311                     SMT1WIN         equ	785	;# 
  7406   000318                     TMR0L           equ	792	;# 
  7407   000318                     TMR0            equ	792	;# 
  7408   000319                     TMR0H           equ	793	;# 
  7409   000319                     PR0             equ	793	;# 
  7410   00031A                     T0CON0          equ	794	;# 
  7411   00031B                     T0CON1          equ	795	;# 
  7412   00031C                     TMR1            equ	796	;# 
  7413   00031C                     TMR1L           equ	796	;# 
  7414   00031D                     TMR1H           equ	797	;# 
  7415   00031E                     T1CON           equ	798	;# 
  7416   00031E                     TMR1CON         equ	798	;# 
  7417   00031F                     T1GCON          equ	799	;# 
  7418   00031F                     TMR1GCON        equ	799	;# 
  7419   000320                     T1GATE          equ	800	;# 
  7420   000320                     TMR1GATE        equ	800	;# 
  7421   000321                     T1CLK           equ	801	;# 
  7422   000321                     TMR1CLK         equ	801	;# 
  7423   000321                     PR1             equ	801	;# 
  7424   000322                     T2TMR           equ	802	;# 
  7425   000322                     TMR2            equ	802	;# 
  7426   000323                     T2PR            equ	803	;# 
  7427   000323                     PR2             equ	803	;# 
  7428   000324                     T2CON           equ	804	;# 
  7429   000325                     T2HLT           equ	805	;# 
  7430   000326                     T2CLKCON        equ	806	;# 
  7431   000326                     T2CLK           equ	806	;# 
  7432   000327                     T2RST           equ	807	;# 
  7433   000328                     TMR3            equ	808	;# 
  7434   000328                     TMR3L           equ	808	;# 
  7435   000329                     TMR3H           equ	809	;# 
  7436   00032A                     T3CON           equ	810	;# 
  7437   00032A                     TMR3CON         equ	810	;# 
  7438   00032B                     T3GCON          equ	811	;# 
  7439   00032B                     TMR3GCON        equ	811	;# 
  7440   00032C                     T3GATE          equ	812	;# 
  7441   00032C                     TMR3GATE        equ	812	;# 
  7442   00032D                     T3CLK           equ	813	;# 
  7443   00032D                     TMR3CLK         equ	813	;# 
  7444   00032D                     PR3             equ	813	;# 
  7445   00032E                     T4TMR           equ	814	;# 
  7446   00032E                     TMR4            equ	814	;# 
  7447   00032F                     T4PR            equ	815	;# 
  7448   00032F                     PR4             equ	815	;# 
  7449   000330                     T4CON           equ	816	;# 
  7450   000331                     T4HLT           equ	817	;# 
  7451   000332                     T4CLKCON        equ	818	;# 
  7452   000332                     T4CLK           equ	818	;# 
  7453   000333                     T4RST           equ	819	;# 
  7454   000334                     TMR5            equ	820	;# 
  7455   000334                     TMR5L           equ	820	;# 
  7456   000335                     TMR5H           equ	821	;# 
  7457   000336                     T5CON           equ	822	;# 
  7458   000336                     TMR5CON         equ	822	;# 
  7459   000337                     T5GCON          equ	823	;# 
  7460   000337                     TMR5GCON        equ	823	;# 
  7461   000338                     T5GATE          equ	824	;# 
  7462   000338                     TMR5GATE        equ	824	;# 
  7463   000339                     T5CLK           equ	825	;# 
  7464   000339                     TMR5CLK         equ	825	;# 
  7465   000339                     PR5             equ	825	;# 
  7466   00033A                     T6TMR           equ	826	;# 
  7467   00033A                     TMR6            equ	826	;# 
  7468   00033B                     T6PR            equ	827	;# 
  7469   00033B                     PR6             equ	827	;# 
  7470   00033C                     T6CON           equ	828	;# 
  7471   00033D                     T6HLT           equ	829	;# 
  7472   00033E                     T6CLKCON        equ	830	;# 
  7473   00033E                     T6CLK           equ	830	;# 
  7474   00033F                     T6RST           equ	831	;# 
  7475   000340                     CCPR1           equ	832	;# 
  7476   000340                     CCPR1L          equ	832	;# 
  7477   000341                     CCPR1H          equ	833	;# 
  7478   000342                     CCP1CON         equ	834	;# 
  7479   000343                     CCP1CAP         equ	835	;# 
  7480   000344                     CCPR2           equ	836	;# 
  7481   000344                     CCPR2L          equ	836	;# 
  7482   000345                     CCPR2H          equ	837	;# 
  7483   000346                     CCP2CON         equ	838	;# 
  7484   000347                     CCP2CAP         equ	839	;# 
  7485   000348                     CCPR3           equ	840	;# 
  7486   000348                     CCPR3L          equ	840	;# 
  7487   000349                     CCPR3H          equ	841	;# 
  7488   00034A                     CCP3CON         equ	842	;# 
  7489   00034B                     CCP3CAP         equ	843	;# 
  7490   00034C                     CCPTMRS0        equ	844	;# 
  7491   00034F                     CRCDATA         equ	847	;# 
  7492   00034F                     CRCDATL         equ	847	;# 
  7493   000350                     CRCDATH         equ	848	;# 
  7494   000351                     CRCACC          equ	849	;# 
  7495   000351                     CRCACCL         equ	849	;# 
  7496   000352                     CRCACCH         equ	850	;# 
  7497   000353                     CRCSHFT         equ	851	;# 
  7498   000353                     CRCSHIFTL       equ	851	;# 
  7499   000354                     CRCSHIFTH       equ	852	;# 
  7500   000355                     CRCXOR          equ	853	;# 
  7501   000355                     CRCXORL         equ	853	;# 
  7502   000356                     CRCXORH         equ	854	;# 
  7503   000357                     CRCCON0         equ	855	;# 
  7504   000358                     CRCCON1         equ	856	;# 
  7505   00035A                     SCANLADR        equ	858	;# 
  7506   00035A                     SCANLADRL       equ	858	;# 
  7507   00035B                     SCANLADRH       equ	859	;# 
  7508   00035C                     SCANLADRU       equ	860	;# 
  7509   00035D                     SCANHADR        equ	861	;# 
  7510   00035D                     SCANHADRL       equ	861	;# 
  7511   00035E                     SCANHADRH       equ	862	;# 
  7512   00035F                     SCANHADRU       equ	863	;# 
  7513   000360                     SCANCON0        equ	864	;# 
  7514   000361                     SCANTRIG        equ	865	;# 
  7515   000362                     IPR0            equ	866	;# 
  7516   000363                     IPR1            equ	867	;# 
  7517   000364                     IPR2            equ	868	;# 
  7518   000365                     IPR3            equ	869	;# 
  7519   000366                     IPR4            equ	870	;# 
  7520   000367                     IPR5            equ	871	;# 
  7521   000368                     IPR6            equ	872	;# 
  7522   000369                     IPR7            equ	873	;# 
  7523   00036A                     IPR8            equ	874	;# 
  7524   00036B                     IPR9            equ	875	;# 
  7525   00036C                     IPR10           equ	876	;# 
  7526   00036D                     IPR11           equ	877	;# 
  7527   00036E                     IPR12           equ	878	;# 
  7528   00036F                     IPR13           equ	879	;# 
  7529   000370                     IPR14           equ	880	;# 
  7530   000371                     IPR15           equ	881	;# 
  7531   000373                     STATUS_CSHAD    equ	883	;# 
  7532   000374                     WREG_CSHAD      equ	884	;# 
  7533   000375                     BSR_CSHAD       equ	885	;# 
  7534   000376                     SHADCON         equ	886	;# 
  7535   000377                     STATUS_SHAD     equ	887	;# 
  7536   000378                     WREG_SHAD       equ	888	;# 
  7537   000379                     BSR_SHAD        equ	889	;# 
  7538   00037A                     PCLATH_SHAD     equ	890	;# 
  7539   00037B                     PCLATU_SHAD     equ	891	;# 
  7540   00037C                     FSR0SH          equ	892	;# 
  7541   00037C                     FSR0L_SHAD      equ	892	;# 
  7542   00037D                     FSR0H_SHAD      equ	893	;# 
  7543   00037E                     FSR1SH          equ	894	;# 
  7544   00037E                     FSR1L_SHAD      equ	894	;# 
  7545   00037F                     FSR1H_SHAD      equ	895	;# 
  7546   000380                     FSR2SH          equ	896	;# 
  7547   000380                     FSR2L_SHAD      equ	896	;# 
  7548   000381                     FSR2H_SHAD      equ	897	;# 
  7549   000382                     PRODSH          equ	898	;# 
  7550   000382                     PRODL_SHAD      equ	898	;# 
  7551   000383                     PRODH_SHAD      equ	899	;# 
  7552   0003BC                     CWG1CLK         equ	956	;# 
  7553   0003BC                     CWG1CLKCON      equ	956	;# 
  7554   0003BD                     CWG1ISM         equ	957	;# 
  7555   0003BD                     CWG1DAT         equ	957	;# 
  7556   0003BE                     CWG1DBR         equ	958	;# 
  7557   0003BF                     CWG1DBF         equ	959	;# 
  7558   0003C0                     CWG1CON0        equ	960	;# 
  7559   0003C1                     CWG1CON1        equ	961	;# 
  7560   0003C2                     CWG1AS0         equ	962	;# 
  7561   0003C3                     CWG1AS1         equ	963	;# 
  7562   0003C4                     CWG1STR         equ	964	;# 
  7563   0003C5                     CWG2CLK         equ	965	;# 
  7564   0003C5                     CWG2CLKCON      equ	965	;# 
  7565   0003C6                     CWG2ISM         equ	966	;# 
  7566   0003C6                     CWG2DAT         equ	966	;# 
  7567   0003C7                     CWG2DBR         equ	967	;# 
  7568   0003C8                     CWG2DBF         equ	968	;# 
  7569   0003C9                     CWG2CON0        equ	969	;# 
  7570   0003CA                     CWG2CON1        equ	970	;# 
  7571   0003CB                     CWG2AS0         equ	971	;# 
  7572   0003CC                     CWG2AS1         equ	972	;# 
  7573   0003CD                     CWG2STR         equ	973	;# 
  7574   0003CE                     CWG3CLK         equ	974	;# 
  7575   0003CE                     CWG3CLKCON      equ	974	;# 
  7576   0003CF                     CWG3ISM         equ	975	;# 
  7577   0003CF                     CWG3DAT         equ	975	;# 
  7578   0003D0                     CWG3DBR         equ	976	;# 
  7579   0003D1                     CWG3DBF         equ	977	;# 
  7580   0003D2                     CWG3CON0        equ	978	;# 
  7581   0003D3                     CWG3CON1        equ	979	;# 
  7582   0003D4                     CWG3AS0         equ	980	;# 
  7583   0003D5                     CWG3AS1         equ	981	;# 
  7584   0003D6                     CWG3STR         equ	982	;# 
  7585   0003D7                     FVRCON          equ	983	;# 
  7586   0003D8                     ADCPCON         equ	984	;# 
  7587   0003D8                     ADCP            equ	984	;# 
  7588   0003D9                     ADLTH           equ	985	;# 
  7589   0003D9                     ADLTHL          equ	985	;# 
  7590   0003DA                     ADLTHH          equ	986	;# 
  7591   0003DB                     ADUTH           equ	987	;# 
  7592   0003DB                     ADUTHL          equ	987	;# 
  7593   0003DC                     ADUTHH          equ	988	;# 
  7594   0003DD                     ADERR           equ	989	;# 
  7595   0003DD                     ADERRL          equ	989	;# 
  7596   0003DE                     ADERRH          equ	990	;# 
  7597   0003DF                     ADSTPT          equ	991	;# 
  7598   0003DF                     ADSTPTL         equ	991	;# 
  7599   0003E0                     ADSTPTH         equ	992	;# 
  7600   0003E1                     ADFLTR          equ	993	;# 
  7601   0003E1                     ADFLTRL         equ	993	;# 
  7602   0003E2                     ADFLTRH         equ	994	;# 
  7603   0003E3                     ADACC           equ	995	;# 
  7604   0003E3                     ADACCL          equ	995	;# 
  7605   0003E4                     ADACCH          equ	996	;# 
  7606   0003E5                     ADACCU          equ	997	;# 
  7607   0003E6                     ADCNT           equ	998	;# 
  7608   0003E7                     ADRPT           equ	999	;# 
  7609   0003E8                     ADPREV          equ	1000	;# 
  7610   0003E8                     ADPREVL         equ	1000	;# 
  7611   0003E9                     ADPREVH         equ	1001	;# 
  7612   0003EA                     ADRES           equ	1002	;# 
  7613   0003EA                     ADRESL          equ	1002	;# 
  7614   0003EB                     ADRESH          equ	1003	;# 
  7615   0003EC                     ADPCH           equ	1004	;# 
  7616   0003EE                     ADACQ           equ	1006	;# 
  7617   0003EE                     ADACQL          equ	1006	;# 
  7618   0003EF                     ADACQH          equ	1007	;# 
  7619   0003F0                     ADCAP           equ	1008	;# 
  7620   0003F1                     ADPRE           equ	1009	;# 
  7621   0003F1                     ADPREL          equ	1009	;# 
  7622   0003F2                     ADPREH          equ	1010	;# 
  7623   0003F3                     ADCON0          equ	1011	;# 
  7624   0003F4                     ADCON1          equ	1012	;# 
  7625   0003F5                     ADCON2          equ	1013	;# 
  7626   0003F6                     ADCON3          equ	1014	;# 
  7627   0003F7                     ADSTAT          equ	1015	;# 
  7628   0003F8                     ADREF           equ	1016	;# 
  7629   0003F9                     ADACT           equ	1017	;# 
  7630   0003FA                     ADCLK           equ	1018	;# 
  7631   000400                     ANSELA          equ	1024	;# 
  7632   000401                     WPUA            equ	1025	;# 
  7633   000402                     ODCONA          equ	1026	;# 
  7634   000403                     SLRCONA         equ	1027	;# 
  7635   000404                     INLVLA          equ	1028	;# 
  7636   000405                     IOCAP           equ	1029	;# 
  7637   000406                     IOCAN           equ	1030	;# 
  7638   000407                     IOCAF           equ	1031	;# 
  7639   000408                     ANSELB          equ	1032	;# 
  7640   000409                     WPUB            equ	1033	;# 
  7641   00040A                     ODCONB          equ	1034	;# 
  7642   00040B                     SLRCONB         equ	1035	;# 
  7643   00040C                     INLVLB          equ	1036	;# 
  7644   00040D                     IOCBP           equ	1037	;# 
  7645   00040E                     IOCBN           equ	1038	;# 
  7646   00040F                     IOCBF           equ	1039	;# 
  7647   000410                     ANSELC          equ	1040	;# 
  7648   000411                     WPUC            equ	1041	;# 
  7649   000412                     ODCONC          equ	1042	;# 
  7650   000413                     SLRCONC         equ	1043	;# 
  7651   000414                     INLVLC          equ	1044	;# 
  7652   000415                     IOCCP           equ	1045	;# 
  7653   000416                     IOCCN           equ	1046	;# 
  7654   000417                     IOCCF           equ	1047	;# 
  7655   000418                     ANSELD          equ	1048	;# 
  7656   000419                     WPUD            equ	1049	;# 
  7657   00041A                     ODCOND          equ	1050	;# 
  7658   00041B                     SLRCOND         equ	1051	;# 
  7659   00041C                     INLVLD          equ	1052	;# 
  7660   000420                     ANSELE          equ	1056	;# 
  7661   000421                     WPUE            equ	1057	;# 
  7662   000422                     ODCONE          equ	1058	;# 
  7663   000423                     SLRCONE         equ	1059	;# 
  7664   000424                     INLVLE          equ	1060	;# 
  7665   000425                     IOCEP           equ	1061	;# 
  7666   000426                     IOCEN           equ	1062	;# 
  7667   000427                     IOCEF           equ	1063	;# 
  7668   000428                     ANSELF          equ	1064	;# 
  7669   000429                     WPUF            equ	1065	;# 
  7670   00042A                     ODCONF          equ	1066	;# 
  7671   00042B                     SLRCONF         equ	1067	;# 
  7672   00042C                     INLVLF          equ	1068	;# 
  7673   000440                     NCO1ACC         equ	1088	;# 
  7674   000440                     NCO1ACCL        equ	1088	;# 
  7675   000441                     NCO1ACCH        equ	1089	;# 
  7676   000442                     NCO1ACCU        equ	1090	;# 
  7677   000443                     NCO1INC         equ	1091	;# 
  7678   000443                     NCO1INCL        equ	1091	;# 
  7679   000444                     NCO1INCH        equ	1092	;# 
  7680   000445                     NCO1INCU        equ	1093	;# 
  7681   000446                     NCO1CON         equ	1094	;# 
  7682   000447                     NCO1CLK         equ	1095	;# 
  7683   000448                     NCO2ACC         equ	1096	;# 
  7684   000448                     NCO2ACCL        equ	1096	;# 
  7685   000449                     NCO2ACCH        equ	1097	;# 
  7686   00044A                     NCO2ACCU        equ	1098	;# 
  7687   00044B                     NCO2INC         equ	1099	;# 
  7688   00044B                     NCO2INCL        equ	1099	;# 
  7689   00044C                     NCO2INCH        equ	1100	;# 
  7690   00044D                     NCO2INCU        equ	1101	;# 
  7691   00044E                     NCO2CON         equ	1102	;# 
  7692   00044F                     NCO2CLK         equ	1103	;# 
  7693   000450                     NCO3ACC         equ	1104	;# 
  7694   000450                     NCO3ACCL        equ	1104	;# 
  7695   000451                     NCO3ACCH        equ	1105	;# 
  7696   000452                     NCO3ACCU        equ	1106	;# 
  7697   000453                     NCO3INC         equ	1107	;# 
  7698   000453                     NCO3INCL        equ	1107	;# 
  7699   000454                     NCO3INCH        equ	1108	;# 
  7700   000455                     NCO3INCU        equ	1109	;# 
  7701   000456                     NCO3CON         equ	1110	;# 
  7702   000457                     NCO3CLK         equ	1111	;# 
  7703   000459                     IVTLOCK         equ	1113	;# 
  7704   00045A                     IVTAD           equ	1114	;# 
  7705   00045A                     IVTADL          equ	1114	;# 
  7706   00045B                     IVTADH          equ	1115	;# 
  7707   00045C                     IVTADU          equ	1116	;# 
  7708   00045D                     IVTBASE         equ	1117	;# 
  7709   00045D                     IVTBASEL        equ	1117	;# 
  7710   00045E                     IVTBASEH        equ	1118	;# 
  7711   00045F                     IVTBASEU        equ	1119	;# 
  7712   000460                     PWM1ERS         equ	1120	;# 
  7713   000461                     PWM1CLK         equ	1121	;# 
  7714   000462                     PWM1LDS         equ	1122	;# 
  7715   000463                     PWM1PR          equ	1123	;# 
  7716   000463                     PWM1PRL         equ	1123	;# 
  7717   000464                     PWM1PRH         equ	1124	;# 
  7718   000465                     PWM1CPRE        equ	1125	;# 
  7719   000466                     PWM1PIPOS       equ	1126	;# 
  7720   000467                     PWM1GIR         equ	1127	;# 
  7721   000468                     PWM1GIE         equ	1128	;# 
  7722   000469                     PWM1CON         equ	1129	;# 
  7723   00046A                     PWM1S1CFG       equ	1130	;# 
  7724   00046B                     PWM1S1P1        equ	1131	;# 
  7725   00046B                     PWM1S1P1L       equ	1131	;# 
  7726   00046C                     PWM1S1P1H       equ	1132	;# 
  7727   00046D                     PWM1S1P2        equ	1133	;# 
  7728   00046D                     PWM1S1P2L       equ	1133	;# 
  7729   00046E                     PWM1S1P2H       equ	1134	;# 
  7730   00046F                     PWM2ERS         equ	1135	;# 
  7731   000470                     PWM2CLK         equ	1136	;# 
  7732   000471                     PWM2LDS         equ	1137	;# 
  7733   000472                     PWM2PR          equ	1138	;# 
  7734   000472                     PWM2PRL         equ	1138	;# 
  7735   000473                     PWM2PRH         equ	1139	;# 
  7736   000474                     PWM2CPRE        equ	1140	;# 
  7737   000475                     PWM2PIPOS       equ	1141	;# 
  7738   000476                     PWM2GIR         equ	1142	;# 
  7739   000477                     PWM2GIE         equ	1143	;# 
  7740   000478                     PWM2CON         equ	1144	;# 
  7741   000479                     PWM2S1CFG       equ	1145	;# 
  7742   00047A                     PWM2S1P1        equ	1146	;# 
  7743   00047A                     PWM2S1P1L       equ	1146	;# 
  7744   00047B                     PWM2S1P1H       equ	1147	;# 
  7745   00047C                     PWM2S1P2        equ	1148	;# 
  7746   00047C                     PWM2S1P2L       equ	1148	;# 
  7747   00047D                     PWM2S1P2H       equ	1149	;# 
  7748   00047E                     PWM3ERS         equ	1150	;# 
  7749   00047F                     PWM3CLK         equ	1151	;# 
  7750   000480                     PWM3LDS         equ	1152	;# 
  7751   000481                     PWM3PR          equ	1153	;# 
  7752   000481                     PWM3PRL         equ	1153	;# 
  7753   000482                     PWM3PRH         equ	1154	;# 
  7754   000483                     PWM3CPRE        equ	1155	;# 
  7755   000484                     PWM3PIPOS       equ	1156	;# 
  7756   000485                     PWM3GIR         equ	1157	;# 
  7757   000486                     PWM3GIE         equ	1158	;# 
  7758   000487                     PWM3CON         equ	1159	;# 
  7759   000488                     PWM3S1CFG       equ	1160	;# 
  7760   000489                     PWM3S1P1        equ	1161	;# 
  7761   000489                     PWM3S1P1L       equ	1161	;# 
  7762   00048A                     PWM3S1P1H       equ	1162	;# 
  7763   00048B                     PWM3S1P2        equ	1163	;# 
  7764   00048B                     PWM3S1P2L       equ	1163	;# 
  7765   00048C                     PWM3S1P2H       equ	1164	;# 
  7766   00049C                     PWMLOAD         equ	1180	;# 
  7767   00049D                     PWMEN           equ	1181	;# 
  7768   00049E                     PIE0            equ	1182	;# 
  7769   00049F                     PIE1            equ	1183	;# 
  7770   0004A0                     PIE2            equ	1184	;# 
  7771   0004A1                     PIE3            equ	1185	;# 
  7772   0004A2                     PIE4            equ	1186	;# 
  7773   0004A3                     PIE5            equ	1187	;# 
  7774   0004A4                     PIE6            equ	1188	;# 
  7775   0004A5                     PIE7            equ	1189	;# 
  7776   0004A6                     PIE8            equ	1190	;# 
  7777   0004A7                     PIE9            equ	1191	;# 
  7778   0004A8                     PIE10           equ	1192	;# 
  7779   0004A9                     PIE11           equ	1193	;# 
  7780   0004AA                     PIE12           equ	1194	;# 
  7781   0004AB                     PIE13           equ	1195	;# 
  7782   0004AC                     PIE14           equ	1196	;# 
  7783   0004AD                     PIE15           equ	1197	;# 
  7784   0004AE                     PIR0            equ	1198	;# 
  7785   0004AF                     PIR1            equ	1199	;# 
  7786   0004B0                     PIR2            equ	1200	;# 
  7787   0004B1                     PIR3            equ	1201	;# 
  7788   0004B2                     PIR4            equ	1202	;# 
  7789   0004B3                     PIR5            equ	1203	;# 
  7790   0004B4                     PIR6            equ	1204	;# 
  7791   0004B5                     PIR7            equ	1205	;# 
  7792   0004B6                     PIR8            equ	1206	;# 
  7793   0004B7                     PIR9            equ	1207	;# 
  7794   0004B8                     PIR10           equ	1208	;# 
  7795   0004B9                     PIR11           equ	1209	;# 
  7796   0004BA                     PIR12           equ	1210	;# 
  7797   0004BB                     PIR13           equ	1211	;# 
  7798   0004BC                     PIR14           equ	1212	;# 
  7799   0004BD                     PIR15           equ	1213	;# 
  7800   0004BE                     LATA            equ	1214	;# 
  7801   0004BF                     LATB            equ	1215	;# 
  7802   0004C0                     LATC            equ	1216	;# 
  7803   0004C1                     LATD            equ	1217	;# 
  7804   0004C2                     LATE            equ	1218	;# 
  7805   0004C3                     LATF            equ	1219	;# 
  7806   0004C6                     TRISA           equ	1222	;# 
  7807   0004C7                     TRISB           equ	1223	;# 
  7808   0004C8                     TRISC           equ	1224	;# 
  7809   0004C9                     TRISD           equ	1225	;# 
  7810   0004CA                     TRISE           equ	1226	;# 
  7811   0004CB                     TRISF           equ	1227	;# 
  7812   0004CE                     PORTA           equ	1230	;# 
  7813   0004CF                     PORTB           equ	1231	;# 
  7814   0004D0                     PORTC           equ	1232	;# 
  7815   0004D1                     PORTD           equ	1233	;# 
  7816   0004D2                     PORTE           equ	1234	;# 
  7817   0004D3                     PORTF           equ	1235	;# 
  7818   0004D6                     INTCON0         equ	1238	;# 
  7819   0004D7                     INTCON1         equ	1239	;# 
  7820   0004D8                     STATUS          equ	1240	;# 
  7821   0004D9                     FSR2            equ	1241	;# 
  7822   0004D9                     FSR2L           equ	1241	;# 
  7823   0004DA                     FSR2H           equ	1242	;# 
  7824   0004DB                     PLUSW2          equ	1243	;# 
  7825   0004DC                     PREINC2         equ	1244	;# 
  7826   0004DD                     POSTDEC2        equ	1245	;# 
  7827   0004DE                     POSTINC2        equ	1246	;# 
  7828   0004DF                     INDF2           equ	1247	;# 
  7829   0004E0                     BSR             equ	1248	;# 
  7830   0004E1                     FSR1            equ	1249	;# 
  7831   0004E1                     FSR1L           equ	1249	;# 
  7832   0004E2                     FSR1H           equ	1250	;# 
  7833   0004E3                     PLUSW1          equ	1251	;# 
  7834   0004E4                     PREINC1         equ	1252	;# 
  7835   0004E5                     POSTDEC1        equ	1253	;# 
  7836   0004E6                     POSTINC1        equ	1254	;# 
  7837   0004E7                     INDF1           equ	1255	;# 
  7838   0004E8                     WREG            equ	1256	;# 
  7839   0004E9                     FSR0            equ	1257	;# 
  7840   0004E9                     FSR0L           equ	1257	;# 
  7841   0004EA                     FSR0H           equ	1258	;# 
  7842   0004EB                     PLUSW0          equ	1259	;# 
  7843   0004EC                     PREINC0         equ	1260	;# 
  7844   0004ED                     POSTDEC0        equ	1261	;# 
  7845   0004EE                     POSTINC0        equ	1262	;# 
  7846   0004EF                     INDF0           equ	1263	;# 
  7847   0004F0                     PCON0           equ	1264	;# 
  7848   0004F1                     PCON1           equ	1265	;# 
  7849   0004F2                     CPUDOZE         equ	1266	;# 
  7850   0004F3                     PROD            equ	1267	;# 
  7851   0004F3                     PRODL           equ	1267	;# 
  7852   0004F4                     PRODH           equ	1268	;# 
  7853   0004F5                     TABLAT          equ	1269	;# 
  7854   0004F6                     TBLPTR          equ	1270	;# 
  7855   0004F6                     TBLPTRL         equ	1270	;# 
  7856   0004F7                     TBLPTRH         equ	1271	;# 
  7857   0004F8                     TBLPTRU         equ	1272	;# 
  7858   0004F9                     PCLAT           equ	1273	;# 
  7859   0004F9                     PCL             equ	1273	;# 
  7860   0004FA                     PCLATH          equ	1274	;# 
  7861   0004FB                     PCLATU          equ	1275	;# 
  7862   0004FC                     STKPTR          equ	1276	;# 
  7863   0004FD                     TOS             equ	1277	;# 
  7864   0004FD                     TOSL            equ	1277	;# 
  7865   0004FE                     TOSH            equ	1278	;# 
  7866   0004FF                     TOSU            equ	1279	;# 
  7867                           
  7868 ;; Function _SPI1_Deinitialize is unused but had its address taken
  7869   000000                     _SPI1_Deinitialize equ	0
  7870                           
  7871 ;; Function _SPI1_Close is unused but had its address taken
  7872   000000                     _SPI1_Close     equ	0
  7873                           
  7874 ;; Function _SPI1_BufferExchange is unused but had its address taken
  7875   000000                     _SPI1_BufferExchange equ	0
  7876                           
  7877 ;; Function _SPI1_BufferWrite is unused but had its address taken
  7878   000000                     _SPI1_BufferWrite equ	0
  7879                           
  7880 ;; Function _SPI1_BufferRead is unused but had its address taken
  7881   000000                     _SPI1_BufferRead equ	0
  7882                           
  7883 ;; Function _SPI1_ByteWrite is unused but had its address taken
  7884   000000                     _SPI1_ByteWrite equ	0
  7885                           
  7886 ;; Function _SPI1_ByteRead is unused but had its address taken
  7887   000000                     _SPI1_ByteRead  equ	0
  7888                           
  7889 ;; Function _SPI1_IsTxReady is unused but had its address taken
  7890   000000                     _SPI1_IsTxReady equ	0
  7891                           
  7892 ;; Function _SPI1_IsRxReady is unused but had its address taken
  7893   000000                     _SPI1_IsRxReady equ	0
  7894                           
  7895 ;; Function _INT0_DefaultInterruptHandler is unused but had its address taken
  7896   000000                     _INT0_DefaultInterruptHandler equ	0
  7897                           
  7898 ;; Function _INT1_DefaultInterruptHandler is unused but had its address taken
  7899   000000                     _INT1_DefaultInterruptHandler equ	0
  7900                           
  7901 ;; Function _INT2_DefaultInterruptHandler is unused but had its address taken
  7902   000000                     _INT2_DefaultInterruptHandler equ	0
  7903                           
  7904 ;; Function _TMR0_Stop is unused but had its address taken
  7905   000000                     _TMR0_Stop      equ	0
  7906                           
  7907 ;; Function _TMR0_Reload is unused but had its address taken
  7908   000000                     _TMR0_Reload    equ	0
  7909                           
  7910                           	psect	idataBANK5
  7911   0114E8                     __pidataBANK5:
  7912                           	callstack 0
  7913                           
  7914                           ;initializer for _rf24_pa_dbm
  7915   0114E8  50                 	db	80
  7916   0114E9  41                 	db	65
  7917   0114EA  5F                 	db	95
  7918   0114EB  4D                 	db	77
  7919   0114EC  49                 	db	73
  7920   0114ED  4E                 	db	78
  7921   0114EE  00                 	db	0
  7922   0114EF  00                 	db	0
  7923   0114F0  50                 	db	80
  7924   0114F1  41                 	db	65
  7925   0114F2  5F                 	db	95
  7926   0114F3  4C                 	db	76
  7927   0114F4  4F                 	db	79
  7928   0114F5  57                 	db	87
  7929   0114F6  00                 	db	0
  7930   0114F7  00                 	db	0
  7931   0114F8  50                 	db	80
  7932   0114F9  41                 	db	65
  7933   0114FA  5F                 	db	95
  7934   0114FB  48                 	db	72
  7935   0114FC  49                 	db	73
  7936   0114FD  47                 	db	71
  7937   0114FE  48                 	db	72
  7938   0114FF  00                 	db	0
  7939   011500  50                 	db	80
  7940   011501  41                 	db	65
  7941   011502  5F                 	db	95
  7942   011503  4D                 	db	77
  7943   011504  41                 	db	65
  7944   011505  58                 	db	88
  7945   011506  00                 	db	0
  7946   011507  00                 	db	0
  7947                           
  7948                           ;initializer for _rf24_datarates
  7949   011508  31                 	db	49
  7950   011509  4D                 	db	77
  7951   01150A  62                 	db	98
  7952   01150B  70                 	db	112
  7953   01150C  73                 	db	115
  7954   01150D  00                 	db	0
  7955   01150E  00                 	db	0
  7956   01150F  00                 	db	0
  7957   011510  32                 	db	50
  7958   011511  4D                 	db	77
  7959   011512  62                 	db	98
  7960   011513  70                 	db	112
  7961   011514  73                 	db	115
  7962   011515  00                 	db	0
  7963   011516  00                 	db	0
  7964   011517  00                 	db	0
  7965   011518  32                 	db	50
  7966   011519  35                 	db	53
  7967   01151A  30                 	db	48
  7968   01151B  4B                 	db	75
  7969   01151C  62                 	db	98
  7970   01151D  70                 	db	112
  7971   01151E  73                 	db	115
  7972   01151F  00                 	db	0
  7973                           
  7974                           	psect	mediumconst
  7975   00FE4E                     __pmediumconst:
  7976                           	callstack 0
  7977   00FE4E  00                 	db	0
  7978   00FE4F                     _SPI1_nrf24:
  7979                           	callstack 0
  7980   00FE4F  92                 	db	low _SPI1_Initialize
  7981   00FE50  18                 	db	high _SPI1_Initialize
  7982   00FE51  01                 	db	low (_SPI1_Initialize shr (0+16))
  7983   00FE52  00                 	db	0
  7984   00FE53  00                 	db	0
  7985   00FE54  00                 	db	0
  7986   00FE55  00                 	db	low _SPI1_Open
  7987   00FE56  0C                 	db	high _SPI1_Open
  7988   00FE57  01                 	db	low (_SPI1_Open shr (0+16))
  7989   00FE58  00                 	db	0
  7990   00FE59  00                 	db	0
  7991   00FE5A  00                 	db	0
  7992   00FE5B  00                 	db	0
  7993   00FE5C  00                 	db	0
  7994   00FE5D  00                 	db	0
  7995   00FE5E  00                 	db	0
  7996   00FE5F  00                 	db	0
  7997   00FE60  00                 	db	0
  7998   00FE61  00                 	db	0
  7999   00FE62  00                 	db	0
  8000   00FE63  00                 	db	0
  8001   00FE64  36                 	db	low _SPI1_ByteExchange
  8002   00FE65  17                 	db	high _SPI1_ByteExchange
  8003   00FE66  01                 	db	low (_SPI1_ByteExchange shr (0+16))
  8004   00FE67  00                 	db	0
  8005   00FE68  00                 	db	0
  8006   00FE69  00                 	db	0
  8007   00FE6A  00                 	db	0
  8008   00FE6B  00                 	db	0
  8009   00FE6C  00                 	db	0
  8010   00FE6D  00                 	db	0
  8011   00FE6E  00                 	db	0
  8012   00FE6F  00                 	db	0
  8013   00FE70  00                 	db	0
  8014   00FE71  00                 	db	0
  8015   00FE72  00                 	db	0
  8016   00FE73  00                 	db	0
  8017   00FE74  00                 	db	0
  8018   00FE75  00                 	db	0
  8019   00FE76  00                 	db	0
  8020   00FE77  00                 	db	0
  8021   00FE78  00                 	db	0
  8022   00FE79                     __end_of_SPI1_nrf24:
  8023                           	callstack 0
  8024   00FE79                     _Timer0:
  8025                           	callstack 0
  8026   00FE79  62                 	db	low _TMR0_Initialize
  8027   00FE7A  17                 	db	high _TMR0_Initialize
  8028   00FE7B  01                 	db	low (_TMR0_Initialize shr (0+16))
  8029   00FE7C  2E                 	db	low _TMR0_Start
  8030   00FE7D  19                 	db	high _TMR0_Start
  8031   00FE7E  01                 	db	low (_TMR0_Start shr (0+16))
  8032   00FE7F  00                 	db	0
  8033   00FE80  00                 	db	0
  8034   00FE81  00                 	db	0
  8035   00FE82  00                 	db	0
  8036   00FE83  00                 	db	0
  8037   00FE84  00                 	db	0
  8038   00FE85  EA                 	db	low _TMR0_OverflowCallbackRegister
  8039   00FE86  18                 	db	high _TMR0_OverflowCallbackRegister
  8040   00FE87  01                 	db	low (_TMR0_OverflowCallbackRegister shr (0+16))
  8041   00FE88  00                 	db	0
  8042   00FE89  00                 	db	0
  8043   00FE8A  00                 	db	0
  8044   00FE8B                     __end_of_Timer0:
  8045                           	callstack 0
  8046   00FE8B                     _spi1_configuration:
  8047                           	callstack 0
  8048   00FE8B  02                 	db	2
  8049   00FE8C  C0                 	db	192
  8050   00FE8D  00                 	db	0
  8051   00FE8E  FF                 	db	255
  8052   00FE8F  00                 	db	0
  8053   00FE90  02                 	db	2
  8054   00FE91  C0                 	db	192
  8055   00FE92  00                 	db	0
  8056   00FE93  FF                 	db	255
  8057   00FE94  00                 	db	0
  8058   00FE95  02                 	db	2
  8059   00FE96  40                 	db	64
  8060   00FE97  00                 	db	0
  8061   00FE98  00                 	db	0
  8062   00FE99  00                 	db	0
  8063   00FE9A                     __end_of_spi1_configuration:
  8064                           	callstack 0
  8065   00FE9A                     _rf24_crclength:
  8066                           	callstack 0
  8067   00FE9A  44                 	db	68
  8068   00FE9B  69                 	db	105
  8069   00FE9C  73                 	db	115
  8070   00FE9D  61                 	db	97
  8071   00FE9E  62                 	db	98
  8072   00FE9F  6C                 	db	108
  8073   00FEA0  65                 	db	101
  8074   00FEA1  64                 	db	100
  8075   00FEA2  00                 	db	0
  8076   00FEA3  00                 	db	0
  8077   00FEA4  38                 	db	56
  8078   00FEA5  20                 	db	32
  8079   00FEA6  62                 	db	98
  8080   00FEA7  69                 	db	105
  8081   00FEA8  74                 	db	116
  8082   00FEA9  73                 	db	115
  8083   00FEAA  00                 	db	0
  8084   00FEAB  00                 	db	0
  8085   00FEAC  00                 	db	0
  8086   00FEAD  00                 	db	0
  8087   00FEAE  31                 	db	49
  8088   00FEAF  36                 	db	54
  8089   00FEB0  20                 	db	32
  8090   00FEB1  62                 	db	98
  8091   00FEB2  69                 	db	105
  8092   00FEB3  74                 	db	116
  8093   00FEB4  73                 	db	115
  8094   00FEB5  00                 	db	0
  8095   00FEB6  00                 	db	0
  8096   00FEB7  00                 	db	0
  8097   00FEB8                     __end_of_rf24_crclength:
  8098                           	callstack 0
  8099   00FEB8                     STR_17:
  8100   00FEB8  53                 	db	83	;'S'
  8101   00FEB9  54                 	db	84	;'T'
  8102   00FEBA  41                 	db	65	;'A'
  8103   00FEBB  54                 	db	84	;'T'
  8104   00FEBC  55                 	db	85	;'U'
  8105   00FEBD  53                 	db	83	;'S'
  8106   00FEBE  09                 	db	9
  8107   00FEBF  09                 	db	9
  8108   00FEC0  20                 	db	32
  8109   00FEC1  3D                 	db	61	;'='
  8110   00FEC2  20                 	db	32
  8111   00FEC3  30                 	db	48	;'0'
  8112   00FEC4  78                 	db	120	;'x'
  8113   00FEC5  25                 	db	37
  8114   00FEC6  30                 	db	48	;'0'
  8115   00FEC7  32                 	db	50	;'2'
  8116   00FEC8  78                 	db	120	;'x'
  8117   00FEC9  20                 	db	32
  8118   00FECA  52                 	db	82	;'R'
  8119   00FECB  58                 	db	88	;'X'
  8120   00FECC  5F                 	db	95	;'_'
  8121   00FECD  44                 	db	68	;'D'
  8122   00FECE  52                 	db	82	;'R'
  8123   00FECF  3D                 	db	61	;'='
  8124   00FED0  25                 	db	37
  8125   00FED1  78                 	db	120	;'x'
  8126   00FED2  20                 	db	32
  8127   00FED3  54                 	db	84	;'T'
  8128   00FED4  58                 	db	88	;'X'
  8129   00FED5  5F                 	db	95	;'_'
  8130   00FED6  44                 	db	68	;'D'
  8131   00FED7  53                 	db	83	;'S'
  8132   00FED8  3D                 	db	61	;'='
  8133   00FED9  25                 	db	37
  8134   00FEDA  78                 	db	120	;'x'
  8135   00FEDB  20                 	db	32
  8136   00FEDC  4D                 	db	77	;'M'
  8137   00FEDD  41                 	db	65	;'A'
  8138   00FEDE  58                 	db	88	;'X'
  8139   00FEDF  5F                 	db	95	;'_'
  8140   00FEE0  52                 	db	82	;'R'
  8141   00FEE1  54                 	db	84	;'T'
  8142   00FEE2  3D                 	db	61	;'='
  8143   00FEE3  25                 	db	37
  8144   00FEE4  78                 	db	120	;'x'
  8145   00FEE5  20                 	db	32
  8146   00FEE6  52                 	db	82	;'R'
  8147   00FEE7  58                 	db	88	;'X'
  8148   00FEE8  5F                 	db	95	;'_'
  8149   00FEE9  50                 	db	80	;'P'
  8150   00FEEA  5F                 	db	95	;'_'
  8151   00FEEB  4E                 	db	78	;'N'
  8152   00FEEC  4F                 	db	79	;'O'
  8153   00FEED  3D                 	db	61	;'='
  8154   00FEEE  25                 	db	37
  8155   00FEEF  78                 	db	120	;'x'
  8156   00FEF0  20                 	db	32
  8157   00FEF1  54                 	db	84	;'T'
  8158   00FEF2  58                 	db	88	;'X'
  8159   00FEF3  5F                 	db	95	;'_'
  8160   00FEF4  46                 	db	70	;'F'
  8161   00FEF5  55                 	db	85	;'U'
  8162   00FEF6  4C                 	db	76	;'L'
  8163   00FEF7  4C                 	db	76	;'L'
  8164   00FEF8  3D                 	db	61	;'='
  8165   00FEF9  25                 	db	37
  8166   00FEFA  78                 	db	120	;'x'
  8167   00FEFB  0D                 	db	13
  8168   00FEFC  0A                 	db	10
  8169   00FEFD  00                 	db	0
  8170   00FEFE                     STR_2:
  8171   00FEFE  3D                 	db	61	;'='
  8172   00FEFF  3D                 	db	61	;'='
  8173   00FF00  3D                 	db	61	;'='
  8174   00FF01  3D                 	db	61	;'='
  8175   00FF02  3D                 	db	61	;'='
  8176   00FF03  3D                 	db	61	;'='
  8177   00FF04  3D                 	db	61	;'='
  8178   00FF05  3D                 	db	61	;'='
  8179   00FF06  3D                 	db	61	;'='
  8180   00FF07  3D                 	db	61	;'='
  8181   00FF08  3D                 	db	61	;'='
  8182   00FF09  3D                 	db	61	;'='
  8183   00FF0A  3D                 	db	61	;'='
  8184   00FF0B  3D                 	db	61	;'='
  8185   00FF0C  3D                 	db	61	;'='
  8186   00FF0D  3D                 	db	61	;'='
  8187   00FF0E  20                 	db	32
  8188   00FF0F  4E                 	db	78	;'N'
  8189   00FF10  52                 	db	82	;'R'
  8190   00FF11  46                 	db	70	;'F'
  8191   00FF12  20                 	db	32
  8192   00FF13  43                 	db	67	;'C'
  8193   00FF14  6F                 	db	111	;'o'
  8194   00FF15  6E                 	db	110	;'n'
  8195   00FF16  66                 	db	102	;'f'
  8196   00FF17  69                 	db	105	;'i'
  8197   00FF18  67                 	db	103	;'g'
  8198   00FF19  75                 	db	117	;'u'
  8199   00FF1A  72                 	db	114	;'r'
  8200   00FF1B  61                 	db	97	;'a'
  8201   00FF1C  74                 	db	116	;'t'
  8202   00FF1D  69                 	db	105	;'i'
  8203   00FF1E  6F                 	db	111	;'o'
  8204   00FF1F  6E                 	db	110	;'n'
  8205   00FF20  20                 	db	32
  8206   00FF21  3D                 	db	61	;'='
  8207   00FF22  3D                 	db	61	;'='
  8208   00FF23  3D                 	db	61	;'='
  8209   00FF24  3D                 	db	61	;'='
  8210   00FF25  3D                 	db	61	;'='
  8211   00FF26  3D                 	db	61	;'='
  8212   00FF27  3D                 	db	61	;'='
  8213   00FF28  3D                 	db	61	;'='
  8214   00FF29  3D                 	db	61	;'='
  8215   00FF2A  3D                 	db	61	;'='
  8216   00FF2B  3D                 	db	61	;'='
  8217   00FF2C  3D                 	db	61	;'='
  8218   00FF2D  3D                 	db	61	;'='
  8219   00FF2E  3D                 	db	61	;'='
  8220   00FF2F  3D                 	db	61	;'='
  8221   00FF30  3D                 	db	61	;'='
  8222   00FF31  0A                 	db	10
  8223   00FF32  00                 	db	0
  8224   00FF33                     STR_16:
  8225   00FF33  52                 	db	82	;'R'
  8226   00FF34  65                 	db	101	;'e'
  8227   00FF35  74                 	db	116	;'t'
  8228   00FF36  72                 	db	114	;'r'
  8229   00FF37  61                 	db	97	;'a'
  8230   00FF38  6E                 	db	110	;'n'
  8231   00FF39  73                 	db	115	;'s'
  8232   00FF3A  6D                 	db	109	;'m'
  8233   00FF3B  69                 	db	105	;'i'
  8234   00FF3C  74                 	db	116	;'t'
  8235   00FF3D  09                 	db	9
  8236   00FF3E  20                 	db	32
  8237   00FF3F  3D                 	db	61	;'='
  8238   00FF40  20                 	db	32
  8239   00FF41  25                 	db	37
  8240   00FF42  64                 	db	100	;'d'
  8241   00FF43  20                 	db	32
  8242   00FF44  75                 	db	117	;'u'
  8243   00FF45  73                 	db	115	;'s'
  8244   00FF46  0A                 	db	10
  8245   00FF47  00                 	db	0
  8246   00FF48                     STR_14:
  8247   00FF48  43                 	db	67	;'C'
  8248   00FF49  52                 	db	82	;'R'
  8249   00FF4A  43                 	db	67	;'C'
  8250   00FF4B  20                 	db	32
  8251   00FF4C  4C                 	db	76	;'L'
  8252   00FF4D  65                 	db	101	;'e'
  8253   00FF4E  6E                 	db	110	;'n'
  8254   00FF4F  67                 	db	103	;'g'
  8255   00FF50  74                 	db	116	;'t'
  8256   00FF51  68                 	db	104	;'h'
  8257   00FF52  09                 	db	9
  8258   00FF53  20                 	db	32
  8259   00FF54  3D                 	db	61	;'='
  8260   00FF55  20                 	db	32
  8261   00FF56  25                 	db	37
  8262   00FF57  73                 	db	115	;'s'
  8263   00FF58  0A                 	db	10
  8264   00FF59  00                 	db	0
  8265   00FF5A                     STR_13:
  8266   00FF5A  44                 	db	68	;'D'
  8267   00FF5B  61                 	db	97	;'a'
  8268   00FF5C  74                 	db	116	;'t'
  8269   00FF5D  61                 	db	97	;'a'
  8270   00FF5E  20                 	db	32
  8271   00FF5F  52                 	db	82	;'R'
  8272   00FF60  61                 	db	97	;'a'
  8273   00FF61  74                 	db	116	;'t'
  8274   00FF62  65                 	db	101	;'e'
  8275   00FF63  09                 	db	9
  8276   00FF64  20                 	db	32
  8277   00FF65  3D                 	db	61	;'='
  8278   00FF66  20                 	db	32
  8279   00FF67  25                 	db	37
  8280   00FF68  73                 	db	115	;'s'
  8281   00FF69  0A                 	db	10
  8282   00FF6A  00                 	db	0
  8283   00FF6B                     STR_15:
  8284   00FF6B  50                 	db	80	;'P'
  8285   00FF6C  41                 	db	65	;'A'
  8286   00FF6D  20                 	db	32
  8287   00FF6E  50                 	db	80	;'P'
  8288   00FF6F  6F                 	db	111	;'o'
  8289   00FF70  77                 	db	119	;'w'
  8290   00FF71  65                 	db	101	;'e'
  8291   00FF72  72                 	db	114	;'r'
  8292   00FF73  09                 	db	9
  8293   00FF74  20                 	db	32
  8294   00FF75  3D                 	db	61	;'='
  8295   00FF76  20                 	db	32
  8296   00FF77  25                 	db	37
  8297   00FF78  73                 	db	115	;'s'
  8298   00FF79  0A                 	db	10
  8299   00FF7A  00                 	db	0
  8300   00FF7B                     STR_12:
  8301   00FF7B  44                 	db	68	;'D'
  8302   00FF7C  59                 	db	89	;'Y'
  8303   00FF7D  4E                 	db	78	;'N'
  8304   00FF7E  50                 	db	80	;'P'
  8305   00FF7F  44                 	db	68	;'D'
  8306   00FF80  2F                 	db	47
  8307   00FF81  46                 	db	70	;'F'
  8308   00FF82  45                 	db	69	;'E'
  8309   00FF83  41                 	db	65	;'A'
  8310   00FF84  54                 	db	84	;'T'
  8311   00FF85  55                 	db	85	;'U'
  8312   00FF86  52                 	db	82	;'R'
  8313   00FF87  45                 	db	69	;'E'
  8314   00FF88  00                 	db	0
  8315   00FF89                     STR_3:
  8316   00FF89  52                 	db	82	;'R'
  8317   00FF8A  58                 	db	88	;'X'
  8318   00FF8B  5F                 	db	95	;'_'
  8319   00FF8C  41                 	db	65	;'A'
  8320   00FF8D  44                 	db	68	;'D'
  8321   00FF8E  44                 	db	68	;'D'
  8322   00FF8F  52                 	db	82	;'R'
  8323   00FF90  5F                 	db	95	;'_'
  8324   00FF91  50                 	db	80	;'P'
  8325   00FF92  30                 	db	48	;'0'
  8326   00FF93  2D                 	db	45
  8327   00FF94  31                 	db	49	;'1'
  8328   00FF95  00                 	db	0
  8329   00FF96                     STR_4:
  8330   00FF96  52                 	db	82	;'R'
  8331   00FF97  58                 	db	88	;'X'
  8332   00FF98  5F                 	db	95	;'_'
  8333   00FF99  41                 	db	65	;'A'
  8334   00FF9A  44                 	db	68	;'D'
  8335   00FF9B  44                 	db	68	;'D'
  8336   00FF9C  52                 	db	82	;'R'
  8337   00FF9D  5F                 	db	95	;'_'
  8338   00FF9E  50                 	db	80	;'P'
  8339   00FF9F  32                 	db	50	;'2'
  8340   00FFA0  2D                 	db	45
  8341   00FFA1  35                 	db	53	;'5'
  8342   00FFA2  00                 	db	0
  8343   00FFA3                     STR_6:
  8344   00FFA3  52                 	db	82	;'R'
  8345   00FFA4  58                 	db	88	;'X'
  8346   00FFA5  5F                 	db	95	;'_'
  8347   00FFA6  50                 	db	80	;'P'
  8348   00FFA7  57                 	db	87	;'W'
  8349   00FFA8  5F                 	db	95	;'_'
  8350   00FFA9  50                 	db	80	;'P'
  8351   00FFAA  30                 	db	48	;'0'
  8352   00FFAB  2D                 	db	45
  8353   00FFAC  36                 	db	54	;'6'
  8354   00FFAD  00                 	db	0
  8355   00FFAE                     STR_8:
  8356   00FFAE  45                 	db	69	;'E'
  8357   00FFAF  4E                 	db	78	;'N'
  8358   00FFB0  5F                 	db	95	;'_'
  8359   00FFB1  52                 	db	82	;'R'
  8360   00FFB2  58                 	db	88	;'X'
  8361   00FFB3  41                 	db	65	;'A'
  8362   00FFB4  44                 	db	68	;'D'
  8363   00FFB5  44                 	db	68	;'D'
  8364   00FFB6  52                 	db	82	;'R'
  8365   00FFB7  00                 	db	0
  8366   00FFB8                     STR_5:
  8367   00FFB8  54                 	db	84	;'T'
  8368   00FFB9  58                 	db	88	;'X'
  8369   00FFBA  5F                 	db	95	;'_'
  8370   00FFBB  41                 	db	65	;'A'
  8371   00FFBC  44                 	db	68	;'D'
  8372   00FFBD  44                 	db	68	;'D'
  8373   00FFBE  52                 	db	82	;'R'
  8374   00FFBF  09                 	db	9
  8375   00FFC0  00                 	db	0
  8376   00FFC1                     STR_10:
  8377   00FFC1  52                 	db	82	;'R'
  8378   00FFC2  46                 	db	70	;'F'
  8379   00FFC3  5F                 	db	95	;'_'
  8380   00FFC4  53                 	db	83	;'S'
  8381   00FFC5  45                 	db	69	;'E'
  8382   00FFC6  54                 	db	84	;'T'
  8383   00FFC7  55                 	db	85	;'U'
  8384   00FFC8  50                 	db	80	;'P'
  8385   00FFC9  00                 	db	0
  8386   00FFCA                     STR_11:
  8387   00FFCA  43                 	db	67	;'C'
  8388   00FFCB  4F                 	db	79	;'O'
  8389   00FFCC  4E                 	db	78	;'N'
  8390   00FFCD  46                 	db	70	;'F'
  8391   00FFCE  49                 	db	73	;'I'
  8392   00FFCF  47                 	db	71	;'G'
  8393   00FFD0  09                 	db	9
  8394   00FFD1  00                 	db	0
  8395   00FFD2                     STR_23:
  8396   00FFD2  20                 	db	32
  8397   00FFD3  30                 	db	48	;'0'
  8398   00FFD4  78                 	db	120	;'x'
  8399   00FFD5  25                 	db	37
  8400   00FFD6  30                 	db	48	;'0'
  8401   00FFD7  32                 	db	50	;'2'
  8402   00FFD8  78                 	db	120	;'x'
  8403   00FFD9  00                 	db	0
  8404   00FFDA                     STR_25:
  8405   00FFDA  28                 	db	40
  8406   00FFDB  6E                 	db	110	;'n'
  8407   00FFDC  75                 	db	117	;'u'
  8408   00FFDD  6C                 	db	108	;'l'
  8409   00FFDE  6C                 	db	108	;'l'
  8410   00FFDF  29                 	db	41
  8411   00FFE0  00                 	db	0
  8412   00FFE1                     STR_7:
  8413   00FFE1  45                 	db	69	;'E'
  8414   00FFE2  4E                 	db	78	;'N'
  8415   00FFE3  5F                 	db	95	;'_'
  8416   00FFE4  41                 	db	65	;'A'
  8417   00FFE5  41                 	db	65	;'A'
  8418   00FFE6  09                 	db	9
  8419   00FFE7  00                 	db	0
  8420   00FFE8                     STR_9:
  8421   00FFE8  52                 	db	82	;'R'
  8422   00FFE9  46                 	db	70	;'F'
  8423   00FFEA  5F                 	db	95	;'_'
  8424   00FFEB  43                 	db	67	;'C'
  8425   00FFEC  48                 	db	72	;'H'
  8426   00FFED  09                 	db	9
  8427   00FFEE  00                 	db	0
  8428   00FFEF                     STR_18:
  8429   00FFEF  25                 	db	37
  8430   00FFF0  73                 	db	115	;'s'
  8431   00FFF1  09                 	db	9
  8432   00FFF2  20                 	db	32
  8433   00FFF3  3D                 	db	61	;'='
  8434   00FFF4  00                 	db	0
  8435   00FFF5                     STR_1:
  8436   00FFF5  46                 	db	70	;'F'
  8437   00FFF6  47                 	db	71	;'G'
  8438   00FFF7  48                 	db	72	;'H'
  8439   00FFF8  49                 	db	73	;'I'
  8440   00FFF9  4A                 	db	74	;'J'
  8441   00FFFA  00                 	db	0
  8442   00FFFB                     STR_19:
  8443   00FFFB  20                 	db	32
  8444   00FFFC  30                 	db	48	;'0'
  8445   00FFFD  78                 	db	120	;'x'
  8446   00FFFE  00                 	db	0
  8447   00FFD5                     STR_20          equ	STR_23+3
  8448   00FFEF                     STR_22          equ	STR_18
  8449   00FEFB                     STR_21          equ	STR_17+67
  8450   00FEFB                     STR_24          equ	STR_17+67
  8451   00FFFF  00                 	db	0	; dummy byte at the end
  8452   000003                     __activetblptr  equ	3
  8453                           
  8454                           	psect	nvBANK5
  8455   0005EF                     __pnvBANK5:
  8456                           	callstack 0
  8457   0005EF                     _TMR0_OverflowCallback:
  8458                           	callstack 0
  8459   0005EF                     	ds	3
  8460   0005F2                     _INT2_InterruptHandler:
  8461                           	callstack 0
  8462   0005F2                     	ds	3
  8463   0005F5                     _INT1_InterruptHandler:
  8464                           	callstack 0
  8465   0005F5                     	ds	3
  8466   0005F8                     _INT0_InterruptHandler:
  8467                           	callstack 0
  8468   0005F8                     	ds	3
  8469   0000AC                     _ACTCON         set	172
  8470   0000B0                     _OSCTUNE        set	176
  8471   0000B1                     _OSCFRQ         set	177
  8472   0000B3                     _OSCEN          set	179
  8473   0000AF                     _OSCCON3        set	175
  8474   0000AD                     _OSCCON1        set	173
  8475   000080                     _SPI1RXB        set	128
  8476   000081                     _SPI1TXB        set	129
  8477   000082                     _SPI1TCNTL      set	130
  8478   000083                     _SPI1TCNTH      set	131
  8479   00008A                     _SPI1INTFbits   set	138
  8480   000084                     _SPI1CON0bits   set	132
  8481   000087                     _SPI1STATUSbits set	135
  8482   00008C                     _SPI1CLK        set	140
  8483   000089                     _SPI1BAUD       set	137
  8484   000086                     _SPI1CON2       set	134
  8485   000085                     _SPI1CON1       set	133
  8486   000084                     _SPI1CON0       set	132
  8487   000217                     _RC6PPS         set	535
  8488   00026A                     _SPI1SCKPPS     set	618
  8489   000215                     _RC4PPS         set	533
  8490   00026B                     _SPI1SDIPPS     set	619
  8491   000286                     _RC4I2C         set	646
  8492   000287                     _RC3I2C         set	647
  8493   000288                     _RB2I2C         set	648
  8494   000289                     _RB1I2C         set	649
  8495   00031A                     _T0CON0bits     set	794
  8496   00031A                     _T0CON0         set	794
  8497   00031B                     _T0CON1         set	795
  8498   000318                     _TMR0L          set	792
  8499   000319                     _TMR0H          set	793
  8500   000427                     _IOCEF          set	1063
  8501   000426                     _IOCEN          set	1062
  8502   000425                     _IOCEP          set	1061
  8503   000417                     _IOCCF          set	1047
  8504   000416                     _IOCCN          set	1046
  8505   000415                     _IOCCP          set	1045
  8506   00040F                     _IOCBF          set	1039
  8507   00040E                     _IOCBN          set	1038
  8508   00040D                     _IOCBP          set	1037
  8509   000407                     _IOCAF          set	1031
  8510   000406                     _IOCAN          set	1030
  8511   000405                     _IOCAP          set	1029
  8512   00042C                     _INLVLF         set	1068
  8513   000424                     _INLVLE         set	1060
  8514   00041C                     _INLVLD         set	1052
  8515   000414                     _INLVLC         set	1044
  8516   00040C                     _INLVLB         set	1036
  8517   000404                     _INLVLA         set	1028
  8518   00042B                     _SLRCONF        set	1067
  8519   000423                     _SLRCONE        set	1059
  8520   00041B                     _SLRCOND        set	1051
  8521   000413                     _SLRCONC        set	1043
  8522   00040B                     _SLRCONB        set	1035
  8523   000403                     _SLRCONA        set	1027
  8524   000429                     _WPUF           set	1065
  8525   000421                     _WPUE           set	1057
  8526   000419                     _WPUD           set	1049
  8527   000411                     _WPUC           set	1041
  8528   000409                     _WPUB           set	1033
  8529   000401                     _WPUA           set	1025
  8530   000428                     _ANSELF         set	1064
  8531   000420                     _ANSELE         set	1056
  8532   000418                     _ANSELD         set	1048
  8533   000410                     _ANSELC         set	1040
  8534   000408                     _ANSELB         set	1032
  8535   000400                     _ANSELA         set	1024
  8536   00042A                     _ODCONF         set	1066
  8537   000422                     _ODCONE         set	1058
  8538   00041A                     _ODCOND         set	1050
  8539   000412                     _ODCONC         set	1042
  8540   00040A                     _ODCONB         set	1034
  8541   000402                     _ODCONA         set	1026
  8542   0004C0                     _LATCbits       set	1216
  8543   0004C3                     _LATFbits       set	1219
  8544   0004B8                     _PIR10bits      set	1208
  8545   0004B4                     _PIR6bits       set	1204
  8546   0004AF                     _PIR1bits       set	1199
  8547   0004D6                     _INTCON0bits    set	1238
  8548   0004CB                     _TRISF          set	1227
  8549   0004CA                     _TRISE          set	1226
  8550   0004C9                     _TRISD          set	1225
  8551   0004C8                     _TRISC          set	1224
  8552   0004C7                     _TRISB          set	1223
  8553   0004C6                     _TRISA          set	1222
  8554   0004C3                     _LATF           set	1219
  8555   0004C2                     _LATE           set	1218
  8556   0004C1                     _LATD           set	1217
  8557   0004C0                     _LATC           set	1216
  8558   0004BF                     _LATB           set	1215
  8559   0004BE                     _LATA           set	1214
  8560   0004B1                     _PIR3bits       set	1201
  8561   0004C8                     _TRISCbits      set	1224
  8562   0004A1                     _PIE3bits       set	1185
  8563                           
  8564                           ; #config settings
  8565                           
  8566                           	psect	cinit
  8567   0113DA                     __pcinit:
  8568                           	callstack 0
  8569   0113DA                     start_initialization:
  8570                           	callstack 0
  8571   0113DA                     __initialization:
  8572                           	callstack 0
  8573                           
  8574                           ; Initialize objects allocated to BANK5 (56 bytes)
  8575                           ; load TBLPTR registers with __pidataBANK5
  8576   0113DA  0EE8               	movlw	low __pidataBANK5
  8577   0113DC  6EF6               	movwf	tblptrl,c
  8578   0113DE  0E14               	movlw	high __pidataBANK5
  8579   0113E0  6EF7               	movwf	tblptrh,c
  8580   0113E2  0E01               	movlw	low (__pidataBANK5 shr (0+16))
  8581   0113E4  6EF8               	movwf	tblptru,c
  8582   0113E6  EE01  F160         	lfsr	0,__pdataBANK5
  8583   0113EA  EE10 F038          	lfsr	1,56
  8584   0113EE                     copy_data0:
  8585   0113EE  0009               	tblrd		*+
  8586   0113F0  C4F5 F4EE          	movff	tablat,postinc0
  8587   0113F4  50E5               	movf	postdec1,w,c
  8588   0113F6  50E1               	movf	fsr1l,w,c
  8589   0113F8  E1FA               	bnz	copy_data0
  8590                           
  8591                           ; Clear objects allocated to BANK5 (34 bytes)
  8592   0113FA  EE01  F1CD         	lfsr	0,__pbssBANK5
  8593   0113FE  0E22               	movlw	34
  8594   011400                     clear_0:
  8595   011400  6AEE               	clrf	postinc0,c
  8596   011402  06E8               	decf	wreg,f,c
  8597   011404  E1FD               	bnz	clear_0
  8598                           
  8599                           ; Clear objects allocated to COMRAM (3 bytes)
  8600   011406  6A5C               	clrf	(__pbssCOMRAM+2)& (0+255),c
  8601   011408  6A5B               	clrf	(__pbssCOMRAM+1)& (0+255),c
  8602   01140A  6A5A               	clrf	__pbssCOMRAM& (0+255),c
  8603                           
  8604                           ;
  8605                           ; Setup IVTBASE
  8606                           ;
  8607   00045D                     IVTBASEL        equ	1117
  8608   00045E                     IVTBASEH        equ	1118
  8609   00045F                     IVTBASEU        equ	1119
  8610   01140C  0104               	movlb	4
  8611   01140E  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  8612   011410  6F5D               	movwf	93,b
  8613   011412  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  8614   011414  6F5E               	movwf	94,b
  8615   011416  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  8616   011418  6F5F               	movwf	95,b
  8617   01141A                     end_of_initialization:
  8618                           	callstack 0
  8619   01141A                     __end_of__initialization:
  8620                           	callstack 0
  8621   01141A  0100               	movlb	0
  8622   01141C  EF59  F08B         	goto	_main	;jump to C main() function
  8623                           
  8624                           	psect	bssCOMRAM
  8625   00055A                     __pbssCOMRAM:
  8626                           	callstack 0
  8627   00055A                     _width:
  8628                           	callstack 0
  8629   00055A                     	ds	2
  8630   00055C                     _flags:
  8631                           	callstack 0
  8632   00055C                     	ds	1
  8633                           
  8634                           	psect	bssBANK5
  8635   0005CD                     __pbssBANK5:
  8636                           	callstack 0
  8637   0005CD                     _prec:
  8638                           	callstack 0
  8639   0005CD                     	ds	2
  8640   0005CF                     _dbuf:
  8641                           	callstack 0
  8642   0005CF                     	ds	32
  8643                           
  8644                           	psect	dataBANK5
  8645   000560                     __pdataBANK5:
  8646                           	callstack 0
  8647   000560                     _rf24_pa_dbm:
  8648                           	callstack 0
  8649   000560                     	ds	32
  8650   000580                     _rf24_datarates:
  8651                           	callstack 0
  8652   000580                     	ds	24
  8653                           
  8654                           	psect	cstackBANK5
  8655   000598                     __pcstackBANK5:
  8656                           	callstack 0
  8657   000598                     Nrf24_print_address_register@buffer:
  8658                           	callstack 0
  8659                           
  8660                           ; 5 bytes @ 0x0
  8661   000598                     	ds	5
  8662   00059D                     Nrf24_print_address_register@i:
  8663                           	callstack 0
  8664                           
  8665                           ; 2 bytes @ 0x5
  8666   00059D                     	ds	2
  8667   00059F                     ??_Nrf24_printDetails:
  8668                           
  8669                           ; 1 bytes @ 0x7
  8670   00059F                     	ds	4
  8671   0005A3                     Nrf24_printDetails@delay:
  8672                           	callstack 0
  8673                           
  8674                           ; 2 bytes @ 0xB
  8675   0005A3                     	ds	2
  8676   0005A5                     Nrf24_printDetails@retransmit:
  8677                           	callstack 0
  8678                           
  8679                           ; 1 bytes @ 0xD
  8680   0005A5                     	ds	1
  8681   0005A6                     receiver@pvParameters:
  8682                           	callstack 0
  8683                           
  8684                           ; 2 bytes @ 0xE
  8685   0005A6                     	ds	2
  8686   0005A8                     receiver@buf:
  8687                           	callstack 0
  8688                           
  8689                           ; 32 bytes @ 0x10
  8690   0005A8                     	ds	32
  8691   0005C8                     receiver@ret:
  8692                           	callstack 0
  8693                           
  8694                           ; 2 bytes @ 0x30
  8695   0005C8                     	ds	2
  8696   0005CA                     receiver@dev:
  8697                           	callstack 0
  8698                           
  8699                           ; 3 bytes @ 0x32
  8700   0005CA                     	ds	3
  8701                           
  8702                           	psect	cstackCOMRAM
  8703   000501                     __pcstackCOMRAM:
  8704                           	callstack 0
  8705   000501                     ??_led_toggle:
  8706                           
  8707                           ; 1 bytes @ 0x0
  8708   000501                     	ds	1
  8709   000502                     ??_INTERRUPT_InterruptManager:
  8710                           
  8711                           ; 1 bytes @ 0x1
  8712   000502                     	ds	2
  8713   000504                     ?___awdiv:
  8714                           	callstack 0
  8715   000504                     ?___awmod:
  8716                           	callstack 0
  8717   000504                     ?_read_prec_or_width:
  8718                           	callstack 0
  8719   000504                     SPI1_Open@spiConfigIndex:
  8720                           	callstack 0
  8721   000504                     SPI1_ByteExchange@byteData:
  8722                           	callstack 0
  8723   000504                     DELAY_milliseconds@milliseconds:
  8724                           	callstack 0
  8725   000504                     DELAY_microseconds@microseconds:
  8726                           	callstack 0
  8727   000504                     ___awdiv@dividend:
  8728                           	callstack 0
  8729   000504                     ___awmod@dividend:
  8730                           	callstack 0
  8731   000504                     read_prec_or_width@fmt:
  8732                           	callstack 0
  8733   000504                     fputc@c:
  8734                           	callstack 0
  8735   000504                     INT0_SetInterruptHandler@InterruptHandler:
  8736                           	callstack 0
  8737   000504                     INT1_SetInterruptHandler@InterruptHandler:
  8738                           	callstack 0
  8739   000504                     INT2_SetInterruptHandler@InterruptHandler:
  8740                           	callstack 0
  8741   000504                     TMR0_OverflowCallbackRegister@CallbackHandler:
  8742                           	callstack 0
  8743   000504                     
  8744                           ; 1 bytes @ 0x3
  8745   000504                     	ds	1
  8746   000505                     SPI1_ByteExchange@returnValue:
  8747                           	callstack 0
  8748   000505                     Nrf24_init@dev:
  8749                           	callstack 0
  8750                           
  8751                           ; 2 bytes @ 0x4
  8752   000505                     	ds	1
  8753   000506                     Nrf24_configRegister@value:
  8754                           	callstack 0
  8755   000506                     SPI_read_buff@buffer:
  8756                           	callstack 0
  8757   000506                     SPI_write_buff@buffer:
  8758                           	callstack 0
  8759   000506                     Nrf24_flushRx@dev:
  8760                           	callstack 0
  8761   000506                     ___awdiv@divisor:
  8762                           	callstack 0
  8763   000506                     ___awmod@divisor:
  8764                           	callstack 0
  8765   000506                     read_prec_or_width@ap:
  8766                           	callstack 0
  8767   000506                     fputc@fp:
  8768                           	callstack 0
  8769   000506                     ??_DELAY_milliseconds:
  8770   000506                     
  8771                           ; 1 bytes @ 0x5
  8772   000506                     	ds	1
  8773   000507                     Nrf24_configRegister@reg:
  8774                           	callstack 0
  8775   000507                     
  8776                           ; 1 bytes @ 0x6
  8777   000507                     	ds	1
  8778   000508                     SPI_read_buff@bytes:
  8779                           	callstack 0
  8780   000508                     SPI_write_buff@bytes:
  8781                           	callstack 0
  8782   000508                     ___awdiv@counter:
  8783                           	callstack 0
  8784   000508                     ___awmod@counter:
  8785                           	callstack 0
  8786   000508                     Nrf24_powerUpRx@dev:
  8787                           	callstack 0
  8788   000508                     ??_fputc:
  8789   000508                     ??_read_prec_or_width:
  8790                           
  8791                           ; 1 bytes @ 0x7
  8792   000508                     	ds	1
  8793   000509                     SPI_read_buff@i:
  8794                           	callstack 0
  8795   000509                     SPI_write_buff@i:
  8796                           	callstack 0
  8797   000509                     ___awdiv@sign:
  8798                           	callstack 0
  8799   000509                     ___awmod@sign:
  8800                           	callstack 0
  8801   000509                     
  8802                           ; 1 bytes @ 0x8
  8803   000509                     	ds	1
  8804   00050A                     ?_abs:
  8805                           	callstack 0
  8806   00050A                     read_prec_or_width@c:
  8807                           	callstack 0
  8808   00050A                     Nrf24_getData@dev:
  8809                           	callstack 0
  8810   00050A                     Nrf24_readRegister@value:
  8811                           	callstack 0
  8812   00050A                     Nrf24_writeRegister@value:
  8813                           	callstack 0
  8814   00050A                     ___awdiv@quotient:
  8815                           	callstack 0
  8816   00050A                     abs@a:
  8817                           	callstack 0
  8818   00050A                     
  8819                           ; 1 bytes @ 0x9
  8820   00050A                     	ds	1
  8821   00050B                     read_prec_or_width@n:
  8822                           	callstack 0
  8823                           
  8824                           ; 2 bytes @ 0xA
  8825   00050B                     	ds	1
  8826   00050C                     Nrf24_readRegister@len:
  8827                           	callstack 0
  8828   00050C                     Nrf24_writeRegister@len:
  8829                           	callstack 0
  8830   00050C                     Nrf24_getData@data:
  8831                           	callstack 0
  8832   00050C                     ??_abs:
  8833                           
  8834                           ; 1 bytes @ 0xB
  8835   00050C                     	ds	1
  8836   00050D                     Nrf24_readRegister@reg:
  8837                           	callstack 0
  8838   00050D                     Nrf24_writeRegister@reg:
  8839                           	callstack 0
  8840   00050D                     stoa@fp:
  8841                           	callstack 0
  8842   00050D                     fputs@s:
  8843                           	callstack 0
  8844   00050D                     
  8845                           ; 1 bytes @ 0xC
  8846   00050D                     	ds	1
  8847   00050E                     ?_Nrf24_setRADDR:
  8848                           	callstack 0
  8849   00050E                     Nrf24_setRADDR@dev:
  8850                           	callstack 0
  8851   00050E                     Nrf24_getStatus@dev:
  8852                           	callstack 0
  8853   00050E                     Nrf24_SetSpeedDataRates@dev:
  8854                           	callstack 0
  8855   00050E                     Nrf24_setRetransmitDelay@dev:
  8856                           	callstack 0
  8857   00050E                     Nrf24_getDataRate@dev:
  8858                           	callstack 0
  8859   00050E                     Nrf24_getCRCLength@dev:
  8860                           	callstack 0
  8861   00050E                     Nrf24_getPALevel@dev:
  8862                           	callstack 0
  8863   00050E                     Nrf24_getRetransmitDelay@dev:
  8864                           	callstack 0
  8865   00050E                     
  8866                           ; 1 bytes @ 0xD
  8867   00050E                     	ds	1
  8868   00050F                     stoa@s:
  8869                           	callstack 0
  8870   00050F                     fputs@fp:
  8871                           	callstack 0
  8872                           
  8873                           ; 2 bytes @ 0xE
  8874   00050F                     	ds	1
  8875   000510                     Nrf24_getStatus@rv:
  8876                           	callstack 0
  8877   000510                     Nrf24_SetSpeedDataRates@val:
  8878                           	callstack 0
  8879   000510                     Nrf24_setRetransmitDelay@val:
  8880                           	callstack 0
  8881   000510                     Nrf24_getDataRate@result:
  8882                           	callstack 0
  8883   000510                     Nrf24_getCRCLength@result:
  8884                           	callstack 0
  8885   000510                     Nrf24_getPALevel@level:
  8886                           	callstack 0
  8887   000510                     Nrf24_getRetransmitDelay@value:
  8888                           	callstack 0
  8889   000510                     Nrf24_setRADDR@adr:
  8890                           	callstack 0
  8891   000510                     
  8892                           ; 1 bytes @ 0xF
  8893   000510                     	ds	1
  8894   000511                     Nrf24_SetSpeedDataRates@value:
  8895                           	callstack 0
  8896   000511                     Nrf24_setRetransmitDelay@value:
  8897                           	callstack 0
  8898   000511                     Nrf24_getDataRate@dr:
  8899                           	callstack 0
  8900   000511                     Nrf24_getCRCLength@AA:
  8901                           	callstack 0
  8902   000511                     fputs@c:
  8903                           	callstack 0
  8904   000511                     Nrf24_config@dev:
  8905                           	callstack 0
  8906   000511                     Nrf24_dataReady@dev:
  8907                           	callstack 0
  8908   000511                     ??_stoa:
  8909                           
  8910                           ; 1 bytes @ 0x10
  8911   000511                     	ds	1
  8912   000512                     Nrf24_getCRCLength@config:
  8913                           	callstack 0
  8914   000512                     AdvancedSettings@dev:
  8915                           	callstack 0
  8916   000512                     fputs@i:
  8917                           	callstack 0
  8918   000512                     ??_Nrf24_setRADDR:
  8919                           
  8920                           ; 1 bytes @ 0x11
  8921   000512                     	ds	1
  8922   000513                     Nrf24_config@channel:
  8923                           	callstack 0
  8924   000513                     Nrf24_dataReady@status:
  8925                           	callstack 0
  8926   000513                     stoa@p:
  8927                           	callstack 0
  8928   000513                     
  8929                           ; 1 bytes @ 0x12
  8930   000513                     	ds	1
  8931   000514                     Nrf24_config@payload:
  8932                           	callstack 0
  8933   000514                     pad@fp:
  8934                           	callstack 0
  8935   000514                     
  8936                           ; 1 bytes @ 0x13
  8937   000514                     	ds	1
  8938   000515                     stoa@w:
  8939                           	callstack 0
  8940   000515                     Nrf24_setRADDR@buffer:
  8941                           	callstack 0
  8942   000515                     
  8943                           ; 1 bytes @ 0x14
  8944   000515                     	ds	1
  8945   000516                     pad@buf:
  8946                           	callstack 0
  8947                           
  8948                           ; 2 bytes @ 0x15
  8949   000516                     	ds	1
  8950   000517                     stoa@cp:
  8951                           	callstack 0
  8952                           
  8953                           ; 2 bytes @ 0x16
  8954   000517                     	ds	1
  8955   000518                     pad@p:
  8956                           	callstack 0
  8957                           
  8958                           ; 2 bytes @ 0x17
  8959   000518                     	ds	1
  8960   000519                     stoa@l:
  8961                           	callstack 0
  8962                           
  8963                           ; 2 bytes @ 0x18
  8964   000519                     	ds	1
  8965   00051A                     Nrf24_setRADDR@ret:
  8966                           	callstack 0
  8967   00051A                     ??_pad:
  8968                           
  8969                           ; 1 bytes @ 0x19
  8970   00051A                     	ds	1
  8971   00051B                     pad@i:
  8972                           	callstack 0
  8973                           
  8974                           ; 2 bytes @ 0x1A
  8975   00051B                     	ds	1
  8976   00051C                     Nrf24_setRADDR@i:
  8977                           	callstack 0
  8978                           
  8979                           ; 2 bytes @ 0x1B
  8980   00051C                     	ds	1
  8981   00051D                     dtoa@fp:
  8982                           	callstack 0
  8983   00051D                     xtoa@fp:
  8984                           	callstack 0
  8985                           
  8986                           ; 2 bytes @ 0x1C
  8987   00051D                     	ds	2
  8988   00051F                     dtoa@d:
  8989                           	callstack 0
  8990   00051F                     xtoa@d:
  8991                           	callstack 0
  8992                           
  8993                           ; 2 bytes @ 0x1E
  8994   00051F                     	ds	2
  8995   000521                     _dtoa$1906:
  8996                           	callstack 0
  8997   000521                     ??_xtoa:
  8998                           
  8999                           ; 1 bytes @ 0x20
  9000   000521                     	ds	2
  9001   000523                     dtoa@p:
  9002                           	callstack 0
  9003                           
  9004                           ; 1 bytes @ 0x22
  9005   000523                     	ds	1
  9006   000524                     xtoa@p:
  9007                           	callstack 0
  9008   000524                     dtoa@w:
  9009                           	callstack 0
  9010                           
  9011                           ; 2 bytes @ 0x23
  9012   000524                     	ds	1
  9013   000525                     xtoa@w:
  9014                           	callstack 0
  9015                           
  9016                           ; 2 bytes @ 0x24
  9017   000525                     	ds	1
  9018   000526                     dtoa@s:
  9019                           	callstack 0
  9020                           
  9021                           ; 1 bytes @ 0x25
  9022   000526                     	ds	1
  9023   000527                     xtoa@c:
  9024                           	callstack 0
  9025   000527                     dtoa@i:
  9026                           	callstack 0
  9027                           
  9028                           ; 2 bytes @ 0x26
  9029   000527                     	ds	1
  9030   000528                     xtoa@i:
  9031                           	callstack 0
  9032                           
  9033                           ; 2 bytes @ 0x27
  9034   000528                     	ds	2
  9035   00052A                     vfpfcnvrt@fp:
  9036                           	callstack 0
  9037                           
  9038                           ; 2 bytes @ 0x29
  9039   00052A                     	ds	2
  9040   00052C                     vfpfcnvrt@fmt:
  9041                           	callstack 0
  9042                           
  9043                           ; 2 bytes @ 0x2B
  9044   00052C                     	ds	2
  9045   00052E                     vfpfcnvrt@ap:
  9046                           	callstack 0
  9047                           
  9048                           ; 2 bytes @ 0x2D
  9049   00052E                     	ds	2
  9050   000530                     ??_vfpfcnvrt:
  9051                           
  9052                           ; 1 bytes @ 0x2F
  9053   000530                     	ds	2
  9054   000532                     vfpfcnvrt@convarg:
  9055                           	callstack 0
  9056                           
  9057                           ; 4 bytes @ 0x31
  9058   000532                     	ds	4
  9059   000536                     vfpfcnvrt@done:
  9060                           	callstack 0
  9061                           
  9062                           ; 1 bytes @ 0x35
  9063   000536                     	ds	1
  9064   000537                     vfpfcnvrt@cp:
  9065                           	callstack 0
  9066                           
  9067                           ; 2 bytes @ 0x36
  9068   000537                     	ds	2
  9069   000539                     ?_vfprintf:
  9070                           	callstack 0
  9071   000539                     vfprintf@fp:
  9072                           	callstack 0
  9073                           
  9074                           ; 2 bytes @ 0x38
  9075   000539                     	ds	2
  9076   00053B                     vfprintf@fmt:
  9077                           	callstack 0
  9078                           
  9079                           ; 2 bytes @ 0x3A
  9080   00053B                     	ds	2
  9081   00053D                     vfprintf@ap:
  9082                           	callstack 0
  9083                           
  9084                           ; 2 bytes @ 0x3C
  9085   00053D                     	ds	2
  9086   00053F                     vfprintf@cfmt:
  9087                           	callstack 0
  9088   00053F                     
  9089                           ; 1 bytes @ 0x3E
  9090   00053F                     	ds	2
  9091   000541                     ?_printf:
  9092                           	callstack 0
  9093   000541                     printf@fmt:
  9094                           	callstack 0
  9095                           
  9096                           ; 2 bytes @ 0x40
  9097   000541                     	ds	14
  9098   00054F                     printf@ap:
  9099                           	callstack 0
  9100   00054F                     
  9101                           ; 1 bytes @ 0x4E
  9102   00054F                     	ds	2
  9103   000551                     Nrf24_print_address_register@dev:
  9104                           	callstack 0
  9105   000551                     Nrf24_print_byte_register@dev:
  9106                           	callstack 0
  9107   000551                     ??_Nrf24_print_status:
  9108                           
  9109                           ; 1 bytes @ 0x50
  9110   000551                     	ds	1
  9111   000552                     Nrf24_print_status@status:
  9112                           	callstack 0
  9113                           
  9114                           ; 1 bytes @ 0x51
  9115   000552                     	ds	1
  9116   000553                     Nrf24_print_address_register@name:
  9117                           	callstack 0
  9118   000553                     Nrf24_print_byte_register@name:
  9119                           	callstack 0
  9120                           
  9121                           ; 2 bytes @ 0x52
  9122   000553                     	ds	2
  9123   000555                     Nrf24_print_address_register@reg:
  9124                           	callstack 0
  9125   000555                     Nrf24_print_byte_register@reg:
  9126                           	callstack 0
  9127                           
  9128                           ; 1 bytes @ 0x54
  9129   000555                     	ds	1
  9130   000556                     Nrf24_print_address_register@qty:
  9131                           	callstack 0
  9132   000556                     Nrf24_print_byte_register@qty:
  9133                           	callstack 0
  9134                           
  9135                           ; 1 bytes @ 0x55
  9136   000556                     	ds	1
  9137   000557                     Nrf24_print_byte_register@buffer:
  9138                           	callstack 0
  9139   000557                     ??_Nrf24_print_address_register:
  9140   000557                     
  9141                           ; 1 bytes @ 0x56
  9142   000557                     	ds	1
  9143   000558                     Nrf24_printDetails@dev:
  9144                           	callstack 0
  9145                           
  9146                           ; 2 bytes @ 0x57
  9147   000558                     	ds	2
  9148   00055A                     
  9149                           ; 1 bytes @ 0x59
  9150 ;;
  9151 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  9152 ;;
  9153 ;; *************** function _main *****************
  9154 ;; Defined at:
  9155 ;;		line 112 in file "main.c"
  9156 ;; Parameters:    Size  Location     Type
  9157 ;;		None
  9158 ;; Auto vars:     Size  Location     Type
  9159 ;;		None
  9160 ;; Return value:  Size  Location     Type
  9161 ;;                  1    wreg      void 
  9162 ;; Registers used:
  9163 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9164 ;; Tracked objects:
  9165 ;;		On entry : 0/0
  9166 ;;		On exit  : 0/0
  9167 ;;		Unchanged: 0/0
  9168 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  9169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9173 ;;Total ram usage:        0 bytes
  9174 ;; Hardware stack levels required when called: 14
  9175 ;; This function calls:
  9176 ;;		_SYSTEM_Initialize
  9177 ;;		_TMR0_OverflowCallbackRegister
  9178 ;;		_TMR0_Start
  9179 ;;		_receiver
  9180 ;; This function is called by:
  9181 ;;		Startup code after reset
  9182 ;; This function uses a non-reentrant model
  9183 ;;
  9184                           
  9185                           	psect	text0
  9186   0116B2                     __ptext0:
  9187                           	callstack 0
  9188   0116B2                     _main:
  9189                           	callstack 113
  9190   0116B2                     
  9191                           ;main.c: 114:     SYSTEM_Initialize();
  9192   0116B2  EC60  F08C         	call	_SYSTEM_Initialize	;wreg free
  9193   0116B6                     
  9194                           ;main.c: 115:     (INTCON0bits.GIE = 1);
  9195   0116B6  8ED6               	bsf	214,7,c	;volatile
  9196                           
  9197                           ;main.c: 116:     TMR0_OverflowCallbackRegister(led_toggle);
  9198   0116B8  0E8A               	movlw	low _led_toggle
  9199   0116BA  6E04               	movwf	TMR0_OverflowCallbackRegister@CallbackHandler^(0+1280),c
  9200   0116BC  0E17               	movlw	high _led_toggle
  9201   0116BE  6E05               	movwf	(TMR0_OverflowCallbackRegister@CallbackHandler+1)^(0+1280),c
  9202   0116C0  0E01               	movlw	low (_led_toggle shr (0+16))
  9203   0116C2  6E06               	movwf	(TMR0_OverflowCallbackRegister@CallbackHandler+2)^(0+1280),c
  9204   0116C4  EC75  F08C         	call	_TMR0_OverflowCallbackRegister	;wreg free
  9205   0116C8                     
  9206                           ;main.c: 117:     TMR0_Start();
  9207   0116C8  EC97  F08C         	call	_TMR0_Start	;wreg free
  9208   0116CC                     
  9209                           ;main.c: 121:  receiver(((void*)0));
  9210   0116CC  0E00               	movlw	0
  9211   0116CE  0105               	movlb	5	; () banked
  9212   0116D0  6FA6               	movwf	receiver@pvParameters& (0+255),b
  9213   0116D2  0E00               	movlw	0
  9214   0116D4  6FA7               	movwf	(receiver@pvParameters+1)& (0+255),b
  9215   0116D6  ECBC  F084         	call	_receiver	;wreg free
  9216   0116DA  EF0D  F000         	goto	start
  9217   0116DE                     __end_of_main:
  9218                           	callstack 0
  9219                           
  9220 ;; *************** function _receiver *****************
  9221 ;; Defined at:
  9222 ;;		line 41 in file "main.c"
  9223 ;; Parameters:    Size  Location     Type
  9224 ;;  pvParameters    2   14[BANK5 ] PTR void 
  9225 ;;		 -> NULL(0), 
  9226 ;; Auto vars:     Size  Location     Type
  9227 ;;  buf            32   16[BANK5 ] unsigned char [32]
  9228 ;;  dev             3   50[BANK5 ] struct .
  9229 ;;  ret             2   48[BANK5 ] int 
  9230 ;;  channel         1    0        unsigned char 
  9231 ;;  payload         1    0        unsigned char 
  9232 ;; Return value:  Size  Location     Type
  9233 ;;                  1    wreg      void 
  9234 ;; Registers used:
  9235 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9236 ;; Tracked objects:
  9237 ;;		On entry : 0/0
  9238 ;;		On exit  : 0/0
  9239 ;;		Unchanged: 0/0
  9240 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  9241 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9242 ;;      Locals:         0      37       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9244 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9245 ;;Total ram usage:       39 bytes
  9246 ;; Hardware stack levels used: 1
  9247 ;; Hardware stack levels required when called: 13
  9248 ;; This function calls:
  9249 ;;		_AdvancedSettings
  9250 ;;		_DELAY_milliseconds
  9251 ;;		_Nrf24_config
  9252 ;;		_Nrf24_dataReady
  9253 ;;		_Nrf24_getData
  9254 ;;		_Nrf24_init
  9255 ;;		_Nrf24_printDetails
  9256 ;;		_Nrf24_setRADDR
  9257 ;; This function is called by:
  9258 ;;		_main
  9259 ;; This function uses a non-reentrant model
  9260 ;;
  9261                           
  9262                           	psect	text1
  9263   010978                     __ptext1:
  9264                           	callstack 0
  9265   010978                     _receiver:
  9266                           	callstack 113
  9267   010978                     
  9268                           ;main.c: 41: void receiver(void *pvParameters);main.c: 42: {;main.c: 43:  NRF24_t dev;;m
      +                          ain.c: 44:  Nrf24_init(&dev);
  9269   010978  0ECA               	movlw	low receiver@dev
  9270   01097A  6E05               	movwf	Nrf24_init@dev^(0+1280),c
  9271   01097C  0E05               	movlw	high receiver@dev
  9272   01097E  6E06               	movwf	(Nrf24_init@dev+1)^(0+1280),c
  9273   010980  EC6F  F08B         	call	_Nrf24_init	;wreg free
  9274   010984                     
  9275                           ;main.c: 47:  Nrf24_config(&dev, channel, payload);
  9276   010984  0ECA               	movlw	low receiver@dev
  9277   010986  6E11               	movwf	Nrf24_config@dev^(0+1280),c
  9278   010988  0E05               	movlw	high receiver@dev
  9279   01098A  6E12               	movwf	(Nrf24_config@dev+1)^(0+1280),c
  9280   01098C  0E73               	movlw	115
  9281   01098E  6E13               	movwf	Nrf24_config@channel^(0+1280),c
  9282   010990  0E20               	movlw	32
  9283   010992  6E14               	movwf	Nrf24_config@payload^(0+1280),c
  9284   010994  EC9A  F088         	call	_Nrf24_config	;wreg free
  9285   010998                     
  9286                           ;main.c: 50:  int ret = Nrf24_setRADDR(&dev, (uint8_t *)"FGHIJ");
  9287   010998  0ECA               	movlw	low receiver@dev
  9288   01099A  6E0E               	movwf	Nrf24_setRADDR@dev^(0+1280),c
  9289   01099C  0E05               	movlw	high receiver@dev
  9290   01099E  6E0F               	movwf	(Nrf24_setRADDR@dev+1)^(0+1280),c
  9291   0109A0  0EF5               	movlw	low STR_1
  9292   0109A2  6E10               	movwf	Nrf24_setRADDR@adr^(0+1280),c
  9293   0109A4  0EFF               	movlw	high STR_1
  9294   0109A6  6E11               	movwf	(Nrf24_setRADDR@adr+1)^(0+1280),c
  9295   0109A8  EC0D  F088         	call	_Nrf24_setRADDR	;wreg free
  9296   0109AC  C50E  F5C8         	movff	?_Nrf24_setRADDR,receiver@ret
  9297   0109B0  C50F  F5C9         	movff	?_Nrf24_setRADDR+1,receiver@ret+1
  9298   0109B4                     
  9299                           ;main.c: 51:  if (ret != 0) {
  9300   0109B4  0105               	movlb	5	; () banked
  9301   0109B6  51C8               	movf	receiver@ret& (0+255),w,b
  9302   0109B8  11C9               	iorwf	(receiver@ret+1)& (0+255),w,b
  9303   0109BA  B4D8               	btfsc	status,2,c
  9304   0109BC  EFE2  F084         	goto	u3391
  9305   0109C0  EFE4  F084         	goto	u3390
  9306   0109C4                     u3391:
  9307   0109C4  EFEC  F084         	goto	l4230
  9308   0109C8                     u3390:
  9309   0109C8                     l4228:
  9310   0109C8  0E00               	movlw	0
  9311   0109CA  6E05               	movwf	(DELAY_milliseconds@milliseconds+1)^(0+1280),c
  9312   0109CC  0E01               	movlw	1
  9313   0109CE  6E04               	movwf	DELAY_milliseconds@milliseconds^(0+1280),c
  9314   0109D0  EC29  F08B         	call	_DELAY_milliseconds	;wreg free
  9315   0109D4  EFE4  F084         	goto	l4228
  9316   0109D8                     l4230:
  9317                           
  9318                           ; BSR set to: 5
  9319                           ;main.c: 56:  AdvancedSettings(&dev);
  9320   0109D8  0ECA               	movlw	low receiver@dev
  9321   0109DA  6E12               	movwf	AdvancedSettings@dev^(0+1280),c
  9322   0109DC  0E05               	movlw	high receiver@dev
  9323   0109DE  6E13               	movwf	(AdvancedSettings@dev+1)^(0+1280),c
  9324   0109E0  EC11  F08C         	call	_AdvancedSettings	;wreg free
  9325   0109E4                     
  9326                           ;main.c: 60:  Nrf24_printDetails(&dev);
  9327   0109E4  0ECA               	movlw	low receiver@dev
  9328   0109E6  6E58               	movwf	Nrf24_printDetails@dev^(0+1280),c
  9329   0109E8  0E05               	movlw	high receiver@dev
  9330   0109EA  6E59               	movwf	(Nrf24_printDetails@dev+1)^(0+1280),c
  9331   0109EC  ECC7  F081         	call	_Nrf24_printDetails	;wreg free
  9332   0109F0                     l4234:
  9333                           
  9334                           ;main.c: 66:   if (Nrf24_dataReady(&dev) == 0) break;
  9335   0109F0  0ECA               	movlw	low receiver@dev
  9336   0109F2  6E11               	movwf	Nrf24_dataReady@dev^(0+1280),c
  9337   0109F4  0E05               	movlw	high receiver@dev
  9338   0109F6  6E12               	movwf	(Nrf24_dataReady@dev+1)^(0+1280),c
  9339   0109F8  ECEC  F08B         	call	_Nrf24_dataReady	;wreg free
  9340   0109FC  0900               	iorlw	0
  9341   0109FE  A4D8               	btfss	status,2,c
  9342   010A00  EF04  F085         	goto	u3401
  9343   010A04  EF06  F085         	goto	u3400
  9344   010A08                     u3401:
  9345   010A08  EF08  F085         	goto	l4238
  9346   010A0C                     u3400:
  9347   010A0C  EF14  F085         	goto	l4240
  9348   010A10                     l4238:
  9349                           
  9350                           ;main.c: 67:   Nrf24_getData(&dev, buf);
  9351   010A10  0ECA               	movlw	low receiver@dev
  9352   010A12  6E0A               	movwf	Nrf24_getData@dev^(0+1280),c
  9353   010A14  0E05               	movlw	high receiver@dev
  9354   010A16  6E0B               	movwf	(Nrf24_getData@dev+1)^(0+1280),c
  9355   010A18  0EA8               	movlw	low receiver@buf
  9356   010A1A  6E0C               	movwf	Nrf24_getData@data^(0+1280),c
  9357   010A1C  0E05               	movlw	high receiver@buf
  9358   010A1E  6E0D               	movwf	(Nrf24_getData@data+1)^(0+1280),c
  9359   010A20  ECF7  F08A         	call	_Nrf24_getData	;wreg free
  9360   010A24  EFF8  F084         	goto	l4234
  9361   010A28                     l4240:
  9362                           
  9363                           ;main.c: 72:   if (Nrf24_dataReady(&dev)) {
  9364   010A28  0ECA               	movlw	low receiver@dev
  9365   010A2A  6E11               	movwf	Nrf24_dataReady@dev^(0+1280),c
  9366   010A2C  0E05               	movlw	high receiver@dev
  9367   010A2E  6E12               	movwf	(Nrf24_dataReady@dev+1)^(0+1280),c
  9368   010A30  ECEC  F08B         	call	_Nrf24_dataReady	;wreg free
  9369   010A34  0900               	iorlw	0
  9370   010A36  B4D8               	btfsc	status,2,c
  9371   010A38  EF20  F085         	goto	u3411
  9372   010A3C  EF22  F085         	goto	u3410
  9373   010A40                     u3411:
  9374   010A40  EF2C  F085         	goto	l4244
  9375   010A44                     u3410:
  9376   010A44                     
  9377                           ;main.c: 73:    Nrf24_getData(&dev, buf);
  9378   010A44  0ECA               	movlw	low receiver@dev
  9379   010A46  6E0A               	movwf	Nrf24_getData@dev^(0+1280),c
  9380   010A48  0E05               	movlw	high receiver@dev
  9381   010A4A  6E0B               	movwf	(Nrf24_getData@dev+1)^(0+1280),c
  9382   010A4C  0EA8               	movlw	low receiver@buf
  9383   010A4E  6E0C               	movwf	Nrf24_getData@data^(0+1280),c
  9384   010A50  0E05               	movlw	high receiver@buf
  9385   010A52  6E0D               	movwf	(Nrf24_getData@data+1)^(0+1280),c
  9386   010A54  ECF7  F08A         	call	_Nrf24_getData	;wreg free
  9387   010A58                     l4244:
  9388                           
  9389                           ;main.c: 75:   DELAY_milliseconds(1);
  9390   010A58  0E00               	movlw	0
  9391   010A5A  6E05               	movwf	(DELAY_milliseconds@milliseconds+1)^(0+1280),c
  9392   010A5C  0E01               	movlw	1
  9393   010A5E  6E04               	movwf	DELAY_milliseconds@milliseconds^(0+1280),c
  9394   010A60  EC29  F08B         	call	_DELAY_milliseconds	;wreg free
  9395   010A64  EF14  F085         	goto	l4240
  9396   010A68  0012               	return		;funcret
  9397   010A6A                     __end_of_receiver:
  9398                           	callstack 0
  9399                           
  9400 ;; *************** function _Nrf24_setRADDR *****************
  9401 ;; Defined at:
  9402 ;;		line 102 in file "mirf.c"
  9403 ;; Parameters:    Size  Location     Type
  9404 ;;  dev             2   13[COMRAM] PTR struct .
  9405 ;;		 -> receiver@dev(3), 
  9406 ;;  adr             2   15[COMRAM] PTR unsigned char 
  9407 ;;		 -> STR_1(6), 
  9408 ;; Auto vars:     Size  Location     Type
  9409 ;;  i               2   27[COMRAM] int 
  9410 ;;  buffer          5   20[COMRAM] unsigned char [5]
  9411 ;;  ret             2   25[COMRAM] int 
  9412 ;; Return value:  Size  Location     Type
  9413 ;;                  2   13[COMRAM] int 
  9414 ;; Registers used:
  9415 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9416 ;; Tracked objects:
  9417 ;;		On entry : 0/0
  9418 ;;		On exit  : 0/0
  9419 ;;		Unchanged: 0/0
  9420 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  9421 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9422 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9423 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9424 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9425 ;;Total ram usage:       16 bytes
  9426 ;; Hardware stack levels used: 1
  9427 ;; Hardware stack levels required when called: 6
  9428 ;; This function calls:
  9429 ;;		_Nrf24_readRegister
  9430 ;;		_Nrf24_writeRegister
  9431 ;; This function is called by:
  9432 ;;		_receiver
  9433 ;; This function uses a non-reentrant model
  9434 ;;
  9435                           
  9436                           	psect	text2
  9437   01101A                     __ptext2:
  9438                           	callstack 0
  9439   01101A                     _Nrf24_setRADDR:
  9440                           	callstack 119
  9441   01101A                     
  9442                           ;mirf.c: 102: int Nrf24_setRADDR(NRF24_t * dev, uint8_t * adr);mirf.c: 103: {;mirf.c: 10
      +                          4:  int ret = 0;
  9443   01101A  0E00               	movlw	0
  9444   01101C  6E1B               	movwf	(Nrf24_setRADDR@ret+1)^(0+1280),c
  9445   01101E  0E00               	movlw	0
  9446   011020  6E1A               	movwf	Nrf24_setRADDR@ret^(0+1280),c
  9447   011022                     
  9448                           ;mirf.c: 105:  Nrf24_writeRegister(0x0B, adr, 5);
  9449   011022  C510  F50A         	movff	Nrf24_setRADDR@adr,Nrf24_writeRegister@value
  9450   011026  C511  F50B         	movff	Nrf24_setRADDR@adr+1,Nrf24_writeRegister@value+1
  9451   01102A  0E05               	movlw	5
  9452   01102C  6E0C               	movwf	Nrf24_writeRegister@len^(0+1280),c
  9453   01102E  0E0B               	movlw	11
  9454   011030  ECDE  F08A         	call	_Nrf24_writeRegister
  9455   011034                     
  9456                           ;mirf.c: 106:  uint8_t buffer[5];;mirf.c: 107:  Nrf24_readRegister(0x0B, buffer, sizeof(
      +                          buffer));
  9457   011034  0E15               	movlw	low Nrf24_setRADDR@buffer
  9458   011036  6E0A               	movwf	Nrf24_readRegister@value^(0+1280),c
  9459   011038  0E05               	movlw	high Nrf24_setRADDR@buffer
  9460   01103A  6E0B               	movwf	(Nrf24_readRegister@value+1)^(0+1280),c
  9461   01103C  0E05               	movlw	5
  9462   01103E  6E0C               	movwf	Nrf24_readRegister@len^(0+1280),c
  9463   011040  0E0B               	movlw	11
  9464   011042  EC41  F08B         	call	_Nrf24_readRegister
  9465   011046                     
  9466                           ;mirf.c: 108:  for (int i=0;i<5;i++) {
  9467   011046  0E00               	movlw	0
  9468   011048  6E1D               	movwf	(Nrf24_setRADDR@i+1)^(0+1280),c
  9469   01104A  0E00               	movlw	0
  9470   01104C  6E1C               	movwf	Nrf24_setRADDR@i^(0+1280),c
  9471   01104E                     l4180:
  9472                           
  9473                           ;mirf.c: 109:   if (adr[i] != buffer[i]) ret = -1;
  9474   01104E  0E15               	movlw	low Nrf24_setRADDR@buffer
  9475   011050  241C               	addwf	Nrf24_setRADDR@i^(0+1280),w,c
  9476   011052  6ED9               	movwf	fsr2l,c
  9477   011054  0E05               	movlw	high Nrf24_setRADDR@buffer
  9478   011056  201D               	addwfc	(Nrf24_setRADDR@i+1)^(0+1280),w,c
  9479   011058  6EDA               	movwf	fsr2h,c
  9480   01105A  501C               	movf	Nrf24_setRADDR@i^(0+1280),w,c
  9481   01105C  2410               	addwf	Nrf24_setRADDR@adr^(0+1280),w,c
  9482   01105E  6E13               	movwf	(??_Nrf24_setRADDR+1)^(0+1280),c
  9483   011060  501D               	movf	(Nrf24_setRADDR@i+1)^(0+1280),w,c
  9484   011062  2011               	addwfc	(Nrf24_setRADDR@adr+1)^(0+1280),w,c
  9485   011064  6E14               	movwf	(??_Nrf24_setRADDR+2)^(0+1280),c
  9486   011066  C513  F4F6         	movff	??_Nrf24_setRADDR+1,tblptrl
  9487   01106A  C514  F4F7         	movff	??_Nrf24_setRADDR+2,tblptrh
  9488   01106E                     	if	0	;tblptru may be non-zero
  9489   01106E                     	endif
  9490   01106E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9491   01106E  0E00               	movlw	low (__mediumconst shr (0+16))
  9492   011070  6EF8               	movwf	tblptru,c
  9493   011072                     	endif
  9494   011072  50DE               	movf	postinc2,w,c
  9495   011074  0009               	tblrd		*+
  9496   011076  18F5               	xorwf	tablat,w,c
  9497   011078  B4D8               	btfsc	status,2,c
  9498   01107A  EF41  F088         	goto	u3361
  9499   01107E  EF43  F088         	goto	u3360
  9500   011082                     u3361:
  9501   011082  EF45  F088         	goto	l4184
  9502   011086                     u3360:
  9503   011086  681A               	setf	Nrf24_setRADDR@ret^(0+1280),c
  9504   011088  681B               	setf	(Nrf24_setRADDR@ret+1)^(0+1280),c
  9505   01108A                     l4184:
  9506                           
  9507                           ;mirf.c: 110:  }
  9508   01108A  4A1C               	infsnz	Nrf24_setRADDR@i^(0+1280),f,c
  9509   01108C  2A1D               	incf	(Nrf24_setRADDR@i+1)^(0+1280),f,c
  9510   01108E  BE1D               	btfsc	(Nrf24_setRADDR@i+1)^(0+1280),7,c
  9511   011090  EF53  F088         	goto	u3371
  9512   011094  501D               	movf	(Nrf24_setRADDR@i+1)^(0+1280),w,c
  9513   011096  E109               	bnz	u3370
  9514   011098  0E05               	movlw	5
  9515   01109A  5C1C               	subwf	Nrf24_setRADDR@i^(0+1280),w,c
  9516   01109C  A0D8               	btfss	status,0,c
  9517   01109E  EF53  F088         	goto	u3371
  9518   0110A2  EF55  F088         	goto	u3370
  9519   0110A6                     u3371:
  9520   0110A6  EF27  F088         	goto	l4180
  9521   0110AA                     u3370:
  9522   0110AA                     
  9523                           ;mirf.c: 111:  return ret;
  9524   0110AA  C51A  F50E         	movff	Nrf24_setRADDR@ret,?_Nrf24_setRADDR
  9525   0110AE  C51B  F50F         	movff	Nrf24_setRADDR@ret+1,?_Nrf24_setRADDR+1
  9526   0110B2  0012               	return		;funcret
  9527   0110B4                     __end_of_Nrf24_setRADDR:
  9528                           	callstack 0
  9529                           
  9530 ;; *************** function _Nrf24_writeRegister *****************
  9531 ;; Defined at:
  9532 ;;		line 218 in file "mirf.c"
  9533 ;; Parameters:    Size  Location     Type
  9534 ;;  reg             1    wreg     unsigned char 
  9535 ;;  value           2    9[COMRAM] PTR unsigned char 
  9536 ;;		 -> STR_1(6), 
  9537 ;;  len             1   11[COMRAM] unsigned char 
  9538 ;; Auto vars:     Size  Location     Type
  9539 ;;  reg             1   12[COMRAM] unsigned char 
  9540 ;; Return value:  Size  Location     Type
  9541 ;;                  1    wreg      void 
  9542 ;; Registers used:
  9543 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9544 ;; Tracked objects:
  9545 ;;		On entry : 0/0
  9546 ;;		On exit  : 0/0
  9547 ;;		Unchanged: 0/0
  9548 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  9549 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9550 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9552 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9553 ;;Total ram usage:        4 bytes
  9554 ;; Hardware stack levels used: 1
  9555 ;; Hardware stack levels required when called: 5
  9556 ;; This function calls:
  9557 ;;		_SPI1_ByteExchange
  9558 ;;		_SPI_write_buff
  9559 ;; This function is called by:
  9560 ;;		_Nrf24_setRADDR
  9561 ;;		_Nrf24_setTADDR
  9562 ;; This function uses a non-reentrant model
  9563 ;;
  9564                           
  9565                           	psect	text3
  9566   0115BC                     __ptext3:
  9567                           	callstack 0
  9568   0115BC                     _Nrf24_writeRegister:
  9569                           	callstack 119
  9570                           
  9571                           ;incstack = 0
  9572                           ;Nrf24_writeRegister@reg stored from wreg
  9573   0115BC  6E0D               	movwf	Nrf24_writeRegister@reg^(0+1280),c
  9574   0115BE                     
  9575                           ;mirf.c: 218: void Nrf24_writeRegister(uint8_t reg, uint8_t * value, uint8_t len);mirf.c
      +                          : 219: {;mirf.c: 220:     if(len) {
  9576   0115BE  500C               	movf	Nrf24_writeRegister@len^(0+1280),w,c
  9577   0115C0  B4D8               	btfsc	status,2,c
  9578   0115C2  EFE5  F08A         	goto	u3191
  9579   0115C6  EFE7  F08A         	goto	u3190
  9580   0115CA                     u3191:
  9581   0115CA  EFF6  F08A         	goto	l644
  9582   0115CE                     u3190:
  9583   0115CE  92C0               	bcf	192,1,c	;volatile
  9584   0115D0                     
  9585                           ;mirf.c: 222:         SPI1_ByteExchange(0x20 | (0x1F & reg));
  9586   0115D0  500D               	movf	Nrf24_writeRegister@reg^(0+1280),w,c
  9587   0115D2  0B1F               	andlw	31
  9588   0115D4  0920               	iorlw	32
  9589   0115D6  EC9B  F08B         	call	_SPI1_ByteExchange
  9590   0115DA                     
  9591                           ;mirf.c: 223:         SPI_write_buff(value, len);
  9592   0115DA  C50A  F506         	movff	Nrf24_writeRegister@value,SPI_write_buff@buffer
  9593   0115DE  C50B  F507         	movff	Nrf24_writeRegister@value+1,SPI_write_buff@buffer+1
  9594   0115E2  C50C  F508         	movff	Nrf24_writeRegister@len,SPI_write_buff@bytes
  9595   0115E6  EC10  F08A         	call	_SPI_write_buff	;wreg free
  9596   0115EA  82C0               	bsf	192,1,c	;volatile
  9597   0115EC                     l644:
  9598   0115EC  0012               	return		;funcret
  9599   0115EE                     __end_of_Nrf24_writeRegister:
  9600                           	callstack 0
  9601                           
  9602 ;; *************** function _SPI_write_buff *****************
  9603 ;; Defined at:
  9604 ;;		line 54 in file "mirf.c"
  9605 ;; Parameters:    Size  Location     Type
  9606 ;;  buffer          2    5[COMRAM] PTR unsigned char 
  9607 ;;		 -> STR_1(6), 
  9608 ;;  bytes           1    7[COMRAM] unsigned char 
  9609 ;; Auto vars:     Size  Location     Type
  9610 ;;  i               1    8[COMRAM] unsigned char 
  9611 ;; Return value:  Size  Location     Type
  9612 ;;                  1    wreg      void 
  9613 ;; Registers used:
  9614 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9615 ;; Tracked objects:
  9616 ;;		On entry : 0/0
  9617 ;;		On exit  : 0/0
  9618 ;;		Unchanged: 0/0
  9619 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  9620 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9621 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9623 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9624 ;;Total ram usage:        4 bytes
  9625 ;; Hardware stack levels used: 1
  9626 ;; Hardware stack levels required when called: 4
  9627 ;; This function calls:
  9628 ;;		_DELAY_microseconds
  9629 ;;		_SPI1_ByteExchange
  9630 ;; This function is called by:
  9631 ;;		_Nrf24_writeRegister
  9632 ;;		_Nrf24_send
  9633 ;; This function uses a non-reentrant model
  9634 ;;
  9635                           
  9636                           	psect	text4
  9637   011420                     __ptext4:
  9638                           	callstack 0
  9639   011420                     _SPI_write_buff:
  9640                           	callstack 119
  9641   011420  92C0               	bcf	192,1,c	;volatile
  9642   011422                     
  9643                           ;mirf.c: 56:     unsigned char i;;mirf.c: 57:     for (i = 0; i < bytes; i++) {
  9644   011422  6A09               	clrf	SPI_write_buff@i^(0+1280),c
  9645   011424  EF27  F08A         	goto	l3994
  9646   011428                     l3986:
  9647                           
  9648                           ;mirf.c: 58:         SPI1_ByteExchange(*buffer);
  9649   011428  C506  F4F6         	movff	SPI_write_buff@buffer,tblptrl
  9650   01142C  C507  F4F7         	movff	SPI_write_buff@buffer+1,tblptrh
  9651   011430                     	if	0	;tblptru may be non-zero
  9652   011430                     	endif
  9653   011430                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9654   011430  0E00               	movlw	low (__mediumconst shr (0+16))
  9655   011432  6EF8               	movwf	tblptru,c
  9656   011434                     	endif
  9657   011434  0008               	tblrd		*
  9658   011436  50F5               	movf	tablat,w,c
  9659   011438  EC9B  F08B         	call	_SPI1_ByteExchange
  9660   01143C                     
  9661                           ;mirf.c: 59:         buffer++;
  9662   01143C  4A06               	infsnz	SPI_write_buff@buffer^(0+1280),f,c
  9663   01143E  2A07               	incf	(SPI_write_buff@buffer+1)^(0+1280),f,c
  9664   011440                     
  9665                           ;mirf.c: 60:         DELAY_microseconds(10);
  9666   011440  0E00               	movlw	0
  9667   011442  6E05               	movwf	(DELAY_microseconds@microseconds+1)^(0+1280),c
  9668   011444  0E0A               	movlw	10
  9669   011446  6E04               	movwf	DELAY_microseconds@microseconds^(0+1280),c
  9670   011448  EC72  F089         	call	_DELAY_microseconds	;wreg free
  9671   01144C                     
  9672                           ;mirf.c: 61:     }
  9673   01144C  2A09               	incf	SPI_write_buff@i^(0+1280),f,c
  9674   01144E                     l3994:
  9675   01144E  5008               	movf	SPI_write_buff@bytes^(0+1280),w,c
  9676   011450  5C09               	subwf	SPI_write_buff@i^(0+1280),w,c
  9677   011452  A0D8               	btfss	status,0,c
  9678   011454  EF2E  F08A         	goto	u3151
  9679   011458  EF30  F08A         	goto	u3150
  9680   01145C                     u3151:
  9681   01145C  EF14  F08A         	goto	l3986
  9682   011460                     u3150:
  9683   011460  82C0               	bsf	192,1,c	;volatile
  9684   011462  0012               	return		;funcret
  9685   011464                     __end_of_SPI_write_buff:
  9686                           	callstack 0
  9687                           
  9688 ;; *************** function _DELAY_microseconds *****************
  9689 ;; Defined at:
  9690 ;;		line 43 in file "mcc_generated_files/timer/src/delay.c"
  9691 ;; Parameters:    Size  Location     Type
  9692 ;;  microseconds    2    3[COMRAM] unsigned short 
  9693 ;; Auto vars:     Size  Location     Type
  9694 ;;		None
  9695 ;; Return value:  Size  Location     Type
  9696 ;;                  1    wreg      void 
  9697 ;; Registers used:
  9698 ;;		wreg, status,2, status,0
  9699 ;; Tracked objects:
  9700 ;;		On entry : 0/0
  9701 ;;		On exit  : 0/0
  9702 ;;		Unchanged: 0/0
  9703 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  9704 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9707 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9708 ;;Total ram usage:        2 bytes
  9709 ;; Hardware stack levels used: 1
  9710 ;; Hardware stack levels required when called: 3
  9711 ;; This function calls:
  9712 ;;		Nothing
  9713 ;; This function is called by:
  9714 ;;		_SPI_write_buff
  9715 ;; This function uses a non-reentrant model
  9716 ;;
  9717                           
  9718                           	psect	text5
  9719   0112E4                     __ptext5:
  9720                           	callstack 0
  9721   0112E4                     _DELAY_microseconds:
  9722                           	callstack 119
  9723   0112E4                     
  9724                           ;mcc_generated_files/timer/src/delay.c: 44:     while( microseconds >= 32)
  9725   0112E4  EF7C  F089         	goto	l3062
  9726   0112E8                     l3058:
  9727                           
  9728                           ;mcc_generated_files/timer/src/delay.c: 45:     {;mcc_generated_files/timer/src/delay.c:
      +                           46:         _delay((unsigned long)((32)*(64000000U/4000000.0)));
  9729   0112E8  0EAA               	movlw	170
  9730   0112EA                     u3577:
  9731   0112EA  2EE8               	decfsz	wreg,f,c
  9732   0112EC  D7FE               	bra	u3577
  9733   0112EE  D000               	nop2	
  9734   0112F0                     
  9735                           ;mcc_generated_files/timer/src/delay.c: 47:         microseconds -= 32;
  9736   0112F0  0E20               	movlw	32
  9737   0112F2  5E04               	subwf	DELAY_microseconds@microseconds^(0+1280),f,c
  9738   0112F4  0E00               	movlw	0
  9739   0112F6  5A05               	subwfb	(DELAY_microseconds@microseconds+1)^(0+1280),f,c
  9740   0112F8                     l3062:
  9741                           
  9742                           ;mcc_generated_files/timer/src/delay.c: 44:     while( microseconds >= 32)
  9743   0112F8  5005               	movf	(DELAY_microseconds@microseconds+1)^(0+1280),w,c
  9744   0112FA  E107               	bnz	u1921
  9745   0112FC  0E20               	movlw	32
  9746   0112FE  5C04               	subwf	DELAY_microseconds@microseconds^(0+1280),w,c
  9747   011300  B0D8               	btfsc	status,0,c
  9748   011302  EF85  F089         	goto	u1921
  9749   011306  EF87  F089         	goto	u1920
  9750   01130A                     u1921:
  9751   01130A  EF74  F089         	goto	l3058
  9752   01130E                     u1920:
  9753   01130E  EF8D  F089         	goto	l3066
  9754   011312                     l3064:
  9755                           
  9756                           ;mcc_generated_files/timer/src/delay.c: 51:     {;mcc_generated_files/timer/src/delay.c:
      +                           52:         _delay((unsigned long)((1)*(64000000U/4000000.0)));
  9757   011312  0E05               	movlw	5
  9758   011314                     u3587:
  9759   011314  2EE8               	decfsz	wreg,f,c
  9760   011316  D7FE               	bra	u3587
  9761   011318  0000               	nop	
  9762   01131A                     l3066:
  9763                           
  9764                           ;mcc_generated_files/timer/src/delay.c: 50:     while(microseconds--)
  9765   01131A  0604               	decf	DELAY_microseconds@microseconds^(0+1280),f,c
  9766   01131C  A0D8               	btfss	status,0,c
  9767   01131E  0605               	decf	(DELAY_microseconds@microseconds+1)^(0+1280),f,c
  9768   011320  2804               	incf	DELAY_microseconds@microseconds^(0+1280),w,c
  9769   011322  E106               	bnz	u1931
  9770   011324  2805               	incf	(DELAY_microseconds@microseconds+1)^(0+1280),w,c
  9771   011326  A4D8               	btfss	status,2,c
  9772   011328  EF98  F089         	goto	u1931
  9773   01132C  EF9A  F089         	goto	u1930
  9774   011330                     u1931:
  9775   011330  EF89  F089         	goto	l3064
  9776   011334                     u1930:
  9777   011334  0012               	return		;funcret
  9778   011336                     __end_of_DELAY_microseconds:
  9779                           	callstack 0
  9780                           
  9781 ;; *************** function _Nrf24_printDetails *****************
  9782 ;; Defined at:
  9783 ;;		line 374 in file "mirf.c"
  9784 ;; Parameters:    Size  Location     Type
  9785 ;;  dev             2   87[COMRAM] PTR struct .
  9786 ;;		 -> receiver@dev(3), 
  9787 ;; Auto vars:     Size  Location     Type
  9788 ;;  delay           2   11[BANK5 ] short 
  9789 ;;  retransmit      1   13[BANK5 ] unsigned char 
  9790 ;; Return value:  Size  Location     Type
  9791 ;;                  1    wreg      void 
  9792 ;; Registers used:
  9793 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9794 ;; Tracked objects:
  9795 ;;		On entry : 0/0
  9796 ;;		On exit  : 0/0
  9797 ;;		Unchanged: 0/0
  9798 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  9799 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9800 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9801 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9802 ;;      Totals:         2       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9803 ;;Total ram usage:        9 bytes
  9804 ;; Hardware stack levels used: 1
  9805 ;; Hardware stack levels required when called: 12
  9806 ;; This function calls:
  9807 ;;		_Nrf24_getCRCLength
  9808 ;;		_Nrf24_getDataRate
  9809 ;;		_Nrf24_getPALevel
  9810 ;;		_Nrf24_getRetransmitDelay
  9811 ;;		_Nrf24_getStatus
  9812 ;;		_Nrf24_print_address_register
  9813 ;;		_Nrf24_print_byte_register
  9814 ;;		_Nrf24_print_status
  9815 ;;		_printf
  9816 ;; This function is called by:
  9817 ;;		_receiver
  9818 ;; This function uses a non-reentrant model
  9819 ;;
  9820                           
  9821                           	psect	text6
  9822   01038E                     __ptext6:
  9823                           	callstack 0
  9824   01038E                     _Nrf24_printDetails:
  9825                           	callstack 113
  9826   01038E                     
  9827                           ;mirf.c: 374: void Nrf24_printDetails(NRF24_t * dev);mirf.c: 375: {;mirf.c: 376:  printf
      +                          ("================ NRF Configuration ================\n");
  9828   01038E  0EFE               	movlw	low STR_2
  9829   010390  6E41               	movwf	printf@fmt^(0+1280),c
  9830   010392  0EFE               	movlw	high STR_2
  9831   010394  6E42               	movwf	(printf@fmt+1)^(0+1280),c
  9832   010396  ECD9  F08B         	call	_printf	;wreg free
  9833                           
  9834                           ;mirf.c: 378:  Nrf24_print_status(Nrf24_getStatus(dev));
  9835   01039A  C558  F50E         	movff	Nrf24_printDetails@dev,Nrf24_getStatus@dev
  9836   01039E  C559  F50F         	movff	Nrf24_printDetails@dev+1,Nrf24_getStatus@dev+1
  9837   0103A2  EC55  F08C         	call	_Nrf24_getStatus	;wreg free
  9838   0103A6  EC5A  F088         	call	_Nrf24_print_status
  9839                           
  9840                           ;mirf.c: 380:  Nrf24_print_address_register(dev, "RX_ADDR_P0-1", 0x0A, 2);
  9841   0103AA  C558  F551         	movff	Nrf24_printDetails@dev,Nrf24_print_address_register@dev
  9842   0103AE  C559  F552         	movff	Nrf24_printDetails@dev+1,Nrf24_print_address_register@dev+1
  9843   0103B2  0E89               	movlw	low STR_3
  9844   0103B4  6E53               	movwf	Nrf24_print_address_register@name^(0+1280),c
  9845   0103B6  0EFF               	movlw	high STR_3
  9846   0103B8  6E54               	movwf	(Nrf24_print_address_register@name+1)^(0+1280),c
  9847   0103BA  0E0A               	movlw	10
  9848   0103BC  6E55               	movwf	Nrf24_print_address_register@reg^(0+1280),c
  9849   0103BE  0E02               	movlw	2
  9850   0103C0  6E56               	movwf	Nrf24_print_address_register@qty^(0+1280),c
  9851   0103C2  EC1D  F087         	call	_Nrf24_print_address_register	;wreg free
  9852                           
  9853                           ;mirf.c: 381:  Nrf24_print_byte_register(dev, "RX_ADDR_P2-5", 0x0C, 4);
  9854   0103C6  C558  F551         	movff	Nrf24_printDetails@dev,Nrf24_print_byte_register@dev
  9855   0103CA  C559  F552         	movff	Nrf24_printDetails@dev+1,Nrf24_print_byte_register@dev+1
  9856   0103CE  0E96               	movlw	low STR_4
  9857   0103D0  6E53               	movwf	Nrf24_print_byte_register@name^(0+1280),c
  9858   0103D2  0EFF               	movlw	high STR_4
  9859   0103D4  6E54               	movwf	(Nrf24_print_byte_register@name+1)^(0+1280),c
  9860   0103D6  0E0C               	movlw	12
  9861   0103D8  6E55               	movwf	Nrf24_print_byte_register@reg^(0+1280),c
  9862   0103DA  0E04               	movlw	4
  9863   0103DC  6E56               	movwf	Nrf24_print_byte_register@qty^(0+1280),c
  9864   0103DE  EC43  F089         	call	_Nrf24_print_byte_register	;wreg free
  9865                           
  9866                           ;mirf.c: 382:  Nrf24_print_address_register(dev, "TX_ADDR\t", 0x10, 1);
  9867   0103E2  C558  F551         	movff	Nrf24_printDetails@dev,Nrf24_print_address_register@dev
  9868   0103E6  C559  F552         	movff	Nrf24_printDetails@dev+1,Nrf24_print_address_register@dev+1
  9869   0103EA  0EB8               	movlw	low STR_5
  9870   0103EC  6E53               	movwf	Nrf24_print_address_register@name^(0+1280),c
  9871   0103EE  0EFF               	movlw	high STR_5
  9872   0103F0  6E54               	movwf	(Nrf24_print_address_register@name+1)^(0+1280),c
  9873   0103F2  0E10               	movlw	16
  9874   0103F4  6E55               	movwf	Nrf24_print_address_register@reg^(0+1280),c
  9875   0103F6  0E01               	movlw	1
  9876   0103F8  6E56               	movwf	Nrf24_print_address_register@qty^(0+1280),c
  9877   0103FA  EC1D  F087         	call	_Nrf24_print_address_register	;wreg free
  9878                           
  9879                           ;mirf.c: 384:  Nrf24_print_byte_register(dev, "RX_PW_P0-6", 0x11, 6);
  9880   0103FE  C558  F551         	movff	Nrf24_printDetails@dev,Nrf24_print_byte_register@dev
  9881   010402  C559  F552         	movff	Nrf24_printDetails@dev+1,Nrf24_print_byte_register@dev+1
  9882   010406  0EA3               	movlw	low STR_6
  9883   010408  6E53               	movwf	Nrf24_print_byte_register@name^(0+1280),c
  9884   01040A  0EFF               	movlw	high STR_6
  9885   01040C  6E54               	movwf	(Nrf24_print_byte_register@name+1)^(0+1280),c
  9886   01040E  0E11               	movlw	17
  9887   010410  6E55               	movwf	Nrf24_print_byte_register@reg^(0+1280),c
  9888   010412  0E06               	movlw	6
  9889   010414  6E56               	movwf	Nrf24_print_byte_register@qty^(0+1280),c
  9890   010416  EC43  F089         	call	_Nrf24_print_byte_register	;wreg free
  9891                           
  9892                           ;mirf.c: 385:  Nrf24_print_byte_register(dev, "EN_AA\t", 0x01, 1);
  9893   01041A  C558  F551         	movff	Nrf24_printDetails@dev,Nrf24_print_byte_register@dev
  9894   01041E  C559  F552         	movff	Nrf24_printDetails@dev+1,Nrf24_print_byte_register@dev+1
  9895   010422  0EE1               	movlw	low STR_7
  9896   010424  6E53               	movwf	Nrf24_print_byte_register@name^(0+1280),c
  9897   010426  0EFF               	movlw	high STR_7
  9898   010428  6E54               	movwf	(Nrf24_print_byte_register@name+1)^(0+1280),c
  9899   01042A  0E01               	movlw	1
  9900   01042C  6E55               	movwf	Nrf24_print_byte_register@reg^(0+1280),c
  9901   01042E  0E01               	movlw	1
  9902   010430  6E56               	movwf	Nrf24_print_byte_register@qty^(0+1280),c
  9903   010432  EC43  F089         	call	_Nrf24_print_byte_register	;wreg free
  9904                           
  9905                           ;mirf.c: 386:  Nrf24_print_byte_register(dev, "EN_RXADDR", 0x02, 1);
  9906   010436  C558  F551         	movff	Nrf24_printDetails@dev,Nrf24_print_byte_register@dev
  9907   01043A  C559  F552         	movff	Nrf24_printDetails@dev+1,Nrf24_print_byte_register@dev+1
  9908   01043E  0EAE               	movlw	low STR_8
  9909   010440  6E53               	movwf	Nrf24_print_byte_register@name^(0+1280),c
  9910   010442  0EFF               	movlw	high STR_8
  9911   010444  6E54               	movwf	(Nrf24_print_byte_register@name+1)^(0+1280),c
  9912   010446  0E02               	movlw	2
  9913   010448  6E55               	movwf	Nrf24_print_byte_register@reg^(0+1280),c
  9914   01044A  0E01               	movlw	1
  9915   01044C  6E56               	movwf	Nrf24_print_byte_register@qty^(0+1280),c
  9916   01044E  EC43  F089         	call	_Nrf24_print_byte_register	;wreg free
  9917                           
  9918                           ;mirf.c: 387:  Nrf24_print_byte_register(dev, "RF_CH\t", 0x05, 1);
  9919   010452  C558  F551         	movff	Nrf24_printDetails@dev,Nrf24_print_byte_register@dev
  9920   010456  C559  F552         	movff	Nrf24_printDetails@dev+1,Nrf24_print_byte_register@dev+1
  9921   01045A  0EE8               	movlw	low STR_9
  9922   01045C  6E53               	movwf	Nrf24_print_byte_register@name^(0+1280),c
  9923   01045E  0EFF               	movlw	high STR_9
  9924   010460  6E54               	movwf	(Nrf24_print_byte_register@name+1)^(0+1280),c
  9925   010462  0E05               	movlw	5
  9926   010464  6E55               	movwf	Nrf24_print_byte_register@reg^(0+1280),c
  9927   010466  0E01               	movlw	1
  9928   010468  6E56               	movwf	Nrf24_print_byte_register@qty^(0+1280),c
  9929   01046A  EC43  F089         	call	_Nrf24_print_byte_register	;wreg free
  9930                           
  9931                           ;mirf.c: 388:  Nrf24_print_byte_register(dev, "RF_SETUP", 0x06, 1);
  9932   01046E  C558  F551         	movff	Nrf24_printDetails@dev,Nrf24_print_byte_register@dev
  9933   010472  C559  F552         	movff	Nrf24_printDetails@dev+1,Nrf24_print_byte_register@dev+1
  9934   010476  0EC1               	movlw	low STR_10
  9935   010478  6E53               	movwf	Nrf24_print_byte_register@name^(0+1280),c
  9936   01047A  0EFF               	movlw	high STR_10
  9937   01047C  6E54               	movwf	(Nrf24_print_byte_register@name+1)^(0+1280),c
  9938   01047E  0E06               	movlw	6
  9939   010480  6E55               	movwf	Nrf24_print_byte_register@reg^(0+1280),c
  9940   010482  0E01               	movlw	1
  9941   010484  6E56               	movwf	Nrf24_print_byte_register@qty^(0+1280),c
  9942   010486  EC43  F089         	call	_Nrf24_print_byte_register	;wreg free
  9943                           
  9944                           ;mirf.c: 389:  Nrf24_print_byte_register(dev, "CONFIG\t", 0x00, 1);
  9945   01048A  C558  F551         	movff	Nrf24_printDetails@dev,Nrf24_print_byte_register@dev
  9946   01048E  C559  F552         	movff	Nrf24_printDetails@dev+1,Nrf24_print_byte_register@dev+1
  9947   010492  0ECA               	movlw	low STR_11
  9948   010494  6E53               	movwf	Nrf24_print_byte_register@name^(0+1280),c
  9949   010496  0EFF               	movlw	high STR_11
  9950   010498  6E54               	movwf	(Nrf24_print_byte_register@name+1)^(0+1280),c
  9951   01049A  0E00               	movlw	0
  9952   01049C  6E55               	movwf	Nrf24_print_byte_register@reg^(0+1280),c
  9953   01049E  0E01               	movlw	1
  9954   0104A0  6E56               	movwf	Nrf24_print_byte_register@qty^(0+1280),c
  9955   0104A2  EC43  F089         	call	_Nrf24_print_byte_register	;wreg free
  9956                           
  9957                           ;mirf.c: 390:  Nrf24_print_byte_register(dev, "DYNPD/FEATURE", 0x1C, 2);
  9958   0104A6  C558  F551         	movff	Nrf24_printDetails@dev,Nrf24_print_byte_register@dev
  9959   0104AA  C559  F552         	movff	Nrf24_printDetails@dev+1,Nrf24_print_byte_register@dev+1
  9960   0104AE  0E7B               	movlw	low STR_12
  9961   0104B0  6E53               	movwf	Nrf24_print_byte_register@name^(0+1280),c
  9962   0104B2  0EFF               	movlw	high STR_12
  9963   0104B4  6E54               	movwf	(Nrf24_print_byte_register@name+1)^(0+1280),c
  9964   0104B6  0E1C               	movlw	28
  9965   0104B8  6E55               	movwf	Nrf24_print_byte_register@reg^(0+1280),c
  9966   0104BA  0E02               	movlw	2
  9967   0104BC  6E56               	movwf	Nrf24_print_byte_register@qty^(0+1280),c
  9968   0104BE  EC43  F089         	call	_Nrf24_print_byte_register	;wreg free
  9969                           
  9970                           ;mirf.c: 391:  printf("Data Rate\t = %s\n",rf24_datarates[Nrf24_getDataRate(dev)]);
  9971   0104C2  0E5A               	movlw	low STR_13
  9972   0104C4  6E41               	movwf	printf@fmt^(0+1280),c
  9973   0104C6  0EFF               	movlw	high STR_13
  9974   0104C8  6E42               	movwf	(printf@fmt+1)^(0+1280),c
  9975   0104CA  C558  F50E         	movff	Nrf24_printDetails@dev,Nrf24_getDataRate@dev
  9976   0104CE  C559  F50F         	movff	Nrf24_printDetails@dev+1,Nrf24_getDataRate@dev+1
  9977   0104D2  ECC4  F089         	call	_Nrf24_getDataRate	;wreg free
  9978   0104D6  0105               	movlb	5	; () banked
  9979   0104D8  6F9F               	movwf	??_Nrf24_printDetails& (0+255),b
  9980   0104DA  519F               	movf	??_Nrf24_printDetails& (0+255),w,b
  9981   0104DC  0D08               	mullw	8
  9982   0104DE  0E80               	movlw	low _rf24_datarates
  9983   0104E0  24F3               	addwf	243,w,c
  9984   0104E2  6E43               	movwf	(?_printf+2)^(0+1280),c
  9985   0104E4  0E05               	movlw	high _rf24_datarates
  9986   0104E6  20F4               	addwfc	prodh,w,c
  9987   0104E8  6E44               	movwf	(?_printf+3)^(0+1280),c
  9988   0104EA  ECD9  F08B         	call	_printf	;wreg free
  9989                           
  9990                           ;mirf.c: 392:  printf("CRC Length\t = %s\n", rf24_crclength[Nrf24_getCRCLength(dev)]);
  9991   0104EE  0E48               	movlw	low STR_14
  9992   0104F0  6E41               	movwf	printf@fmt^(0+1280),c
  9993   0104F2  0EFF               	movlw	high STR_14
  9994   0104F4  6E42               	movwf	(printf@fmt+1)^(0+1280),c
  9995   0104F6  C558  F50E         	movff	Nrf24_printDetails@dev,Nrf24_getCRCLength@dev
  9996   0104FA  C559  F50F         	movff	Nrf24_printDetails@dev+1,Nrf24_getCRCLength@dev+1
  9997   0104FE  EC0F  F089         	call	_Nrf24_getCRCLength	;wreg free
  9998   010502  0105               	movlb	5	; () banked
  9999   010504  6F9F               	movwf	??_Nrf24_printDetails& (0+255),b
 10000   010506  519F               	movf	??_Nrf24_printDetails& (0+255),w,b
 10001   010508  0D0A               	mullw	10
 10002   01050A  0E9A               	movlw	low _rf24_crclength
 10003   01050C  24F3               	addwf	243,w,c
 10004   01050E  6E43               	movwf	(?_printf+2)^(0+1280),c
 10005   010510  0EFE               	movlw	high _rf24_crclength
 10006   010512  20F4               	addwfc	prodh,w,c
 10007   010514  6E44               	movwf	(?_printf+3)^(0+1280),c
 10008   010516  ECD9  F08B         	call	_printf	;wreg free
 10009                           
 10010                           ;mirf.c: 393:  printf("PA Power\t = %s\n", rf24_pa_dbm[Nrf24_getPALevel(dev)]);
 10011   01051A  0E6B               	movlw	low STR_15
 10012   01051C  6E41               	movwf	printf@fmt^(0+1280),c
 10013   01051E  0EFF               	movlw	high STR_15
 10014   010520  6E42               	movwf	(printf@fmt+1)^(0+1280),c
 10015   010522  C558  F50E         	movff	Nrf24_printDetails@dev,Nrf24_getPALevel@dev
 10016   010526  C559  F50F         	movff	Nrf24_printDetails@dev+1,Nrf24_getPALevel@dev+1
 10017   01052A  EC22  F08C         	call	_Nrf24_getPALevel	;wreg free
 10018   01052E  0105               	movlb	5	; () banked
 10019   010530  6F9F               	movwf	??_Nrf24_printDetails& (0+255),b
 10020   010532  519F               	movf	??_Nrf24_printDetails& (0+255),w,b
 10021   010534  0D08               	mullw	8
 10022   010536  0E60               	movlw	low _rf24_pa_dbm
 10023   010538  24F3               	addwf	243,w,c
 10024   01053A  6E43               	movwf	(?_printf+2)^(0+1280),c
 10025   01053C  0E05               	movlw	high _rf24_pa_dbm
 10026   01053E  20F4               	addwfc	prodh,w,c
 10027   010540  6E44               	movwf	(?_printf+3)^(0+1280),c
 10028   010542  ECD9  F08B         	call	_printf	;wreg free
 10029   010546                     
 10030                           ;mirf.c: 394:  uint8_t retransmit = Nrf24_getRetransmitDelay(dev);
 10031   010546  C558  F50E         	movff	Nrf24_printDetails@dev,Nrf24_getRetransmitDelay@dev
 10032   01054A  C559  F50F         	movff	Nrf24_printDetails@dev+1,Nrf24_getRetransmitDelay@dev+1
 10033   01054E  EC31  F08C         	call	_Nrf24_getRetransmitDelay	;wreg free
 10034   010552  0105               	movlb	5	; () banked
 10035   010554  6FA5               	movwf	Nrf24_printDetails@retransmit& (0+255),b
 10036   010556                     
 10037                           ; BSR set to: 5
 10038                           ;mirf.c: 395:  int16_t delay = (retransmit+1)*250;
 10039   010556  51A5               	movf	Nrf24_printDetails@retransmit& (0+255),w,b
 10040   010558  6F9F               	movwf	??_Nrf24_printDetails& (0+255),b
 10041   01055A  6BA0               	clrf	(??_Nrf24_printDetails+1)& (0+255),b
 10042   01055C  0E01               	movlw	1
 10043   01055E  279F               	addwf	??_Nrf24_printDetails& (0+255),f,b
 10044   010560  0E00               	movlw	0
 10045   010562  23A0               	addwfc	(??_Nrf24_printDetails+1)& (0+255),f,b
 10046   010564  0EFA               	movlw	250
 10047   010566  039F               	mulwf	??_Nrf24_printDetails& (0+255),b
 10048   010568  C4F3 F5A1          	movff	prodl,??_Nrf24_printDetails+2
 10049   01056C  C4F4 F5A2          	movff	prodh,??_Nrf24_printDetails+3
 10050   010570  03A0               	mulwf	(??_Nrf24_printDetails+1)& (0+255),b
 10051   010572  50F3               	movf	prodl,w,c
 10052   010574  27A2               	addwf	(??_Nrf24_printDetails+3)& (0+255),f,b
 10053   010576  C5A1  F5A3         	movff	??_Nrf24_printDetails+2,Nrf24_printDetails@delay
 10054   01057A  C5A2  F5A4         	movff	??_Nrf24_printDetails+3,Nrf24_printDetails@delay+1
 10055   01057E                     
 10056                           ; BSR set to: 5
 10057                           ;mirf.c: 396:  printf("Retransmit\t = %d us\n", delay);
 10058   01057E  0E33               	movlw	low STR_16
 10059   010580  6E41               	movwf	printf@fmt^(0+1280),c
 10060   010582  0EFF               	movlw	high STR_16
 10061   010584  6E42               	movwf	(printf@fmt+1)^(0+1280),c
 10062   010586  C5A3  F543         	movff	Nrf24_printDetails@delay,?_printf+2
 10063   01058A  C5A4  F544         	movff	Nrf24_printDetails@delay+1,?_printf+3
 10064   01058E  ECD9  F08B         	call	_printf	;wreg free
 10065   010592  0012               	return		;funcret
 10066   010594                     __end_of_Nrf24_printDetails:
 10067                           	callstack 0
 10068                           
 10069 ;; *************** function _Nrf24_print_status *****************
 10070 ;; Defined at:
 10071 ;;		line 401 in file "mirf.c"
 10072 ;; Parameters:    Size  Location     Type
 10073 ;;  status          1    wreg     unsigned char 
 10074 ;; Auto vars:     Size  Location     Type
 10075 ;;  status          1   81[COMRAM] unsigned char 
 10076 ;; Return value:  Size  Location     Type
 10077 ;;                  1    wreg      void 
 10078 ;; Registers used:
 10079 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10080 ;; Tracked objects:
 10081 ;;		On entry : 0/0
 10082 ;;		On exit  : 0/0
 10083 ;;		Unchanged: 0/0
 10084 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 10085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10086 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10087 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10088 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10089 ;;Total ram usage:        2 bytes
 10090 ;; Hardware stack levels used: 1
 10091 ;; Hardware stack levels required when called: 11
 10092 ;; This function calls:
 10093 ;;		_printf
 10094 ;; This function is called by:
 10095 ;;		_Nrf24_printDetails
 10096 ;; This function uses a non-reentrant model
 10097 ;;
 10098                           
 10099                           	psect	text7
 10100   0110B4                     __ptext7:
 10101                           	callstack 0
 10102   0110B4                     _Nrf24_print_status:
 10103                           	callstack 113
 10104                           
 10105                           ;incstack = 0
 10106                           ;Nrf24_print_status@status stored from wreg
 10107   0110B4  6E52               	movwf	Nrf24_print_status@status^(0+1280),c
 10108   0110B6                     
 10109                           ;mirf.c: 401: void Nrf24_print_status(uint8_t status);mirf.c: 402: {;mirf.c: 403:  print
      +                          f("STATUS\t\t = 0x%02x RX_DR=%x TX_DS=%x MAX_RT=%x RX_P_NO=%x TX_FULL=%x\r\n", status, (
      +                          status & (1<<(6))) ? 1 : 0,
 10110   0110B6  0EB8               	movlw	low STR_17
 10111   0110B8  6E41               	movwf	printf@fmt^(0+1280),c
 10112   0110BA  0EFE               	movlw	high STR_17
 10113   0110BC  6E42               	movwf	(printf@fmt+1)^(0+1280),c
 10114   0110BE  C552  F543         	movff	Nrf24_print_status@status,?_printf+2
 10115   0110C2  6A44               	clrf	(?_printf+3)^(0+1280),c
 10116   0110C4  BC52               	btfsc	Nrf24_print_status@status^(0+1280),6,c
 10117   0110C6  EF67  F088         	goto	u3201
 10118   0110CA  EF6A  F088         	goto	u3200
 10119   0110CE                     u3201:
 10120   0110CE  0E01               	movlw	1
 10121   0110D0  EF6B  F088         	goto	u3210
 10122   0110D4                     u3200:
 10123   0110D4  0E00               	movlw	0
 10124   0110D6                     u3210:
 10125   0110D6  6E45               	movwf	(?_printf+4)^(0+1280),c
 10126   0110D8  6A46               	clrf	(?_printf+5)^(0+1280),c
 10127   0110DA  BA52               	btfsc	Nrf24_print_status@status^(0+1280),5,c
 10128   0110DC  EF72  F088         	goto	u3221
 10129   0110E0  EF75  F088         	goto	u3220
 10130   0110E4                     u3221:
 10131   0110E4  0E01               	movlw	1
 10132   0110E6  EF76  F088         	goto	u3230
 10133   0110EA                     u3220:
 10134   0110EA  0E00               	movlw	0
 10135   0110EC                     u3230:
 10136   0110EC  6E47               	movwf	(?_printf+6)^(0+1280),c
 10137   0110EE  6A48               	clrf	(?_printf+7)^(0+1280),c
 10138   0110F0  B852               	btfsc	Nrf24_print_status@status^(0+1280),4,c
 10139   0110F2  EF7D  F088         	goto	u3241
 10140   0110F6  EF80  F088         	goto	u3240
 10141   0110FA                     u3241:
 10142   0110FA  0E01               	movlw	1
 10143   0110FC  EF81  F088         	goto	u3250
 10144   011100                     u3240:
 10145   011100  0E00               	movlw	0
 10146   011102                     u3250:
 10147   011102  6E49               	movwf	(?_printf+8)^(0+1280),c
 10148   011104  6A4A               	clrf	(?_printf+9)^(0+1280),c
 10149   011106  C552  F551         	movff	Nrf24_print_status@status,??_Nrf24_print_status
 10150   01110A  90D8               	bcf	status,0,c
 10151   01110C  3251               	rrcf	??_Nrf24_print_status^(0+1280),f,c
 10152   01110E  0E07               	movlw	7
 10153   011110  1651               	andwf	??_Nrf24_print_status^(0+1280),f,c
 10154   011112  5051               	movf	??_Nrf24_print_status^(0+1280),w,c
 10155   011114  6E4B               	movwf	(?_printf+10)^(0+1280),c
 10156   011116  6A4C               	clrf	(?_printf+11)^(0+1280),c
 10157   011118  B052               	btfsc	Nrf24_print_status@status^(0+1280),0,c
 10158   01111A  EF91  F088         	goto	u3261
 10159   01111E  EF94  F088         	goto	u3260
 10160   011122                     u3261:
 10161   011122  0E01               	movlw	1
 10162   011124  EF95  F088         	goto	u3270
 10163   011128                     u3260:
 10164   011128  0E00               	movlw	0
 10165   01112A                     u3270:
 10166   01112A  6E4D               	movwf	(?_printf+12)^(0+1280),c
 10167   01112C  6A4E               	clrf	(?_printf+13)^(0+1280),c
 10168   01112E  ECD9  F08B         	call	_printf	;wreg free
 10169   011132  0012               	return		;funcret
 10170   011134                     __end_of_Nrf24_print_status:
 10171                           	callstack 0
 10172                           
 10173 ;; *************** function _Nrf24_print_byte_register *****************
 10174 ;; Defined at:
 10175 ;;		line 423 in file "mirf.c"
 10176 ;; Parameters:    Size  Location     Type
 10177 ;;  dev             2   80[COMRAM] PTR struct .
 10178 ;;		 -> receiver@dev(3), 
 10179 ;;  name            2   82[COMRAM] PTR const unsigned char 
 10180 ;;		 -> STR_12(14), STR_11(8), STR_10(9), STR_9(7), 
 10181 ;;		 -> STR_8(10), STR_7(7), STR_6(11), STR_4(13), 
 10182 ;;  reg             1   84[COMRAM] unsigned char 
 10183 ;;  qty             1   85[COMRAM] unsigned char 
 10184 ;; Auto vars:     Size  Location     Type
 10185 ;;  buffer          1   86[COMRAM] unsigned char [1]
 10186 ;; Return value:  Size  Location     Type
 10187 ;;                  1    wreg      void 
 10188 ;; Registers used:
 10189 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10190 ;; Tracked objects:
 10191 ;;		On entry : 0/0
 10192 ;;		On exit  : 0/0
 10193 ;;		Unchanged: 0/0
 10194 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 10195 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10196 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10198 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10199 ;;Total ram usage:        7 bytes
 10200 ;; Hardware stack levels used: 1
 10201 ;; Hardware stack levels required when called: 11
 10202 ;; This function calls:
 10203 ;;		_Nrf24_readRegister
 10204 ;;		_printf
 10205 ;; This function is called by:
 10206 ;;		_Nrf24_printDetails
 10207 ;; This function uses a non-reentrant model
 10208 ;;
 10209                           
 10210                           	psect	text8
 10211   011286                     __ptext8:
 10212                           	callstack 0
 10213   011286                     _Nrf24_print_byte_register:
 10214                           	callstack 113
 10215   011286                     
 10216                           ;mirf.c: 423: void Nrf24_print_byte_register(NRF24_t * dev, const char* name, uint8_t re
      +                          g, uint8_t qty);mirf.c: 424: {;mirf.c: 425:  printf("%s\t =", name);
 10217   011286  0EEF               	movlw	low STR_18
 10218   011288  6E41               	movwf	printf@fmt^(0+1280),c
 10219   01128A  0EFF               	movlw	high STR_18
 10220   01128C  6E42               	movwf	(printf@fmt+1)^(0+1280),c
 10221   01128E  C553  F543         	movff	Nrf24_print_byte_register@name,?_printf+2
 10222   011292  C554  F544         	movff	Nrf24_print_byte_register@name+1,?_printf+3
 10223   011296  ECD9  F08B         	call	_printf	;wreg free
 10224                           
 10225                           ;mirf.c: 426:  while (qty--) {
 10226   01129A  EF62  F089         	goto	l4100
 10227   01129E                     l4094:
 10228                           
 10229                           ;mirf.c: 427:   uint8_t buffer[1];;mirf.c: 428:   Nrf24_readRegister(reg++, buffer, 1);
 10230   01129E  0E57               	movlw	low Nrf24_print_byte_register@buffer
 10231   0112A0  6E0A               	movwf	Nrf24_readRegister@value^(0+1280),c
 10232   0112A2  0E05               	movlw	high Nrf24_print_byte_register@buffer
 10233   0112A4  6E0B               	movwf	(Nrf24_readRegister@value+1)^(0+1280),c
 10234   0112A6  0E01               	movlw	1
 10235   0112A8  6E0C               	movwf	Nrf24_readRegister@len^(0+1280),c
 10236   0112AA  5055               	movf	Nrf24_print_byte_register@reg^(0+1280),w,c
 10237   0112AC  EC41  F08B         	call	_Nrf24_readRegister
 10238   0112B0  2A55               	incf	Nrf24_print_byte_register@reg^(0+1280),f,c
 10239   0112B2                     
 10240                           ;mirf.c: 429:   printf(" 0x%02x", buffer[0]);
 10241   0112B2  0ED2               	movlw	low STR_23
 10242   0112B4  6E41               	movwf	printf@fmt^(0+1280),c
 10243   0112B6  0EFF               	movlw	high STR_23
 10244   0112B8  6E42               	movwf	(printf@fmt+1)^(0+1280),c
 10245   0112BA  C557  F543         	movff	Nrf24_print_byte_register@buffer,?_printf+2
 10246   0112BE  6A44               	clrf	(?_printf+3)^(0+1280),c
 10247   0112C0  ECD9  F08B         	call	_printf	;wreg free
 10248   0112C4                     l4100:
 10249                           
 10250                           ;mirf.c: 426:  while (qty--) {
 10251   0112C4  0656               	decf	Nrf24_print_byte_register@qty^(0+1280),f,c
 10252   0112C6  2856               	incf	Nrf24_print_byte_register@qty^(0+1280),w,c
 10253   0112C8  A4D8               	btfss	status,2,c
 10254   0112CA  EF69  F089         	goto	u3301
 10255   0112CE  EF6B  F089         	goto	u3300
 10256   0112D2                     u3301:
 10257   0112D2  EF4F  F089         	goto	l4094
 10258   0112D6                     u3300:
 10259   0112D6                     
 10260                           ;mirf.c: 431:  printf("\r\n");
 10261   0112D6  0EFB               	movlw	low (STR_17+67)
 10262   0112D8  6E41               	movwf	printf@fmt^(0+1280),c
 10263   0112DA  0EFE               	movlw	high (STR_17+67)
 10264   0112DC  6E42               	movwf	(printf@fmt+1)^(0+1280),c
 10265   0112DE  ECD9  F08B         	call	_printf	;wreg free
 10266   0112E2  0012               	return		;funcret
 10267   0112E4                     __end_of_Nrf24_print_byte_register:
 10268                           	callstack 0
 10269                           
 10270 ;; *************** function _Nrf24_print_address_register *****************
 10271 ;; Defined at:
 10272 ;;		line 407 in file "mirf.c"
 10273 ;; Parameters:    Size  Location     Type
 10274 ;;  dev             2   80[COMRAM] PTR struct .
 10275 ;;		 -> receiver@dev(3), 
 10276 ;;  name            2   82[COMRAM] PTR const unsigned char 
 10277 ;;		 -> STR_5(9), STR_3(13), 
 10278 ;;  reg             1   84[COMRAM] unsigned char 
 10279 ;;  qty             1   85[COMRAM] unsigned char 
 10280 ;; Auto vars:     Size  Location     Type
 10281 ;;  i               2    5[BANK5 ] int 
 10282 ;;  buffer          5    0[BANK5 ] unsigned char [5]
 10283 ;; Return value:  Size  Location     Type
 10284 ;;                  1    wreg      void 
 10285 ;; Registers used:
 10286 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10287 ;; Tracked objects:
 10288 ;;		On entry : 0/0
 10289 ;;		On exit  : 0/0
 10290 ;;		Unchanged: 0/0
 10291 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 10292 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10293 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10294 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10295 ;;      Totals:         7       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10296 ;;Total ram usage:       14 bytes
 10297 ;; Hardware stack levels used: 1
 10298 ;; Hardware stack levels required when called: 11
 10299 ;; This function calls:
 10300 ;;		_Nrf24_readRegister
 10301 ;;		_printf
 10302 ;; This function is called by:
 10303 ;;		_Nrf24_printDetails
 10304 ;; This function uses a non-reentrant model
 10305 ;;
 10306                           
 10307                           	psect	text9
 10308   010E3A                     __ptext9:
 10309                           	callstack 0
 10310   010E3A                     _Nrf24_print_address_register:
 10311                           	callstack 113
 10312   010E3A                     
 10313                           ;mirf.c: 407: void Nrf24_print_address_register(NRF24_t * dev, const char* name, uint8_t
      +                           reg, uint8_t qty);mirf.c: 408: {;mirf.c: 409:  printf("%s\t =",name);
 10314   010E3A  0EEF               	movlw	low STR_18
 10315   010E3C  6E41               	movwf	printf@fmt^(0+1280),c
 10316   010E3E  0EFF               	movlw	high STR_18
 10317   010E40  6E42               	movwf	(printf@fmt+1)^(0+1280),c
 10318   010E42  C553  F543         	movff	Nrf24_print_address_register@name,?_printf+2
 10319   010E46  C554  F544         	movff	Nrf24_print_address_register@name+1,?_printf+3
 10320   010E4A  ECD9  F08B         	call	_printf	;wreg free
 10321                           
 10322                           ;mirf.c: 410:  while (qty--) {
 10323   010E4E  EF60  F087         	goto	l4088
 10324   010E52                     l4070:
 10325                           
 10326                           ;mirf.c: 411:   uint8_t buffer[5];;mirf.c: 412:   Nrf24_readRegister(reg++, buffer, size
      +                          of(buffer));
 10327   010E52  0E98               	movlw	low Nrf24_print_address_register@buffer
 10328   010E54  6E0A               	movwf	Nrf24_readRegister@value^(0+1280),c
 10329   010E56  0E05               	movlw	high Nrf24_print_address_register@buffer
 10330   010E58  6E0B               	movwf	(Nrf24_readRegister@value+1)^(0+1280),c
 10331   010E5A  0E05               	movlw	5
 10332   010E5C  6E0C               	movwf	Nrf24_readRegister@len^(0+1280),c
 10333   010E5E  5055               	movf	Nrf24_print_address_register@reg^(0+1280),w,c
 10334   010E60  EC41  F08B         	call	_Nrf24_readRegister
 10335   010E64  2A55               	incf	Nrf24_print_address_register@reg^(0+1280),f,c
 10336   010E66                     
 10337                           ;mirf.c: 414:   printf(" 0x");
 10338   010E66  0EFB               	movlw	low STR_19
 10339   010E68  6E41               	movwf	printf@fmt^(0+1280),c
 10340   010E6A  0EFF               	movlw	high STR_19
 10341   010E6C  6E42               	movwf	(printf@fmt+1)^(0+1280),c
 10342   010E6E  ECD9  F08B         	call	_printf	;wreg free
 10343   010E72                     
 10344                           ;mirf.c: 416:   for(int i=0;i<5;i++) {
 10345   010E72  0E00               	movlw	0
 10346   010E74  0105               	movlb	5	; () banked
 10347   010E76  6F9E               	movwf	(Nrf24_print_address_register@i+1)& (0+255),b
 10348   010E78  0E00               	movlw	0
 10349   010E7A  6F9D               	movwf	Nrf24_print_address_register@i& (0+255),b
 10350   010E7C                     l4082:
 10351                           
 10352                           ; BSR set to: 5
 10353                           ;mirf.c: 417:    printf("%02x", buffer[i]);
 10354   010E7C  0ED5               	movlw	low (STR_23+3)
 10355   010E7E  6E41               	movwf	printf@fmt^(0+1280),c
 10356   010E80  0EFF               	movlw	high (STR_23+3)
 10357   010E82  6E42               	movwf	(printf@fmt+1)^(0+1280),c
 10358   010E84  0E98               	movlw	low Nrf24_print_address_register@buffer
 10359   010E86  259D               	addwf	Nrf24_print_address_register@i& (0+255),w,b
 10360   010E88  6ED9               	movwf	fsr2l,c
 10361   010E8A  0E05               	movlw	high Nrf24_print_address_register@buffer
 10362   010E8C  219E               	addwfc	(Nrf24_print_address_register@i+1)& (0+255),w,b
 10363   010E8E  6EDA               	movwf	fsr2h,c
 10364   010E90  50DF               	movf	indf2,w,c
 10365   010E92  6E57               	movwf	??_Nrf24_print_address_register^(0+1280),c
 10366   010E94  5057               	movf	??_Nrf24_print_address_register^(0+1280),w,c
 10367   010E96  6E43               	movwf	(?_printf+2)^(0+1280),c
 10368   010E98  6A44               	clrf	(?_printf+3)^(0+1280),c
 10369   010E9A  ECD9  F08B         	call	_printf	;wreg free
 10370   010E9E                     
 10371                           ;mirf.c: 418:   }
 10372   010E9E  0105               	movlb	5	; () banked
 10373   010EA0  4B9D               	infsnz	Nrf24_print_address_register@i& (0+255),f,b
 10374   010EA2  2B9E               	incf	(Nrf24_print_address_register@i+1)& (0+255),f,b
 10375   010EA4                     
 10376                           ; BSR set to: 5
 10377   010EA4  BF9E               	btfsc	(Nrf24_print_address_register@i+1)& (0+255),7,b
 10378   010EA6  EF5E  F087         	goto	u3281
 10379   010EAA  519E               	movf	(Nrf24_print_address_register@i+1)& (0+255),w,b
 10380   010EAC  E109               	bnz	u3280
 10381   010EAE  0E05               	movlw	5
 10382   010EB0  5D9D               	subwf	Nrf24_print_address_register@i& (0+255),w,b
 10383   010EB2  A0D8               	btfss	status,0,c
 10384   010EB4  EF5E  F087         	goto	u3281
 10385   010EB8  EF60  F087         	goto	u3280
 10386   010EBC                     u3281:
 10387   010EBC  EF3E  F087         	goto	l4082
 10388   010EC0                     u3280:
 10389   010EC0                     l4088:
 10390                           
 10391                           ;mirf.c: 410:  while (qty--) {
 10392   010EC0  0656               	decf	Nrf24_print_address_register@qty^(0+1280),f,c
 10393   010EC2  2856               	incf	Nrf24_print_address_register@qty^(0+1280),w,c
 10394   010EC4  A4D8               	btfss	status,2,c
 10395   010EC6  EF67  F087         	goto	u3291
 10396   010ECA  EF69  F087         	goto	u3290
 10397   010ECE                     u3291:
 10398   010ECE  EF29  F087         	goto	l4070
 10399   010ED2                     u3290:
 10400   010ED2                     
 10401                           ;mirf.c: 420:  printf("\r\n");
 10402   010ED2  0EFB               	movlw	low (STR_17+67)
 10403   010ED4  6E41               	movwf	printf@fmt^(0+1280),c
 10404   010ED6  0EFE               	movlw	high (STR_17+67)
 10405   010ED8  6E42               	movwf	(printf@fmt+1)^(0+1280),c
 10406   010EDA  ECD9  F08B         	call	_printf	;wreg free
 10407   010EDE  0012               	return		;funcret
 10408   010EE0                     __end_of_Nrf24_print_address_register:
 10409                           	callstack 0
 10410                           
 10411 ;; *************** function _printf *****************
 10412 ;; Defined at:
 10413 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\printf.c"
 10414 ;; Parameters:    Size  Location     Type
 10415 ;;  fmt             2   64[COMRAM] PTR const unsigned char 
 10416 ;;		 -> STR_24(3), STR_23(8), STR_22(6), STR_21(3), 
 10417 ;;		 -> STR_20(5), STR_19(4), STR_18(6), STR_17(70), 
 10418 ;;		 -> STR_16(21), STR_15(16), STR_14(18), STR_13(17), 
 10419 ;;		 -> STR_2(53), 
 10420 ;; Auto vars:     Size  Location     Type
 10421 ;;  ap              2   78[COMRAM] PTR void [1]
 10422 ;;		 -> ?_printf(2), 
 10423 ;;  ret             2    0        int 
 10424 ;; Return value:  Size  Location     Type
 10425 ;;                  2   64[COMRAM] int 
 10426 ;; Registers used:
 10427 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10428 ;; Tracked objects:
 10429 ;;		On entry : 0/0
 10430 ;;		On exit  : 0/0
 10431 ;;		Unchanged: 0/0
 10432 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 10433 ;;      Params:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10434 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10436 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10437 ;;Total ram usage:       16 bytes
 10438 ;; Hardware stack levels used: 1
 10439 ;; Hardware stack levels required when called: 10
 10440 ;; This function calls:
 10441 ;;		_vfprintf
 10442 ;; This function is called by:
 10443 ;;		_Nrf24_printDetails
 10444 ;;		_Nrf24_print_status
 10445 ;;		_Nrf24_print_address_register
 10446 ;;		_Nrf24_print_byte_register
 10447 ;; This function uses a non-reentrant model
 10448 ;;
 10449                           
 10450                           	psect	text10
 10451   0117B2                     __ptext10:
 10452                           	callstack 0
 10453   0117B2                     _printf:
 10454                           	callstack 114
 10455   0117B2  0E43               	movlw	low (?_printf+2)
 10456   0117B4  6E4F               	movwf	printf@ap^(0+1280),c
 10457   0117B6  0E05               	movlw	high (?_printf+2)
 10458   0117B8  6E50               	movwf	(printf@ap+1)^(0+1280),c
 10459   0117BA  0E00               	movlw	0
 10460   0117BC  6E39               	movwf	vfprintf@fp^(0+1280),c
 10461   0117BE  0E00               	movlw	0
 10462   0117C0  6E3A               	movwf	(vfprintf@fp+1)^(0+1280),c
 10463   0117C2  C541  F53B         	movff	printf@fmt,vfprintf@fmt
 10464   0117C6  C542  F53C         	movff	printf@fmt+1,vfprintf@fmt+1
 10465   0117CA  0E4F               	movlw	low printf@ap
 10466   0117CC  6E3D               	movwf	vfprintf@ap^(0+1280),c
 10467   0117CE  0E05               	movlw	high printf@ap
 10468   0117D0  6E3E               	movwf	(vfprintf@ap+1)^(0+1280),c
 10469   0117D2  EC9B  F089         	call	_vfprintf	;wreg free
 10470   0117D6  0012               	return		;funcret
 10471   0117D8                     __end_of_printf:
 10472                           	callstack 0
 10473                           
 10474 ;; *************** function _vfprintf *****************
 10475 ;; Defined at:
 10476 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 10477 ;; Parameters:    Size  Location     Type
 10478 ;;  fp              2   56[COMRAM] PTR struct _IO_FILE
 10479 ;;		 -> NULL(0), 
 10480 ;;  fmt             2   58[COMRAM] PTR const unsigned char 
 10481 ;;		 -> STR_24(3), STR_23(8), STR_22(6), STR_21(3), 
 10482 ;;		 -> STR_20(5), STR_19(4), STR_18(6), STR_17(70), 
 10483 ;;		 -> STR_16(21), STR_15(16), STR_14(18), STR_13(17), 
 10484 ;;		 -> STR_2(53), 
 10485 ;;  ap              2   60[COMRAM] PTR PTR void 
 10486 ;;		 -> printf@ap(2), 
 10487 ;; Auto vars:     Size  Location     Type
 10488 ;;  cfmt            2   62[COMRAM] PTR unsigned char 
 10489 ;;		 -> STR_24(3), STR_23(8), STR_22(6), STR_21(3), 
 10490 ;;		 -> STR_20(5), STR_19(4), STR_18(6), STR_17(70), 
 10491 ;;		 -> STR_16(21), STR_15(16), STR_14(18), STR_13(17), 
 10492 ;;		 -> STR_2(53), 
 10493 ;; Return value:  Size  Location     Type
 10494 ;;                  2   56[COMRAM] int 
 10495 ;; Registers used:
 10496 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10497 ;; Tracked objects:
 10498 ;;		On entry : 0/0
 10499 ;;		On exit  : 0/0
 10500 ;;		Unchanged: 0/0
 10501 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 10502 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10503 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10505 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10506 ;;Total ram usage:        8 bytes
 10507 ;; Hardware stack levels used: 1
 10508 ;; Hardware stack levels required when called: 9
 10509 ;; This function calls:
 10510 ;;		_vfpfcnvrt
 10511 ;; This function is called by:
 10512 ;;		_printf
 10513 ;; This function uses a non-reentrant model
 10514 ;;
 10515                           
 10516                           	psect	text11
 10517   011336                     __ptext11:
 10518                           	callstack 0
 10519   011336                     _vfprintf:
 10520                           	callstack 114
 10521   011336                     
 10522                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
 10523   011336  C53B  F53F         	movff	vfprintf@fmt,vfprintf@cfmt
 10524   01133A  C53C  F540         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
 10525                           
 10526                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
 10527   01133E  EFAF  F089         	goto	l3980
 10528   011342                     l3978:
 10529                           
 10530                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
 10531   011342  C539  F52A         	movff	vfprintf@fp,vfpfcnvrt@fp
 10532   011346  C53A  F52B         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
 10533   01134A  0E3F               	movlw	low vfprintf@cfmt
 10534   01134C  6E2C               	movwf	vfpfcnvrt@fmt^(0+1280),c
 10535   01134E  0E05               	movlw	high vfprintf@cfmt
 10536   011350  6E2D               	movwf	(vfpfcnvrt@fmt+1)^(0+1280),c
 10537   011352  C53D  F52E         	movff	vfprintf@ap,vfpfcnvrt@ap
 10538   011356  C53E  F52F         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
 10539   01135A  EC00  F080         	call	_vfpfcnvrt	;wreg free
 10540   01135E                     l3980:
 10541                           
 10542                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
 10543   01135E  C53F  F4F6         	movff	vfprintf@cfmt,tblptrl
 10544   011362  C540  F4F7         	movff	vfprintf@cfmt+1,tblptrh
 10545   011366                     	if	0	;tblptru may be non-zero
 10546   011366                     	endif
 10547   011366                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10548   011366  0E00               	movlw	low (__mediumconst shr (0+16))
 10549   011368  6EF8               	movwf	tblptru,c
 10550   01136A                     	endif
 10551   01136A  0008               	tblrd		*
 10552   01136C  50F5               	movf	tablat,w,c
 10553   01136E  0900               	iorlw	0
 10554   011370  A4D8               	btfss	status,2,c
 10555   011372  EFBD  F089         	goto	u3141
 10556   011376  EFBF  F089         	goto	u3140
 10557   01137A                     u3141:
 10558   01137A  EFA1  F089         	goto	l3978
 10559   01137E                     u3140:
 10560   01137E                     
 10561                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1835:  return 0;
 10562   01137E  0E00               	movlw	0
 10563   011380  6E3A               	movwf	(?_vfprintf+1)^(0+1280),c
 10564   011382  0E00               	movlw	0
 10565   011384  6E39               	movwf	?_vfprintf^(0+1280),c
 10566   011386  0012               	return		;funcret
 10567   011388                     __end_of_vfprintf:
 10568                           	callstack 0
 10569                           
 10570 ;; *************** function _vfpfcnvrt *****************
 10571 ;; Defined at:
 10572 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 10573 ;; Parameters:    Size  Location     Type
 10574 ;;  fp              2   41[COMRAM] PTR struct _IO_FILE
 10575 ;;		 -> NULL(0), 
 10576 ;;  fmt             2   43[COMRAM] PTR PTR unsigned char 
 10577 ;;		 -> vfprintf@cfmt(2), 
 10578 ;;  ap              2   45[COMRAM] PTR PTR void 
 10579 ;;		 -> printf@ap(2), 
 10580 ;; Auto vars:     Size  Location     Type
 10581 ;;  convarg         4   49[COMRAM] struct .
 10582 ;;  cp              2   54[COMRAM] PTR unsigned char 
 10583 ;;		 -> STR_24(3), STR_23(8), STR_22(6), STR_21(3), 
 10584 ;;		 -> STR_20(5), STR_19(4), STR_18(6), STR_17(70), 
 10585 ;;		 -> STR_16(21), STR_15(16), STR_14(18), STR_13(17), 
 10586 ;;		 -> STR_2(53), 
 10587 ;;  done            1   53[COMRAM] _Bool 
 10588 ;;  c               1    0        unsigned char 
 10589 ;; Return value:  Size  Location     Type
 10590 ;;                  1    wreg      void 
 10591 ;; Registers used:
 10592 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10593 ;; Tracked objects:
 10594 ;;		On entry : 0/0
 10595 ;;		On exit  : 0/0
 10596 ;;		Unchanged: 0/0
 10597 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 10598 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10599 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10600 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10601 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10602 ;;Total ram usage:       15 bytes
 10603 ;; Hardware stack levels used: 1
 10604 ;; Hardware stack levels required when called: 8
 10605 ;; This function calls:
 10606 ;;		_dtoa
 10607 ;;		_fputc
 10608 ;;		_read_prec_or_width
 10609 ;;		_stoa
 10610 ;;		_xtoa
 10611 ;; This function is called by:
 10612 ;;		_vfprintf
 10613 ;; This function uses a non-reentrant model
 10614 ;;
 10615                           
 10616                           	psect	text12
 10617   010000                     __ptext12:
 10618                           	callstack 0
 10619   010000                     _vfpfcnvrt:
 10620                           	callstack 114
 10621   010000                     
 10622                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
 10623   010000  C52C  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 10624   010004  C52D  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10625   010008  C4DE F4F6          	movff	postinc2,tblptrl
 10626   01000C  C4DD F4F7          	movff	postdec2,tblptrh
 10627   010010                     	if	0	;tblptru may be non-zero
 10628   010010                     	endif
 10629   010010                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10630   010010  0E00               	movlw	low (__mediumconst shr (0+16))
 10631   010012  6EF8               	movwf	tblptru,c
 10632   010014                     	endif
 10633   010014  0008               	tblrd		*
 10634   010016  50F5               	movf	tablat,w,c
 10635   010018  0A25               	xorlw	37
 10636   01001A  A4D8               	btfss	status,2,c
 10637   01001C  EF12  F080         	goto	u3021
 10638   010020  EF14  F080         	goto	u3020
 10639   010024                     u3021:
 10640   010024  EFB0  F081         	goto	l3962
 10641   010028                     u3020:
 10642   010028                     
 10643                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
 10644   010028  C52C  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 10645   01002C  C52D  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10646   010030  2ADE               	incf	postinc2,f,c
 10647   010032  0E00               	movlw	0
 10648   010034  22DD               	addwfc	postdec2,f,c
 10649   010036                     
 10650                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
 10651   010036  0E00               	movlw	0
 10652   010038  6E5B               	movwf	(_width+1)^(0+1280),c
 10653   01003A  0E00               	movlw	0
 10654   01003C  6E5A               	movwf	_width^(0+1280),c
 10655   01003E  C55A  F55C         	movff	_width,_flags
 10656   010042                     
 10657                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
 10658   010042  0105               	movlb	5	; () banked
 10659   010044  69CD               	setf	_prec& (0+255),b
 10660   010046  69CE               	setf	(_prec+1)& (0+255),b
 10661   010048                     
 10662                           ; BSR set to: 5
 10663                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
 10664   010048  6A36               	clrf	vfpfcnvrt@done^(0+1280),c
 10665                           
 10666                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
 10667   01004A  EF47  F080         	goto	l3904
 10668   01004E                     l3894:
 10669                           
 10670                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
 10671   01004E  825C               	bsf	_flags^(0+1280),1,c
 10672   010050                     
 10673                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
 10674   010050  C52C  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 10675   010054  C52D  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10676   010058  2ADE               	incf	postinc2,f,c
 10677   01005A  0E00               	movlw	0
 10678   01005C  22DD               	addwfc	postdec2,f,c
 10679                           
 10680                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
 10681   01005E  EF47  F080         	goto	l3904
 10682   010062                     l3898:
 10683                           
 10684                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
 10685   010062  0E01               	movlw	1
 10686   010064  6E36               	movwf	vfpfcnvrt@done^(0+1280),c
 10687                           
 10688                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
 10689   010066  EF47  F080         	goto	l3904
 10690   01006A                     l3902:
 10691   01006A  C52C  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 10692   01006E  C52D  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10693   010072  C4DE F4F6          	movff	postinc2,tblptrl
 10694   010076  C4DD F4F7          	movff	postdec2,tblptrh
 10695   01007A                     	if	0	;tblptru may be non-zero
 10696   01007A                     	endif
 10697   01007A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10698   01007A  0E00               	movlw	low (__mediumconst shr (0+16))
 10699   01007C  6EF8               	movwf	tblptru,c
 10700   01007E                     	endif
 10701   01007E  0008               	tblrd		*
 10702   010080  50F5               	movf	tablat,w,c
 10703                           
 10704                           ; Switch size 1, requested type "simple"
 10705                           ; Number of cases is 1, Range of values is 48 to 48
 10706                           ; switch strategies available:
 10707                           ; Name         Instructions Cycles
 10708                           ; simple_byte            4     3 (average)
 10709                           ;	Chosen strategy is simple_byte
 10710   010082  0A30               	xorlw	48	; case 48
 10711   010084  B4D8               	btfsc	status,2,c
 10712   010086  EF27  F080         	goto	l3894
 10713   01008A  EF31  F080         	goto	l3898
 10714   01008E                     l3904:
 10715                           
 10716                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
 10717   01008E  5036               	movf	vfpfcnvrt@done^(0+1280),w,c
 10718   010090  B4D8               	btfsc	status,2,c
 10719   010092  EF4D  F080         	goto	u3031
 10720   010096  EF4F  F080         	goto	u3030
 10721   01009A                     u3031:
 10722   01009A  EF35  F080         	goto	l3902
 10723   01009E                     u3030:
 10724   01009E                     
 10725                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
 10726   01009E  C52C  F504         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
 10727   0100A2  C52D  F505         	movff	vfpfcnvrt@fmt+1,read_prec_or_width@fmt+1
 10728   0100A6  C52E  F506         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
 10729   0100AA  C52F  F507         	movff	vfpfcnvrt@ap+1,read_prec_or_width@ap+1
 10730   0100AE  EC35  F085         	call	_read_prec_or_width	;wreg free
 10731   0100B2  C504  F55A         	movff	?_read_prec_or_width,_width
 10732   0100B6  C505  F55B         	movff	?_read_prec_or_width+1,_width+1
 10733   0100BA                     
 10734                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
 10735   0100BA  BE5B               	btfsc	(_width+1)^(0+1280),7,c
 10736   0100BC  EF64  F080         	goto	u3040
 10737   0100C0  EF62  F080         	goto	u3041
 10738   0100C4                     u3041:
 10739   0100C4  EF69  F080         	goto	l3912
 10740   0100C8                     u3040:
 10741   0100C8                     
 10742                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
 10743   0100C8  805C               	bsf	_flags^(0+1280),0,c
 10744                           
 10745                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
 10746   0100CA  6C5A               	negf	_width^(0+1280),c
 10747   0100CC  1E5B               	comf	(_width+1)^(0+1280),f,c
 10748   0100CE  B0D8               	btfsc	status,0,c
 10749   0100D0  2A5B               	incf	(_width+1)^(0+1280),f,c
 10750   0100D2                     l3912:
 10751                           
 10752                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
 10753   0100D2  C52C  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 10754   0100D6  C52D  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10755   0100DA  C4DE F537          	movff	postinc2,vfpfcnvrt@cp
 10756   0100DE  C4DD F538          	movff	postdec2,vfpfcnvrt@cp+1
 10757   0100E2                     
 10758                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
 10759   0100E2  C537  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 10760   0100E6  C538  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 10761   0100EA                     	if	0	;tblptru may be non-zero
 10762   0100EA                     	endif
 10763   0100EA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10764   0100EA  0E00               	movlw	low (__mediumconst shr (0+16))
 10765   0100EC  6EF8               	movwf	tblptru,c
 10766   0100EE                     	endif
 10767   0100EE  0008               	tblrd		*
 10768   0100F0  50F5               	movf	tablat,w,c
 10769   0100F2  0A64               	xorlw	100
 10770   0100F4  B4D8               	btfsc	status,2,c
 10771   0100F6  EF7F  F080         	goto	u3051
 10772   0100FA  EF81  F080         	goto	u3050
 10773   0100FE                     u3051:
 10774   0100FE  EF91  F080         	goto	l3918
 10775   010102                     u3050:
 10776   010102  C537  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 10777   010106  C538  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 10778   01010A                     	if	0	;tblptru may be non-zero
 10779   01010A                     	endif
 10780   01010A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10781   01010A  0E00               	movlw	low (__mediumconst shr (0+16))
 10782   01010C  6EF8               	movwf	tblptru,c
 10783   01010E                     	endif
 10784   01010E  0008               	tblrd		*
 10785   010110  50F5               	movf	tablat,w,c
 10786   010112  0A69               	xorlw	105
 10787   010114  A4D8               	btfss	status,2,c
 10788   010116  EF8F  F080         	goto	u3061
 10789   01011A  EF91  F080         	goto	u3060
 10790   01011E                     u3061:
 10791   01011E  EFBF  F080         	goto	l3924
 10792   010122                     u3060:
 10793   010122                     l3918:
 10794                           
 10795                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
 10796   010122  C52E  F4D9         	movff	vfpfcnvrt@ap,fsr2l
 10797   010126  C52F  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
 10798   01012A  C4DF F530          	movff	indf2,??_vfpfcnvrt
 10799   01012E  0E02               	movlw	2
 10800   010130  26DE               	addwf	postinc2,f,c
 10801   010132  C4DF F531          	movff	indf2,??_vfpfcnvrt+1
 10802   010136  0E00               	movlw	0
 10803   010138  22DD               	addwfc	postdec2,f,c
 10804   01013A  C530  F4D9         	movff	??_vfpfcnvrt,fsr2l
 10805   01013E  C531  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
 10806   010142  C4DE F532          	movff	postinc2,vfpfcnvrt@convarg
 10807   010146  C4DD F533          	movff	postdec2,vfpfcnvrt@convarg+1
 10808                           
 10809                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
 10810   01014A  0E01               	movlw	1
 10811   01014C  2437               	addwf	vfpfcnvrt@cp^(0+1280),w,c
 10812   01014E  6E30               	movwf	??_vfpfcnvrt^(0+1280),c
 10813   010150  0E00               	movlw	0
 10814   010152  2038               	addwfc	(vfpfcnvrt@cp+1)^(0+1280),w,c
 10815   010154  6E31               	movwf	(??_vfpfcnvrt+1)^(0+1280),c
 10816   010156  C52C  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 10817   01015A  C52D  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10818   01015E  C530  F4DE         	movff	??_vfpfcnvrt,postinc2
 10819   010162  C531  F4DD         	movff	??_vfpfcnvrt+1,postdec2
 10820   010166                     
 10821                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
 10822   010166  C52A  F51D         	movff	vfpfcnvrt@fp,dtoa@fp
 10823   01016A  C52B  F51E         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 10824   01016E  C532  F51F         	movff	vfpfcnvrt@convarg,dtoa@d
 10825   010172  C533  F520         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
 10826   010176  ECCA  F082         	call	_dtoa	;wreg free
 10827   01017A  EFC6  F081         	goto	l1550
 10828   01017E                     l3924:
 10829   01017E  C537  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 10830   010182  C538  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 10831   010186                     	if	0	;tblptru may be non-zero
 10832   010186                     	endif
 10833   010186                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10834   010186  0E00               	movlw	low (__mediumconst shr (0+16))
 10835   010188  6EF8               	movwf	tblptru,c
 10836   01018A                     	endif
 10837   01018A  0008               	tblrd		*
 10838   01018C  50F5               	movf	tablat,w,c
 10839   01018E  0A78               	xorlw	120
 10840   010190  A4D8               	btfss	status,2,c
 10841   010192  EFCD  F080         	goto	u3071
 10842   010196  EFCF  F080         	goto	u3070
 10843   01019A                     u3071:
 10844   01019A  EF0D  F081         	goto	l1551
 10845   01019E                     u3070:
 10846   01019E                     
 10847                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1452:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1495:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
 10848   01019E  C52E  F4D9         	movff	vfpfcnvrt@ap,fsr2l
 10849   0101A2  C52F  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
 10850   0101A6  C4DF F530          	movff	indf2,??_vfpfcnvrt
 10851   0101AA  0E02               	movlw	2
 10852   0101AC  26DE               	addwf	postinc2,f,c
 10853   0101AE  C4DF F531          	movff	indf2,??_vfpfcnvrt+1
 10854   0101B2  0E00               	movlw	0
 10855   0101B4  22DD               	addwfc	postdec2,f,c
 10856   0101B6  C530  F4D9         	movff	??_vfpfcnvrt,fsr2l
 10857   0101BA  C531  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
 10858   0101BE  C4DE F532          	movff	postinc2,vfpfcnvrt@convarg
 10859   0101C2  C4DD F533          	movff	postdec2,vfpfcnvrt@convarg+1
 10860                           
 10861                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
 10862   0101C6  0E01               	movlw	1
 10863   0101C8  2437               	addwf	vfpfcnvrt@cp^(0+1280),w,c
 10864   0101CA  6E30               	movwf	??_vfpfcnvrt^(0+1280),c
 10865   0101CC  0E00               	movlw	0
 10866   0101CE  2038               	addwfc	(vfpfcnvrt@cp+1)^(0+1280),w,c
 10867   0101D0  6E31               	movwf	(??_vfpfcnvrt+1)^(0+1280),c
 10868   0101D2  C52C  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 10869   0101D6  C52D  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10870   0101DA  C530  F4DE         	movff	??_vfpfcnvrt,postinc2
 10871   0101DE  C531  F4DD         	movff	??_vfpfcnvrt+1,postdec2
 10872                           
 10873                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
 10874   0101E2  EFFF  F080         	goto	l3934
 10875   0101E6                     l3928:
 10876                           
 10877                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1586:      return
      +                           (void) xtoa(fp,convarg.uint);;	Return value of _vfpfcnvrt is never used
 10878   0101E6  C52A  F51D         	movff	vfpfcnvrt@fp,xtoa@fp
 10879   0101EA  C52B  F51E         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
 10880   0101EE  C532  F51F         	movff	vfpfcnvrt@convarg,xtoa@d
 10881   0101F2  C533  F520         	movff	vfpfcnvrt@convarg+1,xtoa@d+1
 10882   0101F6  EC3A  F084         	call	_xtoa	;wreg free
 10883   0101FA  EFC6  F081         	goto	l1550
 10884   0101FE                     l3934:
 10885   0101FE  C537  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 10886   010202  C538  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 10887   010206                     	if	0	;tblptru may be non-zero
 10888   010206                     	endif
 10889   010206                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10890   010206  0E00               	movlw	low (__mediumconst shr (0+16))
 10891   010208  6EF8               	movwf	tblptru,c
 10892   01020A                     	endif
 10893   01020A  0008               	tblrd		*
 10894   01020C  50F5               	movf	tablat,w,c
 10895                           
 10896                           ; Switch size 1, requested type "simple"
 10897                           ; Number of cases is 1, Range of values is 120 to 120
 10898                           ; switch strategies available:
 10899                           ; Name         Instructions Cycles
 10900                           ; simple_byte            4     3 (average)
 10901                           ;	Chosen strategy is simple_byte
 10902   01020E  0A78               	xorlw	120	; case 120
 10903   010210  B4D8               	btfsc	status,2,c
 10904   010212  EFF3  F080         	goto	l3928
 10905   010216  EF0D  F081         	goto	l1551
 10906   01021A                     l1551:
 10907                           
 10908                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1656:   done = 0;
 10909   01021A  6A36               	clrf	vfpfcnvrt@done^(0+1280),c
 10910   01021C                     
 10911                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1657:   if ((*fmt
      +                          )[0] == 's') {
 10912   01021C  C52C  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 10913   010220  C52D  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10914   010224  C4DE F4F6          	movff	postinc2,tblptrl
 10915   010228  C4DD F4F7          	movff	postdec2,tblptrh
 10916   01022C                     	if	0	;tblptru may be non-zero
 10917   01022C                     	endif
 10918   01022C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10919   01022C  0E00               	movlw	low (__mediumconst shr (0+16))
 10920   01022E  6EF8               	movwf	tblptru,c
 10921   010230                     	endif
 10922   010230  0008               	tblrd		*
 10923   010232  50F5               	movf	tablat,w,c
 10924   010234  0A73               	xorlw	115
 10925   010236  A4D8               	btfss	status,2,c
 10926   010238  EF20  F081         	goto	u3081
 10927   01023C  EF22  F081         	goto	u3080
 10928   010240                     u3081:
 10929   010240  EF2D  F081         	goto	l3942
 10930   010244                     u3080:
 10931   010244                     
 10932                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1658:    ++*fmt;
 10933   010244  C52C  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 10934   010248  C52D  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10935   01024C  2ADE               	incf	postinc2,f,c
 10936   01024E  0E00               	movlw	0
 10937   010250  22DD               	addwfc	postdec2,f,c
 10938   010252                     l3940:
 10939                           
 10940                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1659:    done = 1
      +                          ;
 10941   010252  0E01               	movlw	1
 10942   010254  6E36               	movwf	vfpfcnvrt@done^(0+1280),c
 10943                           
 10944                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1660:   }
 10945   010256  EF83  F081         	goto	l3952
 10946   01025A                     l3942:
 10947   01025A  C52C  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 10948   01025E  C52D  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10949   010262  C4DE F4F6          	movff	postinc2,tblptrl
 10950   010266  C4DD F4F7          	movff	postdec2,tblptrh
 10951   01026A                     	if	0	;tblptru may be non-zero
 10952   01026A                     	endif
 10953   01026A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10954   01026A  0E00               	movlw	low (__mediumconst shr (0+16))
 10955   01026C  6EF8               	movwf	tblptru,c
 10956   01026E                     	endif
 10957   01026E  0008               	tblrd		*
 10958   010270  50F5               	movf	tablat,w,c
 10959   010272  0A6C               	xorlw	108
 10960   010274  A4D8               	btfss	status,2,c
 10961   010276  EF3F  F081         	goto	u3091
 10962   01027A  EF41  F081         	goto	u3090
 10963   01027E                     u3091:
 10964   01027E  EF83  F081         	goto	l3952
 10965   010282                     u3090:
 10966   010282  C52C  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 10967   010286  C52D  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10968   01028A  C4DE F530          	movff	postinc2,??_vfpfcnvrt
 10969   01028E  C4DD F531          	movff	postdec2,??_vfpfcnvrt+1
 10970   010292  0E01               	movlw	1
 10971   010294  2630               	addwf	??_vfpfcnvrt^(0+1280),f,c
 10972   010296  0E00               	movlw	0
 10973   010298  2231               	addwfc	(??_vfpfcnvrt+1)^(0+1280),f,c
 10974   01029A  C530  F4F6         	movff	??_vfpfcnvrt,tblptrl
 10975   01029E  C531  F4F7         	movff	??_vfpfcnvrt+1,tblptrh
 10976   0102A2                     	if	0	;tblptru may be non-zero
 10977   0102A2                     	endif
 10978   0102A2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10979   0102A2  0E00               	movlw	low (__mediumconst shr (0+16))
 10980   0102A4  6EF8               	movwf	tblptru,c
 10981   0102A6                     	endif
 10982   0102A6  0008               	tblrd		*
 10983   0102A8  50F5               	movf	tablat,w,c
 10984   0102AA  0A6C               	xorlw	108
 10985   0102AC  A4D8               	btfss	status,2,c
 10986   0102AE  EF5B  F081         	goto	u3101
 10987   0102B2  EF5D  F081         	goto	u3100
 10988   0102B6                     u3101:
 10989   0102B6  EF83  F081         	goto	l3952
 10990   0102BA                     u3100:
 10991   0102BA  C52C  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 10992   0102BE  C52D  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10993   0102C2  C4DE F530          	movff	postinc2,??_vfpfcnvrt
 10994   0102C6  C4DD F531          	movff	postdec2,??_vfpfcnvrt+1
 10995   0102CA  0E02               	movlw	2
 10996   0102CC  2630               	addwf	??_vfpfcnvrt^(0+1280),f,c
 10997   0102CE  0E00               	movlw	0
 10998   0102D0  2231               	addwfc	(??_vfpfcnvrt+1)^(0+1280),f,c
 10999   0102D2  C530  F4F6         	movff	??_vfpfcnvrt,tblptrl
 11000   0102D6  C531  F4F7         	movff	??_vfpfcnvrt+1,tblptrh
 11001   0102DA                     	if	0	;tblptru may be non-zero
 11002   0102DA                     	endif
 11003   0102DA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11004   0102DA  0E00               	movlw	low (__mediumconst shr (0+16))
 11005   0102DC  6EF8               	movwf	tblptru,c
 11006   0102DE                     	endif
 11007   0102DE  0008               	tblrd		*
 11008   0102E0  50F5               	movf	tablat,w,c
 11009   0102E2  0A73               	xorlw	115
 11010   0102E4  A4D8               	btfss	status,2,c
 11011   0102E6  EF77  F081         	goto	u3111
 11012   0102EA  EF79  F081         	goto	u3110
 11013   0102EE                     u3111:
 11014   0102EE  EF83  F081         	goto	l3952
 11015   0102F2                     u3110:
 11016   0102F2                     
 11017                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1662:    *fmt += 
      +                          3;
 11018   0102F2  0E03               	movlw	3
 11019   0102F4  C52C  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 11020   0102F8  C52D  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11021   0102FC  26DE               	addwf	postinc2,f,c
 11022   0102FE  0E00               	movlw	0
 11023   010300  22DD               	addwfc	postdec2,f,c
 11024   010302  EF29  F081         	goto	l3940
 11025   010306                     l3952:
 11026                           
 11027                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1665:   if (done)
      +                           {
 11028   010306  5036               	movf	vfpfcnvrt@done^(0+1280),w,c
 11029   010308  B4D8               	btfsc	status,2,c
 11030   01030A  EF89  F081         	goto	u3121
 11031   01030E  EF8B  F081         	goto	u3120
 11032   010312                     u3121:
 11033   010312  EFA7  F081         	goto	l3958
 11034   010316                     u3120:
 11035   010316                     
 11036                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1682:    return (
      +                          void) stoa(fp, (*(char * *)__va_arg(*(char * **)ap, (char *)0)));;	Return value of _vfpf
      +                          cnvrt is never used
 11037   010316  C52A  F50D         	movff	vfpfcnvrt@fp,stoa@fp
 11038   01031A  C52B  F50E         	movff	vfpfcnvrt@fp+1,stoa@fp+1
 11039   01031E  C52E  F4D9         	movff	vfpfcnvrt@ap,fsr2l
 11040   010322  C52F  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
 11041   010326  C4DF F530          	movff	indf2,??_vfpfcnvrt
 11042   01032A  0E02               	movlw	2
 11043   01032C  26DE               	addwf	postinc2,f,c
 11044   01032E  C4DF F531          	movff	indf2,??_vfpfcnvrt+1
 11045   010332  0E00               	movlw	0
 11046   010334  22DD               	addwfc	postdec2,f,c
 11047   010336  C530  F4D9         	movff	??_vfpfcnvrt,fsr2l
 11048   01033A  C531  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
 11049   01033E  C4DE F50F          	movff	postinc2,stoa@s
 11050   010342  C4DD F510          	movff	postdec2,stoa@s+1
 11051   010346  EC85  F083         	call	_stoa	;wreg free
 11052   01034A  EFC6  F081         	goto	l1550
 11053   01034E                     l3958:
 11054                           
 11055                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
 11056   01034E  C52C  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 11057   010352  C52D  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11058   010356  2ADE               	incf	postinc2,f,c
 11059   010358  0E00               	movlw	0
 11060   01035A  22DD               	addwfc	postdec2,f,c
 11061   01035C  EFC6  F081         	goto	l1550
 11062   010360                     l3962:
 11063                           
 11064                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
 11065   010360  C52C  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 11066   010364  C52D  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11067   010368  C4DE F4F6          	movff	postinc2,tblptrl
 11068   01036C  C4DD F4F7          	movff	postdec2,tblptrh
 11069   010370                     	if	0	;tblptru may be non-zero
 11070   010370                     	endif
 11071   010370                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11072   010370  0E00               	movlw	low (__mediumconst shr (0+16))
 11073   010372  6EF8               	movwf	tblptru,c
 11074   010374                     	endif
 11075   010374  0008               	tblrd		*
 11076   010376  50F5               	movf	tablat,w,c
 11077   010378  6E04               	movwf	fputc@c^(0+1280),c
 11078   01037A  6A05               	clrf	(fputc@c+1)^(0+1280),c
 11079   01037C  C52A  F506         	movff	vfpfcnvrt@fp,fputc@fp
 11080   010380  C52B  F507         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 11081   010384  EC9B  F085         	call	_fputc	;wreg free
 11082   010388  EFA7  F081         	goto	l3958
 11083   01038C                     l1550:
 11084   01038C  0012               	return		;funcret
 11085   01038E                     __end_of_vfpfcnvrt:
 11086                           	callstack 0
 11087                           
 11088 ;; *************** function _xtoa *****************
 11089 ;; Defined at:
 11090 ;;		line 1055 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 11091 ;; Parameters:    Size  Location     Type
 11092 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
 11093 ;;		 -> NULL(0), 
 11094 ;;  d               2   30[COMRAM] unsigned int 
 11095 ;; Auto vars:     Size  Location     Type
 11096 ;;  i               2   39[COMRAM] int 
 11097 ;;  w               2   36[COMRAM] int 
 11098 ;;  c               1   38[COMRAM] unsigned char 
 11099 ;;  p               1   35[COMRAM] _Bool 
 11100 ;; Return value:  Size  Location     Type
 11101 ;;                  1    wreg      void 
 11102 ;; Registers used:
 11103 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11104 ;; Tracked objects:
 11105 ;;		On entry : 0/0
 11106 ;;		On exit  : 0/0
 11107 ;;		Unchanged: 0/0
 11108 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 11109 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11110 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11111 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11112 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11113 ;;Total ram usage:       13 bytes
 11114 ;; Hardware stack levels used: 1
 11115 ;; Hardware stack levels required when called: 7
 11116 ;; This function calls:
 11117 ;;		_pad
 11118 ;; This function is called by:
 11119 ;;		_vfpfcnvrt
 11120 ;; This function uses a non-reentrant model
 11121 ;;
 11122                           
 11123                           	psect	text13
 11124   010874                     __ptext13:
 11125                           	callstack 0
 11126   010874                     _xtoa:
 11127                           	callstack 114
 11128   010874                     
 11129                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1055: static void
      +                           xtoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\comm
      +                          on\doprnt.c: 1058: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.
      +                          c: 1059:  char c;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 
      +                          1063:     int i, w;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c
      +                          : 1067:  _Bool p = 1;
 11130   010874  0E01               	movlw	1
 11131   010876  6E24               	movwf	xtoa@p^(0+1280),c
 11132   010878                     
 11133                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1082:     w = wid
      +                          th;
 11134   010878  C55A  F525         	movff	_width,xtoa@w
 11135   01087C  C55B  F526         	movff	_width+1,xtoa@w+1
 11136                           
 11137                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1095:     i = siz
      +                          eof(dbuf) - 1;
 11138   010880  0E00               	movlw	0
 11139   010882  6E29               	movwf	(xtoa@i+1)^(0+1280),c
 11140   010884  0E1F               	movlw	31
 11141   010886  6E28               	movwf	xtoa@i^(0+1280),c
 11142   010888                     
 11143                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1096:     dbuf[i]
      +                           = '\0';
 11144   010888  0105               	movlb	5	; () banked
 11145   01088A  6BEE               	clrf	(_dbuf+31)& (0+255),b
 11146                           
 11147                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1097:     while (
      +                          !(i < 2) && (d != 0
 11148   01088C  EF78  F084         	goto	l3844
 11149   010890                     l3826:
 11150                           
 11151                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1106:     )) {;C:
      +                          \Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1107:         --i;
 11152   010890  0628               	decf	xtoa@i^(0+1280),f,c
 11153   010892  A0D8               	btfss	status,0,c
 11154   010894  0629               	decf	(xtoa@i+1)^(0+1280),f,c
 11155   010896                     
 11156                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1108:         c =
      +                           d & 0x0f;
 11157   010896  501F               	movf	xtoa@d^(0+1280),w,c
 11158   010898  0B0F               	andlw	15
 11159   01089A  6E27               	movwf	xtoa@c^(0+1280),c
 11160   01089C                     
 11161                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1109:   if (c < 1
      +                          0) {
 11162   01089C  0E0A               	movlw	10
 11163   01089E  6027               	cpfslt	xtoa@c^(0+1280),c
 11164   0108A0  EF54  F084         	goto	u2921
 11165   0108A4  EF56  F084         	goto	u2920
 11166   0108A8                     u2921:
 11167   0108A8  EF5A  F084         	goto	l3834
 11168   0108AC                     u2920:
 11169   0108AC                     
 11170                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1110:    c += '0'
      +                          ;
 11171   0108AC  0E30               	movlw	48
 11172   0108AE  2627               	addwf	xtoa@c^(0+1280),f,c
 11173                           
 11174                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1111:   }
 11175   0108B0  EF5C  F084         	goto	l3836
 11176   0108B4                     l3834:
 11177                           
 11178                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1116:    c += 'a'
      +                           - 10;
 11179   0108B4  0E57               	movlw	87
 11180   0108B6  2627               	addwf	xtoa@c^(0+1280),f,c
 11181   0108B8                     l3836:
 11182                           
 11183                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1121:   dbuf[i] =
      +                           c;
 11184   0108B8  0ECF               	movlw	low _dbuf
 11185   0108BA  2428               	addwf	xtoa@i^(0+1280),w,c
 11186   0108BC  6ED9               	movwf	fsr2l,c
 11187   0108BE  0E05               	movlw	high _dbuf
 11188   0108C0  2029               	addwfc	(xtoa@i+1)^(0+1280),w,c
 11189   0108C2  6EDA               	movwf	fsr2h,c
 11190   0108C4  C527  F4DF         	movff	xtoa@c,indf2
 11191   0108C8                     
 11192                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1125:   p = 0;
 11193   0108C8  6A24               	clrf	xtoa@p^(0+1280),c
 11194   0108CA                     
 11195                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1127:         --w
      +                          ;
 11196   0108CA  0625               	decf	xtoa@w^(0+1280),f,c
 11197   0108CC  A0D8               	btfss	status,0,c
 11198   0108CE  0626               	decf	(xtoa@w+1)^(0+1280),f,c
 11199   0108D0                     
 11200                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1128:         d =
      +                           d >> 4;
 11201   0108D0  C51F  F521         	movff	xtoa@d,??_xtoa
 11202   0108D4  C520  F522         	movff	xtoa@d+1,??_xtoa+1
 11203   0108D8  0E04               	movlw	4
 11204   0108DA  6E23               	movwf	(??_xtoa+2)^(0+1280),c
 11205   0108DC                     u2935:
 11206   0108DC  90D8               	bcf	status,0,c
 11207   0108DE  3222               	rrcf	(??_xtoa+1)^(0+1280),f,c
 11208   0108E0  3221               	rrcf	??_xtoa^(0+1280),f,c
 11209   0108E2  2E23               	decfsz	(??_xtoa+2)^(0+1280),f,c
 11210   0108E4  EF6E  F084         	goto	u2935
 11211   0108E8  C521  F51F         	movff	??_xtoa,xtoa@d
 11212   0108EC  C522  F520         	movff	??_xtoa+1,xtoa@d+1
 11213   0108F0                     l3844:
 11214                           
 11215                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1097:     while (
      +                          !(i < 2) && (d != 0
 11216   0108F0  BE29               	btfsc	(xtoa@i+1)^(0+1280),7,c
 11217   0108F2  EF84  F084         	goto	u2941
 11218   0108F6  5029               	movf	(xtoa@i+1)^(0+1280),w,c
 11219   0108F8  E109               	bnz	u2940
 11220   0108FA  0E02               	movlw	2
 11221   0108FC  5C28               	subwf	xtoa@i^(0+1280),w,c
 11222   0108FE  A0D8               	btfss	status,0,c
 11223   010900  EF84  F084         	goto	u2941
 11224   010904  EF86  F084         	goto	u2940
 11225   010908                     u2941:
 11226   010908  EFAB  F084         	goto	l3854
 11227   01090C                     u2940:
 11228   01090C  501F               	movf	xtoa@d^(0+1280),w,c
 11229   01090E  1020               	iorwf	(xtoa@d+1)^(0+1280),w,c
 11230   010910  A4D8               	btfss	status,2,c
 11231   010912  EF8D  F084         	goto	u2951
 11232   010916  EF8F  F084         	goto	u2950
 11233   01091A                     u2951:
 11234   01091A  EF48  F084         	goto	l3826
 11235   01091E                     u2950:
 11236   01091E  5024               	movf	xtoa@p^(0+1280),w,c
 11237   010920  A4D8               	btfss	status,2,c
 11238   010922  EF95  F084         	goto	u2961
 11239   010926  EF97  F084         	goto	u2960
 11240   01092A                     u2961:
 11241   01092A  EF48  F084         	goto	l3826
 11242   01092E                     u2960:
 11243   01092E  BE26               	btfsc	(xtoa@w+1)^(0+1280),7,c
 11244   010930  EFA2  F084         	goto	u2971
 11245   010934  5026               	movf	(xtoa@w+1)^(0+1280),w,c
 11246   010936  E108               	bnz	u2970
 11247   010938  0425               	decf	xtoa@w^(0+1280),w,c
 11248   01093A  A0D8               	btfss	status,0,c
 11249   01093C  EFA2  F084         	goto	u2971
 11250   010940  EFA4  F084         	goto	u2970
 11251   010944                     u2971:
 11252   010944  EFAB  F084         	goto	l3854
 11253   010948                     u2970:
 11254   010948  B25C               	btfsc	_flags^(0+1280),1,c
 11255   01094A  EFA9  F084         	goto	u2981
 11256   01094E  EFAB  F084         	goto	u2980
 11257   010952                     u2981:
 11258   010952  EF48  F084         	goto	l3826
 11259   010956                     u2980:
 11260   010956                     l3854:
 11261                           
 11262                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1152:     return 
      +                          (void) pad(fp, &dbuf[i], w);
 11263   010956  C51D  F514         	movff	xtoa@fp,pad@fp
 11264   01095A  C51E  F515         	movff	xtoa@fp+1,pad@fp+1
 11265   01095E  0ECF               	movlw	low _dbuf
 11266   010960  2428               	addwf	xtoa@i^(0+1280),w,c
 11267   010962  6E16               	movwf	pad@buf^(0+1280),c
 11268   010964  0E05               	movlw	high _dbuf
 11269   010966  2029               	addwfc	(xtoa@i+1)^(0+1280),w,c
 11270   010968  6E17               	movwf	(pad@buf+1)^(0+1280),c
 11271   01096A  C525  F518         	movff	xtoa@w,pad@p
 11272   01096E  C526  F519         	movff	xtoa@w+1,pad@p+1
 11273   010972  EC70  F087         	call	_pad	;wreg free
 11274   010976  0012               	return		;funcret
 11275   010978                     __end_of_xtoa:
 11276                           	callstack 0
 11277                           
 11278 ;; *************** function _stoa *****************
 11279 ;; Defined at:
 11280 ;;		line 942 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 11281 ;; Parameters:    Size  Location     Type
 11282 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
 11283 ;;		 -> NULL(0), 
 11284 ;;  s               2   14[COMRAM] PTR unsigned char 
 11285 ;;		 -> ?_printf(2), rf24_pa_dbm(32), rf24_crclength(30), rf24_datarates(24), 
 11286 ;;		 -> STR_12(14), STR_11(8), STR_10(9), STR_9(7), 
 11287 ;;		 -> STR_8(10), STR_7(7), STR_6(11), STR_5(9), 
 11288 ;;		 -> STR_4(13), STR_3(13), 
 11289 ;; Auto vars:     Size  Location     Type
 11290 ;;  l               2   24[COMRAM] int 
 11291 ;;  cp              2   22[COMRAM] PTR unsigned char 
 11292 ;;		 -> STR_25(7), ?_printf(2), rf24_pa_dbm(32), rf24_crclength(30), 
 11293 ;;		 -> rf24_datarates(24), STR_12(14), STR_11(8), STR_10(9), 
 11294 ;;		 -> STR_9(7), STR_8(10), STR_7(7), STR_6(11), 
 11295 ;;		 -> STR_5(9), STR_4(13), STR_3(13), 
 11296 ;;  w               2   20[COMRAM] int 
 11297 ;;  p               2   18[COMRAM] int 
 11298 ;; Return value:  Size  Location     Type
 11299 ;;                  1    wreg      void 
 11300 ;; Registers used:
 11301 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11302 ;; Tracked objects:
 11303 ;;		On entry : 0/0
 11304 ;;		On exit  : 0/0
 11305 ;;		Unchanged: 0/0
 11306 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 11307 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11308 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11309 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11310 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11311 ;;Total ram usage:       14 bytes
 11312 ;; Hardware stack levels used: 1
 11313 ;; Hardware stack levels required when called: 5
 11314 ;; This function calls:
 11315 ;;		_fputc
 11316 ;; This function is called by:
 11317 ;;		_vfpfcnvrt
 11318 ;; This function uses a non-reentrant model
 11319 ;;
 11320                           
 11321                           	psect	text14
 11322   01070A                     __ptext14:
 11323                           	callstack 0
 11324   01070A                     _stoa:
 11325                           	callstack 116
 11326   01070A                     
 11327                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 942: static void 
      +                          stoa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\dopr
      +                          nt.c: 943: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 944: 
      +                              char *cp;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 945:
      +                               int l, p;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 947
      +                          :  int w;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 951:    
      +                           cp = s;
 11328   01070A  C50F  F517         	movff	stoa@s,stoa@cp
 11329   01070E  C510  F518         	movff	stoa@s+1,stoa@cp+1
 11330                           
 11331                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 952:     if (!cp)
      +                           {
 11332   010712  5017               	movf	stoa@cp^(0+1280),w,c
 11333   010714  1018               	iorwf	(stoa@cp+1)^(0+1280),w,c
 11334   010716  A4D8               	btfss	status,2,c
 11335   010718  EF90  F083         	goto	u2831
 11336   01071C  EF92  F083         	goto	u2830
 11337   010720                     u2831:
 11338   010720  EF96  F083         	goto	l3792
 11339   010724                     u2830:
 11340   010724                     
 11341                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 953:         cp =
      +                           "(null)";
 11342   010724  0EDA               	movlw	low STR_25
 11343   010726  6E17               	movwf	stoa@cp^(0+1280),c
 11344   010728  0EFF               	movlw	high STR_25
 11345   01072A  6E18               	movwf	(stoa@cp+1)^(0+1280),c
 11346   01072C                     l3792:
 11347                           
 11348                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 957:  for (l = 0;
      +                           cp[l] != '\0'; l++) {
 11349   01072C  0E00               	movlw	0
 11350   01072E  6E1A               	movwf	(stoa@l+1)^(0+1280),c
 11351   010730  0E00               	movlw	0
 11352   010732  6E19               	movwf	stoa@l^(0+1280),c
 11353   010734  EF9E  F083         	goto	l3796
 11354   010738                     l3794:
 11355   010738  4A19               	infsnz	stoa@l^(0+1280),f,c
 11356   01073A  2A1A               	incf	(stoa@l+1)^(0+1280),f,c
 11357   01073C                     l3796:
 11358   01073C  5019               	movf	stoa@l^(0+1280),w,c
 11359   01073E  2417               	addwf	stoa@cp^(0+1280),w,c
 11360   010740  6E11               	movwf	??_stoa^(0+1280),c
 11361   010742  501A               	movf	(stoa@l+1)^(0+1280),w,c
 11362   010744  2018               	addwfc	(stoa@cp+1)^(0+1280),w,c
 11363   010746  6E12               	movwf	(??_stoa+1)^(0+1280),c
 11364   010748  C511  F4F6         	movff	??_stoa,tblptrl
 11365   01074C  C512  F4F7         	movff	??_stoa+1,tblptrh
 11366   010750  0E00               	movlw	low (__mediumconst shr (0+16))
 11367   010752  6EF8               	movwf	tblptru,c
 11368   010754  0E25               	movlw	(high __ramtop+-1)
 11369   010756  64F7               	cpfsgt	tblptrh,c
 11370   010758  D003               	bra	u2847
 11371   01075A  0008               	tblrd		*
 11372   01075C  50F5               	movf	tablat,w,c
 11373   01075E  D005               	bra	u2840
 11374   010760                     u2847:
 11375   010760  C4F6 F4E9          	movff	tblptrl,fsr0l
 11376   010764  C4F7 F4EA          	movff	tblptrh,fsr0h
 11377   010768  50EF               	movf	indf0,w,c
 11378   01076A                     u2840:
 11379   01076A  0900               	iorlw	0
 11380   01076C  A4D8               	btfss	status,2,c
 11381   01076E  EFBB  F083         	goto	u2851
 11382   010772  EFBD  F083         	goto	u2850
 11383   010776                     u2851:
 11384   010776  EF9C  F083         	goto	l3794
 11385   01077A                     u2850:
 11386   01077A                     
 11387                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 965:     p = l;
 11388   01077A  C519  F513         	movff	stoa@l,stoa@p
 11389   01077E  C51A  F514         	movff	stoa@l+1,stoa@p+1
 11390                           
 11391                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 969:     w = widt
      +                          h;
 11392   010782  C55A  F515         	movff	_width,stoa@w
 11393   010786  C55B  F516         	movff	_width+1,stoa@w+1
 11394                           
 11395                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 970:     if (!(fl
      +                          ags & (1 << 0))) {
 11396   01078A  B05C               	btfsc	_flags^(0+1280),0,c
 11397   01078C  EFCA  F083         	goto	u2861
 11398   010790  EFCC  F083         	goto	u2860
 11399   010794                     u2861:
 11400   010794  EF08  F084         	goto	l3810
 11401   010798                     u2860:
 11402   010798  EFDA  F083         	goto	l3804
 11403   01079C                     l3800:
 11404                           
 11405                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 972:             
      +                          fputc(' ', fp);
 11406   01079C  0E00               	movlw	0
 11407   01079E  6E05               	movwf	(fputc@c+1)^(0+1280),c
 11408   0107A0  0E20               	movlw	32
 11409   0107A2  6E04               	movwf	fputc@c^(0+1280),c
 11410   0107A4  C50D  F506         	movff	stoa@fp,fputc@fp
 11411   0107A8  C50E  F507         	movff	stoa@fp+1,fputc@fp+1
 11412   0107AC  EC9B  F085         	call	_fputc	;wreg free
 11413   0107B0                     
 11414                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 973:             
      +                          ++l;
 11415   0107B0  4A19               	infsnz	stoa@l^(0+1280),f,c
 11416   0107B2  2A1A               	incf	(stoa@l+1)^(0+1280),f,c
 11417   0107B4                     l3804:
 11418                           
 11419                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 971:         whil
      +                          e (l < w) {
 11420   0107B4  5015               	movf	stoa@w^(0+1280),w,c
 11421   0107B6  5C19               	subwf	stoa@l^(0+1280),w,c
 11422   0107B8  501A               	movf	(stoa@l+1)^(0+1280),w,c
 11423   0107BA  0A80               	xorlw	128
 11424   0107BC  6E11               	movwf	??_stoa^(0+1280),c
 11425   0107BE  5016               	movf	(stoa@w+1)^(0+1280),w,c
 11426   0107C0  0A80               	xorlw	128
 11427   0107C2  5811               	subwfb	??_stoa^(0+1280),w,c
 11428   0107C4  A0D8               	btfss	status,0,c
 11429   0107C6  EFE7  F083         	goto	u2871
 11430   0107CA  EFE9  F083         	goto	u2870
 11431   0107CE                     u2871:
 11432   0107CE  EFCE  F083         	goto	l3800
 11433   0107D2                     u2870:
 11434   0107D2  EF08  F084         	goto	l3810
 11435   0107D6                     l3806:
 11436                           
 11437                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 980:         fput
      +                          c(*cp, fp);
 11438   0107D6  C517  F4F6         	movff	stoa@cp,tblptrl
 11439   0107DA  C518  F4F7         	movff	stoa@cp+1,tblptrh
 11440   0107DE  0E00               	movlw	low (__mediumconst shr (0+16))
 11441   0107E0  6EF8               	movwf	tblptru,c
 11442   0107E2  0E25               	movlw	(high __ramtop+-1)
 11443   0107E4  64F7               	cpfsgt	tblptrh,c
 11444   0107E6  D003               	bra	u2887
 11445   0107E8  0008               	tblrd		*
 11446   0107EA  50F5               	movf	tablat,w,c
 11447   0107EC  D005               	bra	u2880
 11448   0107EE                     u2887:
 11449   0107EE  C4F6 F4E9          	movff	tblptrl,fsr0l
 11450   0107F2  C4F7 F4EA          	movff	tblptrh,fsr0h
 11451   0107F6  50EF               	movf	indf0,w,c
 11452   0107F8                     u2880:
 11453   0107F8  6E11               	movwf	??_stoa^(0+1280),c
 11454   0107FA  5011               	movf	??_stoa^(0+1280),w,c
 11455   0107FC  6E04               	movwf	fputc@c^(0+1280),c
 11456   0107FE  6A05               	clrf	(fputc@c+1)^(0+1280),c
 11457   010800  C50D  F506         	movff	stoa@fp,fputc@fp
 11458   010804  C50E  F507         	movff	stoa@fp+1,fputc@fp+1
 11459   010808  EC9B  F085         	call	_fputc	;wreg free
 11460   01080C                     
 11461                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 981:         ++cp
      +                          ;
 11462   01080C  4A17               	infsnz	stoa@cp^(0+1280),f,c
 11463   01080E  2A18               	incf	(stoa@cp+1)^(0+1280),f,c
 11464   010810                     l3810:
 11465                           
 11466                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 979:     while (p
      +                          --) {
 11467   010810  0613               	decf	stoa@p^(0+1280),f,c
 11468   010812  A0D8               	btfss	status,0,c
 11469   010814  0614               	decf	(stoa@p+1)^(0+1280),f,c
 11470   010816  2813               	incf	stoa@p^(0+1280),w,c
 11471   010818  E106               	bnz	u2891
 11472   01081A  2814               	incf	(stoa@p+1)^(0+1280),w,c
 11473   01081C  A4D8               	btfss	status,2,c
 11474   01081E  EF13  F084         	goto	u2891
 11475   010822  EF15  F084         	goto	u2890
 11476   010826                     u2891:
 11477   010826  EFEB  F083         	goto	l3806
 11478   01082A                     u2890:
 11479   01082A                     
 11480                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 986:     if (flag
      +                          s & (1 << 0)) {
 11481   01082A  A05C               	btfss	_flags^(0+1280),0,c
 11482   01082C  EF1A  F084         	goto	u2901
 11483   010830  EF1C  F084         	goto	u2900
 11484   010834                     u2901:
 11485   010834  EF39  F084         	goto	l1515
 11486   010838                     u2900:
 11487   010838  EF2A  F084         	goto	l3818
 11488   01083C                     l3814:
 11489                           
 11490                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 988:             
      +                          fputc(' ', fp);
 11491   01083C  0E00               	movlw	0
 11492   01083E  6E05               	movwf	(fputc@c+1)^(0+1280),c
 11493   010840  0E20               	movlw	32
 11494   010842  6E04               	movwf	fputc@c^(0+1280),c
 11495   010844  C50D  F506         	movff	stoa@fp,fputc@fp
 11496   010848  C50E  F507         	movff	stoa@fp+1,fputc@fp+1
 11497   01084C  EC9B  F085         	call	_fputc	;wreg free
 11498   010850                     
 11499                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 989:             
      +                          ++l;
 11500   010850  4A19               	infsnz	stoa@l^(0+1280),f,c
 11501   010852  2A1A               	incf	(stoa@l+1)^(0+1280),f,c
 11502   010854                     l3818:
 11503                           
 11504                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 987:         whil
      +                          e (l < w) {
 11505   010854  5015               	movf	stoa@w^(0+1280),w,c
 11506   010856  5C19               	subwf	stoa@l^(0+1280),w,c
 11507   010858  501A               	movf	(stoa@l+1)^(0+1280),w,c
 11508   01085A  0A80               	xorlw	128
 11509   01085C  6E11               	movwf	??_stoa^(0+1280),c
 11510   01085E  5016               	movf	(stoa@w+1)^(0+1280),w,c
 11511   010860  0A80               	xorlw	128
 11512   010862  5811               	subwfb	??_stoa^(0+1280),w,c
 11513   010864  A0D8               	btfss	status,0,c
 11514   010866  EF37  F084         	goto	u2911
 11515   01086A  EF39  F084         	goto	u2910
 11516   01086E                     u2911:
 11517   01086E  EF1E  F084         	goto	l3814
 11518   010872                     u2910:
 11519   010872                     l1515:
 11520   010872  0012               	return		;funcret
 11521   010874                     __end_of_stoa:
 11522                           	callstack 0
 11523                           
 11524 ;; *************** function _read_prec_or_width *****************
 11525 ;; Defined at:
 11526 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 11527 ;; Parameters:    Size  Location     Type
 11528 ;;  fmt             2    3[COMRAM] PTR PTR const unsigned c
 11529 ;;		 -> vfprintf@cfmt(2), 
 11530 ;;  ap              2    5[COMRAM] PTR PTR void [1]
 11531 ;;		 -> printf@ap(2), 
 11532 ;; Auto vars:     Size  Location     Type
 11533 ;;  c               1    9[COMRAM] unsigned char 
 11534 ;;  n               2   10[COMRAM] int 
 11535 ;; Return value:  Size  Location     Type
 11536 ;;                  2    3[COMRAM] int 
 11537 ;; Registers used:
 11538 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 11539 ;; Tracked objects:
 11540 ;;		On entry : 0/0
 11541 ;;		On exit  : 0/0
 11542 ;;		Unchanged: 0/0
 11543 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 11544 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11545 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11546 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11547 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11548 ;;Total ram usage:        9 bytes
 11549 ;; Hardware stack levels used: 1
 11550 ;; Hardware stack levels required when called: 3
 11551 ;; This function calls:
 11552 ;;		Nothing
 11553 ;; This function is called by:
 11554 ;;		_vfpfcnvrt
 11555 ;; This function uses a non-reentrant model
 11556 ;;
 11557                           
 11558                           	psect	text15
 11559   010A6A                     __ptext15:
 11560                           	callstack 0
 11561   010A6A                     _read_prec_or_width:
 11562                           	callstack 118
 11563   010A6A                     
 11564                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
 11565   010A6A  0E00               	movlw	0
 11566   010A6C  6E0C               	movwf	(read_prec_or_width@n+1)^(0+1280),c
 11567   010A6E  0E00               	movlw	0
 11568   010A70  6E0B               	movwf	read_prec_or_width@n^(0+1280),c
 11569   010A72                     
 11570                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
 11571   010A72  C504  F4D9         	movff	read_prec_or_width@fmt,fsr2l
 11572   010A76  C505  F4DA         	movff	read_prec_or_width@fmt+1,fsr2h
 11573   010A7A  C4DE F4F6          	movff	postinc2,tblptrl
 11574   010A7E  C4DD F4F7          	movff	postdec2,tblptrh
 11575   010A82                     	if	0	;tblptru may be non-zero
 11576   010A82                     	endif
 11577   010A82                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11578   010A82  0E00               	movlw	low (__mediumconst shr (0+16))
 11579   010A84  6EF8               	movwf	tblptru,c
 11580   010A86                     	endif
 11581   010A86  0008               	tblrd		*
 11582   010A88  50F5               	movf	tablat,w,c
 11583   010A8A  0A2A               	xorlw	42
 11584   010A8C  A4D8               	btfss	status,2,c
 11585   010A8E  EF4B  F085         	goto	u2991
 11586   010A92  EF4D  F085         	goto	u2990
 11587   010A96                     u2991:
 11588   010A96  EF80  F085         	goto	l3868
 11589   010A9A                     u2990:
 11590   010A9A                     
 11591                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
 11592   010A9A  C504  F4D9         	movff	read_prec_or_width@fmt,fsr2l
 11593   010A9E  C505  F4DA         	movff	read_prec_or_width@fmt+1,fsr2h
 11594   010AA2  2ADE               	incf	postinc2,f,c
 11595   010AA4  0E00               	movlw	0
 11596   010AA6  22DD               	addwfc	postdec2,f,c
 11597                           
 11598                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
 11599   010AA8  C506  F4D9         	movff	read_prec_or_width@ap,fsr2l
 11600   010AAC  C507  F4DA         	movff	read_prec_or_width@ap+1,fsr2h
 11601   010AB0  C4DF F508          	movff	indf2,??_read_prec_or_width
 11602   010AB4  0E02               	movlw	2
 11603   010AB6  26DE               	addwf	postinc2,f,c
 11604   010AB8  C4DF F509          	movff	indf2,??_read_prec_or_width+1
 11605   010ABC  0E00               	movlw	0
 11606   010ABE  22DD               	addwfc	postdec2,f,c
 11607   010AC0  C508  F4D9         	movff	??_read_prec_or_width,fsr2l
 11608   010AC4  C509  F4DA         	movff	??_read_prec_or_width+1,fsr2h
 11609   010AC8  C4DE F50B          	movff	postinc2,read_prec_or_width@n
 11610   010ACC  C4DD F50C          	movff	postdec2,read_prec_or_width@n+1
 11611                           
 11612                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
 11613   010AD0  EF96  F085         	goto	l1531
 11614   010AD4                     l3864:
 11615                           
 11616                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
 11617   010AD4  0E0A               	movlw	10
 11618   010AD6  020B               	mulwf	read_prec_or_width@n^(0+1280),c
 11619   010AD8  C4F3 F508          	movff	prodl,??_read_prec_or_width
 11620   010ADC  C4F4 F509          	movff	prodh,??_read_prec_or_width+1
 11621   010AE0  020C               	mulwf	(read_prec_or_width@n+1)^(0+1280),c
 11622   010AE2  50F3               	movf	prodl,w,c
 11623   010AE4  2609               	addwf	(??_read_prec_or_width+1)^(0+1280),f,c
 11624   010AE6  500A               	movf	read_prec_or_width@c^(0+1280),w,c
 11625   010AE8  2408               	addwf	??_read_prec_or_width^(0+1280),w,c
 11626   010AEA  6E0B               	movwf	read_prec_or_width@n^(0+1280),c
 11627   010AEC  0E00               	movlw	0
 11628   010AEE  2009               	addwfc	(??_read_prec_or_width+1)^(0+1280),w,c
 11629   010AF0  6E0C               	movwf	(read_prec_or_width@n+1)^(0+1280),c
 11630   010AF2                     
 11631                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
 11632   010AF2  C504  F4D9         	movff	read_prec_or_width@fmt,fsr2l
 11633   010AF6  C505  F4DA         	movff	read_prec_or_width@fmt+1,fsr2h
 11634   010AFA  2ADE               	incf	postinc2,f,c
 11635   010AFC  0E00               	movlw	0
 11636   010AFE  22DD               	addwfc	postdec2,f,c
 11637   010B00                     l3868:
 11638                           
 11639                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
 11640   010B00  C504  F4D9         	movff	read_prec_or_width@fmt,fsr2l
 11641   010B04  C505  F4DA         	movff	read_prec_or_width@fmt+1,fsr2h
 11642   010B08  C4DE F4F6          	movff	postinc2,tblptrl
 11643   010B0C  C4DD F4F7          	movff	postdec2,tblptrh
 11644   010B10                     	if	0	;tblptru may be non-zero
 11645   010B10                     	endif
 11646   010B10                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11647   010B10  0E00               	movlw	low (__mediumconst shr (0+16))
 11648   010B12  6EF8               	movwf	tblptru,c
 11649   010B14                     	endif
 11650   010B14  0008               	tblrd		*
 11651   010B16  50F5               	movf	tablat,w,c
 11652   010B18  0FD0               	addlw	208
 11653   010B1A  6E0A               	movwf	read_prec_or_width@c^(0+1280),c
 11654   010B1C  0E09               	movlw	9
 11655   010B1E  640A               	cpfsgt	read_prec_or_width@c^(0+1280),c
 11656   010B20  EF94  F085         	goto	u3001
 11657   010B24  EF96  F085         	goto	u3000
 11658   010B28                     u3001:
 11659   010B28  EF6A  F085         	goto	l3864
 11660   010B2C                     u3000:
 11661   010B2C                     l1531:
 11662                           
 11663                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
 11664   010B2C  C50B  F504         	movff	read_prec_or_width@n,?_read_prec_or_width
 11665   010B30  C50C  F505         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
 11666   010B34  0012               	return		;funcret
 11667   010B36                     __end_of_read_prec_or_width:
 11668                           	callstack 0
 11669                           
 11670 ;; *************** function _dtoa *****************
 11671 ;; Defined at:
 11672 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 11673 ;; Parameters:    Size  Location     Type
 11674 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
 11675 ;;		 -> NULL(0), 
 11676 ;;  d               2   30[COMRAM] int 
 11677 ;; Auto vars:     Size  Location     Type
 11678 ;;  i               2   38[COMRAM] int 
 11679 ;;  w               2   35[COMRAM] int 
 11680 ;;  s               1   37[COMRAM] unsigned char 
 11681 ;;  p               1   34[COMRAM] _Bool 
 11682 ;; Return value:  Size  Location     Type
 11683 ;;                  1    wreg      void 
 11684 ;; Registers used:
 11685 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11686 ;; Tracked objects:
 11687 ;;		On entry : 0/0
 11688 ;;		On exit  : 0/0
 11689 ;;		Unchanged: 0/0
 11690 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 11691 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11692 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11694 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11695 ;;Total ram usage:       12 bytes
 11696 ;; Hardware stack levels used: 1
 11697 ;; Hardware stack levels required when called: 7
 11698 ;; This function calls:
 11699 ;;		___awdiv
 11700 ;;		___awmod
 11701 ;;		_abs
 11702 ;;		_pad
 11703 ;; This function is called by:
 11704 ;;		_vfpfcnvrt
 11705 ;; This function uses a non-reentrant model
 11706 ;;
 11707                           
 11708                           	psect	text16
 11709   010594                     __ptext16:
 11710                           	callstack 0
 11711   010594                     _dtoa:
 11712                           	callstack 114
 11713   010594                     
 11714                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 52
      +                          0:  _Bool p = 1;
 11715   010594  0E01               	movlw	1
 11716   010596  6E23               	movwf	dtoa@p^(0+1280),c
 11717   010598                     
 11718                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 524:     s = d < 
      +                          0 ? 1 : 0;
 11719   010598  BE20               	btfsc	(dtoa@d+1)^(0+1280),7,c
 11720   01059A  EFD1  F082         	goto	u2731
 11721   01059E  EFD4  F082         	goto	u2730
 11722   0105A2                     u2731:
 11723   0105A2  0E01               	movlw	1
 11724   0105A4  EFD5  F082         	goto	u2740
 11725   0105A8                     u2730:
 11726   0105A8  0E00               	movlw	0
 11727   0105AA                     u2740:
 11728   0105AA  6E26               	movwf	dtoa@s^(0+1280),c
 11729   0105AC                     
 11730                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
 11731   0105AC  C55A  F524         	movff	_width,dtoa@w
 11732   0105B0  C55B  F525         	movff	_width+1,dtoa@w+1
 11733   0105B4                     
 11734                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 536:     if (s
 11735   0105B4  5026               	movf	dtoa@s^(0+1280),w,c
 11736   0105B6  B4D8               	btfsc	status,2,c
 11737   0105B8  EFE0  F082         	goto	u2751
 11738   0105BC  EFE2  F082         	goto	u2750
 11739   0105C0                     u2751:
 11740   0105C0  EFF9  F082         	goto	l1483
 11741   0105C4                     u2750:
 11742   0105C4                     
 11743                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 541:         --w;
 11744   0105C4  0624               	decf	dtoa@w^(0+1280),f,c
 11745   0105C6  A0D8               	btfss	status,0,c
 11746   0105C8  0625               	decf	(dtoa@w+1)^(0+1280),f,c
 11747   0105CA                     
 11748                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
 11749   0105CA  5026               	movf	dtoa@s^(0+1280),w,c
 11750   0105CC  A4D8               	btfss	status,2,c
 11751   0105CE  EFEB  F082         	goto	u2761
 11752   0105D2  EFED  F082         	goto	u2760
 11753   0105D6                     u2761:
 11754   0105D6  EFF3  F082         	goto	l3752
 11755   0105DA                     u2760:
 11756   0105DA  0E00               	movlw	0
 11757   0105DC  6E22               	movwf	(_dtoa$1906+1)^(0+1280),c
 11758   0105DE  0E2B               	movlw	43
 11759   0105E0  6E21               	movwf	_dtoa$1906^(0+1280),c
 11760   0105E2  EFF7  F082         	goto	l3754
 11761   0105E6                     l3752:
 11762   0105E6  0E00               	movlw	0
 11763   0105E8  6E22               	movwf	(_dtoa$1906+1)^(0+1280),c
 11764   0105EA  0E2D               	movlw	45
 11765   0105EC  6E21               	movwf	_dtoa$1906^(0+1280),c
 11766   0105EE                     l3754:
 11767   0105EE  C521  F526         	movff	_dtoa$1906,dtoa@s
 11768   0105F2                     l1483:
 11769                           
 11770                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
 11771   0105F2  0E00               	movlw	0
 11772   0105F4  6E28               	movwf	(dtoa@i+1)^(0+1280),c
 11773   0105F6  0E1F               	movlw	31
 11774   0105F8  6E27               	movwf	dtoa@i^(0+1280),c
 11775   0105FA                     
 11776                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
 11777   0105FA  0105               	movlb	5	; () banked
 11778   0105FC  6BEE               	clrf	(_dbuf+31)& (0+255),b
 11779                           
 11780                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 11781   0105FE  EF2F  F083         	goto	l3768
 11782   010602                     l3758:
 11783                           
 11784                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 564:         --i;
 11785   010602  0627               	decf	dtoa@i^(0+1280),f,c
 11786   010604  A0D8               	btfss	status,0,c
 11787   010606  0628               	decf	(dtoa@i+1)^(0+1280),f,c
 11788   010608                     
 11789                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
 11790   010608  0ECF               	movlw	low _dbuf
 11791   01060A  2427               	addwf	dtoa@i^(0+1280),w,c
 11792   01060C  6ED9               	movwf	fsr2l,c
 11793   01060E  0E05               	movlw	high _dbuf
 11794   010610  2028               	addwfc	(dtoa@i+1)^(0+1280),w,c
 11795   010612  6EDA               	movwf	fsr2h,c
 11796   010614  C51F  F504         	movff	dtoa@d,___awmod@dividend
 11797   010618  C520  F505         	movff	dtoa@d+1,___awmod@dividend+1
 11798   01061C  0E00               	movlw	0
 11799   01061E  6E07               	movwf	(___awmod@divisor+1)^(0+1280),c
 11800   010620  0E0A               	movlw	10
 11801   010622  6E06               	movwf	___awmod@divisor^(0+1280),c
 11802   010624  ECC6  F086         	call	___awmod	;wreg free
 11803   010628  C504  F50A         	movff	?___awmod,abs@a
 11804   01062C  C505  F50B         	movff	?___awmod+1,abs@a+1
 11805   010630  EC90  F08A         	call	_abs	;wreg free
 11806   010634  500A               	movf	?_abs^(0+1280),w,c
 11807   010636  0F30               	addlw	48
 11808   010638  6EDF               	movwf	indf2,c
 11809   01063A                     
 11810                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 569:   p = 0;
 11811   01063A  6A23               	clrf	dtoa@p^(0+1280),c
 11812   01063C                     
 11813                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 571:         --w;
 11814   01063C  0624               	decf	dtoa@w^(0+1280),f,c
 11815   01063E  A0D8               	btfss	status,0,c
 11816   010640  0625               	decf	(dtoa@w+1)^(0+1280),f,c
 11817   010642                     
 11818                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
 11819   010642  C51F  F504         	movff	dtoa@d,___awdiv@dividend
 11820   010646  C520  F505         	movff	dtoa@d+1,___awdiv@dividend+1
 11821   01064A  0E00               	movlw	0
 11822   01064C  6E07               	movwf	(___awdiv@divisor+1)^(0+1280),c
 11823   01064E  0E0A               	movlw	10
 11824   010650  6E06               	movwf	___awdiv@divisor^(0+1280),c
 11825   010652  EC65  F086         	call	___awdiv	;wreg free
 11826   010656  C504  F51F         	movff	?___awdiv,dtoa@d
 11827   01065A  C505  F520         	movff	?___awdiv+1,dtoa@d+1
 11828   01065E                     l3768:
 11829                           
 11830                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 11831   01065E  BE28               	btfsc	(dtoa@i+1)^(0+1280),7,c
 11832   010660  EF3A  F083         	goto	u2771
 11833   010664  5028               	movf	(dtoa@i+1)^(0+1280),w,c
 11834   010666  E108               	bnz	u2770
 11835   010668  0427               	decf	dtoa@i^(0+1280),w,c
 11836   01066A  A0D8               	btfss	status,0,c
 11837   01066C  EF3A  F083         	goto	u2771
 11838   010670  EF3C  F083         	goto	u2770
 11839   010674                     u2771:
 11840   010674  EF61  F083         	goto	l3778
 11841   010678                     u2770:
 11842   010678  501F               	movf	dtoa@d^(0+1280),w,c
 11843   01067A  1020               	iorwf	(dtoa@d+1)^(0+1280),w,c
 11844   01067C  A4D8               	btfss	status,2,c
 11845   01067E  EF43  F083         	goto	u2781
 11846   010682  EF45  F083         	goto	u2780
 11847   010686                     u2781:
 11848   010686  EF01  F083         	goto	l3758
 11849   01068A                     u2780:
 11850   01068A  5023               	movf	dtoa@p^(0+1280),w,c
 11851   01068C  A4D8               	btfss	status,2,c
 11852   01068E  EF4B  F083         	goto	u2791
 11853   010692  EF4D  F083         	goto	u2790
 11854   010696                     u2791:
 11855   010696  EF01  F083         	goto	l3758
 11856   01069A                     u2790:
 11857   01069A  BE25               	btfsc	(dtoa@w+1)^(0+1280),7,c
 11858   01069C  EF58  F083         	goto	u2801
 11859   0106A0  5025               	movf	(dtoa@w+1)^(0+1280),w,c
 11860   0106A2  E108               	bnz	u2800
 11861   0106A4  0424               	decf	dtoa@w^(0+1280),w,c
 11862   0106A6  A0D8               	btfss	status,0,c
 11863   0106A8  EF58  F083         	goto	u2801
 11864   0106AC  EF5A  F083         	goto	u2800
 11865   0106B0                     u2801:
 11866   0106B0  EF61  F083         	goto	l3778
 11867   0106B4                     u2800:
 11868   0106B4  B25C               	btfsc	_flags^(0+1280),1,c
 11869   0106B6  EF5F  F083         	goto	u2811
 11870   0106BA  EF61  F083         	goto	u2810
 11871   0106BE                     u2811:
 11872   0106BE  EF01  F083         	goto	l3758
 11873   0106C2                     u2810:
 11874   0106C2                     l3778:
 11875                           
 11876                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
 11877   0106C2  5026               	movf	dtoa@s^(0+1280),w,c
 11878   0106C4  B4D8               	btfsc	status,2,c
 11879   0106C6  EF67  F083         	goto	u2821
 11880   0106CA  EF69  F083         	goto	u2820
 11881   0106CE                     u2821:
 11882   0106CE  EF74  F083         	goto	l3784
 11883   0106D2                     u2820:
 11884   0106D2                     
 11885                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 577:         --i;
 11886   0106D2  0627               	decf	dtoa@i^(0+1280),f,c
 11887   0106D4  A0D8               	btfss	status,0,c
 11888   0106D6  0628               	decf	(dtoa@i+1)^(0+1280),f,c
 11889   0106D8                     
 11890                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
 11891   0106D8  0ECF               	movlw	low _dbuf
 11892   0106DA  2427               	addwf	dtoa@i^(0+1280),w,c
 11893   0106DC  6ED9               	movwf	fsr2l,c
 11894   0106DE  0E05               	movlw	high _dbuf
 11895   0106E0  2028               	addwfc	(dtoa@i+1)^(0+1280),w,c
 11896   0106E2  6EDA               	movwf	fsr2h,c
 11897   0106E4  C526  F4DF         	movff	dtoa@s,indf2
 11898   0106E8                     l3784:
 11899                           
 11900                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
 11901   0106E8  C51D  F514         	movff	dtoa@fp,pad@fp
 11902   0106EC  C51E  F515         	movff	dtoa@fp+1,pad@fp+1
 11903   0106F0  0ECF               	movlw	low _dbuf
 11904   0106F2  2427               	addwf	dtoa@i^(0+1280),w,c
 11905   0106F4  6E16               	movwf	pad@buf^(0+1280),c
 11906   0106F6  0E05               	movlw	high _dbuf
 11907   0106F8  2028               	addwfc	(dtoa@i+1)^(0+1280),w,c
 11908   0106FA  6E17               	movwf	(pad@buf+1)^(0+1280),c
 11909   0106FC  C524  F518         	movff	dtoa@w,pad@p
 11910   010700  C525  F519         	movff	dtoa@w+1,pad@p+1
 11911   010704  EC70  F087         	call	_pad	;wreg free
 11912   010708  0012               	return		;funcret
 11913   01070A                     __end_of_dtoa:
 11914                           	callstack 0
 11915                           
 11916 ;; *************** function _pad *****************
 11917 ;; Defined at:
 11918 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 11919 ;; Parameters:    Size  Location     Type
 11920 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
 11921 ;;		 -> NULL(0), 
 11922 ;;  buf             2   21[COMRAM] PTR unsigned char 
 11923 ;;		 -> dbuf(32), 
 11924 ;;  p               2   23[COMRAM] int 
 11925 ;; Auto vars:     Size  Location     Type
 11926 ;;  i               2   26[COMRAM] int 
 11927 ;; Return value:  Size  Location     Type
 11928 ;;                  1    wreg      void 
 11929 ;; Registers used:
 11930 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11931 ;; Tracked objects:
 11932 ;;		On entry : 0/0
 11933 ;;		On exit  : 0/0
 11934 ;;		Unchanged: 0/0
 11935 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 11936 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11937 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11938 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11939 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11940 ;;Total ram usage:        9 bytes
 11941 ;; Hardware stack levels used: 1
 11942 ;; Hardware stack levels required when called: 6
 11943 ;; This function calls:
 11944 ;;		_fputc
 11945 ;;		_fputs
 11946 ;; This function is called by:
 11947 ;;		_dtoa
 11948 ;;		_xtoa
 11949 ;; This function uses a non-reentrant model
 11950 ;;
 11951                           
 11952                           	psect	text17
 11953   010EE0                     __ptext17:
 11954                           	callstack 0
 11955   010EE0                     _pad:
 11956                           	callstack 114
 11957   010EE0                     
 11958                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
 11959   010EE0  A05C               	btfss	_flags^(0+1280),0,c
 11960   010EE2  EF75  F087         	goto	u2681
 11961   010EE6  EF77  F087         	goto	u2680
 11962   010EEA                     u2681:
 11963   010EEA  EF81  F087         	goto	l3722
 11964   010EEE                     u2680:
 11965   010EEE                     
 11966                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
 11967   010EEE  C516  F50D         	movff	pad@buf,fputs@s
 11968   010EF2  C517  F50E         	movff	pad@buf+1,fputs@s+1
 11969   010EF6  C514  F50F         	movff	pad@fp,fputs@fp
 11970   010EFA  C515  F510         	movff	pad@fp+1,fputs@fp+1
 11971   010EFE  EC32  F08A         	call	_fputs	;wreg free
 11972   010F02                     l3722:
 11973                           
 11974                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
 11975   010F02  BE19               	btfsc	(pad@p+1)^(0+1280),7,c
 11976   010F04  EF88  F087         	goto	u2690
 11977   010F08  EF86  F087         	goto	u2691
 11978   010F0C                     u2691:
 11979   010F0C  EF8C  F087         	goto	l1475
 11980   010F10                     u2690:
 11981   010F10                     
 11982                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 206:   p = 0;
 11983   010F10  0E00               	movlw	0
 11984   010F12  6E19               	movwf	(pad@p+1)^(0+1280),c
 11985   010F14  0E00               	movlw	0
 11986   010F16  6E18               	movwf	pad@p^(0+1280),c
 11987   010F18                     l1475:
 11988                           
 11989                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 208:     i = 0;
 11990   010F18  0E00               	movlw	0
 11991   010F1A  6E1C               	movwf	(pad@i+1)^(0+1280),c
 11992   010F1C  0E00               	movlw	0
 11993   010F1E  6E1B               	movwf	pad@i^(0+1280),c
 11994                           
 11995                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 11996   010F20  EF9E  F087         	goto	l3730
 11997   010F24                     l3726:
 11998                           
 11999                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
 12000   010F24  0E00               	movlw	0
 12001   010F26  6E05               	movwf	(fputc@c+1)^(0+1280),c
 12002   010F28  0E20               	movlw	32
 12003   010F2A  6E04               	movwf	fputc@c^(0+1280),c
 12004   010F2C  C514  F506         	movff	pad@fp,fputc@fp
 12005   010F30  C515  F507         	movff	pad@fp+1,fputc@fp+1
 12006   010F34  EC9B  F085         	call	_fputc	;wreg free
 12007   010F38                     
 12008                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 211:         ++i;
 12009   010F38  4A1B               	infsnz	pad@i^(0+1280),f,c
 12010   010F3A  2A1C               	incf	(pad@i+1)^(0+1280),f,c
 12011   010F3C                     l3730:
 12012                           
 12013                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 12014   010F3C  5018               	movf	pad@p^(0+1280),w,c
 12015   010F3E  5C1B               	subwf	pad@i^(0+1280),w,c
 12016   010F40  501C               	movf	(pad@i+1)^(0+1280),w,c
 12017   010F42  0A80               	xorlw	128
 12018   010F44  6E1A               	movwf	??_pad^(0+1280),c
 12019   010F46  5019               	movf	(pad@p+1)^(0+1280),w,c
 12020   010F48  0A80               	xorlw	128
 12021   010F4A  581A               	subwfb	??_pad^(0+1280),w,c
 12022   010F4C  A0D8               	btfss	status,0,c
 12023   010F4E  EFAB  F087         	goto	u2701
 12024   010F52  EFAD  F087         	goto	u2700
 12025   010F56                     u2701:
 12026   010F56  EF92  F087         	goto	l3726
 12027   010F5A                     u2700:
 12028   010F5A                     
 12029                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
 12030   010F5A  B05C               	btfsc	_flags^(0+1280),0,c
 12031   010F5C  EFB2  F087         	goto	u2711
 12032   010F60  EFB4  F087         	goto	u2710
 12033   010F64                     u2711:
 12034   010F64  EFBE  F087         	goto	l1480
 12035   010F68                     u2710:
 12036   010F68                     
 12037                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
 12038   010F68  C516  F50D         	movff	pad@buf,fputs@s
 12039   010F6C  C517  F50E         	movff	pad@buf+1,fputs@s+1
 12040   010F70  C514  F50F         	movff	pad@fp,fputs@fp
 12041   010F74  C515  F510         	movff	pad@fp+1,fputs@fp+1
 12042   010F78  EC32  F08A         	call	_fputs	;wreg free
 12043   010F7C                     l1480:
 12044   010F7C  0012               	return		;funcret
 12045   010F7E                     __end_of_pad:
 12046                           	callstack 0
 12047                           
 12048 ;; *************** function _fputs *****************
 12049 ;; Defined at:
 12050 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputs.c"
 12051 ;; Parameters:    Size  Location     Type
 12052 ;;  s               2   12[COMRAM] PTR const unsigned char 
 12053 ;;		 -> dbuf(32), 
 12054 ;;  fp              2   14[COMRAM] PTR struct _IO_FILE
 12055 ;;		 -> NULL(0), 
 12056 ;; Auto vars:     Size  Location     Type
 12057 ;;  i               2   17[COMRAM] int 
 12058 ;;  c               1   16[COMRAM] unsigned char 
 12059 ;; Return value:  Size  Location     Type
 12060 ;;                  2   12[COMRAM] int 
 12061 ;; Registers used:
 12062 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12063 ;; Tracked objects:
 12064 ;;		On entry : 0/0
 12065 ;;		On exit  : 0/0
 12066 ;;		Unchanged: 0/0
 12067 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12068 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12069 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12071 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12072 ;;Total ram usage:        7 bytes
 12073 ;; Hardware stack levels used: 1
 12074 ;; Hardware stack levels required when called: 5
 12075 ;; This function calls:
 12076 ;;		_fputc
 12077 ;; This function is called by:
 12078 ;;		_pad
 12079 ;; This function uses a non-reentrant model
 12080 ;;
 12081                           
 12082                           	psect	text18
 12083   011464                     __ptext18:
 12084                           	callstack 0
 12085   011464                     _fputs:
 12086                           	callstack 114
 12087   011464  0E00               	movlw	0
 12088   011466  6E13               	movwf	(fputs@i+1)^(0+1280),c
 12089   011468  0E00               	movlw	0
 12090   01146A  6E12               	movwf	fputs@i^(0+1280),c
 12091   01146C  EF43  F08A         	goto	l3636
 12092   011470                     l3632:
 12093   011470  C511  F504         	movff	fputs@c,fputc@c
 12094   011474  6A05               	clrf	(fputc@c+1)^(0+1280),c
 12095   011476  C50F  F506         	movff	fputs@fp,fputc@fp
 12096   01147A  C510  F507         	movff	fputs@fp+1,fputc@fp+1
 12097   01147E  EC9B  F085         	call	_fputc	;wreg free
 12098   011482  4A12               	infsnz	fputs@i^(0+1280),f,c
 12099   011484  2A13               	incf	(fputs@i+1)^(0+1280),f,c
 12100   011486                     l3636:
 12101   011486  5012               	movf	fputs@i^(0+1280),w,c
 12102   011488  240D               	addwf	fputs@s^(0+1280),w,c
 12103   01148A  6ED9               	movwf	fsr2l,c
 12104   01148C  5013               	movf	(fputs@i+1)^(0+1280),w,c
 12105   01148E  200E               	addwfc	(fputs@s+1)^(0+1280),w,c
 12106   011490  6EDA               	movwf	fsr2h,c
 12107   011492  50DF               	movf	indf2,w,c
 12108   011494  6E11               	movwf	fputs@c^(0+1280),c
 12109   011496  5011               	movf	fputs@c^(0+1280),w,c
 12110   011498  A4D8               	btfss	status,2,c
 12111   01149A  EF51  F08A         	goto	u2551
 12112   01149E  EF53  F08A         	goto	u2550
 12113   0114A2                     u2551:
 12114   0114A2  EF38  F08A         	goto	l3632
 12115   0114A6                     u2550:
 12116   0114A6  0012               	return		;funcret
 12117   0114A8                     __end_of_fputs:
 12118                           	callstack 0
 12119                           
 12120 ;; *************** function _fputc *****************
 12121 ;; Defined at:
 12122 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputc.c"
 12123 ;; Parameters:    Size  Location     Type
 12124 ;;  c               2    3[COMRAM] int 
 12125 ;;  fp              2    5[COMRAM] PTR struct _IO_FILE
 12126 ;;		 -> NULL(0), 
 12127 ;; Auto vars:     Size  Location     Type
 12128 ;;		None
 12129 ;; Return value:  Size  Location     Type
 12130 ;;                  2    3[COMRAM] int 
 12131 ;; Registers used:
 12132 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12133 ;; Tracked objects:
 12134 ;;		On entry : 0/0
 12135 ;;		On exit  : 0/0
 12136 ;;		Unchanged: 0/0
 12137 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12138 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12140 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12141 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12142 ;;Total ram usage:        9 bytes
 12143 ;; Hardware stack levels used: 1
 12144 ;; Hardware stack levels required when called: 4
 12145 ;; This function calls:
 12146 ;;		_putch
 12147 ;; This function is called by:
 12148 ;;		_pad
 12149 ;;		_stoa
 12150 ;;		_vfpfcnvrt
 12151 ;;		_fputs
 12152 ;; This function uses a non-reentrant model
 12153 ;;
 12154                           
 12155                           	psect	text19
 12156   010B36                     __ptext19:
 12157                           	callstack 0
 12158   010B36                     _fputc:
 12159                           	callstack 114
 12160   010B36  5006               	movf	fputc@fp^(0+1280),w,c
 12161   010B38  1007               	iorwf	(fputc@fp+1)^(0+1280),w,c
 12162   010B3A  B4D8               	btfsc	status,2,c
 12163   010B3C  EFA2  F085         	goto	u2511
 12164   010B40  EFA4  F085         	goto	u2510
 12165   010B44                     u2511:
 12166   010B44  EFAD  F085         	goto	l3620
 12167   010B48                     u2510:
 12168   010B48  5006               	movf	fputc@fp^(0+1280),w,c
 12169   010B4A  1007               	iorwf	(fputc@fp+1)^(0+1280),w,c
 12170   010B4C  A4D8               	btfss	status,2,c
 12171   010B4E  EFAB  F085         	goto	u2521
 12172   010B52  EFAD  F085         	goto	u2520
 12173   010B56                     u2521:
 12174   010B56  EFB2  F085         	goto	l3622
 12175   010B5A                     u2520:
 12176   010B5A                     l3620:
 12177   010B5A  5004               	movf	fputc@c^(0+1280),w,c
 12178   010B5C  EC9A  F08C         	call	_putch
 12179   010B60  EFFF  F085         	goto	l1585
 12180   010B64                     l3622:
 12181   010B64  EE20 F009          	lfsr	2,9
 12182   010B68  5006               	movf	fputc@fp^(0+1280),w,c
 12183   010B6A  26D9               	addwf	fsr2l,f,c
 12184   010B6C  5007               	movf	(fputc@fp+1)^(0+1280),w,c
 12185   010B6E  22DA               	addwfc	fsr2h,f,c
 12186   010B70  50DE               	movf	postinc2,w,c
 12187   010B72  10DE               	iorwf	postinc2,w,c
 12188   010B74  B4D8               	btfsc	status,2,c
 12189   010B76  EFBF  F085         	goto	u2531
 12190   010B7A  EFC1  F085         	goto	u2530
 12191   010B7E                     u2531:
 12192   010B7E  EFDC  F085         	goto	l3626
 12193   010B82                     u2530:
 12194   010B82  EE20 F009          	lfsr	2,9
 12195   010B86  5006               	movf	fputc@fp^(0+1280),w,c
 12196   010B88  26D9               	addwf	fsr2l,f,c
 12197   010B8A  5007               	movf	(fputc@fp+1)^(0+1280),w,c
 12198   010B8C  22DA               	addwfc	fsr2h,f,c
 12199   010B8E  EE10 F002          	lfsr	1,2
 12200   010B92  5006               	movf	fputc@fp^(0+1280),w,c
 12201   010B94  26E1               	addwf	fsr1l,f,c
 12202   010B96  5007               	movf	(fputc@fp+1)^(0+1280),w,c
 12203   010B98  22E2               	addwfc	fsr1h,f,c
 12204   010B9A  50DE               	movf	postinc2,w,c
 12205   010B9C  5CE6               	subwf	postinc1,w,c
 12206   010B9E  50E6               	movf	postinc1,w,c
 12207   010BA0  0A80               	xorlw	128
 12208   010BA2  6E0C               	movwf	(??_fputc+4)^(0+1280),c
 12209   010BA4  50DE               	movf	postinc2,w,c
 12210   010BA6  0A80               	xorlw	128
 12211   010BA8  580C               	subwfb	(??_fputc+4)^(0+1280),w,c
 12212   010BAA  B0D8               	btfsc	status,0,c
 12213   010BAC  EFDA  F085         	goto	u2541
 12214   010BB0  EFDC  F085         	goto	u2540
 12215   010BB4                     u2541:
 12216   010BB4  EFFF  F085         	goto	l1585
 12217   010BB8                     u2540:
 12218   010BB8                     l3626:
 12219   010BB8  EE20 F002          	lfsr	2,2
 12220   010BBC  5006               	movf	fputc@fp^(0+1280),w,c
 12221   010BBE  26D9               	addwf	fsr2l,f,c
 12222   010BC0  5007               	movf	(fputc@fp+1)^(0+1280),w,c
 12223   010BC2  22DA               	addwfc	fsr2h,f,c
 12224   010BC4  C4DE F508          	movff	postinc2,??_fputc
 12225   010BC8  C4DD F509          	movff	postdec2,??_fputc+1
 12226   010BCC  C506  F4D9         	movff	fputc@fp,fsr2l
 12227   010BD0  C507  F4DA         	movff	fputc@fp+1,fsr2h
 12228   010BD4  C4DE F50A          	movff	postinc2,??_fputc+2
 12229   010BD8  C4DD F50B          	movff	postdec2,??_fputc+3
 12230   010BDC  5008               	movf	??_fputc^(0+1280),w,c
 12231   010BDE  240A               	addwf	(??_fputc+2)^(0+1280),w,c
 12232   010BE0  6ED9               	movwf	fsr2l,c
 12233   010BE2  5009               	movf	(??_fputc+1)^(0+1280),w,c
 12234   010BE4  200B               	addwfc	(??_fputc+3)^(0+1280),w,c
 12235   010BE6  6EDA               	movwf	fsr2h,c
 12236   010BE8  C504  F4DF         	movff	fputc@c,indf2
 12237   010BEC  EE20 F002          	lfsr	2,2
 12238   010BF0  5006               	movf	fputc@fp^(0+1280),w,c
 12239   010BF2  26D9               	addwf	fsr2l,f,c
 12240   010BF4  5007               	movf	(fputc@fp+1)^(0+1280),w,c
 12241   010BF6  22DA               	addwfc	fsr2h,f,c
 12242   010BF8  2ADE               	incf	postinc2,f,c
 12243   010BFA  0E00               	movlw	0
 12244   010BFC  22DD               	addwfc	postdec2,f,c
 12245   010BFE                     l1585:
 12246   010BFE  0012               	return		;funcret
 12247   010C00                     __end_of_fputc:
 12248                           	callstack 0
 12249                           
 12250 ;; *************** function _putch *****************
 12251 ;; Defined at:
 12252 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\putch.c"
 12253 ;; Parameters:    Size  Location     Type
 12254 ;;  c               1    wreg     unsigned char 
 12255 ;; Auto vars:     Size  Location     Type
 12256 ;;  c               1    0[COMRAM] unsigned char 
 12257 ;; Return value:  Size  Location     Type
 12258 ;;                  1    wreg      void 
 12259 ;; Registers used:
 12260 ;;		wreg
 12261 ;; Tracked objects:
 12262 ;;		On entry : 0/0
 12263 ;;		On exit  : 0/0
 12264 ;;		Unchanged: 0/0
 12265 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12270 ;;Total ram usage:        0 bytes
 12271 ;; Hardware stack levels used: 1
 12272 ;; Hardware stack levels required when called: 3
 12273 ;; This function calls:
 12274 ;;		Nothing
 12275 ;; This function is called by:
 12276 ;;		_fputc
 12277 ;; This function uses a non-reentrant model
 12278 ;;
 12279                           
 12280                           	psect	text20
 12281   011934                     __ptext20:
 12282                           	callstack 0
 12283   011934                     _putch:
 12284                           	callstack 114
 12285   011934  0012               	return		;funcret
 12286   011936                     __end_of_putch:
 12287                           	callstack 0
 12288                           
 12289 ;; *************** function _abs *****************
 12290 ;; Defined at:
 12291 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\abs.c"
 12292 ;; Parameters:    Size  Location     Type
 12293 ;;  a               2    9[COMRAM] int 
 12294 ;; Auto vars:     Size  Location     Type
 12295 ;;		None
 12296 ;; Return value:  Size  Location     Type
 12297 ;;                  2    9[COMRAM] int 
 12298 ;; Registers used:
 12299 ;;		wreg, status,2, status,0
 12300 ;; Tracked objects:
 12301 ;;		On entry : 0/0
 12302 ;;		On exit  : 0/0
 12303 ;;		Unchanged: 0/0
 12304 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12305 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12307 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12308 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12309 ;;Total ram usage:        4 bytes
 12310 ;; Hardware stack levels used: 1
 12311 ;; Hardware stack levels required when called: 3
 12312 ;; This function calls:
 12313 ;;		Nothing
 12314 ;; This function is called by:
 12315 ;;		_dtoa
 12316 ;; This function uses a non-reentrant model
 12317 ;;
 12318                           
 12319                           	psect	text21
 12320   011520                     __ptext21:
 12321                           	callstack 0
 12322   011520                     _abs:
 12323                           	callstack 117
 12324   011520  BE0B               	btfsc	(abs@a+1)^(0+1280),7,c
 12325   011522  EF95  F08A         	goto	u2721
 12326   011526  EF97  F08A         	goto	u2720
 12327   01152A                     u2721:
 12328   01152A  EF9D  F08A         	goto	l1570
 12329   01152E                     u2720:
 12330   01152E  C50A  F50A         	movff	abs@a,?_abs
 12331   011532  C50B  F50B         	movff	abs@a+1,?_abs+1
 12332   011536  EFA9  F08A         	goto	l1573
 12333   01153A                     l1570:
 12334   01153A  C50A  F50C         	movff	abs@a,??_abs
 12335   01153E  C50B  F50D         	movff	abs@a+1,??_abs+1
 12336   011542  1E0C               	comf	??_abs^(0+1280),f,c
 12337   011544  1E0D               	comf	(??_abs+1)^(0+1280),f,c
 12338   011546  4A0C               	infsnz	??_abs^(0+1280),f,c
 12339   011548  2A0D               	incf	(??_abs+1)^(0+1280),f,c
 12340   01154A  C50C  F50A         	movff	??_abs,?_abs
 12341   01154E  C50D  F50B         	movff	??_abs+1,?_abs+1
 12342   011552                     l1573:
 12343   011552  0012               	return		;funcret
 12344   011554                     __end_of_abs:
 12345                           	callstack 0
 12346                           
 12347 ;; *************** function ___awmod *****************
 12348 ;; Defined at:
 12349 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awmod.c"
 12350 ;; Parameters:    Size  Location     Type
 12351 ;;  dividend        2    3[COMRAM] int 
 12352 ;;  divisor         2    5[COMRAM] int 
 12353 ;; Auto vars:     Size  Location     Type
 12354 ;;  sign            1    8[COMRAM] unsigned char 
 12355 ;;  counter         1    7[COMRAM] unsigned char 
 12356 ;; Return value:  Size  Location     Type
 12357 ;;                  2    3[COMRAM] int 
 12358 ;; Registers used:
 12359 ;;		wreg, status,2, status,0
 12360 ;; Tracked objects:
 12361 ;;		On entry : 0/0
 12362 ;;		On exit  : 0/0
 12363 ;;		Unchanged: 0/0
 12364 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12365 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12366 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12368 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12369 ;;Total ram usage:        6 bytes
 12370 ;; Hardware stack levels used: 1
 12371 ;; Hardware stack levels required when called: 3
 12372 ;; This function calls:
 12373 ;;		Nothing
 12374 ;; This function is called by:
 12375 ;;		_dtoa
 12376 ;; This function uses a non-reentrant model
 12377 ;;
 12378                           
 12379                           	psect	text22
 12380   010D8C                     __ptext22:
 12381                           	callstack 0
 12382   010D8C                     ___awmod:
 12383                           	callstack 117
 12384   010D8C  6A09               	clrf	___awmod@sign^(0+1280),c
 12385   010D8E  BE05               	btfsc	(___awmod@dividend+1)^(0+1280),7,c
 12386   010D90  EFCE  F086         	goto	u2620
 12387   010D94  EFCC  F086         	goto	u2621
 12388   010D98                     u2621:
 12389   010D98  EFD4  F086         	goto	l3690
 12390   010D9C                     u2620:
 12391   010D9C  6C04               	negf	___awmod@dividend^(0+1280),c
 12392   010D9E  1E05               	comf	(___awmod@dividend+1)^(0+1280),f,c
 12393   010DA0  B0D8               	btfsc	status,0,c
 12394   010DA2  2A05               	incf	(___awmod@dividend+1)^(0+1280),f,c
 12395   010DA4  0E01               	movlw	1
 12396   010DA6  6E09               	movwf	___awmod@sign^(0+1280),c
 12397   010DA8                     l3690:
 12398   010DA8  BE07               	btfsc	(___awmod@divisor+1)^(0+1280),7,c
 12399   010DAA  EFDB  F086         	goto	u2630
 12400   010DAE  EFD9  F086         	goto	u2631
 12401   010DB2                     u2631:
 12402   010DB2  EFDF  F086         	goto	l3694
 12403   010DB6                     u2630:
 12404   010DB6  6C06               	negf	___awmod@divisor^(0+1280),c
 12405   010DB8  1E07               	comf	(___awmod@divisor+1)^(0+1280),f,c
 12406   010DBA  B0D8               	btfsc	status,0,c
 12407   010DBC  2A07               	incf	(___awmod@divisor+1)^(0+1280),f,c
 12408   010DBE                     l3694:
 12409   010DBE  5006               	movf	___awmod@divisor^(0+1280),w,c
 12410   010DC0  1007               	iorwf	(___awmod@divisor+1)^(0+1280),w,c
 12411   010DC2  B4D8               	btfsc	status,2,c
 12412   010DC4  EFE6  F086         	goto	u2641
 12413   010DC8  EFE8  F086         	goto	u2640
 12414   010DCC                     u2641:
 12415   010DCC  EF0C  F087         	goto	l3710
 12416   010DD0                     u2640:
 12417   010DD0  0E01               	movlw	1
 12418   010DD2  6E08               	movwf	___awmod@counter^(0+1280),c
 12419   010DD4  EFF0  F086         	goto	l3700
 12420   010DD8                     l3698:
 12421   010DD8  90D8               	bcf	status,0,c
 12422   010DDA  3606               	rlcf	___awmod@divisor^(0+1280),f,c
 12423   010DDC  3607               	rlcf	(___awmod@divisor+1)^(0+1280),f,c
 12424   010DDE  2A08               	incf	___awmod@counter^(0+1280),f,c
 12425   010DE0                     l3700:
 12426   010DE0  AE07               	btfss	(___awmod@divisor+1)^(0+1280),7,c
 12427   010DE2  EFF5  F086         	goto	u2651
 12428   010DE6  EFF7  F086         	goto	u2650
 12429   010DEA                     u2651:
 12430   010DEA  EFEC  F086         	goto	l3698
 12431   010DEE                     u2650:
 12432   010DEE                     l3702:
 12433   010DEE  5006               	movf	___awmod@divisor^(0+1280),w,c
 12434   010DF0  5C04               	subwf	___awmod@dividend^(0+1280),w,c
 12435   010DF2  5007               	movf	(___awmod@divisor+1)^(0+1280),w,c
 12436   010DF4  5805               	subwfb	(___awmod@dividend+1)^(0+1280),w,c
 12437   010DF6  A0D8               	btfss	status,0,c
 12438   010DF8  EF00  F087         	goto	u2661
 12439   010DFC  EF02  F087         	goto	u2660
 12440   010E00                     u2661:
 12441   010E00  EF06  F087         	goto	l3706
 12442   010E04                     u2660:
 12443   010E04  5006               	movf	___awmod@divisor^(0+1280),w,c
 12444   010E06  5E04               	subwf	___awmod@dividend^(0+1280),f,c
 12445   010E08  5007               	movf	(___awmod@divisor+1)^(0+1280),w,c
 12446   010E0A  5A05               	subwfb	(___awmod@dividend+1)^(0+1280),f,c
 12447   010E0C                     l3706:
 12448   010E0C  90D8               	bcf	status,0,c
 12449   010E0E  3207               	rrcf	(___awmod@divisor+1)^(0+1280),f,c
 12450   010E10  3206               	rrcf	___awmod@divisor^(0+1280),f,c
 12451   010E12  2E08               	decfsz	___awmod@counter^(0+1280),f,c
 12452   010E14  EFF7  F086         	goto	l3702
 12453   010E18                     l3710:
 12454   010E18  5009               	movf	___awmod@sign^(0+1280),w,c
 12455   010E1A  B4D8               	btfsc	status,2,c
 12456   010E1C  EF12  F087         	goto	u2671
 12457   010E20  EF14  F087         	goto	u2670
 12458   010E24                     u2671:
 12459   010E24  EF18  F087         	goto	l3714
 12460   010E28                     u2670:
 12461   010E28  6C04               	negf	___awmod@dividend^(0+1280),c
 12462   010E2A  1E05               	comf	(___awmod@dividend+1)^(0+1280),f,c
 12463   010E2C  B0D8               	btfsc	status,0,c
 12464   010E2E  2A05               	incf	(___awmod@dividend+1)^(0+1280),f,c
 12465   010E30                     l3714:
 12466   010E30  C504  F504         	movff	___awmod@dividend,?___awmod
 12467   010E34  C505  F505         	movff	___awmod@dividend+1,?___awmod+1
 12468   010E38  0012               	return		;funcret
 12469   010E3A                     __end_of___awmod:
 12470                           	callstack 0
 12471                           
 12472 ;; *************** function ___awdiv *****************
 12473 ;; Defined at:
 12474 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awdiv.c"
 12475 ;; Parameters:    Size  Location     Type
 12476 ;;  dividend        2    3[COMRAM] int 
 12477 ;;  divisor         2    5[COMRAM] int 
 12478 ;; Auto vars:     Size  Location     Type
 12479 ;;  quotient        2    9[COMRAM] int 
 12480 ;;  sign            1    8[COMRAM] unsigned char 
 12481 ;;  counter         1    7[COMRAM] unsigned char 
 12482 ;; Return value:  Size  Location     Type
 12483 ;;                  2    3[COMRAM] int 
 12484 ;; Registers used:
 12485 ;;		wreg, status,2, status,0
 12486 ;; Tracked objects:
 12487 ;;		On entry : 0/0
 12488 ;;		On exit  : 0/0
 12489 ;;		Unchanged: 0/0
 12490 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12491 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12492 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12494 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12495 ;;Total ram usage:        8 bytes
 12496 ;; Hardware stack levels used: 1
 12497 ;; Hardware stack levels required when called: 3
 12498 ;; This function calls:
 12499 ;;		Nothing
 12500 ;; This function is called by:
 12501 ;;		_dtoa
 12502 ;; This function uses a non-reentrant model
 12503 ;;
 12504                           
 12505                           	psect	text23
 12506   010CCA                     __ptext23:
 12507                           	callstack 0
 12508   010CCA                     ___awdiv:
 12509                           	callstack 117
 12510   010CCA  6A09               	clrf	___awdiv@sign^(0+1280),c
 12511   010CCC  BE07               	btfsc	(___awdiv@divisor+1)^(0+1280),7,c
 12512   010CCE  EF6D  F086         	goto	u2560
 12513   010CD2  EF6B  F086         	goto	u2561
 12514   010CD6                     u2561:
 12515   010CD6  EF73  F086         	goto	l3646
 12516   010CDA                     u2560:
 12517   010CDA  6C06               	negf	___awdiv@divisor^(0+1280),c
 12518   010CDC  1E07               	comf	(___awdiv@divisor+1)^(0+1280),f,c
 12519   010CDE  B0D8               	btfsc	status,0,c
 12520   010CE0  2A07               	incf	(___awdiv@divisor+1)^(0+1280),f,c
 12521   010CE2  0E01               	movlw	1
 12522   010CE4  6E09               	movwf	___awdiv@sign^(0+1280),c
 12523   010CE6                     l3646:
 12524   010CE6  BE05               	btfsc	(___awdiv@dividend+1)^(0+1280),7,c
 12525   010CE8  EF7A  F086         	goto	u2570
 12526   010CEC  EF78  F086         	goto	u2571
 12527   010CF0                     u2571:
 12528   010CF0  EF80  F086         	goto	l3652
 12529   010CF4                     u2570:
 12530   010CF4  6C04               	negf	___awdiv@dividend^(0+1280),c
 12531   010CF6  1E05               	comf	(___awdiv@dividend+1)^(0+1280),f,c
 12532   010CF8  B0D8               	btfsc	status,0,c
 12533   010CFA  2A05               	incf	(___awdiv@dividend+1)^(0+1280),f,c
 12534   010CFC  0E01               	movlw	1
 12535   010CFE  1A09               	xorwf	___awdiv@sign^(0+1280),f,c
 12536   010D00                     l3652:
 12537   010D00  0E00               	movlw	0
 12538   010D02  6E0B               	movwf	(___awdiv@quotient+1)^(0+1280),c
 12539   010D04  0E00               	movlw	0
 12540   010D06  6E0A               	movwf	___awdiv@quotient^(0+1280),c
 12541   010D08  5006               	movf	___awdiv@divisor^(0+1280),w,c
 12542   010D0A  1007               	iorwf	(___awdiv@divisor+1)^(0+1280),w,c
 12543   010D0C  B4D8               	btfsc	status,2,c
 12544   010D0E  EF8B  F086         	goto	u2581
 12545   010D12  EF8D  F086         	goto	u2580
 12546   010D16                     u2581:
 12547   010D16  EFB5  F086         	goto	l3674
 12548   010D1A                     u2580:
 12549   010D1A  0E01               	movlw	1
 12550   010D1C  6E08               	movwf	___awdiv@counter^(0+1280),c
 12551   010D1E  EF95  F086         	goto	l3660
 12552   010D22                     l3658:
 12553   010D22  90D8               	bcf	status,0,c
 12554   010D24  3606               	rlcf	___awdiv@divisor^(0+1280),f,c
 12555   010D26  3607               	rlcf	(___awdiv@divisor+1)^(0+1280),f,c
 12556   010D28  2A08               	incf	___awdiv@counter^(0+1280),f,c
 12557   010D2A                     l3660:
 12558   010D2A  AE07               	btfss	(___awdiv@divisor+1)^(0+1280),7,c
 12559   010D2C  EF9A  F086         	goto	u2591
 12560   010D30  EF9C  F086         	goto	u2590
 12561   010D34                     u2591:
 12562   010D34  EF91  F086         	goto	l3658
 12563   010D38                     u2590:
 12564   010D38                     l3662:
 12565   010D38  90D8               	bcf	status,0,c
 12566   010D3A  360A               	rlcf	___awdiv@quotient^(0+1280),f,c
 12567   010D3C  360B               	rlcf	(___awdiv@quotient+1)^(0+1280),f,c
 12568   010D3E  5006               	movf	___awdiv@divisor^(0+1280),w,c
 12569   010D40  5C04               	subwf	___awdiv@dividend^(0+1280),w,c
 12570   010D42  5007               	movf	(___awdiv@divisor+1)^(0+1280),w,c
 12571   010D44  5805               	subwfb	(___awdiv@dividend+1)^(0+1280),w,c
 12572   010D46  A0D8               	btfss	status,0,c
 12573   010D48  EFA8  F086         	goto	u2601
 12574   010D4C  EFAA  F086         	goto	u2600
 12575   010D50                     u2601:
 12576   010D50  EFAF  F086         	goto	l3670
 12577   010D54                     u2600:
 12578   010D54  5006               	movf	___awdiv@divisor^(0+1280),w,c
 12579   010D56  5E04               	subwf	___awdiv@dividend^(0+1280),f,c
 12580   010D58  5007               	movf	(___awdiv@divisor+1)^(0+1280),w,c
 12581   010D5A  5A05               	subwfb	(___awdiv@dividend+1)^(0+1280),f,c
 12582   010D5C  800A               	bsf	___awdiv@quotient^(0+1280),0,c
 12583   010D5E                     l3670:
 12584   010D5E  90D8               	bcf	status,0,c
 12585   010D60  3207               	rrcf	(___awdiv@divisor+1)^(0+1280),f,c
 12586   010D62  3206               	rrcf	___awdiv@divisor^(0+1280),f,c
 12587   010D64  2E08               	decfsz	___awdiv@counter^(0+1280),f,c
 12588   010D66  EF9C  F086         	goto	l3662
 12589   010D6A                     l3674:
 12590   010D6A  5009               	movf	___awdiv@sign^(0+1280),w,c
 12591   010D6C  B4D8               	btfsc	status,2,c
 12592   010D6E  EFBB  F086         	goto	u2611
 12593   010D72  EFBD  F086         	goto	u2610
 12594   010D76                     u2611:
 12595   010D76  EFC1  F086         	goto	l3678
 12596   010D7A                     u2610:
 12597   010D7A  6C0A               	negf	___awdiv@quotient^(0+1280),c
 12598   010D7C  1E0B               	comf	(___awdiv@quotient+1)^(0+1280),f,c
 12599   010D7E  B0D8               	btfsc	status,0,c
 12600   010D80  2A0B               	incf	(___awdiv@quotient+1)^(0+1280),f,c
 12601   010D82                     l3678:
 12602   010D82  C50A  F504         	movff	___awdiv@quotient,?___awdiv
 12603   010D86  C50B  F505         	movff	___awdiv@quotient+1,?___awdiv+1
 12604   010D8A  0012               	return		;funcret
 12605   010D8C                     __end_of___awdiv:
 12606                           	callstack 0
 12607                           
 12608 ;; *************** function _Nrf24_getRetransmitDelay *****************
 12609 ;; Defined at:
 12610 ;;		line 494 in file "mirf.c"
 12611 ;; Parameters:    Size  Location     Type
 12612 ;;  dev             2   13[COMRAM] PTR struct .
 12613 ;;		 -> receiver@dev(3), 
 12614 ;; Auto vars:     Size  Location     Type
 12615 ;;  value           1   15[COMRAM] unsigned char 
 12616 ;; Return value:  Size  Location     Type
 12617 ;;                  1    wreg      unsigned char 
 12618 ;; Registers used:
 12619 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12620 ;; Tracked objects:
 12621 ;;		On entry : 0/0
 12622 ;;		On exit  : 0/0
 12623 ;;		Unchanged: 0/0
 12624 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12625 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12626 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12628 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12629 ;;Total ram usage:        3 bytes
 12630 ;; Hardware stack levels used: 1
 12631 ;; Hardware stack levels required when called: 6
 12632 ;; This function calls:
 12633 ;;		_Nrf24_readRegister
 12634 ;; This function is called by:
 12635 ;;		_Nrf24_printDetails
 12636 ;; This function uses a non-reentrant model
 12637 ;;
 12638                           
 12639                           	psect	text24
 12640   011862                     __ptext24:
 12641                           	callstack 0
 12642   011862                     _Nrf24_getRetransmitDelay:
 12643                           	callstack 118
 12644   011862                     
 12645                           ;mirf.c: 494: uint8_t Nrf24_getRetransmitDelay(NRF24_t * dev);mirf.c: 495: {;mirf.c: 496
      +                          :  uint8_t value;;mirf.c: 497:  Nrf24_readRegister(0x04, &value, 1);
 12646   011862  0E10               	movlw	low Nrf24_getRetransmitDelay@value
 12647   011864  6E0A               	movwf	Nrf24_readRegister@value^(0+1280),c
 12648   011866  0E05               	movlw	high Nrf24_getRetransmitDelay@value
 12649   011868  6E0B               	movwf	(Nrf24_readRegister@value+1)^(0+1280),c
 12650   01186A  0E01               	movlw	1
 12651   01186C  6E0C               	movwf	Nrf24_readRegister@len^(0+1280),c
 12652   01186E  0E04               	movlw	4
 12653   011870  EC41  F08B         	call	_Nrf24_readRegister
 12654   011874                     
 12655                           ;mirf.c: 498:  return (value >> 4);
 12656   011874  3810               	swapf	Nrf24_getRetransmitDelay@value^(0+1280),w,c
 12657   011876  0B0F               	andlw	15
 12658   011878  0012               	return		;funcret
 12659   01187A                     __end_of_Nrf24_getRetransmitDelay:
 12660                           	callstack 0
 12661                           
 12662 ;; *************** function _Nrf24_getPALevel *****************
 12663 ;; Defined at:
 12664 ;;		line 481 in file "mirf.c"
 12665 ;; Parameters:    Size  Location     Type
 12666 ;;  dev             2   13[COMRAM] PTR struct .
 12667 ;;		 -> receiver@dev(3), 
 12668 ;; Auto vars:     Size  Location     Type
 12669 ;;  level           1   15[COMRAM] unsigned char 
 12670 ;; Return value:  Size  Location     Type
 12671 ;;                  1    wreg      unsigned char 
 12672 ;; Registers used:
 12673 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12674 ;; Tracked objects:
 12675 ;;		On entry : 0/0
 12676 ;;		On exit  : 0/0
 12677 ;;		Unchanged: 0/0
 12678 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12679 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12680 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12682 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12683 ;;Total ram usage:        3 bytes
 12684 ;; Hardware stack levels used: 1
 12685 ;; Hardware stack levels required when called: 6
 12686 ;; This function calls:
 12687 ;;		_Nrf24_readRegister
 12688 ;; This function is called by:
 12689 ;;		_Nrf24_printDetails
 12690 ;;		_Nrf24_getPALevelString
 12691 ;; This function uses a non-reentrant model
 12692 ;;
 12693                           
 12694                           	psect	text25
 12695   011844                     __ptext25:
 12696                           	callstack 0
 12697   011844                     _Nrf24_getPALevel:
 12698                           	callstack 118
 12699   011844                     
 12700                           ;mirf.c: 481: uint8_t Nrf24_getPALevel(NRF24_t * dev);mirf.c: 482: {;mirf.c: 483:  uint8
      +                          _t level;;mirf.c: 484:  Nrf24_readRegister(0x06, &level, sizeof(level));
 12701   011844  0E10               	movlw	low Nrf24_getPALevel@level
 12702   011846  6E0A               	movwf	Nrf24_readRegister@value^(0+1280),c
 12703   011848  0E05               	movlw	high Nrf24_getPALevel@level
 12704   01184A  6E0B               	movwf	(Nrf24_readRegister@value+1)^(0+1280),c
 12705   01184C  0E01               	movlw	1
 12706   01184E  6E0C               	movwf	Nrf24_readRegister@len^(0+1280),c
 12707   011850  0E06               	movlw	6
 12708   011852  EC41  F08B         	call	_Nrf24_readRegister
 12709   011856                     
 12710                           ;mirf.c: 485:  level = (level & ((1<<(1)) | (1<<(2)))) >> 1;
 12711   011856  90D8               	bcf	status,0,c
 12712   011858  3010               	rrcf	Nrf24_getPALevel@level^(0+1280),w,c
 12713   01185A  0B03               	andlw	3
 12714   01185C  6E10               	movwf	Nrf24_getPALevel@level^(0+1280),c
 12715   01185E                     
 12716                           ;mirf.c: 486:  return (level);
 12717   01185E  5010               	movf	Nrf24_getPALevel@level^(0+1280),w,c
 12718   011860  0012               	return		;funcret
 12719   011862                     __end_of_Nrf24_getPALevel:
 12720                           	callstack 0
 12721                           
 12722 ;; *************** function _Nrf24_getDataRate *****************
 12723 ;; Defined at:
 12724 ;;		line 434 in file "mirf.c"
 12725 ;; Parameters:    Size  Location     Type
 12726 ;;  dev             2   13[COMRAM] PTR struct .
 12727 ;;		 -> receiver@dev(3), 
 12728 ;; Auto vars:     Size  Location     Type
 12729 ;;  dr              1   16[COMRAM] unsigned char 
 12730 ;;  result          1   15[COMRAM] enum E17454
 12731 ;; Return value:  Size  Location     Type
 12732 ;;                  1    wreg      unsigned char 
 12733 ;; Registers used:
 12734 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12735 ;; Tracked objects:
 12736 ;;		On entry : 0/0
 12737 ;;		On exit  : 0/0
 12738 ;;		Unchanged: 0/0
 12739 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12740 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12741 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12743 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12744 ;;Total ram usage:        4 bytes
 12745 ;; Hardware stack levels used: 1
 12746 ;; Hardware stack levels required when called: 6
 12747 ;; This function calls:
 12748 ;;		_Nrf24_readRegister
 12749 ;; This function is called by:
 12750 ;;		_Nrf24_printDetails
 12751 ;;		_Nrf24_getDataRateString
 12752 ;; This function uses a non-reentrant model
 12753 ;;
 12754                           
 12755                           	psect	text26
 12756   011388                     __ptext26:
 12757                           	callstack 0
 12758   011388                     _Nrf24_getDataRate:
 12759                           	callstack 118
 12760   011388                     
 12761                           ;mirf.c: 434: uint8_t Nrf24_getDataRate(NRF24_t * dev);mirf.c: 435: {;mirf.c: 436:  rf24
      +                          _datarate_e result;;mirf.c: 437:  uint8_t dr;;mirf.c: 438:  Nrf24_readRegister(0x06, &dr
      +                          , sizeof(dr));
 12762   011388  0E11               	movlw	low Nrf24_getDataRate@dr
 12763   01138A  6E0A               	movwf	Nrf24_readRegister@value^(0+1280),c
 12764   01138C  0E05               	movlw	high Nrf24_getDataRate@dr
 12765   01138E  6E0B               	movwf	(Nrf24_readRegister@value+1)^(0+1280),c
 12766   011390  0E01               	movlw	1
 12767   011392  6E0C               	movwf	Nrf24_readRegister@len^(0+1280),c
 12768   011394  0E06               	movlw	6
 12769   011396  EC41  F08B         	call	_Nrf24_readRegister
 12770   01139A                     
 12771                           ;mirf.c: 439:  dr = dr & ((1<<(5)) | (1<<(3)));
 12772   01139A  5011               	movf	Nrf24_getDataRate@dr^(0+1280),w,c
 12773   01139C  0B28               	andlw	40
 12774   01139E  6E11               	movwf	Nrf24_getDataRate@dr^(0+1280),c
 12775   0113A0                     
 12776                           ;mirf.c: 442:  if (dr == (1<<(5))) {
 12777   0113A0  0E20               	movlw	32
 12778   0113A2  1811               	xorwf	Nrf24_getDataRate@dr^(0+1280),w,c
 12779   0113A4  A4D8               	btfss	status,2,c
 12780   0113A6  EFD7  F089         	goto	u3311
 12781   0113AA  EFD9  F089         	goto	u3310
 12782   0113AE                     u3311:
 12783   0113AE  EFDD  F089         	goto	l4112
 12784   0113B2                     u3310:
 12785   0113B2                     
 12786                           ;mirf.c: 444:   result = RF24_250KBPS;
 12787   0113B2  0E02               	movlw	2
 12788   0113B4  6E10               	movwf	Nrf24_getDataRate@result^(0+1280),c
 12789                           
 12790                           ;mirf.c: 445:  } else if (dr == (1<<(3))) {
 12791   0113B6  EFEB  F089         	goto	l4116
 12792   0113BA                     l4112:
 12793   0113BA  0E08               	movlw	8
 12794   0113BC  1811               	xorwf	Nrf24_getDataRate@dr^(0+1280),w,c
 12795   0113BE  A4D8               	btfss	status,2,c
 12796   0113C0  EFE4  F089         	goto	u3321
 12797   0113C4  EFE6  F089         	goto	u3320
 12798   0113C8                     u3321:
 12799   0113C8  EFEA  F089         	goto	l740
 12800   0113CC                     u3320:
 12801   0113CC                     
 12802                           ;mirf.c: 447:   result = RF24_2MBPS;
 12803   0113CC  0E01               	movlw	1
 12804   0113CE  6E10               	movwf	Nrf24_getDataRate@result^(0+1280),c
 12805                           
 12806                           ;mirf.c: 448:  } else {
 12807   0113D0  EFEB  F089         	goto	l4116
 12808   0113D4                     l740:
 12809                           
 12810                           ;mirf.c: 450:   result = RF24_1MBPS;
 12811   0113D4  6A10               	clrf	Nrf24_getDataRate@result^(0+1280),c
 12812   0113D6                     l4116:
 12813                           
 12814                           ;mirf.c: 452:  return result;
 12815   0113D6  5010               	movf	Nrf24_getDataRate@result^(0+1280),w,c
 12816   0113D8  0012               	return		;funcret
 12817   0113DA                     __end_of_Nrf24_getDataRate:
 12818                           	callstack 0
 12819                           
 12820 ;; *************** function _Nrf24_getCRCLength *****************
 12821 ;; Defined at:
 12822 ;;		line 460 in file "mirf.c"
 12823 ;; Parameters:    Size  Location     Type
 12824 ;;  dev             2   13[COMRAM] PTR struct .
 12825 ;;		 -> receiver@dev(3), 
 12826 ;; Auto vars:     Size  Location     Type
 12827 ;;  config          1   17[COMRAM] unsigned char 
 12828 ;;  AA              1   16[COMRAM] unsigned char 
 12829 ;;  result          1   15[COMRAM] enum E17459
 12830 ;; Return value:  Size  Location     Type
 12831 ;;                  1    wreg      unsigned char 
 12832 ;; Registers used:
 12833 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12834 ;; Tracked objects:
 12835 ;;		On entry : 0/0
 12836 ;;		On exit  : 0/0
 12837 ;;		Unchanged: 0/0
 12838 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12839 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12840 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12842 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12843 ;;Total ram usage:        5 bytes
 12844 ;; Hardware stack levels used: 1
 12845 ;; Hardware stack levels required when called: 6
 12846 ;; This function calls:
 12847 ;;		_Nrf24_readRegister
 12848 ;; This function is called by:
 12849 ;;		_Nrf24_printDetails
 12850 ;; This function uses a non-reentrant model
 12851 ;;
 12852                           
 12853                           	psect	text27
 12854   01121E                     __ptext27:
 12855                           	callstack 0
 12856   01121E                     _Nrf24_getCRCLength:
 12857                           	callstack 118
 12858   01121E                     
 12859                           ;mirf.c: 460: uint8_t Nrf24_getCRCLength(NRF24_t * dev);mirf.c: 461: {;mirf.c: 462:  rf2
      +                          4_crclength_e result = RF24_CRC_DISABLED;
 12860   01121E  6A10               	clrf	Nrf24_getCRCLength@result^(0+1280),c
 12861   011220                     
 12862                           ;mirf.c: 464:  uint8_t config;;mirf.c: 465:  Nrf24_readRegister(0x00, &config, sizeof(co
      +                          nfig));
 12863   011220  0E12               	movlw	low Nrf24_getCRCLength@config
 12864   011222  6E0A               	movwf	Nrf24_readRegister@value^(0+1280),c
 12865   011224  0E05               	movlw	high Nrf24_getCRCLength@config
 12866   011226  6E0B               	movwf	(Nrf24_readRegister@value+1)^(0+1280),c
 12867   011228  0E01               	movlw	1
 12868   01122A  6E0C               	movwf	Nrf24_readRegister@len^(0+1280),c
 12869   01122C  0E00               	movlw	0
 12870   01122E  EC41  F08B         	call	_Nrf24_readRegister
 12871   011232                     
 12872                           ;mirf.c: 466:  config = config & ((1<<(2)) | (1<<(3)));
 12873   011232  5012               	movf	Nrf24_getCRCLength@config^(0+1280),w,c
 12874   011234  0B0C               	andlw	12
 12875   011236  6E12               	movwf	Nrf24_getCRCLength@config^(0+1280),c
 12876   011238                     
 12877                           ;mirf.c: 467:  uint8_t AA;;mirf.c: 468:  Nrf24_readRegister(0x01, &AA, sizeof(AA));
 12878   011238  0E11               	movlw	low Nrf24_getCRCLength@AA
 12879   01123A  6E0A               	movwf	Nrf24_readRegister@value^(0+1280),c
 12880   01123C  0E05               	movlw	high Nrf24_getCRCLength@AA
 12881   01123E  6E0B               	movwf	(Nrf24_readRegister@value+1)^(0+1280),c
 12882   011240  0E01               	movlw	1
 12883   011242  6E0C               	movwf	Nrf24_readRegister@len^(0+1280),c
 12884   011244  0E01               	movlw	1
 12885   011246  EC41  F08B         	call	_Nrf24_readRegister
 12886   01124A                     
 12887                           ;mirf.c: 470:  if (config & (1<<(3)) || AA) {
 12888   01124A  B612               	btfsc	Nrf24_getCRCLength@config^(0+1280),3,c
 12889   01124C  EF2A  F089         	goto	u3331
 12890   011250  EF2C  F089         	goto	u3330
 12891   011254                     u3331:
 12892   011254  EF34  F089         	goto	l750
 12893   011258                     u3330:
 12894   011258  5011               	movf	Nrf24_getCRCLength@AA^(0+1280),w,c
 12895   01125A  B4D8               	btfsc	status,2,c
 12896   01125C  EF32  F089         	goto	u3341
 12897   011260  EF34  F089         	goto	u3340
 12898   011264                     u3341:
 12899   011264  EF41  F089         	goto	l748
 12900   011268                     u3340:
 12901   011268                     l750:
 12902                           
 12903                           ;mirf.c: 471:   if (config & (1<<(2))) {
 12904   011268  A412               	btfss	Nrf24_getCRCLength@config^(0+1280),2,c
 12905   01126A  EF39  F089         	goto	u3351
 12906   01126E  EF3B  F089         	goto	u3350
 12907   011272                     u3351:
 12908   011272  EF3F  F089         	goto	l4134
 12909   011276                     u3350:
 12910   011276                     
 12911                           ;mirf.c: 472:    result = RF24_CRC_16;
 12912   011276  0E02               	movlw	2
 12913   011278  6E10               	movwf	Nrf24_getCRCLength@result^(0+1280),c
 12914                           
 12915                           ;mirf.c: 473:   } else {
 12916   01127A  EF41  F089         	goto	l748
 12917   01127E                     l4134:
 12918                           
 12919                           ;mirf.c: 474:    result = RF24_CRC_8;
 12920   01127E  0E01               	movlw	1
 12921   011280  6E10               	movwf	Nrf24_getCRCLength@result^(0+1280),c
 12922   011282                     l748:
 12923                           
 12924                           ;mirf.c: 478:  return result;
 12925   011282  5010               	movf	Nrf24_getCRCLength@result^(0+1280),w,c
 12926   011284  0012               	return		;funcret
 12927   011286                     __end_of_Nrf24_getCRCLength:
 12928                           	callstack 0
 12929                           
 12930 ;; *************** function _Nrf24_init *****************
 12931 ;; Defined at:
 12932 ;;		line 70 in file "mirf.c"
 12933 ;; Parameters:    Size  Location     Type
 12934 ;;  dev             2    4[COMRAM] PTR struct .
 12935 ;;		 -> receiver@dev(3), 
 12936 ;; Auto vars:     Size  Location     Type
 12937 ;;		None
 12938 ;; Return value:  Size  Location     Type
 12939 ;;                  1    wreg      void 
 12940 ;; Registers used:
 12941 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12942 ;; Tracked objects:
 12943 ;;		On entry : 0/0
 12944 ;;		On exit  : 0/0
 12945 ;;		Unchanged: 0/0
 12946 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12947 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12950 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12951 ;;Total ram usage:        2 bytes
 12952 ;; Hardware stack levels used: 1
 12953 ;; Hardware stack levels required when called: 4
 12954 ;; This function calls:
 12955 ;;		_SPI1_Open
 12956 ;; This function is called by:
 12957 ;;		_receiver
 12958 ;; This function uses a non-reentrant model
 12959 ;;
 12960                           
 12961                           	psect	text28
 12962   0116DE                     __ptext28:
 12963                           	callstack 0
 12964   0116DE                     _Nrf24_init:
 12965                           	callstack 121
 12966   0116DE                     
 12967                           ;mirf.c: 70: void Nrf24_init(NRF24_t * dev);mirf.c: 71: {;mirf.c: 72:     SPI1_Open(0);
 12968   0116DE  0E00               	movlw	0
 12969   0116E0  EC00  F086         	call	_SPI1_Open
 12970   0116E4                     
 12971                           ;mirf.c: 74:     dev->channel = 115;
 12972   0116E4  EE20 F001          	lfsr	2,1
 12973   0116E8  5005               	movf	Nrf24_init@dev^(0+1280),w,c
 12974   0116EA  26D9               	addwf	fsr2l,f,c
 12975   0116EC  5006               	movf	(Nrf24_init@dev+1)^(0+1280),w,c
 12976   0116EE  22DA               	addwfc	fsr2h,f,c
 12977   0116F0  0E73               	movlw	115
 12978   0116F2  6EDF               	movwf	indf2,c
 12979   0116F4                     
 12980                           ;mirf.c: 75:     dev->payload = 32;
 12981   0116F4  EE20 F002          	lfsr	2,2
 12982   0116F8  5005               	movf	Nrf24_init@dev^(0+1280),w,c
 12983   0116FA  26D9               	addwf	fsr2l,f,c
 12984   0116FC  5006               	movf	(Nrf24_init@dev+1)^(0+1280),w,c
 12985   0116FE  22DA               	addwfc	fsr2h,f,c
 12986   011700  0E20               	movlw	32
 12987   011702  6EDF               	movwf	indf2,c
 12988   011704  92C8               	bcf	200,1,c	;volatile
 12989   011706  94C8               	bcf	200,2,c	;volatile
 12990   011708  0012               	return		;funcret
 12991   01170A                     __end_of_Nrf24_init:
 12992                           	callstack 0
 12993                           
 12994 ;; *************** function _SPI1_Open *****************
 12995 ;; Defined at:
 12996 ;;		line 91 in file "mcc_generated_files/spi/src/spi1.c"
 12997 ;; Parameters:    Size  Location     Type
 12998 ;;  spiConfigInd    1    wreg     unsigned char 
 12999 ;; Auto vars:     Size  Location     Type
 13000 ;;  spiConfigInd    1    3[COMRAM] unsigned char 
 13001 ;;  returnValue     1    0        _Bool 
 13002 ;; Return value:  Size  Location     Type
 13003 ;;                  1    wreg      _Bool 
 13004 ;; Registers used:
 13005 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 13006 ;; Tracked objects:
 13007 ;;		On entry : 0/0
 13008 ;;		On exit  : 0/0
 13009 ;;		Unchanged: 0/0
 13010 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13012 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13014 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13015 ;;Total ram usage:        1 bytes
 13016 ;; Hardware stack levels used: 1
 13017 ;; Hardware stack levels required when called: 3
 13018 ;; This function calls:
 13019 ;;		Nothing
 13020 ;; This function is called by:
 13021 ;;		_Nrf24_init
 13022 ;; This function uses a non-reentrant model
 13023 ;;
 13024                           
 13025                           	psect	text29
 13026   010C00                     __ptext29:
 13027                           	callstack 0
 13028   010C00                     _SPI1_Open:
 13029                           	callstack 121
 13030                           
 13031                           ;incstack = 0
 13032                           ;SPI1_Open@spiConfigIndex stored from wreg
 13033   010C00  6E04               	movwf	SPI1_Open@spiConfigIndex^(0+1280),c
 13034   010C02                     
 13035                           ;mcc_generated_files/spi/src/spi1.c: 94:  if(0 == SPI1CON0bits.EN)
 13036   010C02  0100               	movlb	0	; () banked
 13037   010C04  BF84               	btfsc	132,7,b	;volatile
 13038   010C06  EF07  F086         	goto	u1981
 13039   010C0A  EF09  F086         	goto	u1980
 13040   010C0E                     u1981:
 13041   010C0E  EF64  F086         	goto	l67
 13042   010C12                     u1980:
 13043   010C12                     
 13044                           ; BSR set to: 0
 13045                           ;mcc_generated_files/spi/src/spi1.c: 95:  {;mcc_generated_files/spi/src/spi1.c: 96:     
      +                              SPI1CON0 = spi1_configuration[spiConfigIndex].con0;
 13046   010C12  5004               	movf	SPI1_Open@spiConfigIndex^(0+1280),w,c
 13047   010C14  0D05               	mullw	5
 13048   010C16  0E8B               	movlw	low _spi1_configuration
 13049   010C18  24F3               	addwf	243,w,c
 13050   010C1A  6EF6               	movwf	tblptrl,c
 13051   010C1C  0EFE               	movlw	high _spi1_configuration
 13052   010C1E  20F4               	addwfc	244,w,c
 13053   010C20  6EF7               	movwf	tblptrh,c
 13054   010C22                     	if	1	;There are 3 active tblptr bytes
 13055   010C22  6AF8               	clrf	tblptru,c
 13056   010C24  0E00               	movlw	low (__mediumconst shr (0+16))
 13057   010C26  22F8               	addwfc	tblptru,f,c
 13058   010C28                     	endif
 13059   010C28  0008               	tblrd		*
 13060   010C2A  C4F5 F084          	movff	tablat,132	;volatile
 13061                           
 13062                           ;mcc_generated_files/spi/src/spi1.c: 97:         SPI1CON1 = spi1_configuration[spiConfig
      +                          Index].con1;
 13063   010C2E  5004               	movf	SPI1_Open@spiConfigIndex^(0+1280),w,c
 13064   010C30  0D05               	mullw	5
 13065   010C32  0E01               	movlw	1
 13066   010C34  26F3               	addwf	243,f,c
 13067   010C36  0E00               	movlw	0
 13068   010C38  22F4               	addwfc	244,f,c
 13069   010C3A  0E8B               	movlw	low _spi1_configuration
 13070   010C3C  24F3               	addwf	243,w,c
 13071   010C3E  6EF6               	movwf	tblptrl,c
 13072   010C40  0EFE               	movlw	high _spi1_configuration
 13073   010C42  20F4               	addwfc	244,w,c
 13074   010C44  6EF7               	movwf	tblptrh,c
 13075   010C46                     	if	1	;There are 3 active tblptr bytes
 13076   010C46  6AF8               	clrf	tblptru,c
 13077   010C48  0E00               	movlw	low (__mediumconst shr (0+16))
 13078   010C4A  22F8               	addwfc	tblptru,f,c
 13079   010C4C                     	endif
 13080   010C4C  0008               	tblrd		*
 13081   010C4E  C4F5 F085          	movff	tablat,133	;volatile
 13082                           
 13083                           ;mcc_generated_files/spi/src/spi1.c: 98:         SPI1CON2 = spi1_configuration[spiConfig
      +                          Index].con2 & ~(0x1) & ~(0x2);
 13084   010C52  5004               	movf	SPI1_Open@spiConfigIndex^(0+1280),w,c
 13085   010C54  0D05               	mullw	5
 13086   010C56  0E02               	movlw	2
 13087   010C58  26F3               	addwf	243,f,c
 13088   010C5A  0E00               	movlw	0
 13089   010C5C  22F4               	addwfc	244,f,c
 13090   010C5E  0E8B               	movlw	low _spi1_configuration
 13091   010C60  24F3               	addwf	243,w,c
 13092   010C62  6EF6               	movwf	tblptrl,c
 13093   010C64  0EFE               	movlw	high _spi1_configuration
 13094   010C66  20F4               	addwfc	244,w,c
 13095   010C68  6EF7               	movwf	tblptrh,c
 13096   010C6A                     	if	1	;There are 3 active tblptr bytes
 13097   010C6A  6AF8               	clrf	tblptru,c
 13098   010C6C  0E00               	movlw	low (__mediumconst shr (0+16))
 13099   010C6E  22F8               	addwfc	tblptru,f,c
 13100   010C70                     	endif
 13101   010C70  0008               	tblrd		*
 13102   010C72  50F5               	movf	tablat,w,c
 13103   010C74  0BFC               	andlw	252
 13104   010C76  6F86               	movwf	134,b	;volatile
 13105                           
 13106                           ;mcc_generated_files/spi/src/spi1.c: 99:         SPI1BAUD = spi1_configuration[spiConfig
      +                          Index].baud;
 13107   010C78  5004               	movf	SPI1_Open@spiConfigIndex^(0+1280),w,c
 13108   010C7A  0D05               	mullw	5
 13109   010C7C  0E03               	movlw	3
 13110   010C7E  26F3               	addwf	243,f,c
 13111   010C80  0E00               	movlw	0
 13112   010C82  22F4               	addwfc	244,f,c
 13113   010C84  0E8B               	movlw	low _spi1_configuration
 13114   010C86  24F3               	addwf	243,w,c
 13115   010C88  6EF6               	movwf	tblptrl,c
 13116   010C8A  0EFE               	movlw	high _spi1_configuration
 13117   010C8C  20F4               	addwfc	244,w,c
 13118   010C8E  6EF7               	movwf	tblptrh,c
 13119   010C90                     	if	1	;There are 3 active tblptr bytes
 13120   010C90  6AF8               	clrf	tblptru,c
 13121   010C92  0E00               	movlw	low (__mediumconst shr (0+16))
 13122   010C94  22F8               	addwfc	tblptru,f,c
 13123   010C96                     	endif
 13124   010C96  0008               	tblrd		*
 13125   010C98  C4F5 F089          	movff	tablat,137	;volatile
 13126                           
 13127                           ;mcc_generated_files/spi/src/spi1.c: 100:         SPI1CLK = spi1_configuration[spiConfig
      +                          Index].clksel;
 13128   010C9C  5004               	movf	SPI1_Open@spiConfigIndex^(0+1280),w,c
 13129   010C9E  0D05               	mullw	5
 13130   010CA0  0E04               	movlw	4
 13131   010CA2  26F3               	addwf	243,f,c
 13132   010CA4  0E00               	movlw	0
 13133   010CA6  22F4               	addwfc	244,f,c
 13134   010CA8  0E8B               	movlw	low _spi1_configuration
 13135   010CAA  24F3               	addwf	243,w,c
 13136   010CAC  6EF6               	movwf	tblptrl,c
 13137   010CAE  0EFE               	movlw	high _spi1_configuration
 13138   010CB0  20F4               	addwfc	244,w,c
 13139   010CB2  6EF7               	movwf	tblptrh,c
 13140   010CB4                     	if	1	;There are 3 active tblptr bytes
 13141   010CB4  6AF8               	clrf	tblptru,c
 13142   010CB6  0E00               	movlw	low (__mediumconst shr (0+16))
 13143   010CB8  22F8               	addwfc	tblptru,f,c
 13144   010CBA                     	endif
 13145   010CBA  0008               	tblrd		*
 13146   010CBC  C4F5 F08C          	movff	tablat,140	;volatile
 13147   010CC0                     
 13148                           ; BSR set to: 0
 13149                           ;mcc_generated_files/spi/src/spi1.c: 101:   TRISCbits.TRISC6 = 0;
 13150   010CC0  9CC8               	bcf	200,6,c	;volatile
 13151   010CC2                     
 13152                           ; BSR set to: 0
 13153                           ;mcc_generated_files/spi/src/spi1.c: 102:         SPI1CON0bits.EN = 1U;
 13154   010CC2  8F84               	bsf	132,7,b	;volatile
 13155   010CC4                     
 13156                           ; BSR set to: 0
 13157                           ;mcc_generated_files/spi/src/spi1.c: 104:  }
 13158   010CC4  EF64  F086         	goto	l69
 13159   010CC8                     l67:
 13160   010CC8                     l69:
 13161                           
 13162                           ; BSR set to: 0
 13163   010CC8  0012               	return		;funcret
 13164   010CCA                     __end_of_SPI1_Open:
 13165                           	callstack 0
 13166                           
 13167 ;; *************** function _Nrf24_getData *****************
 13168 ;; Defined at:
 13169 ;;		line 180 in file "mirf.c"
 13170 ;; Parameters:    Size  Location     Type
 13171 ;;  dev             2    9[COMRAM] PTR struct .
 13172 ;;		 -> receiver@dev(3), 
 13173 ;;  data            2   11[COMRAM] PTR unsigned char 
 13174 ;;		 -> receiver@buf(32), 
 13175 ;; Auto vars:     Size  Location     Type
 13176 ;;		None
 13177 ;; Return value:  Size  Location     Type
 13178 ;;                  1    wreg      void 
 13179 ;; Registers used:
 13180 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13181 ;; Tracked objects:
 13182 ;;		On entry : 0/0
 13183 ;;		On exit  : 0/0
 13184 ;;		Unchanged: 0/0
 13185 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13186 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13189 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13190 ;;Total ram usage:        4 bytes
 13191 ;; Hardware stack levels used: 1
 13192 ;; Hardware stack levels required when called: 5
 13193 ;; This function calls:
 13194 ;;		_Nrf24_configRegister
 13195 ;;		_SPI1_ByteExchange
 13196 ;;		_SPI_read_buff
 13197 ;; This function is called by:
 13198 ;;		_receiver
 13199 ;; This function uses a non-reentrant model
 13200 ;;
 13201                           
 13202                           	psect	text30
 13203   0115EE                     __ptext30:
 13204                           	callstack 0
 13205   0115EE                     _Nrf24_getData:
 13206                           	callstack 120
 13207   0115EE  92C0               	bcf	192,1,c	;volatile
 13208   0115F0                     
 13209                           ;mirf.c: 183:  SPI1_ByteExchange(0x00 | 0x61);
 13210   0115F0  0E61               	movlw	97
 13211   0115F2  EC9B  F08B         	call	_SPI1_ByteExchange
 13212   0115F6                     
 13213                           ;mirf.c: 184:  SPI_read_buff( data, dev->payload );
 13214   0115F6  C50C  F506         	movff	Nrf24_getData@data,SPI_read_buff@buffer
 13215   0115FA  C50D  F507         	movff	Nrf24_getData@data+1,SPI_read_buff@buffer+1
 13216   0115FE  EE20 F002          	lfsr	2,2
 13217   011602  500A               	movf	Nrf24_getData@dev^(0+1280),w,c
 13218   011604  26D9               	addwf	fsr2l,f,c
 13219   011606  500B               	movf	(Nrf24_getData@dev+1)^(0+1280),w,c
 13220   011608  22DA               	addwfc	fsr2h,f,c
 13221   01160A  50DF               	movf	indf2,w,c
 13222   01160C  6E08               	movwf	SPI_read_buff@bytes^(0+1280),c
 13223   01160E  ECAA  F08A         	call	_SPI_read_buff	;wreg free
 13224   011612  82C0               	bsf	192,1,c	;volatile
 13225   011614                     
 13226                           ;mirf.c: 194:  Nrf24_configRegister(0x07, (1 << 6));
 13227   011614  0E40               	movlw	64
 13228   011616  6E06               	movwf	Nrf24_configRegister@value^(0+1280),c
 13229   011618  0E07               	movlw	7
 13230   01161A  EC3D  F08C         	call	_Nrf24_configRegister
 13231   01161E  0012               	return		;funcret
 13232   011620                     __end_of_Nrf24_getData:
 13233                           	callstack 0
 13234                           
 13235 ;; *************** function _Nrf24_dataReady *****************
 13236 ;; Defined at:
 13237 ;;		line 158 in file "mirf.c"
 13238 ;; Parameters:    Size  Location     Type
 13239 ;;  dev             2   16[COMRAM] PTR struct .
 13240 ;;		 -> receiver@dev(3), 
 13241 ;; Auto vars:     Size  Location     Type
 13242 ;;  status          1   18[COMRAM] unsigned char 
 13243 ;; Return value:  Size  Location     Type
 13244 ;;                  1    wreg      _Bool 
 13245 ;; Registers used:
 13246 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13247 ;; Tracked objects:
 13248 ;;		On entry : 0/0
 13249 ;;		On exit  : 0/0
 13250 ;;		Unchanged: 0/0
 13251 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13252 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13253 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13255 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13256 ;;Total ram usage:        3 bytes
 13257 ;; Hardware stack levels used: 1
 13258 ;; Hardware stack levels required when called: 7
 13259 ;; This function calls:
 13260 ;;		_Nrf24_getStatus
 13261 ;; This function is called by:
 13262 ;;		_receiver
 13263 ;; This function uses a non-reentrant model
 13264 ;;
 13265                           
 13266                           	psect	text31
 13267   0117D8                     __ptext31:
 13268                           	callstack 0
 13269   0117D8                     _Nrf24_dataReady:
 13270                           	callstack 118
 13271   0117D8                     
 13272                           ;mirf.c: 158: extern _Bool Nrf24_dataReady(NRF24_t * dev);mirf.c: 159: {;mirf.c: 160:  u
      +                          int8_t status = Nrf24_getStatus(dev);
 13273   0117D8  C511  F50E         	movff	Nrf24_dataReady@dev,Nrf24_getStatus@dev
 13274   0117DC  C512  F50F         	movff	Nrf24_dataReady@dev+1,Nrf24_getStatus@dev+1
 13275   0117E0  EC55  F08C         	call	_Nrf24_getStatus	;wreg free
 13276   0117E4  6E13               	movwf	Nrf24_dataReady@status^(0+1280),c
 13277   0117E6                     
 13278                           ;mirf.c: 161:  if ( status & (1 << 6) ) {
 13279   0117E6  AC13               	btfss	Nrf24_dataReady@status^(0+1280),6,c
 13280   0117E8  EFF8  F08B         	goto	u3381
 13281   0117EC  EFFA  F08B         	goto	u3380
 13282   0117F0                     u3381:
 13283   0117F0  EFFD  F08B         	goto	l4204
 13284   0117F4                     u3380:
 13285   0117F4                     
 13286                           ;mirf.c: 162:   return 1;
 13287   0117F4  0E01               	movlw	1
 13288   0117F6  EFFE  F08B         	goto	l608
 13289   0117FA                     l4204:
 13290                           
 13291                           ;mirf.c: 164:  return 0;
 13292   0117FA  0E00               	movlw	0
 13293   0117FC                     l608:
 13294   0117FC  0012               	return		;funcret
 13295   0117FE                     __end_of_Nrf24_dataReady:
 13296                           	callstack 0
 13297                           
 13298 ;; *************** function _Nrf24_config *****************
 13299 ;; Defined at:
 13300 ;;		line 89 in file "mirf.c"
 13301 ;; Parameters:    Size  Location     Type
 13302 ;;  dev             2   16[COMRAM] PTR struct .
 13303 ;;		 -> receiver@dev(3), 
 13304 ;;  channel         1   18[COMRAM] unsigned char 
 13305 ;;  payload         1   19[COMRAM] unsigned char 
 13306 ;; Auto vars:     Size  Location     Type
 13307 ;;		None
 13308 ;; Return value:  Size  Location     Type
 13309 ;;                  1    wreg      void 
 13310 ;; Registers used:
 13311 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13312 ;; Tracked objects:
 13313 ;;		On entry : 0/0
 13314 ;;		On exit  : 0/0
 13315 ;;		Unchanged: 0/0
 13316 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13317 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13320 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13321 ;;Total ram usage:        4 bytes
 13322 ;; Hardware stack levels used: 1
 13323 ;; Hardware stack levels required when called: 7
 13324 ;; This function calls:
 13325 ;;		_Nrf24_configRegister
 13326 ;;		_Nrf24_flushRx
 13327 ;;		_Nrf24_getStatus
 13328 ;;		_Nrf24_powerUpRx
 13329 ;; This function is called by:
 13330 ;;		_receiver
 13331 ;; This function uses a non-reentrant model
 13332 ;;
 13333                           
 13334                           	psect	text32
 13335   011134                     __ptext32:
 13336                           	callstack 0
 13337   011134                     _Nrf24_config:
 13338                           	callstack 118
 13339   011134                     
 13340                           ;mirf.c: 89: void Nrf24_config(NRF24_t * dev, uint8_t channel, uint8_t payload);mirf.c: 
      +                          90: {;mirf.c: 91:  dev->channel = channel;
 13341   011134  EE20 F001          	lfsr	2,1
 13342   011138  5011               	movf	Nrf24_config@dev^(0+1280),w,c
 13343   01113A  26D9               	addwf	fsr2l,f,c
 13344   01113C  5012               	movf	(Nrf24_config@dev+1)^(0+1280),w,c
 13345   01113E  22DA               	addwfc	fsr2h,f,c
 13346   011140  C513  F4DF         	movff	Nrf24_config@channel,indf2
 13347                           
 13348                           ;mirf.c: 92:  dev->payload = payload;
 13349   011144  EE20 F002          	lfsr	2,2
 13350   011148  5011               	movf	Nrf24_config@dev^(0+1280),w,c
 13351   01114A  26D9               	addwf	fsr2l,f,c
 13352   01114C  5012               	movf	(Nrf24_config@dev+1)^(0+1280),w,c
 13353   01114E  22DA               	addwfc	fsr2h,f,c
 13354   011150  C514  F4DF         	movff	Nrf24_config@payload,indf2
 13355   011154                     
 13356                           ;mirf.c: 93:     Nrf24_getStatus(dev);
 13357   011154  C511  F50E         	movff	Nrf24_config@dev,Nrf24_getStatus@dev
 13358   011158  C512  F50F         	movff	Nrf24_config@dev+1,Nrf24_getStatus@dev+1
 13359   01115C  EC55  F08C         	call	_Nrf24_getStatus	;wreg free
 13360   011160                     
 13361                           ;mirf.c: 94:     Nrf24_configRegister(0x05, channel);
 13362   011160  C513  F506         	movff	Nrf24_config@channel,Nrf24_configRegister@value
 13363   011164  0E05               	movlw	5
 13364   011166  EC3D  F08C         	call	_Nrf24_configRegister
 13365   01116A                     
 13366                           ;mirf.c: 95:  Nrf24_configRegister(0x11, dev->payload);
 13367   01116A  EE20 F002          	lfsr	2,2
 13368   01116E  5011               	movf	Nrf24_config@dev^(0+1280),w,c
 13369   011170  26D9               	addwf	fsr2l,f,c
 13370   011172  5012               	movf	(Nrf24_config@dev+1)^(0+1280),w,c
 13371   011174  22DA               	addwfc	fsr2h,f,c
 13372   011176  50DF               	movf	indf2,w,c
 13373   011178  6E06               	movwf	Nrf24_configRegister@value^(0+1280),c
 13374   01117A  0E11               	movlw	17
 13375   01117C  EC3D  F08C         	call	_Nrf24_configRegister
 13376   011180                     
 13377                           ;mirf.c: 96:  Nrf24_configRegister(0x12, dev->payload);
 13378   011180  EE20 F002          	lfsr	2,2
 13379   011184  5011               	movf	Nrf24_config@dev^(0+1280),w,c
 13380   011186  26D9               	addwf	fsr2l,f,c
 13381   011188  5012               	movf	(Nrf24_config@dev+1)^(0+1280),w,c
 13382   01118A  22DA               	addwfc	fsr2h,f,c
 13383   01118C  50DF               	movf	indf2,w,c
 13384   01118E  6E06               	movwf	Nrf24_configRegister@value^(0+1280),c
 13385   011190  0E12               	movlw	18
 13386   011192  EC3D  F08C         	call	_Nrf24_configRegister
 13387   011196                     
 13388                           ;mirf.c: 97:  Nrf24_powerUpRx(dev);
 13389   011196  C511  F508         	movff	Nrf24_config@dev,Nrf24_powerUpRx@dev
 13390   01119A  C512  F509         	movff	Nrf24_config@dev+1,Nrf24_powerUpRx@dev+1
 13391   01119E  ECFF  F08B         	call	_Nrf24_powerUpRx	;wreg free
 13392   0111A2                     
 13393                           ;mirf.c: 98:  Nrf24_flushRx(dev);
 13394   0111A2  C511  F506         	movff	Nrf24_config@dev,Nrf24_flushRx@dev
 13395   0111A6  C512  F507         	movff	Nrf24_config@dev+1,Nrf24_flushRx@dev+1
 13396   0111AA  EC91  F08C         	call	_Nrf24_flushRx	;wreg free
 13397   0111AE  0012               	return		;funcret
 13398   0111B0                     __end_of_Nrf24_config:
 13399                           	callstack 0
 13400                           
 13401 ;; *************** function _Nrf24_powerUpRx *****************
 13402 ;; Defined at:
 13403 ;;		line 303 in file "mirf.c"
 13404 ;; Parameters:    Size  Location     Type
 13405 ;;  dev             2    7[COMRAM] PTR struct .
 13406 ;;		 -> receiver@dev(3), 
 13407 ;; Auto vars:     Size  Location     Type
 13408 ;;		None
 13409 ;; Return value:  Size  Location     Type
 13410 ;;                  1    wreg      void 
 13411 ;; Registers used:
 13412 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13413 ;; Tracked objects:
 13414 ;;		On entry : 0/0
 13415 ;;		On exit  : 0/0
 13416 ;;		Unchanged: 0/0
 13417 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13418 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13421 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13422 ;;Total ram usage:        2 bytes
 13423 ;; Hardware stack levels used: 1
 13424 ;; Hardware stack levels required when called: 5
 13425 ;; This function calls:
 13426 ;;		_Nrf24_configRegister
 13427 ;; This function is called by:
 13428 ;;		_Nrf24_config
 13429 ;;		_Nrf24_isSending
 13430 ;;		_Nrf24_isSend
 13431 ;; This function uses a non-reentrant model
 13432 ;;
 13433                           
 13434                           	psect	text33
 13435   0117FE                     __ptext33:
 13436                           	callstack 0
 13437   0117FE                     _Nrf24_powerUpRx:
 13438                           	callstack 119
 13439   0117FE                     
 13440                           ;mirf.c: 304:  dev->PTX = 0;
 13441   0117FE  C508  F4D9         	movff	Nrf24_powerUpRx@dev,fsr2l
 13442   011802  C509  F4DA         	movff	Nrf24_powerUpRx@dev+1,fsr2h
 13443   011806  6ADF               	clrf	indf2,c
 13444   011808  94C0               	bcf	192,2,c	;volatile
 13445   01180A                     
 13446                           ;mirf.c: 306:  Nrf24_configRegister(0x00, ((1<<5) | (1<<3) | (0<<2) ) | ( (1 << 1) | (1 
      +                          << 0) ) );
 13447   01180A  0E2B               	movlw	43
 13448   01180C  6E06               	movwf	Nrf24_configRegister@value^(0+1280),c
 13449   01180E  0E00               	movlw	0
 13450   011810  EC3D  F08C         	call	_Nrf24_configRegister
 13451   011814  84C0               	bsf	192,2,c	;volatile
 13452   011816                     
 13453                           ;mirf.c: 308:  Nrf24_configRegister(0x07, (1 << 5) | (1 << 4));
 13454   011816  0E30               	movlw	48
 13455   011818  6E06               	movwf	Nrf24_configRegister@value^(0+1280),c
 13456   01181A  0E07               	movlw	7
 13457   01181C  EC3D  F08C         	call	_Nrf24_configRegister
 13458   011820  0012               	return		;funcret
 13459   011822                     __end_of_Nrf24_powerUpRx:
 13460                           	callstack 0
 13461                           
 13462 ;; *************** function _Nrf24_getStatus *****************
 13463 ;; Defined at:
 13464 ;;		line 297 in file "mirf.c"
 13465 ;; Parameters:    Size  Location     Type
 13466 ;;  dev             2   13[COMRAM] PTR struct .
 13467 ;;		 -> receiver@dev(3), 
 13468 ;; Auto vars:     Size  Location     Type
 13469 ;;  rv              1   15[COMRAM] unsigned char 
 13470 ;; Return value:  Size  Location     Type
 13471 ;;                  1    wreg      unsigned char 
 13472 ;; Registers used:
 13473 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13474 ;; Tracked objects:
 13475 ;;		On entry : 0/0
 13476 ;;		On exit  : 0/0
 13477 ;;		Unchanged: 0/0
 13478 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13479 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13480 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13482 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13483 ;;Total ram usage:        3 bytes
 13484 ;; Hardware stack levels used: 1
 13485 ;; Hardware stack levels required when called: 6
 13486 ;; This function calls:
 13487 ;;		_Nrf24_readRegister
 13488 ;; This function is called by:
 13489 ;;		_Nrf24_config
 13490 ;;		_Nrf24_dataReady
 13491 ;;		_Nrf24_printDetails
 13492 ;;		_Nrf24_getDataPipe
 13493 ;;		_Nrf24_send
 13494 ;;		_Nrf24_isSending
 13495 ;;		_Nrf24_isSend
 13496 ;; This function uses a non-reentrant model
 13497 ;;
 13498                           
 13499                           	psect	text34
 13500   0118AA                     __ptext34:
 13501                           	callstack 0
 13502   0118AA                     _Nrf24_getStatus:
 13503                           	callstack 118
 13504   0118AA                     
 13505                           ;mirf.c: 298:  uint8_t rv;;mirf.c: 299:  Nrf24_readRegister(0x07, &rv, 1);
 13506   0118AA  0E10               	movlw	low Nrf24_getStatus@rv
 13507   0118AC  6E0A               	movwf	Nrf24_readRegister@value^(0+1280),c
 13508   0118AE  0E05               	movlw	high Nrf24_getStatus@rv
 13509   0118B0  6E0B               	movwf	(Nrf24_readRegister@value+1)^(0+1280),c
 13510   0118B2  0E01               	movlw	1
 13511   0118B4  6E0C               	movwf	Nrf24_readRegister@len^(0+1280),c
 13512   0118B6  0E07               	movlw	7
 13513   0118B8  EC41  F08B         	call	_Nrf24_readRegister
 13514   0118BC                     
 13515                           ;mirf.c: 300:  return rv;
 13516   0118BC  5010               	movf	Nrf24_getStatus@rv^(0+1280),w,c
 13517   0118BE  0012               	return		;funcret
 13518   0118C0                     __end_of_Nrf24_getStatus:
 13519                           	callstack 0
 13520                           
 13521 ;; *************** function _Nrf24_flushRx *****************
 13522 ;; Defined at:
 13523 ;;		line 311 in file "mirf.c"
 13524 ;; Parameters:    Size  Location     Type
 13525 ;;  dev             2    5[COMRAM] PTR struct .
 13526 ;;		 -> receiver@dev(3), 
 13527 ;; Auto vars:     Size  Location     Type
 13528 ;;		None
 13529 ;; Return value:  Size  Location     Type
 13530 ;;                  1    wreg      void 
 13531 ;; Registers used:
 13532 ;;		wreg, status,2, status,0, cstack
 13533 ;; Tracked objects:
 13534 ;;		On entry : 0/0
 13535 ;;		On exit  : 0/0
 13536 ;;		Unchanged: 0/0
 13537 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13538 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13541 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13542 ;;Total ram usage:        2 bytes
 13543 ;; Hardware stack levels used: 1
 13544 ;; Hardware stack levels required when called: 4
 13545 ;; This function calls:
 13546 ;;		_SPI1_ByteExchange
 13547 ;; This function is called by:
 13548 ;;		_Nrf24_config
 13549 ;; This function uses a non-reentrant model
 13550 ;;
 13551                           
 13552                           	psect	text35
 13553   011922                     __ptext35:
 13554                           	callstack 0
 13555   011922                     _Nrf24_flushRx:
 13556                           	callstack 120
 13557   011922  92C0               	bcf	192,1,c	;volatile
 13558   011924                     
 13559                           ;mirf.c: 314:  SPI1_ByteExchange(0xE2);
 13560   011924  0EE2               	movlw	226
 13561   011926  EC9B  F08B         	call	_SPI1_ByteExchange
 13562   01192A  82C0               	bsf	192,1,c	;volatile
 13563   01192C  0012               	return		;funcret
 13564   01192E                     __end_of_Nrf24_flushRx:
 13565                           	callstack 0
 13566                           
 13567 ;; *************** function _DELAY_milliseconds *****************
 13568 ;; Defined at:
 13569 ;;		line 37 in file "mcc_generated_files/timer/src/delay.c"
 13570 ;; Parameters:    Size  Location     Type
 13571 ;;  milliseconds    2    3[COMRAM] unsigned short 
 13572 ;; Auto vars:     Size  Location     Type
 13573 ;;		None
 13574 ;; Return value:  Size  Location     Type
 13575 ;;                  1    wreg      void 
 13576 ;; Registers used:
 13577 ;;		wreg, status,2, status,0
 13578 ;; Tracked objects:
 13579 ;;		On entry : 0/0
 13580 ;;		On exit  : 0/0
 13581 ;;		Unchanged: 0/0
 13582 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13583 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13585 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13586 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13587 ;;Total ram usage:        3 bytes
 13588 ;; Hardware stack levels used: 1
 13589 ;; Hardware stack levels required when called: 3
 13590 ;; This function calls:
 13591 ;;		Nothing
 13592 ;; This function is called by:
 13593 ;;		_receiver
 13594 ;;		_Nrf24_isSend
 13595 ;; This function uses a non-reentrant model
 13596 ;;
 13597                           
 13598                           	psect	text36
 13599   011652                     __ptext36:
 13600                           	callstack 0
 13601   011652                     _DELAY_milliseconds:
 13602                           	callstack 122
 13603   011652                     
 13604                           ;mcc_generated_files/timer/src/delay.c: 38:     while(milliseconds--){
 13605   011652  EF33  F08B         	goto	l3298
 13606   011656                     l3296:
 13607                           
 13608                           ;mcc_generated_files/timer/src/delay.c: 39:         _delay((unsigned long)((1)*(64000000
      +                          U/4000.0)));
 13609   011656  0E15               	movlw	21
 13610   011658  6E06               	movwf	??_DELAY_milliseconds^(0+1280),c
 13611   01165A  0EC6               	movlw	198
 13612   01165C                     u3597:
 13613   01165C  2EE8               	decfsz	wreg,f,c
 13614   01165E  D7FE               	bra	u3597
 13615   011660  2E06               	decfsz	??_DELAY_milliseconds^(0+1280),f,c
 13616   011662  D7FC               	bra	u3597
 13617   011664  D000               	nop2	
 13618   011666                     l3298:
 13619                           
 13620                           ;mcc_generated_files/timer/src/delay.c: 38:     while(milliseconds--){
 13621   011666  0604               	decf	DELAY_milliseconds@milliseconds^(0+1280),f,c
 13622   011668  A0D8               	btfss	status,0,c
 13623   01166A  0605               	decf	(DELAY_milliseconds@milliseconds+1)^(0+1280),f,c
 13624   01166C  2804               	incf	DELAY_milliseconds@milliseconds^(0+1280),w,c
 13625   01166E  E106               	bnz	u2181
 13626   011670  2805               	incf	(DELAY_milliseconds@milliseconds+1)^(0+1280),w,c
 13627   011672  A4D8               	btfss	status,2,c
 13628   011674  EF3E  F08B         	goto	u2181
 13629   011678  EF40  F08B         	goto	u2180
 13630   01167C                     u2181:
 13631   01167C  EF2B  F08B         	goto	l3296
 13632   011680                     u2180:
 13633   011680  0012               	return		;funcret
 13634   011682                     __end_of_DELAY_milliseconds:
 13635                           	callstack 0
 13636                           
 13637 ;; *************** function _AdvancedSettings *****************
 13638 ;; Defined at:
 13639 ;;		line 23 in file "main.c"
 13640 ;; Parameters:    Size  Location     Type
 13641 ;;  dev             2   17[COMRAM] PTR struct .
 13642 ;;		 -> receiver@dev(3), 
 13643 ;; Auto vars:     Size  Location     Type
 13644 ;;		None
 13645 ;; Return value:  Size  Location     Type
 13646 ;;                  1    wreg      void 
 13647 ;; Registers used:
 13648 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13649 ;; Tracked objects:
 13650 ;;		On entry : 0/0
 13651 ;;		On exit  : 0/0
 13652 ;;		Unchanged: 0/0
 13653 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13654 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13657 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13658 ;;Total ram usage:        2 bytes
 13659 ;; Hardware stack levels used: 1
 13660 ;; Hardware stack levels required when called: 7
 13661 ;; This function calls:
 13662 ;;		_Nrf24_SetSpeedDataRates
 13663 ;;		_Nrf24_setRetransmitDelay
 13664 ;; This function is called by:
 13665 ;;		_receiver
 13666 ;; This function uses a non-reentrant model
 13667 ;;
 13668                           
 13669                           	psect	text37
 13670   011822                     __ptext37:
 13671                           	callstack 0
 13672   011822                     _AdvancedSettings:
 13673                           	callstack 118
 13674   011822                     
 13675                           ;main.c: 23: void AdvancedSettings(NRF24_t * dev);main.c: 24: {;main.c: 30:  Nrf24_SetSp
      +                          eedDataRates(dev, 0);
 13676   011822  C512  F50E         	movff	AdvancedSettings@dev,Nrf24_SetSpeedDataRates@dev
 13677   011826  C513  F50F         	movff	AdvancedSettings@dev+1,Nrf24_SetSpeedDataRates@dev+1
 13678   01182A  0E00               	movlw	0
 13679   01182C  6E10               	movwf	Nrf24_SetSpeedDataRates@val^(0+1280),c
 13680   01182E  ECD8  F088         	call	_Nrf24_SetSpeedDataRates	;wreg free
 13681                           
 13682                           ;main.c: 36:  Nrf24_setRetransmitDelay(dev, 100);
 13683   011832  C512  F50E         	movff	AdvancedSettings@dev,Nrf24_setRetransmitDelay@dev
 13684   011836  C513  F50F         	movff	AdvancedSettings@dev+1,Nrf24_setRetransmitDelay@dev+1
 13685   01183A  0E64               	movlw	100
 13686   01183C  6E10               	movwf	Nrf24_setRetransmitDelay@val^(0+1280),c
 13687   01183E  EC85  F08B         	call	_Nrf24_setRetransmitDelay	;wreg free
 13688   011842  0012               	return		;funcret
 13689   011844                     __end_of_AdvancedSettings:
 13690                           	callstack 0
 13691                           
 13692 ;; *************** function _Nrf24_setRetransmitDelay *****************
 13693 ;; Defined at:
 13694 ;;		line 364 in file "mirf.c"
 13695 ;; Parameters:    Size  Location     Type
 13696 ;;  dev             2   13[COMRAM] PTR struct .
 13697 ;;		 -> receiver@dev(3), 
 13698 ;;  val             1   15[COMRAM] unsigned char 
 13699 ;; Auto vars:     Size  Location     Type
 13700 ;;  value           1   16[COMRAM] unsigned char 
 13701 ;; Return value:  Size  Location     Type
 13702 ;;                  1    wreg      void 
 13703 ;; Registers used:
 13704 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13705 ;; Tracked objects:
 13706 ;;		On entry : 0/0
 13707 ;;		On exit  : 0/0
 13708 ;;		Unchanged: 0/0
 13709 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13710 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13711 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13713 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13714 ;;Total ram usage:        4 bytes
 13715 ;; Hardware stack levels used: 1
 13716 ;; Hardware stack levels required when called: 6
 13717 ;; This function calls:
 13718 ;;		_Nrf24_configRegister
 13719 ;;		_Nrf24_readRegister
 13720 ;; This function is called by:
 13721 ;;		_AdvancedSettings
 13722 ;; This function uses a non-reentrant model
 13723 ;;
 13724                           
 13725                           	psect	text38
 13726   01170A                     __ptext38:
 13727                           	callstack 0
 13728   01170A                     _Nrf24_setRetransmitDelay:
 13729                           	callstack 118
 13730   01170A                     
 13731                           ;mirf.c: 364: void Nrf24_setRetransmitDelay(NRF24_t * dev, uint8_t val);mirf.c: 365: {;m
      +                          irf.c: 366:  uint8_t value;;mirf.c: 367:  Nrf24_readRegister(0x04, &value, 1);
 13732   01170A  0E11               	movlw	low Nrf24_setRetransmitDelay@value
 13733   01170C  6E0A               	movwf	Nrf24_readRegister@value^(0+1280),c
 13734   01170E  0E05               	movlw	high Nrf24_setRetransmitDelay@value
 13735   011710  6E0B               	movwf	(Nrf24_readRegister@value+1)^(0+1280),c
 13736   011712  0E01               	movlw	1
 13737   011714  6E0C               	movwf	Nrf24_readRegister@len^(0+1280),c
 13738   011716  0E04               	movlw	4
 13739   011718  EC41  F08B         	call	_Nrf24_readRegister
 13740   01171C                     
 13741                           ;mirf.c: 368:  value = value & 0x0F;
 13742   01171C  5011               	movf	Nrf24_setRetransmitDelay@value^(0+1280),w,c
 13743   01171E  0B0F               	andlw	15
 13744   011720  6E11               	movwf	Nrf24_setRetransmitDelay@value^(0+1280),c
 13745   011722                     
 13746                           ;mirf.c: 369:  value = value | (val << 4);
 13747   011722  3810               	swapf	Nrf24_setRetransmitDelay@val^(0+1280),w,c
 13748   011724  0BF0               	andlw	240
 13749   011726  1011               	iorwf	Nrf24_setRetransmitDelay@value^(0+1280),w,c
 13750   011728  6E11               	movwf	Nrf24_setRetransmitDelay@value^(0+1280),c
 13751   01172A                     
 13752                           ;mirf.c: 370:  Nrf24_configRegister(0x04, value);
 13753   01172A  C511  F506         	movff	Nrf24_setRetransmitDelay@value,Nrf24_configRegister@value
 13754   01172E  0E04               	movlw	4
 13755   011730  EC3D  F08C         	call	_Nrf24_configRegister
 13756   011734  0012               	return		;funcret
 13757   011736                     __end_of_Nrf24_setRetransmitDelay:
 13758                           	callstack 0
 13759                           
 13760 ;; *************** function _Nrf24_SetSpeedDataRates *****************
 13761 ;; Defined at:
 13762 ;;		line 343 in file "mirf.c"
 13763 ;; Parameters:    Size  Location     Type
 13764 ;;  dev             2   13[COMRAM] PTR struct .
 13765 ;;		 -> receiver@dev(3), 
 13766 ;;  val             1   15[COMRAM] unsigned char 
 13767 ;; Auto vars:     Size  Location     Type
 13768 ;;  value           1   16[COMRAM] unsigned char 
 13769 ;; Return value:  Size  Location     Type
 13770 ;;                  1    wreg      void 
 13771 ;; Registers used:
 13772 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13773 ;; Tracked objects:
 13774 ;;		On entry : 0/0
 13775 ;;		On exit  : 0/0
 13776 ;;		Unchanged: 0/0
 13777 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13778 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13779 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13781 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13782 ;;Total ram usage:        4 bytes
 13783 ;; Hardware stack levels used: 1
 13784 ;; Hardware stack levels required when called: 6
 13785 ;; This function calls:
 13786 ;;		_Nrf24_configRegister
 13787 ;;		_Nrf24_readRegister
 13788 ;; This function is called by:
 13789 ;;		_AdvancedSettings
 13790 ;; This function uses a non-reentrant model
 13791 ;;
 13792                           
 13793                           	psect	text39
 13794   0111B0                     __ptext39:
 13795                           	callstack 0
 13796   0111B0                     _Nrf24_SetSpeedDataRates:
 13797                           	callstack 118
 13798   0111B0                     
 13799                           ;mirf.c: 343: void Nrf24_SetSpeedDataRates(NRF24_t * dev, uint8_t val);mirf.c: 344: {;mi
      +                          rf.c: 345:  if (val > 2) return;
 13800   0111B0  0E02               	movlw	2
 13801   0111B2  6410               	cpfsgt	Nrf24_SetSpeedDataRates@val^(0+1280),c
 13802   0111B4  EFDE  F088         	goto	u3171
 13803   0111B8  EFE0  F088         	goto	u3170
 13804   0111BC                     u3171:
 13805   0111BC  EFE2  F088         	goto	l4018
 13806   0111C0                     u3170:
 13807   0111C0  EF0E  F089         	goto	l710
 13808   0111C4                     l4018:
 13809                           
 13810                           ;mirf.c: 347:  uint8_t value;;mirf.c: 348:  Nrf24_readRegister(0x06, &value, 1);
 13811   0111C4  0E11               	movlw	low Nrf24_SetSpeedDataRates@value
 13812   0111C6  6E0A               	movwf	Nrf24_readRegister@value^(0+1280),c
 13813   0111C8  0E05               	movlw	high Nrf24_SetSpeedDataRates@value
 13814   0111CA  6E0B               	movwf	(Nrf24_readRegister@value+1)^(0+1280),c
 13815   0111CC  0E01               	movlw	1
 13816   0111CE  6E0C               	movwf	Nrf24_readRegister@len^(0+1280),c
 13817   0111D0  0E06               	movlw	6
 13818   0111D2  EC41  F08B         	call	_Nrf24_readRegister
 13819   0111D6                     
 13820                           ;mirf.c: 349:  if(val == 2)
 13821   0111D6  0E02               	movlw	2
 13822   0111D8  1810               	xorwf	Nrf24_SetSpeedDataRates@val^(0+1280),w,c
 13823   0111DA  A4D8               	btfss	status,2,c
 13824   0111DC  EFF2  F088         	goto	u3181
 13825   0111E0  EFF4  F088         	goto	u3180
 13826   0111E4                     u3181:
 13827   0111E4  EF01  F089         	goto	l4026
 13828   0111E8                     u3180:
 13829   0111E8                     
 13830                           ;mirf.c: 350:  {;mirf.c: 351:   value = value | 0x20;
 13831   0111E8  5011               	movf	Nrf24_SetSpeedDataRates@value^(0+1280),w,c
 13832   0111EA  0920               	iorlw	32
 13833   0111EC  6E11               	movwf	Nrf24_SetSpeedDataRates@value^(0+1280),c
 13834                           
 13835                           ;mirf.c: 352:   value = value & 0xF7;
 13836   0111EE  5011               	movf	Nrf24_SetSpeedDataRates@value^(0+1280),w,c
 13837   0111F0  0BF7               	andlw	247
 13838   0111F2  6E11               	movwf	Nrf24_SetSpeedDataRates@value^(0+1280),c
 13839   0111F4                     
 13840                           ;mirf.c: 353:      Nrf24_configRegister(0x06, value);
 13841   0111F4  C511  F506         	movff	Nrf24_SetSpeedDataRates@value,Nrf24_configRegister@value
 13842   0111F8  0E06               	movlw	6
 13843   0111FA  EC3D  F08C         	call	_Nrf24_configRegister
 13844                           
 13845                           ;mirf.c: 354:  }
 13846   0111FE  EF0E  F089         	goto	l710
 13847   011202                     l4026:
 13848                           
 13849                           ;mirf.c: 356:  {;mirf.c: 357:   value = value & 0xD7;
 13850   011202  5011               	movf	Nrf24_SetSpeedDataRates@value^(0+1280),w,c
 13851   011204  0BD7               	andlw	215
 13852   011206  6E11               	movwf	Nrf24_SetSpeedDataRates@value^(0+1280),c
 13853                           
 13854                           ;mirf.c: 358:   value = value | (val << 3);
 13855   011208  3810               	swapf	Nrf24_SetSpeedDataRates@val^(0+1280),w,c
 13856   01120A  42E8               	rrncf	wreg,f,c
 13857   01120C  0BF8               	andlw	248
 13858   01120E  1011               	iorwf	Nrf24_SetSpeedDataRates@value^(0+1280),w,c
 13859   011210  6E11               	movwf	Nrf24_SetSpeedDataRates@value^(0+1280),c
 13860   011212                     
 13861                           ;mirf.c: 359:   Nrf24_configRegister(0x06, value);
 13862   011212  C511  F506         	movff	Nrf24_SetSpeedDataRates@value,Nrf24_configRegister@value
 13863   011216  0E06               	movlw	6
 13864   011218  EC3D  F08C         	call	_Nrf24_configRegister
 13865   01121C                     l710:
 13866   01121C  0012               	return		;funcret
 13867   01121E                     __end_of_Nrf24_SetSpeedDataRates:
 13868                           	callstack 0
 13869                           
 13870 ;; *************** function _Nrf24_readRegister *****************
 13871 ;; Defined at:
 13872 ;;		line 207 in file "mirf.c"
 13873 ;; Parameters:    Size  Location     Type
 13874 ;;  reg             1    wreg     unsigned char 
 13875 ;;  value           2    9[COMRAM] PTR unsigned char 
 13876 ;;		 -> Nrf24_getRetransmitDelay@value(1), Nrf24_getPALevel@level(1), Nrf24_getCRCLength@AA(1), Nrf24_getCRCLength@confi
      +g(1), 
 13877 ;;		 -> Nrf24_getDataRate@dr(1), Nrf24_print_byte_register@buffer(1), Nrf24_print_address_register@buffer(5), Nrf24_setR
      +etransmitDelay@value(1), 
 13878 ;;		 -> Nrf24_SetSpeedDataRates@value(1), Nrf24_SetOutputRF_PWR@value(1), Nrf24_getStatus@rv(1), Nrf24_rxFifoEmpty@fifoS
      +tatus(1), 
 13879 ;;		 -> Nrf24_addRADDR@value(1), Nrf24_setTADDR@buffer(5), Nrf24_setRADDR@buffer(5), 
 13880 ;;  len             1   11[COMRAM] unsigned char 
 13881 ;; Auto vars:     Size  Location     Type
 13882 ;;  reg             1   12[COMRAM] unsigned char 
 13883 ;; Return value:  Size  Location     Type
 13884 ;;                  1    wreg      void 
 13885 ;; Registers used:
 13886 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13887 ;; Tracked objects:
 13888 ;;		On entry : 0/0
 13889 ;;		On exit  : 0/0
 13890 ;;		Unchanged: 0/0
 13891 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13892 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13893 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13895 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13896 ;;Total ram usage:        4 bytes
 13897 ;; Hardware stack levels used: 1
 13898 ;; Hardware stack levels required when called: 5
 13899 ;; This function calls:
 13900 ;;		_SPI1_ByteExchange
 13901 ;;		_SPI_read_buff
 13902 ;; This function is called by:
 13903 ;;		_Nrf24_setRADDR
 13904 ;;		_Nrf24_getStatus
 13905 ;;		_Nrf24_SetSpeedDataRates
 13906 ;;		_Nrf24_setRetransmitDelay
 13907 ;;		_Nrf24_print_address_register
 13908 ;;		_Nrf24_print_byte_register
 13909 ;;		_Nrf24_getDataRate
 13910 ;;		_Nrf24_getCRCLength
 13911 ;;		_Nrf24_getPALevel
 13912 ;;		_Nrf24_getRetransmitDelay
 13913 ;;		_Nrf24_setTADDR
 13914 ;;		_Nrf24_addRADDR
 13915 ;;		_Nrf24_rxFifoEmpty
 13916 ;;		_Nrf24_SetOutputRF_PWR
 13917 ;; This function uses a non-reentrant model
 13918 ;;
 13919                           
 13920                           	psect	text40
 13921   011682                     __ptext40:
 13922                           	callstack 0
 13923   011682                     _Nrf24_readRegister:
 13924                           	callstack 119
 13925                           
 13926                           ;incstack = 0
 13927                           ;Nrf24_readRegister@reg stored from wreg
 13928   011682  6E0D               	movwf	Nrf24_readRegister@reg^(0+1280),c
 13929   011684                     
 13930                           ;mirf.c: 207: void Nrf24_readRegister(uint8_t reg, uint8_t * value, uint8_t len);mirf.c:
      +                           208: {;mirf.c: 209:     if(len) {
 13931   011684  500C               	movf	Nrf24_readRegister@len^(0+1280),w,c
 13932   011686  B4D8               	btfsc	status,2,c
 13933   011688  EF48  F08B         	goto	u3161
 13934   01168C  EF4A  F08B         	goto	u3160
 13935   011690                     u3161:
 13936   011690  EF58  F08B         	goto	l636
 13937   011694                     u3160:
 13938   011694  92C0               	bcf	192,1,c	;volatile
 13939   011696                     
 13940                           ;mirf.c: 211:         SPI1_ByteExchange(0x00 | (0x1F & reg));
 13941   011696  500D               	movf	Nrf24_readRegister@reg^(0+1280),w,c
 13942   011698  0B1F               	andlw	31
 13943   01169A  EC9B  F08B         	call	_SPI1_ByteExchange
 13944   01169E                     
 13945                           ;mirf.c: 212:         SPI_read_buff(value, len);
 13946   01169E  C50A  F506         	movff	Nrf24_readRegister@value,SPI_read_buff@buffer
 13947   0116A2  C50B  F507         	movff	Nrf24_readRegister@value+1,SPI_read_buff@buffer+1
 13948   0116A6  C50C  F508         	movff	Nrf24_readRegister@len,SPI_read_buff@bytes
 13949   0116AA  ECAA  F08A         	call	_SPI_read_buff	;wreg free
 13950   0116AE  82C0               	bsf	192,1,c	;volatile
 13951   0116B0                     l636:
 13952   0116B0  0012               	return		;funcret
 13953   0116B2                     __end_of_Nrf24_readRegister:
 13954                           	callstack 0
 13955                           
 13956 ;; *************** function _SPI_read_buff *****************
 13957 ;; Defined at:
 13958 ;;		line 44 in file "mirf.c"
 13959 ;; Parameters:    Size  Location     Type
 13960 ;;  buffer          2    5[COMRAM] PTR unsigned char 
 13961 ;;		 -> Nrf24_getRetransmitDelay@value(1), Nrf24_getPALevel@level(1), Nrf24_getCRCLength@AA(1), Nrf24_getCRCLength@confi
      +g(1), 
 13962 ;;		 -> Nrf24_getDataRate@dr(1), Nrf24_print_byte_register@buffer(1), Nrf24_print_address_register@buffer(5), Nrf24_setR
      +etransmitDelay@value(1), 
 13963 ;;		 -> Nrf24_SetSpeedDataRates@value(1), Nrf24_SetOutputRF_PWR@value(1), Nrf24_getStatus@rv(1), Nrf24_rxFifoEmpty@fifoS
      +tatus(1), 
 13964 ;;		 -> Nrf24_addRADDR@value(1), Nrf24_setTADDR@buffer(5), Nrf24_setRADDR@buffer(5), receiver@buf(32), 
 13965 ;;  bytes           1    7[COMRAM] unsigned char 
 13966 ;; Auto vars:     Size  Location     Type
 13967 ;;  i               1    8[COMRAM] unsigned char 
 13968 ;; Return value:  Size  Location     Type
 13969 ;;                  1    wreg      void 
 13970 ;; Registers used:
 13971 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13972 ;; Tracked objects:
 13973 ;;		On entry : 0/0
 13974 ;;		On exit  : 0/0
 13975 ;;		Unchanged: 0/0
 13976 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13977 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13978 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13980 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13981 ;;Total ram usage:        4 bytes
 13982 ;; Hardware stack levels used: 1
 13983 ;; Hardware stack levels required when called: 4
 13984 ;; This function calls:
 13985 ;;		_SPI1_ByteExchange
 13986 ;; This function is called by:
 13987 ;;		_Nrf24_getData
 13988 ;;		_Nrf24_readRegister
 13989 ;; This function uses a non-reentrant model
 13990 ;;
 13991                           
 13992                           	psect	text41
 13993   011554                     __ptext41:
 13994                           	callstack 0
 13995   011554                     _SPI_read_buff:
 13996                           	callstack 119
 13997   011554  92C0               	bcf	192,1,c	;volatile
 13998   011556                     
 13999                           ;mirf.c: 46:     unsigned char i;;mirf.c: 47:     for (i = 0; i < bytes; i++) {
 14000   011556  6A09               	clrf	SPI_read_buff@i^(0+1280),c
 14001   011558  EFB9  F08A         	goto	l3974
 14002   01155C                     l3968:
 14003                           
 14004                           ;mirf.c: 48:         *buffer = SPI1_ByteExchange(0xFF);
 14005   01155C  0EFF               	movlw	255
 14006   01155E  EC9B  F08B         	call	_SPI1_ByteExchange
 14007   011562  C506  F4D9         	movff	SPI_read_buff@buffer,fsr2l
 14008   011566  C507  F4DA         	movff	SPI_read_buff@buffer+1,fsr2h
 14009   01156A  6EDF               	movwf	indf2,c
 14010   01156C                     
 14011                           ;mirf.c: 49:         buffer++;
 14012   01156C  4A06               	infsnz	SPI_read_buff@buffer^(0+1280),f,c
 14013   01156E  2A07               	incf	(SPI_read_buff@buffer+1)^(0+1280),f,c
 14014   011570                     
 14015                           ;mirf.c: 50:     }
 14016   011570  2A09               	incf	SPI_read_buff@i^(0+1280),f,c
 14017   011572                     l3974:
 14018   011572  5008               	movf	SPI_read_buff@bytes^(0+1280),w,c
 14019   011574  5C09               	subwf	SPI_read_buff@i^(0+1280),w,c
 14020   011576  A0D8               	btfss	status,0,c
 14021   011578  EFC0  F08A         	goto	u3131
 14022   01157C  EFC2  F08A         	goto	u3130
 14023   011580                     u3131:
 14024   011580  EFAE  F08A         	goto	l3968
 14025   011584                     u3130:
 14026   011584  82C0               	bsf	192,1,c	;volatile
 14027   011586  0012               	return		;funcret
 14028   011588                     __end_of_SPI_read_buff:
 14029                           	callstack 0
 14030                           
 14031 ;; *************** function _Nrf24_configRegister *****************
 14032 ;; Defined at:
 14033 ;;		line 198 in file "mirf.c"
 14034 ;; Parameters:    Size  Location     Type
 14035 ;;  reg             1    wreg     unsigned char 
 14036 ;;  value           1    5[COMRAM] unsigned char 
 14037 ;; Auto vars:     Size  Location     Type
 14038 ;;  reg             1    6[COMRAM] unsigned char 
 14039 ;; Return value:  Size  Location     Type
 14040 ;;                  1    wreg      void 
 14041 ;; Registers used:
 14042 ;;		wreg, status,2, status,0, cstack
 14043 ;; Tracked objects:
 14044 ;;		On entry : 0/0
 14045 ;;		On exit  : 0/0
 14046 ;;		Unchanged: 0/0
 14047 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14048 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14049 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14051 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14052 ;;Total ram usage:        2 bytes
 14053 ;; Hardware stack levels used: 1
 14054 ;; Hardware stack levels required when called: 4
 14055 ;; This function calls:
 14056 ;;		_SPI1_ByteExchange
 14057 ;; This function is called by:
 14058 ;;		_Nrf24_config
 14059 ;;		_Nrf24_getData
 14060 ;;		_Nrf24_powerUpRx
 14061 ;;		_Nrf24_SetSpeedDataRates
 14062 ;;		_Nrf24_setRetransmitDelay
 14063 ;;		_Nrf24_addRADDR
 14064 ;;		_Nrf24_powerUpTx
 14065 ;;		_Nrf24_powerDown
 14066 ;;		_Nrf24_SetOutputRF_PWR
 14067 ;; This function uses a non-reentrant model
 14068 ;;
 14069                           
 14070                           	psect	text42
 14071   01187A                     __ptext42:
 14072                           	callstack 0
 14073   01187A                     _Nrf24_configRegister:
 14074                           	callstack 120
 14075                           
 14076                           ;incstack = 0
 14077                           ;Nrf24_configRegister@reg stored from wreg
 14078   01187A  6E07               	movwf	Nrf24_configRegister@reg^(0+1280),c
 14079   01187C  92C0               	bcf	192,1,c	;volatile
 14080   01187E                     
 14081                           ;mirf.c: 201:  SPI1_ByteExchange(0x20 | (0x1F & reg));
 14082   01187E  5007               	movf	Nrf24_configRegister@reg^(0+1280),w,c
 14083   011880  0B1F               	andlw	31
 14084   011882  0920               	iorlw	32
 14085   011884  EC9B  F08B         	call	_SPI1_ByteExchange
 14086                           
 14087                           ;mirf.c: 202:  SPI1_ByteExchange(value);
 14088   011888  5006               	movf	Nrf24_configRegister@value^(0+1280),w,c
 14089   01188A  EC9B  F08B         	call	_SPI1_ByteExchange
 14090   01188E  82C0               	bsf	192,1,c	;volatile
 14091   011890  0012               	return		;funcret
 14092   011892                     __end_of_Nrf24_configRegister:
 14093                           	callstack 0
 14094                           
 14095 ;; *************** function _SPI1_ByteExchange *****************
 14096 ;; Defined at:
 14097 ;;		line 209 in file "mcc_generated_files/spi/src/spi1.c"
 14098 ;; Parameters:    Size  Location     Type
 14099 ;;  byteData        1    wreg     unsigned char 
 14100 ;; Auto vars:     Size  Location     Type
 14101 ;;  byteData        1    3[COMRAM] unsigned char 
 14102 ;;  returnValue     1    4[COMRAM] unsigned char 
 14103 ;; Return value:  Size  Location     Type
 14104 ;;                  1    wreg      unsigned char 
 14105 ;; Registers used:
 14106 ;;		wreg, status,2, status,0
 14107 ;; Tracked objects:
 14108 ;;		On entry : 0/0
 14109 ;;		On exit  : 0/0
 14110 ;;		Unchanged: 0/0
 14111 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14113 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14115 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14116 ;;Total ram usage:        2 bytes
 14117 ;; Hardware stack levels used: 1
 14118 ;; Hardware stack levels required when called: 3
 14119 ;; This function calls:
 14120 ;;		Nothing
 14121 ;; This function is called by:
 14122 ;;		_SPI_read_buff
 14123 ;;		_SPI_write_buff
 14124 ;;		_Nrf24_getData
 14125 ;;		_Nrf24_configRegister
 14126 ;;		_Nrf24_readRegister
 14127 ;;		_Nrf24_writeRegister
 14128 ;;		_Nrf24_flushRx
 14129 ;;		_Nrf24_send
 14130 ;; This function uses a non-reentrant model
 14131 ;;
 14132                           
 14133                           	psect	text43
 14134   011736                     __ptext43:
 14135                           	callstack 0
 14136   011736                     _SPI1_ByteExchange:
 14137                           	callstack 119
 14138                           
 14139                           ;incstack = 0
 14140                           ;SPI1_ByteExchange@byteData stored from wreg
 14141   011736  6E04               	movwf	SPI1_ByteExchange@byteData^(0+1280),c
 14142   011738                     
 14143                           ;mcc_generated_files/spi/src/spi1.c: 213:  SPI1STATUSbits.CLRBF = 1U;
 14144   011738  0100               	movlb	0	; () banked
 14145   01173A  8587               	bsf	135,2,b	;volatile
 14146   01173C                     
 14147                           ; BSR set to: 0
 14148                           ;mcc_generated_files/spi/src/spi1.c: 216:  SPI1CON2 = SPI1CON2 | 0x1 | 0x2;
 14149   01173C  5186               	movf	134,w,b	;volatile
 14150   01173E  0903               	iorlw	3
 14151   011740  6F86               	movwf	134,b	;volatile
 14152   011742                     
 14153                           ; BSR set to: 0
 14154                           ;mcc_generated_files/spi/src/spi1.c: 219:  SPI1TCNTH = 0U;
 14155   011742  6B83               	clrf	131,b	;volatile
 14156   011744                     
 14157                           ; BSR set to: 0
 14158                           ;mcc_generated_files/spi/src/spi1.c: 220:  SPI1TCNTL = 1U;
 14159   011744  0E01               	movlw	1
 14160   011746  6F82               	movwf	130,b	;volatile
 14161   011748                     
 14162                           ; BSR set to: 0
 14163                           ;mcc_generated_files/spi/src/spi1.c: 222:  SPI1TXB = byteData;
 14164   011748  C504  F081         	movff	SPI1_ByteExchange@byteData,129	;volatile
 14165   01174C                     l102:
 14166                           
 14167                           ;mcc_generated_files/spi/src/spi1.c: 224:  while(!PIR3bits.SPI1RXIF)
 14168   01174C  A0B1               	btfss	177,0,c	;volatile
 14169   01174E  EFAB  F08B         	goto	u3011
 14170   011752  EFAD  F08B         	goto	u3010
 14171   011756                     u3011:
 14172   011756  EFA6  F08B         	goto	l102
 14173   01175A                     u3010:
 14174   01175A                     
 14175                           ;mcc_generated_files/spi/src/spi1.c: 228:  returnValue = SPI1RXB;
 14176   01175A  C080 F505          	movff	128,SPI1_ByteExchange@returnValue	;volatile
 14177   01175E                     
 14178                           ;mcc_generated_files/spi/src/spi1.c: 229:  return returnValue;
 14179   01175E  5005               	movf	SPI1_ByteExchange@returnValue^(0+1280),w,c
 14180   011760  0012               	return		;funcret
 14181   011762                     __end_of_SPI1_ByteExchange:
 14182                           	callstack 0
 14183                           
 14184 ;; *************** function _TMR0_Start *****************
 14185 ;; Defined at:
 14186 ;;		line 78 in file "mcc_generated_files/timer/src/tmr0.c"
 14187 ;; Parameters:    Size  Location     Type
 14188 ;;		None
 14189 ;; Auto vars:     Size  Location     Type
 14190 ;;		None
 14191 ;; Return value:  Size  Location     Type
 14192 ;;                  1    wreg      void 
 14193 ;; Registers used:
 14194 ;;		None
 14195 ;; Tracked objects:
 14196 ;;		On entry : 0/0
 14197 ;;		On exit  : 0/0
 14198 ;;		Unchanged: 0/0
 14199 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14204 ;;Total ram usage:        0 bytes
 14205 ;; Hardware stack levels used: 1
 14206 ;; Hardware stack levels required when called: 3
 14207 ;; This function calls:
 14208 ;;		Nothing
 14209 ;; This function is called by:
 14210 ;;		_main
 14211 ;; This function uses a non-reentrant model
 14212 ;;
 14213                           
 14214                           	psect	text44
 14215   01192E                     __ptext44:
 14216                           	callstack 0
 14217   01192E                     _TMR0_Start:
 14218                           	callstack 123
 14219   01192E                     
 14220                           ;mcc_generated_files/timer/src/tmr0.c: 80:     T0CON0bits.T0EN = 1;
 14221   01192E  0103               	movlb	3	; () banked
 14222   011930  8F1A               	bsf	26,7,b	;volatile
 14223   011932                     
 14224                           ; BSR set to: 3
 14225   011932  0012               	return		;funcret
 14226   011934                     __end_of_TMR0_Start:
 14227                           	callstack 0
 14228                           
 14229 ;; *************** function _SYSTEM_Initialize *****************
 14230 ;; Defined at:
 14231 ;;		line 38 in file "mcc_generated_files/system/src/system.c"
 14232 ;; Parameters:    Size  Location     Type
 14233 ;;		None
 14234 ;; Auto vars:     Size  Location     Type
 14235 ;;		None
 14236 ;; Return value:  Size  Location     Type
 14237 ;;                  1    wreg      void 
 14238 ;; Registers used:
 14239 ;;		wreg, status,2, status,0, cstack
 14240 ;; Tracked objects:
 14241 ;;		On entry : 0/0
 14242 ;;		On exit  : 0/0
 14243 ;;		Unchanged: 0/0
 14244 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14249 ;;Total ram usage:        0 bytes
 14250 ;; Hardware stack levels used: 1
 14251 ;; Hardware stack levels required when called: 5
 14252 ;; This function calls:
 14253 ;;		_CLOCK_Initialize
 14254 ;;		_INTERRUPT_Initialize
 14255 ;;		_PIN_MANAGER_Initialize
 14256 ;;		_SPI1_Initialize
 14257 ;;		_TMR0_Initialize
 14258 ;; This function is called by:
 14259 ;;		_main
 14260 ;; This function uses a non-reentrant model
 14261 ;;
 14262                           
 14263                           	psect	text45
 14264   0118C0                     __ptext45:
 14265                           	callstack 0
 14266   0118C0                     _SYSTEM_Initialize:
 14267                           	callstack 121
 14268   0118C0                     
 14269                           ;mcc_generated_files/system/src/system.c: 40:     CLOCK_Initialize();
 14270   0118C0  EC6B  F08C         	call	_CLOCK_Initialize	;wreg free
 14271                           
 14272                           ;mcc_generated_files/system/src/system.c: 41:     PIN_MANAGER_Initialize();
 14273   0118C4  ECBF  F087         	call	_PIN_MANAGER_Initialize	;wreg free
 14274                           
 14275                           ;mcc_generated_files/system/src/system.c: 42:     SPI1_Initialize();
 14276   0118C8  EC49  F08C         	call	_SPI1_Initialize	;wreg free
 14277   0118CC                     
 14278                           ;mcc_generated_files/system/src/system.c: 43:     TMR0_Initialize();
 14279   0118CC  ECB1  F08B         	call	_TMR0_Initialize	;wreg free
 14280   0118D0                     
 14281                           ;mcc_generated_files/system/src/system.c: 44:     INTERRUPT_Initialize();
 14282   0118D0  EC54  F08A         	call	_INTERRUPT_Initialize	;wreg free
 14283   0118D4  0012               	return		;funcret
 14284   0118D6                     __end_of_SYSTEM_Initialize:
 14285                           	callstack 0
 14286                           
 14287 ;; *************** function _TMR0_Initialize *****************
 14288 ;; Defined at:
 14289 ;;		line 53 in file "mcc_generated_files/timer/src/tmr0.c"
 14290 ;; Parameters:    Size  Location     Type
 14291 ;;		None
 14292 ;; Auto vars:     Size  Location     Type
 14293 ;;		None
 14294 ;; Return value:  Size  Location     Type
 14295 ;;                  1    wreg      void 
 14296 ;; Registers used:
 14297 ;;		wreg, status,2, status,0, cstack
 14298 ;; Tracked objects:
 14299 ;;		On entry : 0/0
 14300 ;;		On exit  : 0/0
 14301 ;;		Unchanged: 0/0
 14302 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14307 ;;Total ram usage:        0 bytes
 14308 ;; Hardware stack levels used: 1
 14309 ;; Hardware stack levels required when called: 4
 14310 ;; This function calls:
 14311 ;;		_TMR0_OverflowCallbackRegister
 14312 ;; This function is called by:
 14313 ;;		_SYSTEM_Initialize
 14314 ;; This function uses a non-reentrant model
 14315 ;;
 14316                           
 14317                           	psect	text46
 14318   011762                     __ptext46:
 14319                           	callstack 0
 14320   011762                     _TMR0_Initialize:
 14321                           	callstack 121
 14322   011762                     
 14323                           ;mcc_generated_files/timer/src/tmr0.c: 56:     TMR0H = 0xC2;
 14324   011762  0EC2               	movlw	194
 14325   011764  0103               	movlb	3	; () banked
 14326   011766  6F19               	movwf	25,b	;volatile
 14327   011768                     
 14328                           ; BSR set to: 3
 14329                           ;mcc_generated_files/timer/src/tmr0.c: 59:     TMR0L = 0x0;
 14330   011768  6B18               	clrf	24,b	;volatile
 14331                           
 14332                           ;mcc_generated_files/timer/src/tmr0.c: 62:     T0CON1 = 0x7F;
 14333   01176A  0E7F               	movlw	127
 14334   01176C  6F1B               	movwf	27,b	;volatile
 14335   01176E                     
 14336                           ; BSR set to: 3
 14337                           ;mcc_generated_files/timer/src/tmr0.c: 66:     TMR0_OverflowCallbackRegister(TMR0_Defaul
      +                          tOverflowCallback);
 14338   01176E  0E36               	movlw	low _TMR0_DefaultOverflowCallback
 14339   011770  6E04               	movwf	TMR0_OverflowCallbackRegister@CallbackHandler^(0+1280),c
 14340   011772  0E19               	movlw	high _TMR0_DefaultOverflowCallback
 14341   011774  6E05               	movwf	(TMR0_OverflowCallbackRegister@CallbackHandler+1)^(0+1280),c
 14342   011776  0E01               	movlw	low (_TMR0_DefaultOverflowCallback shr (0+16))
 14343   011778  6E06               	movwf	(TMR0_OverflowCallbackRegister@CallbackHandler+2)^(0+1280),c
 14344   01177A  EC75  F08C         	call	_TMR0_OverflowCallbackRegister	;wreg free
 14345   01177E                     
 14346                           ;mcc_generated_files/timer/src/tmr0.c: 69:     PIR3bits.TMR0IF = 0;
 14347   01177E  9EB1               	bcf	177,7,c	;volatile
 14348   011780                     
 14349                           ;mcc_generated_files/timer/src/tmr0.c: 72:     PIE3bits.TMR0IE = 1;
 14350   011780  8EA1               	bsf	161,7,c	;volatile
 14351   011782                     
 14352                           ;mcc_generated_files/timer/src/tmr0.c: 75:     T0CON0 = 0x89;
 14353   011782  0E89               	movlw	137
 14354   011784  0103               	movlb	3	; () banked
 14355   011786  6F1A               	movwf	26,b	;volatile
 14356   011788                     
 14357                           ; BSR set to: 3
 14358   011788  0012               	return		;funcret
 14359   01178A                     __end_of_TMR0_Initialize:
 14360                           	callstack 0
 14361                           
 14362 ;; *************** function _TMR0_OverflowCallbackRegister *****************
 14363 ;; Defined at:
 14364 ;;		line 122 in file "mcc_generated_files/timer/src/tmr0.c"
 14365 ;; Parameters:    Size  Location     Type
 14366 ;;  CallbackHand    3    3[COMRAM] PTR FTN()void 
 14367 ;;		 -> led_toggle(1), TMR0_DefaultOverflowCallback(1), 
 14368 ;; Auto vars:     Size  Location     Type
 14369 ;;		None
 14370 ;; Return value:  Size  Location     Type
 14371 ;;                  1    wreg      void 
 14372 ;; Registers used:
 14373 ;;		wreg, status,2, status,0
 14374 ;; Tracked objects:
 14375 ;;		On entry : 0/0
 14376 ;;		On exit  : 0/0
 14377 ;;		Unchanged: 0/0
 14378 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14379 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14382 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14383 ;;Total ram usage:        3 bytes
 14384 ;; Hardware stack levels used: 1
 14385 ;; Hardware stack levels required when called: 3
 14386 ;; This function calls:
 14387 ;;		Nothing
 14388 ;; This function is called by:
 14389 ;;		_TMR0_Initialize
 14390 ;;		_main
 14391 ;; This function uses a non-reentrant model
 14392 ;;
 14393                           
 14394                           	psect	text47
 14395   0118EA                     __ptext47:
 14396                           	callstack 0
 14397   0118EA                     _TMR0_OverflowCallbackRegister:
 14398                           	callstack 123
 14399   0118EA                     
 14400                           ;mcc_generated_files/timer/src/tmr0.c: 122: void TMR0_OverflowCallbackRegister(void (* C
      +                          allbackHandler)(void));mcc_generated_files/timer/src/tmr0.c: 123: {;mcc_generated_files/
      +                          timer/src/tmr0.c: 124:     TMR0_OverflowCallback = CallbackHandler;
 14401   0118EA  C504  F5EF         	movff	TMR0_OverflowCallbackRegister@CallbackHandler,_TMR0_OverflowCallback
 14402   0118EE  C505  F5F0         	movff	TMR0_OverflowCallbackRegister@CallbackHandler+1,_TMR0_OverflowCallback+1
 14403   0118F2  C506  F5F1         	movff	TMR0_OverflowCallbackRegister@CallbackHandler+2,_TMR0_OverflowCallback+2
 14404   0118F6  0012               	return		;funcret
 14405   0118F8                     __end_of_TMR0_OverflowCallbackRegister:
 14406                           	callstack 0
 14407                           
 14408 ;; *************** function _SPI1_Initialize *****************
 14409 ;; Defined at:
 14410 ;;		line 69 in file "mcc_generated_files/spi/src/spi1.c"
 14411 ;; Parameters:    Size  Location     Type
 14412 ;;		None
 14413 ;; Auto vars:     Size  Location     Type
 14414 ;;		None
 14415 ;; Return value:  Size  Location     Type
 14416 ;;                  1    wreg      void 
 14417 ;; Registers used:
 14418 ;;		wreg, status,2
 14419 ;; Tracked objects:
 14420 ;;		On entry : 0/0
 14421 ;;		On exit  : 0/0
 14422 ;;		Unchanged: 0/0
 14423 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14427 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14428 ;;Total ram usage:        0 bytes
 14429 ;; Hardware stack levels used: 1
 14430 ;; Hardware stack levels required when called: 3
 14431 ;; This function calls:
 14432 ;;		Nothing
 14433 ;; This function is called by:
 14434 ;;		_SYSTEM_Initialize
 14435 ;; This function uses a non-reentrant model
 14436 ;;
 14437                           
 14438                           	psect	text48
 14439   011892                     __ptext48:
 14440                           	callstack 0
 14441   011892                     _SPI1_Initialize:
 14442                           	callstack 122
 14443   011892                     
 14444                           ;mcc_generated_files/spi/src/spi1.c: 72:     PIE3bits.SPI1IE = 0U;
 14445   011892  94A1               	bcf	161,2,c	;volatile
 14446                           
 14447                           ;mcc_generated_files/spi/src/spi1.c: 73:     PIE3bits.SPI1TXIE = 0U;
 14448   011894  92A1               	bcf	161,1,c	;volatile
 14449                           
 14450                           ;mcc_generated_files/spi/src/spi1.c: 74:     PIE3bits.SPI1RXIE = 0U;
 14451   011896  90A1               	bcf	161,0,c	;volatile
 14452                           
 14453                           ;mcc_generated_files/spi/src/spi1.c: 77:     SPI1CON0 = 0x0;
 14454   011898  0100               	movlb	0	; () banked
 14455   01189A  6B84               	clrf	132,b	;volatile
 14456   01189C                     
 14457                           ; BSR set to: 0
 14458                           ;mcc_generated_files/spi/src/spi1.c: 78:     SPI1CON1 = 0x4;
 14459   01189C  0E04               	movlw	4
 14460   01189E  6F85               	movwf	133,b	;volatile
 14461   0118A0                     
 14462                           ; BSR set to: 0
 14463                           ;mcc_generated_files/spi/src/spi1.c: 79:     SPI1CON2 = 0x0;
 14464   0118A0  6B86               	clrf	134,b	;volatile
 14465   0118A2                     
 14466                           ; BSR set to: 0
 14467                           ;mcc_generated_files/spi/src/spi1.c: 80:     SPI1BAUD = 0x0;
 14468   0118A2  6B89               	clrf	137,b	;volatile
 14469   0118A4                     
 14470                           ; BSR set to: 0
 14471                           ;mcc_generated_files/spi/src/spi1.c: 81:     SPI1CLK = 0x0;
 14472   0118A4  6B8C               	clrf	140,b	;volatile
 14473   0118A6                     
 14474                           ; BSR set to: 0
 14475                           ;mcc_generated_files/spi/src/spi1.c: 82:  SPI1STATUSbits.CLRBF = 1U;
 14476   0118A6  8587               	bsf	135,2,b	;volatile
 14477   0118A8                     
 14478                           ; BSR set to: 0
 14479   0118A8  0012               	return		;funcret
 14480   0118AA                     __end_of_SPI1_Initialize:
 14481                           	callstack 0
 14482                           
 14483 ;; *************** function _PIN_MANAGER_Initialize *****************
 14484 ;; Defined at:
 14485 ;;		line 38 in file "mcc_generated_files/system/src/pins.c"
 14486 ;; Parameters:    Size  Location     Type
 14487 ;;		None
 14488 ;; Auto vars:     Size  Location     Type
 14489 ;;		None
 14490 ;; Return value:  Size  Location     Type
 14491 ;;                  1    wreg      void 
 14492 ;; Registers used:
 14493 ;;		wreg, status,2
 14494 ;; Tracked objects:
 14495 ;;		On entry : 0/0
 14496 ;;		On exit  : 0/0
 14497 ;;		Unchanged: 0/0
 14498 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14503 ;;Total ram usage:        0 bytes
 14504 ;; Hardware stack levels used: 1
 14505 ;; Hardware stack levels required when called: 3
 14506 ;; This function calls:
 14507 ;;		Nothing
 14508 ;; This function is called by:
 14509 ;;		_SYSTEM_Initialize
 14510 ;; This function uses a non-reentrant model
 14511 ;;
 14512                           
 14513                           	psect	text49
 14514   010F7E                     __ptext49:
 14515                           	callstack 0
 14516   010F7E                     _PIN_MANAGER_Initialize:
 14517                           	callstack 122
 14518   010F7E                     
 14519                           ;mcc_generated_files/system/src/pins.c: 43:     LATA = 0x0;
 14520   010F7E  6ABE               	clrf	190,c	;volatile
 14521                           
 14522                           ;mcc_generated_files/system/src/pins.c: 44:     LATB = 0x0;
 14523   010F80  6ABF               	clrf	191,c	;volatile
 14524                           
 14525                           ;mcc_generated_files/system/src/pins.c: 45:     LATC = 0x0;
 14526   010F82  6AC0               	clrf	192,c	;volatile
 14527                           
 14528                           ;mcc_generated_files/system/src/pins.c: 46:     LATD = 0x0;
 14529   010F84  6AC1               	clrf	193,c	;volatile
 14530                           
 14531                           ;mcc_generated_files/system/src/pins.c: 47:     LATE = 0x0;
 14532   010F86  6AC2               	clrf	194,c	;volatile
 14533                           
 14534                           ;mcc_generated_files/system/src/pins.c: 48:     LATF = 0x0;
 14535   010F88  6AC3               	clrf	195,c	;volatile
 14536                           
 14537                           ;mcc_generated_files/system/src/pins.c: 52:     ODCONA = 0x0;
 14538   010F8A  0104               	movlb	4	; () banked
 14539   010F8C  6B02               	clrf	2,b	;volatile
 14540                           
 14541                           ;mcc_generated_files/system/src/pins.c: 53:     ODCONB = 0x0;
 14542   010F8E  6B0A               	clrf	10,b	;volatile
 14543                           
 14544                           ;mcc_generated_files/system/src/pins.c: 54:     ODCONC = 0x0;
 14545   010F90  6B12               	clrf	18,b	;volatile
 14546                           
 14547                           ;mcc_generated_files/system/src/pins.c: 55:     ODCOND = 0x0;
 14548   010F92  6B1A               	clrf	26,b	;volatile
 14549                           
 14550                           ;mcc_generated_files/system/src/pins.c: 56:     ODCONE = 0x0;
 14551   010F94  6B22               	clrf	34,b	;volatile
 14552                           
 14553                           ;mcc_generated_files/system/src/pins.c: 57:     ODCONF = 0x0;
 14554   010F96  6B2A               	clrf	42,b	;volatile
 14555                           
 14556                           ;mcc_generated_files/system/src/pins.c: 62:     TRISA = 0xFF;
 14557   010F98  68C6               	setf	198,c	;volatile
 14558                           
 14559                           ;mcc_generated_files/system/src/pins.c: 63:     TRISB = 0xFF;
 14560   010F9A  68C7               	setf	199,c	;volatile
 14561   010F9C                     
 14562                           ; BSR set to: 4
 14563                           ;mcc_generated_files/system/src/pins.c: 64:     TRISC = 0xE9;
 14564   010F9C  0EE9               	movlw	233
 14565   010F9E  6EC8               	movwf	200,c	;volatile
 14566   010FA0                     
 14567                           ; BSR set to: 4
 14568                           ;mcc_generated_files/system/src/pins.c: 65:     TRISD = 0xFF;
 14569   010FA0  68C9               	setf	201,c	;volatile
 14570                           
 14571                           ;mcc_generated_files/system/src/pins.c: 66:     TRISE = 0xF;
 14572   010FA2  0E0F               	movlw	15
 14573   010FA4  6ECA               	movwf	202,c	;volatile
 14574                           
 14575                           ;mcc_generated_files/system/src/pins.c: 67:     TRISF = 0xF7;
 14576   010FA6  0EF7               	movlw	247
 14577   010FA8  6ECB               	movwf	203,c	;volatile
 14578   010FAA                     
 14579                           ; BSR set to: 4
 14580                           ;mcc_generated_files/system/src/pins.c: 72:     ANSELA = 0xFF;
 14581   010FAA  6900               	setf	0,b	;volatile
 14582   010FAC                     
 14583                           ; BSR set to: 4
 14584                           ;mcc_generated_files/system/src/pins.c: 73:     ANSELB = 0xFF;
 14585   010FAC  6908               	setf	8,b	;volatile
 14586                           
 14587                           ;mcc_generated_files/system/src/pins.c: 74:     ANSELC = 0x89;
 14588   010FAE  0E89               	movlw	137
 14589   010FB0  6F10               	movwf	16,b	;volatile
 14590   010FB2                     
 14591                           ; BSR set to: 4
 14592                           ;mcc_generated_files/system/src/pins.c: 75:     ANSELD = 0xFF;
 14593   010FB2  6918               	setf	24,b	;volatile
 14594                           
 14595                           ;mcc_generated_files/system/src/pins.c: 76:     ANSELE = 0x7;
 14596   010FB4  0E07               	movlw	7
 14597   010FB6  6F20               	movwf	32,b	;volatile
 14598                           
 14599                           ;mcc_generated_files/system/src/pins.c: 77:     ANSELF = 0xF7;
 14600   010FB8  0EF7               	movlw	247
 14601   010FBA  6F28               	movwf	40,b	;volatile
 14602   010FBC                     
 14603                           ; BSR set to: 4
 14604                           ;mcc_generated_files/system/src/pins.c: 82:     WPUA = 0x0;
 14605   010FBC  6B01               	clrf	1,b	;volatile
 14606   010FBE                     
 14607                           ; BSR set to: 4
 14608                           ;mcc_generated_files/system/src/pins.c: 83:     WPUB = 0x0;
 14609   010FBE  6B09               	clrf	9,b	;volatile
 14610   010FC0                     
 14611                           ; BSR set to: 4
 14612                           ;mcc_generated_files/system/src/pins.c: 84:     WPUC = 0x0;
 14613   010FC0  6B11               	clrf	17,b	;volatile
 14614   010FC2                     
 14615                           ; BSR set to: 4
 14616                           ;mcc_generated_files/system/src/pins.c: 85:     WPUD = 0x0;
 14617   010FC2  6B19               	clrf	25,b	;volatile
 14618   010FC4                     
 14619                           ; BSR set to: 4
 14620                           ;mcc_generated_files/system/src/pins.c: 86:     WPUE = 0x0;
 14621   010FC4  6B21               	clrf	33,b	;volatile
 14622   010FC6                     
 14623                           ; BSR set to: 4
 14624                           ;mcc_generated_files/system/src/pins.c: 87:     WPUF = 0x0;
 14625   010FC6  6B29               	clrf	41,b	;volatile
 14626   010FC8                     
 14627                           ; BSR set to: 4
 14628                           ;mcc_generated_files/system/src/pins.c: 93:     SLRCONA = 0xFF;
 14629   010FC8  6903               	setf	3,b	;volatile
 14630   010FCA                     
 14631                           ; BSR set to: 4
 14632                           ;mcc_generated_files/system/src/pins.c: 94:     SLRCONB = 0xFF;
 14633   010FCA  690B               	setf	11,b	;volatile
 14634   010FCC                     
 14635                           ; BSR set to: 4
 14636                           ;mcc_generated_files/system/src/pins.c: 95:     SLRCONC = 0xFF;
 14637   010FCC  6913               	setf	19,b	;volatile
 14638   010FCE                     
 14639                           ; BSR set to: 4
 14640                           ;mcc_generated_files/system/src/pins.c: 96:     SLRCOND = 0xFF;
 14641   010FCE  691B               	setf	27,b	;volatile
 14642                           
 14643                           ;mcc_generated_files/system/src/pins.c: 97:     SLRCONE = 0x7;
 14644   010FD0  0E07               	movlw	7
 14645   010FD2  6F23               	movwf	35,b	;volatile
 14646   010FD4                     
 14647                           ; BSR set to: 4
 14648                           ;mcc_generated_files/system/src/pins.c: 98:     SLRCONF = 0xFF;
 14649   010FD4  692B               	setf	43,b	;volatile
 14650   010FD6                     
 14651                           ; BSR set to: 4
 14652                           ;mcc_generated_files/system/src/pins.c: 103:     INLVLA = 0xFF;
 14653   010FD6  6904               	setf	4,b	;volatile
 14654   010FD8                     
 14655                           ; BSR set to: 4
 14656                           ;mcc_generated_files/system/src/pins.c: 104:     INLVLB = 0xFF;
 14657   010FD8  690C               	setf	12,b	;volatile
 14658   010FDA                     
 14659                           ; BSR set to: 4
 14660                           ;mcc_generated_files/system/src/pins.c: 105:     INLVLC = 0xFF;
 14661   010FDA  6914               	setf	20,b	;volatile
 14662   010FDC                     
 14663                           ; BSR set to: 4
 14664                           ;mcc_generated_files/system/src/pins.c: 106:     INLVLD = 0xFF;
 14665   010FDC  691C               	setf	28,b	;volatile
 14666                           
 14667                           ;mcc_generated_files/system/src/pins.c: 107:     INLVLE = 0xF;
 14668   010FDE  0E0F               	movlw	15
 14669   010FE0  6F24               	movwf	36,b	;volatile
 14670   010FE2                     
 14671                           ; BSR set to: 4
 14672                           ;mcc_generated_files/system/src/pins.c: 108:     INLVLF = 0xFF;
 14673   010FE2  692C               	setf	44,b	;volatile
 14674   010FE4                     
 14675                           ; BSR set to: 4
 14676                           ;mcc_generated_files/system/src/pins.c: 113:     RB1I2C = 0x0;
 14677   010FE4  0102               	movlb	2	; () banked
 14678   010FE6  6B89               	clrf	137,b	;volatile
 14679   010FE8                     
 14680                           ; BSR set to: 2
 14681                           ;mcc_generated_files/system/src/pins.c: 114:     RB2I2C = 0x0;
 14682   010FE8  6B88               	clrf	136,b	;volatile
 14683   010FEA                     
 14684                           ; BSR set to: 2
 14685                           ;mcc_generated_files/system/src/pins.c: 115:     RC3I2C = 0x0;
 14686   010FEA  6B87               	clrf	135,b	;volatile
 14687   010FEC                     
 14688                           ; BSR set to: 2
 14689                           ;mcc_generated_files/system/src/pins.c: 116:     RC4I2C = 0x0;
 14690   010FEC  6B86               	clrf	134,b	;volatile
 14691                           
 14692                           ;mcc_generated_files/system/src/pins.c: 120:     SPI1SDIPPS = 0x15;
 14693   010FEE  0E15               	movlw	21
 14694   010FF0  6F6B               	movwf	107,b	;volatile
 14695                           
 14696                           ;mcc_generated_files/system/src/pins.c: 121:     RC4PPS = 0x32;
 14697   010FF2  0E32               	movlw	50
 14698   010FF4  6F15               	movwf	21,b	;volatile
 14699                           
 14700                           ;mcc_generated_files/system/src/pins.c: 122:     SPI1SCKPPS = 0x16;
 14701   010FF6  0E16               	movlw	22
 14702   010FF8  6F6A               	movwf	106,b	;volatile
 14703                           
 14704                           ;mcc_generated_files/system/src/pins.c: 123:     RC6PPS = 0x31;
 14705   010FFA  0E31               	movlw	49
 14706   010FFC  6F17               	movwf	23,b	;volatile
 14707   010FFE                     
 14708                           ; BSR set to: 2
 14709                           ;mcc_generated_files/system/src/pins.c: 128:     IOCAP = 0x0;
 14710   010FFE  0104               	movlb	4	; () banked
 14711   011000  6B05               	clrf	5,b	;volatile
 14712   011002                     
 14713                           ; BSR set to: 4
 14714                           ;mcc_generated_files/system/src/pins.c: 129:     IOCAN = 0x0;
 14715   011002  6B06               	clrf	6,b	;volatile
 14716   011004                     
 14717                           ; BSR set to: 4
 14718                           ;mcc_generated_files/system/src/pins.c: 130:     IOCAF = 0x0;
 14719   011004  6B07               	clrf	7,b	;volatile
 14720   011006                     
 14721                           ; BSR set to: 4
 14722                           ;mcc_generated_files/system/src/pins.c: 131:     IOCBP = 0x0;
 14723   011006  6B0D               	clrf	13,b	;volatile
 14724   011008                     
 14725                           ; BSR set to: 4
 14726                           ;mcc_generated_files/system/src/pins.c: 132:     IOCBN = 0x0;
 14727   011008  6B0E               	clrf	14,b	;volatile
 14728   01100A                     
 14729                           ; BSR set to: 4
 14730                           ;mcc_generated_files/system/src/pins.c: 133:     IOCBF = 0x0;
 14731   01100A  6B0F               	clrf	15,b	;volatile
 14732   01100C                     
 14733                           ; BSR set to: 4
 14734                           ;mcc_generated_files/system/src/pins.c: 134:     IOCCP = 0x0;
 14735   01100C  6B15               	clrf	21,b	;volatile
 14736   01100E                     
 14737                           ; BSR set to: 4
 14738                           ;mcc_generated_files/system/src/pins.c: 135:     IOCCN = 0x0;
 14739   01100E  6B16               	clrf	22,b	;volatile
 14740   011010                     
 14741                           ; BSR set to: 4
 14742                           ;mcc_generated_files/system/src/pins.c: 136:     IOCCF = 0x0;
 14743   011010  6B17               	clrf	23,b	;volatile
 14744   011012                     
 14745                           ; BSR set to: 4
 14746                           ;mcc_generated_files/system/src/pins.c: 137:     IOCEP = 0x0;
 14747   011012  6B25               	clrf	37,b	;volatile
 14748   011014                     
 14749                           ; BSR set to: 4
 14750                           ;mcc_generated_files/system/src/pins.c: 138:     IOCEN = 0x0;
 14751   011014  6B26               	clrf	38,b	;volatile
 14752   011016                     
 14753                           ; BSR set to: 4
 14754                           ;mcc_generated_files/system/src/pins.c: 139:     IOCEF = 0x0;
 14755   011016  6B27               	clrf	39,b	;volatile
 14756   011018                     
 14757                           ; BSR set to: 4
 14758   011018  0012               	return		;funcret
 14759   01101A                     __end_of_PIN_MANAGER_Initialize:
 14760                           	callstack 0
 14761                           
 14762 ;; *************** function _INTERRUPT_Initialize *****************
 14763 ;; Defined at:
 14764 ;;		line 42 in file "mcc_generated_files/system/src/interrupt.c"
 14765 ;; Parameters:    Size  Location     Type
 14766 ;;		None
 14767 ;; Auto vars:     Size  Location     Type
 14768 ;;		None
 14769 ;; Return value:  Size  Location     Type
 14770 ;;                  1    wreg      void 
 14771 ;; Registers used:
 14772 ;;		wreg, status,2, status,0, cstack
 14773 ;; Tracked objects:
 14774 ;;		On entry : 0/0
 14775 ;;		On exit  : 0/0
 14776 ;;		Unchanged: 0/0
 14777 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14782 ;;Total ram usage:        0 bytes
 14783 ;; Hardware stack levels used: 1
 14784 ;; Hardware stack levels required when called: 4
 14785 ;; This function calls:
 14786 ;;		_INT0_SetInterruptHandler
 14787 ;;		_INT1_SetInterruptHandler
 14788 ;;		_INT2_SetInterruptHandler
 14789 ;; This function is called by:
 14790 ;;		_SYSTEM_Initialize
 14791 ;; This function uses a non-reentrant model
 14792 ;;
 14793                           
 14794                           	psect	text50
 14795   0114A8                     __ptext50:
 14796                           	callstack 0
 14797   0114A8                     _INTERRUPT_Initialize:
 14798                           	callstack 121
 14799   0114A8                     
 14800                           ;mcc_generated_files/system/src/interrupt.c: 45:     INTCON0bits.IPEN = 0;
 14801   0114A8  9AD6               	bcf	214,5,c	;volatile
 14802                           
 14803                           ;mcc_generated_files/system/src/interrupt.c: 49:     (PIR1bits.INT0IF = 0);
 14804   0114AA  90AF               	bcf	175,0,c	;volatile
 14805                           
 14806                           ;mcc_generated_files/system/src/interrupt.c: 50:     (INTCON0bits.INT0EDG = 1);
 14807   0114AC  80D6               	bsf	214,0,c	;volatile
 14808   0114AE                     
 14809                           ;mcc_generated_files/system/src/interrupt.c: 52:     INT0_SetInterruptHandler(INT0_Defau
      +                          ltInterruptHandler);
 14810   0114AE  0E00               	movlw	0
 14811   0114B0  6E04               	movwf	INT0_SetInterruptHandler@InterruptHandler^(0+1280),c
 14812   0114B2  0E00               	movlw	0
 14813   0114B4  6E05               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
 14814   0114B6  0E00               	movlw	0
 14815   0114B8  6E06               	movwf	(INT0_SetInterruptHandler@InterruptHandler+2)^(0+1280),c
 14816   0114BA  EC8A  F08C         	call	_INT0_SetInterruptHandler	;wreg free
 14817   0114BE                     
 14818                           ;mcc_generated_files/system/src/interrupt.c: 57:     (PIR6bits.INT1IF = 0);
 14819   0114BE  90B4               	bcf	180,0,c	;volatile
 14820   0114C0                     
 14821                           ;mcc_generated_files/system/src/interrupt.c: 58:     (INTCON0bits.INT1EDG = 1);
 14822   0114C0  82D6               	bsf	214,1,c	;volatile
 14823                           
 14824                           ;mcc_generated_files/system/src/interrupt.c: 60:     INT1_SetInterruptHandler(INT1_Defau
      +                          ltInterruptHandler);
 14825   0114C2  0E00               	movlw	0
 14826   0114C4  6E04               	movwf	INT1_SetInterruptHandler@InterruptHandler^(0+1280),c
 14827   0114C6  0E00               	movlw	0
 14828   0114C8  6E05               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
 14829   0114CA  0E00               	movlw	0
 14830   0114CC  6E06               	movwf	(INT1_SetInterruptHandler@InterruptHandler+2)^(0+1280),c
 14831   0114CE  EC83  F08C         	call	_INT1_SetInterruptHandler	;wreg free
 14832   0114D2                     
 14833                           ;mcc_generated_files/system/src/interrupt.c: 65:     (PIR10bits.INT2IF = 0);
 14834   0114D2  90B8               	bcf	184,0,c	;volatile
 14835   0114D4                     
 14836                           ;mcc_generated_files/system/src/interrupt.c: 66:     (INTCON0bits.INT2EDG = 1);
 14837   0114D4  84D6               	bsf	214,2,c	;volatile
 14838                           
 14839                           ;mcc_generated_files/system/src/interrupt.c: 68:     INT2_SetInterruptHandler(INT2_Defau
      +                          ltInterruptHandler);
 14840   0114D6  0E00               	movlw	0
 14841   0114D8  6E04               	movwf	INT2_SetInterruptHandler@InterruptHandler^(0+1280),c
 14842   0114DA  0E00               	movlw	0
 14843   0114DC  6E05               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
 14844   0114DE  0E00               	movlw	0
 14845   0114E0  6E06               	movwf	(INT2_SetInterruptHandler@InterruptHandler+2)^(0+1280),c
 14846   0114E2  EC7C  F08C         	call	_INT2_SetInterruptHandler	;wreg free
 14847   0114E6  0012               	return		;funcret
 14848   0114E8                     __end_of_INTERRUPT_Initialize:
 14849                           	callstack 0
 14850                           
 14851 ;; *************** function _INT2_SetInterruptHandler *****************
 14852 ;; Defined at:
 14853 ;;		line 163 in file "mcc_generated_files/system/src/interrupt.c"
 14854 ;; Parameters:    Size  Location     Type
 14855 ;;  InterruptHan    3    3[COMRAM] PTR FTN()void 
 14856 ;;		 -> INT2_DefaultInterruptHandler(1), 
 14857 ;; Auto vars:     Size  Location     Type
 14858 ;;		None
 14859 ;; Return value:  Size  Location     Type
 14860 ;;                  1    wreg      void 
 14861 ;; Registers used:
 14862 ;;		wreg, status,2, status,0
 14863 ;; Tracked objects:
 14864 ;;		On entry : 0/0
 14865 ;;		On exit  : 0/0
 14866 ;;		Unchanged: 0/0
 14867 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14868 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14871 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14872 ;;Total ram usage:        3 bytes
 14873 ;; Hardware stack levels used: 1
 14874 ;; Hardware stack levels required when called: 3
 14875 ;; This function calls:
 14876 ;;		Nothing
 14877 ;; This function is called by:
 14878 ;;		_INTERRUPT_Initialize
 14879 ;; This function uses a non-reentrant model
 14880 ;;
 14881                           
 14882                           	psect	text51
 14883   0118F8                     __ptext51:
 14884                           	callstack 0
 14885   0118F8                     _INT2_SetInterruptHandler:
 14886                           	callstack 121
 14887   0118F8                     
 14888                           ;mcc_generated_files/system/src/interrupt.c: 164:     INT2_InterruptHandler = InterruptH
      +                          andler;
 14889   0118F8  C504  F5F2         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
 14890   0118FC  C505  F5F3         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
 14891   011900  C506  F5F4         	movff	INT2_SetInterruptHandler@InterruptHandler+2,_INT2_InterruptHandler+2
 14892   011904  0012               	return		;funcret
 14893   011906                     __end_of_INT2_SetInterruptHandler:
 14894                           	callstack 0
 14895                           
 14896 ;; *************** function _INT1_SetInterruptHandler *****************
 14897 ;; Defined at:
 14898 ;;		line 137 in file "mcc_generated_files/system/src/interrupt.c"
 14899 ;; Parameters:    Size  Location     Type
 14900 ;;  InterruptHan    3    3[COMRAM] PTR FTN()void 
 14901 ;;		 -> INT1_DefaultInterruptHandler(1), 
 14902 ;; Auto vars:     Size  Location     Type
 14903 ;;		None
 14904 ;; Return value:  Size  Location     Type
 14905 ;;                  1    wreg      void 
 14906 ;; Registers used:
 14907 ;;		wreg, status,2, status,0
 14908 ;; Tracked objects:
 14909 ;;		On entry : 0/0
 14910 ;;		On exit  : 0/0
 14911 ;;		Unchanged: 0/0
 14912 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14913 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14916 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14917 ;;Total ram usage:        3 bytes
 14918 ;; Hardware stack levels used: 1
 14919 ;; Hardware stack levels required when called: 3
 14920 ;; This function calls:
 14921 ;;		Nothing
 14922 ;; This function is called by:
 14923 ;;		_INTERRUPT_Initialize
 14924 ;; This function uses a non-reentrant model
 14925 ;;
 14926                           
 14927                           	psect	text52
 14928   011906                     __ptext52:
 14929                           	callstack 0
 14930   011906                     _INT1_SetInterruptHandler:
 14931                           	callstack 121
 14932   011906                     
 14933                           ;mcc_generated_files/system/src/interrupt.c: 138:     INT1_InterruptHandler = InterruptH
      +                          andler;
 14934   011906  C504  F5F5         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
 14935   01190A  C505  F5F6         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
 14936   01190E  C506  F5F7         	movff	INT1_SetInterruptHandler@InterruptHandler+2,_INT1_InterruptHandler+2
 14937   011912  0012               	return		;funcret
 14938   011914                     __end_of_INT1_SetInterruptHandler:
 14939                           	callstack 0
 14940                           
 14941 ;; *************** function _INT0_SetInterruptHandler *****************
 14942 ;; Defined at:
 14943 ;;		line 111 in file "mcc_generated_files/system/src/interrupt.c"
 14944 ;; Parameters:    Size  Location     Type
 14945 ;;  InterruptHan    3    3[COMRAM] PTR FTN()void 
 14946 ;;		 -> INT0_DefaultInterruptHandler(1), 
 14947 ;; Auto vars:     Size  Location     Type
 14948 ;;		None
 14949 ;; Return value:  Size  Location     Type
 14950 ;;                  1    wreg      void 
 14951 ;; Registers used:
 14952 ;;		wreg, status,2, status,0
 14953 ;; Tracked objects:
 14954 ;;		On entry : 0/0
 14955 ;;		On exit  : 0/0
 14956 ;;		Unchanged: 0/0
 14957 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14958 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14961 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14962 ;;Total ram usage:        3 bytes
 14963 ;; Hardware stack levels used: 1
 14964 ;; Hardware stack levels required when called: 3
 14965 ;; This function calls:
 14966 ;;		Nothing
 14967 ;; This function is called by:
 14968 ;;		_INTERRUPT_Initialize
 14969 ;; This function uses a non-reentrant model
 14970 ;;
 14971                           
 14972                           	psect	text53
 14973   011914                     __ptext53:
 14974                           	callstack 0
 14975   011914                     _INT0_SetInterruptHandler:
 14976                           	callstack 121
 14977   011914                     
 14978                           ;mcc_generated_files/system/src/interrupt.c: 112:     INT0_InterruptHandler = InterruptH
      +                          andler;
 14979   011914  C504  F5F8         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
 14980   011918  C505  F5F9         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
 14981   01191C  C506  F5FA         	movff	INT0_SetInterruptHandler@InterruptHandler+2,_INT0_InterruptHandler+2
 14982   011920  0012               	return		;funcret
 14983   011922                     __end_of_INT0_SetInterruptHandler:
 14984                           	callstack 0
 14985                           
 14986 ;; *************** function _CLOCK_Initialize *****************
 14987 ;; Defined at:
 14988 ;;		line 39 in file "mcc_generated_files/system/src/clock.c"
 14989 ;; Parameters:    Size  Location     Type
 14990 ;;		None
 14991 ;; Auto vars:     Size  Location     Type
 14992 ;;		None
 14993 ;; Return value:  Size  Location     Type
 14994 ;;                  1    wreg      void 
 14995 ;; Registers used:
 14996 ;;		wreg, status,2
 14997 ;; Tracked objects:
 14998 ;;		On entry : 0/0
 14999 ;;		On exit  : 0/0
 15000 ;;		Unchanged: 0/0
 15001 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 15002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15005 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15006 ;;Total ram usage:        0 bytes
 15007 ;; Hardware stack levels used: 1
 15008 ;; Hardware stack levels required when called: 3
 15009 ;; This function calls:
 15010 ;;		Nothing
 15011 ;; This function is called by:
 15012 ;;		_SYSTEM_Initialize
 15013 ;; This function uses a non-reentrant model
 15014 ;;
 15015                           
 15016                           	psect	text54
 15017   0118D6                     __ptext54:
 15018                           	callstack 0
 15019   0118D6                     _CLOCK_Initialize:
 15020                           	callstack 122
 15021   0118D6                     
 15022                           ;mcc_generated_files/system/src/clock.c: 42:     OSCCON1 = (0 << 0x0)
 15023   0118D6  0E60               	movlw	96
 15024   0118D8  0100               	movlb	0	; () banked
 15025   0118DA  6FAD               	movwf	173,b	;volatile
 15026   0118DC                     
 15027                           ; BSR set to: 0
 15028                           ;mcc_generated_files/system/src/clock.c: 44:     OSCCON3 = (0 << 0x6)
 15029   0118DC  6BAF               	clrf	175,b	;volatile
 15030   0118DE                     
 15031                           ; BSR set to: 0
 15032                           ;mcc_generated_files/system/src/clock.c: 46:     OSCEN = (0 << 0x7)
 15033   0118DE  6BB3               	clrf	179,b	;volatile
 15034                           
 15035                           ;mcc_generated_files/system/src/clock.c: 53:     OSCFRQ = (8 << 0x0);
 15036   0118E0  0E08               	movlw	8
 15037   0118E2  6FB1               	movwf	177,b	;volatile
 15038   0118E4                     
 15039                           ; BSR set to: 0
 15040                           ;mcc_generated_files/system/src/clock.c: 54:     OSCTUNE = (0 << 0x0);
 15041   0118E4  6BB0               	clrf	176,b	;volatile
 15042   0118E6                     
 15043                           ; BSR set to: 0
 15044                           ;mcc_generated_files/system/src/clock.c: 55:     ACTCON = (0 << 0x7)
 15045   0118E6  6BAC               	clrf	172,b	;volatile
 15046   0118E8                     
 15047                           ; BSR set to: 0
 15048   0118E8  0012               	return		;funcret
 15049   0118EA                     __end_of_CLOCK_Initialize:
 15050                           	callstack 0
 15051                           
 15052 ;; *************** function _INTERRUPT_InterruptManager *****************
 15053 ;; Defined at:
 15054 ;;		line 80 in file "mcc_generated_files/system/src/interrupt.c"
 15055 ;; Parameters:    Size  Location     Type
 15056 ;;		None
 15057 ;; Auto vars:     Size  Location     Type
 15058 ;;		None
 15059 ;; Return value:  Size  Location     Type
 15060 ;;                  1    wreg      void 
 15061 ;; Registers used:
 15062 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 15063 ;; Tracked objects:
 15064 ;;		On entry : 0/0
 15065 ;;		On exit  : 0/0
 15066 ;;		Unchanged: 0/0
 15067 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 15068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15070 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15071 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15072 ;;Total ram usage:        2 bytes
 15073 ;; Hardware stack levels used: 1
 15074 ;; Hardware stack levels required when called: 2
 15075 ;; This function calls:
 15076 ;;		_TMR0_OverflowISR
 15077 ;; This function is called by:
 15078 ;;		Interrupt level 2
 15079 ;; This function uses a non-reentrant model
 15080 ;;
 15081                           
 15082                           	psect	text55
 15083   011620                     __ptext55:
 15084                           	callstack 0
 15085   011620                     _INTERRUPT_InterruptManager:
 15086                           	callstack 113
 15087                           
 15088                           ; BSR set to: 0
 15089                           ;incstack = 0
 15090   011620  C4FA F502          	movff	pclath,??_INTERRUPT_InterruptManager
 15091   011624  C4FB F503          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 15092   011628                     
 15093                           ;mcc_generated_files/system/src/interrupt.c: 83:     if(PIE3bits.TMR0IE == 1 && PIR3bits
      +                          .TMR0IF == 1)
 15094   011628  AEA1               	btfss	161,7,c	;volatile
 15095   01162A  EF19  F08B         	goto	i2u228_41
 15096   01162E  EF1B  F08B         	goto	i2u228_40
 15097   011632                     i2u228_41:
 15098   011632  EF24  F08B         	goto	i2l314
 15099   011636                     i2u228_40:
 15100   011636  AEB1               	btfss	177,7,c	;volatile
 15101   011638  EF20  F08B         	goto	i2u229_41
 15102   01163C  EF22  F08B         	goto	i2u229_40
 15103   011640                     i2u229_41:
 15104   011640  EF24  F08B         	goto	i2l314
 15105   011644                     i2u229_40:
 15106   011644                     
 15107                           ;mcc_generated_files/system/src/interrupt.c: 84:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 85:         TMR0_OverflowISR();
 15108   011644  ECC4  F08A         	call	_TMR0_OverflowISR	;wreg free
 15109   011648                     i2l314:
 15110   011648  C503  F4FB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 15111   01164C  C502  F4FA         	movff	??_INTERRUPT_InterruptManager,pclath
 15112   011650  0011               	retfie		f
 15113   011652                     __end_of_INTERRUPT_InterruptManager:
 15114                           	callstack 0
 15115                           
 15116 ;; *************** function _TMR0_OverflowISR *****************
 15117 ;; Defined at:
 15118 ;;		line 110 in file "mcc_generated_files/timer/src/tmr0.c"
 15119 ;; Parameters:    Size  Location     Type
 15120 ;;		None
 15121 ;; Auto vars:     Size  Location     Type
 15122 ;;		None
 15123 ;; Return value:  Size  Location     Type
 15124 ;;                  1    wreg      void 
 15125 ;; Registers used:
 15126 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 15127 ;; Tracked objects:
 15128 ;;		On entry : 0/0
 15129 ;;		On exit  : 0/0
 15130 ;;		Unchanged: 0/0
 15131 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 15132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15136 ;;Total ram usage:        0 bytes
 15137 ;; Hardware stack levels used: 1
 15138 ;; Hardware stack levels required when called: 1
 15139 ;; This function calls:
 15140 ;;		NULL
 15141 ;;		_TMR0_DefaultOverflowCallback
 15142 ;;		_led_toggle
 15143 ;; This function is called by:
 15144 ;;		_INTERRUPT_InterruptManager
 15145 ;; This function uses a non-reentrant model
 15146 ;;
 15147                           
 15148                           	psect	text56
 15149   011588                     __ptext56:
 15150                           	callstack 0
 15151   011588                     _TMR0_OverflowISR:
 15152                           	callstack 113
 15153   011588                     
 15154                           ;mcc_generated_files/timer/src/tmr0.c: 113:     PIR3bits.TMR0IF = 0;
 15155   011588  9EB1               	bcf	177,7,c	;volatile
 15156   01158A                     
 15157                           ;mcc_generated_files/timer/src/tmr0.c: 116:     if(TMR0_OverflowCallback)
 15158   01158A  0105               	movlb	5	; () banked
 15159   01158C  51EF               	movf	_TMR0_OverflowCallback& (0+255),w,b
 15160   01158E  11F0               	iorwf	(_TMR0_OverflowCallback+1)& (0+255),w,b
 15161   011590  11F1               	iorwf	(_TMR0_OverflowCallback+2)& (0+255),w,b
 15162   011592  B4D8               	btfsc	status,2,c
 15163   011594  EFCE  F08A         	goto	i2u223_41
 15164   011598  EFD0  F08A         	goto	i2u223_40
 15165   01159C                     i2u223_41:
 15166   01159C  EFDD  F08A         	goto	i2l435
 15167   0115A0                     i2u223_40:
 15168   0115A0                     
 15169                           ; BSR set to: 5
 15170                           ;mcc_generated_files/timer/src/tmr0.c: 117:     {;mcc_generated_files/timer/src/tmr0.c: 
      +                          118:         TMR0_OverflowCallback();
 15171   0115A0  D802               	call	i2u224_48
 15172   0115A2  EFDD  F08A         	goto	i2u224_49
 15173   0115A6                     i2u224_48:
 15174   0115A6  0005               	push	
 15175   0115A8  6EFA               	movwf	pclath,c
 15176   0115AA  51EF               	movf	_TMR0_OverflowCallback& (0+255),w,b
 15177   0115AC  6EFD               	movwf	tosl,c
 15178   0115AE  51F0               	movf	(_TMR0_OverflowCallback+1)& (0+255),w,b
 15179   0115B0  6EFE               	movwf	tosh,c
 15180   0115B2  51F1               	movf	(_TMR0_OverflowCallback+2)& (0+255),w,b
 15181   0115B4  6EFF               	movwf	tosu,c
 15182   0115B6  50FA               	movf	pclath,w,c
 15183   0115B8  0012               	return		;indir
 15184   0115BA                     i2u224_49:
 15185   0115BA                     i2l435:
 15186   0115BA  0012               	return		;funcret
 15187   0115BC                     __end_of_TMR0_OverflowISR:
 15188                           	callstack 0
 15189                           
 15190 ;; *************** function _TMR0_DefaultOverflowCallback *****************
 15191 ;; Defined at:
 15192 ;;		line 127 in file "mcc_generated_files/timer/src/tmr0.c"
 15193 ;; Parameters:    Size  Location     Type
 15194 ;;		None
 15195 ;; Auto vars:     Size  Location     Type
 15196 ;;		None
 15197 ;; Return value:  Size  Location     Type
 15198 ;;                  1    wreg      void 
 15199 ;; Registers used:
 15200 ;;		None
 15201 ;; Tracked objects:
 15202 ;;		On entry : 0/0
 15203 ;;		On exit  : 0/0
 15204 ;;		Unchanged: 0/0
 15205 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 15206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15210 ;;Total ram usage:        0 bytes
 15211 ;; Hardware stack levels used: 1
 15212 ;; This function calls:
 15213 ;;		Nothing
 15214 ;; This function is called by:
 15215 ;;		_TMR0_Initialize
 15216 ;;		_TMR0_OverflowISR
 15217 ;; This function uses a non-reentrant model
 15218 ;;
 15219                           
 15220                           	psect	text57
 15221   011936                     __ptext57:
 15222                           	callstack 0
 15223   011936                     _TMR0_DefaultOverflowCallback:
 15224                           	callstack 113
 15225   011936  0012               	return		;funcret
 15226   011938                     __end_of_TMR0_DefaultOverflowCallback:
 15227                           	callstack 0
 15228                           
 15229 ;; *************** function _led_toggle *****************
 15230 ;; Defined at:
 15231 ;;		line 18 in file "main.c"
 15232 ;; Parameters:    Size  Location     Type
 15233 ;;		None
 15234 ;; Auto vars:     Size  Location     Type
 15235 ;;		None
 15236 ;; Return value:  Size  Location     Type
 15237 ;;                  1    wreg      void 
 15238 ;; Registers used:
 15239 ;;		wreg, status,2, status,0
 15240 ;; Tracked objects:
 15241 ;;		On entry : 0/0
 15242 ;;		On exit  : 0/0
 15243 ;;		Unchanged: 0/0
 15244 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 15245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15247 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15248 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15249 ;;Total ram usage:        1 bytes
 15250 ;; Hardware stack levels used: 1
 15251 ;; This function calls:
 15252 ;;		Nothing
 15253 ;; This function is called by:
 15254 ;;		_main
 15255 ;;		_TMR0_OverflowISR
 15256 ;; This function uses a non-reentrant model
 15257 ;;
 15258                           
 15259                           	psect	text58
 15260   01178A                     __ptext58:
 15261                           	callstack 0
 15262   01178A                     _led_toggle:
 15263                           	callstack 113
 15264   01178A  B6C3               	btfsc	195,3,c	;volatile
 15265   01178C  EFCA  F08B         	goto	i2u219_41
 15266   011790  EFCD  F08B         	goto	i2u219_40
 15267   011794                     i2u219_41:
 15268   011794  0E01               	movlw	1
 15269   011796  EFCE  F08B         	goto	i2u219_46
 15270   01179A                     i2u219_40:
 15271   01179A  0E00               	movlw	0
 15272   01179C                     i2u219_46:
 15273   01179C  0AFF               	xorlw	255
 15274   01179E  6E01               	movwf	??_led_toggle^(0+1280),c
 15275   0117A0  4601               	rlncf	??_led_toggle^(0+1280),f,c
 15276   0117A2  4601               	rlncf	??_led_toggle^(0+1280),f,c
 15277   0117A4  4601               	rlncf	??_led_toggle^(0+1280),f,c
 15278   0117A6  50C3               	movf	195,w,c	;volatile
 15279   0117A8  1801               	xorwf	??_led_toggle^(0+1280),w,c
 15280   0117AA  0BF7               	andlw	-9
 15281   0117AC  1801               	xorwf	??_led_toggle^(0+1280),w,c
 15282   0117AE  6EC3               	movwf	195,c	;volatile
 15283   0117B0  0012               	return		;funcret
 15284   0117B2                     __end_of_led_toggle:
 15285                           	callstack 0
 15286                           
 15287                           ;
 15288                           ; H/W Interrupt Vector Table @ 0x8
 15289                           ;
 15290                           
 15291                           	psect	ivt0x8
 15292   000008                     __pivt0x8:
 15293                           	callstack 0
 15294   000008                     ivt0x8_base:
 15295                           	callstack 0
 15296                           
 15297                           ; high-priority vector
 15298   000008  EF10  F08B         	goto	_INTERRUPT_InterruptManager
 15299   000018                     	org	16
 15300                           
 15301                           ; low-priority vector
 15302   000018  00FF               	reset	
 15303                           
 15304                           	psect	rparam
 15305   000001                     ___rparam_used  equ	1
 15306   000000                     ___param_bank   equ	0
 15307   000000                     __Lparam        equ	__Lrparam
 15308   000000                     __Hparam        equ	__Hrparam
 15309                           
 15310                           	psect	idloc
 15311                           
 15312                           ;Config register IDLOC0 @ 0x200000
 15313                           ;	unspecified, using default values
 15314   200000                     	org	2097152
 15315   200000  FFFF               	dw	65535
 15316                           
 15317                           ;Config register IDLOC1 @ 0x200002
 15318                           ;	unspecified, using default values
 15319   200002                     	org	2097154
 15320   200002  FFFF               	dw	65535
 15321                           
 15322                           ;Config register IDLOC2 @ 0x200004
 15323                           ;	unspecified, using default values
 15324   200004                     	org	2097156
 15325   200004  FFFF               	dw	65535
 15326                           
 15327                           ;Config register IDLOC3 @ 0x200006
 15328                           ;	unspecified, using default values
 15329   200006                     	org	2097158
 15330   200006  FFFF               	dw	65535
 15331                           
 15332                           ;Config register IDLOC4 @ 0x200008
 15333                           ;	unspecified, using default values
 15334   200008                     	org	2097160
 15335   200008  FFFF               	dw	65535
 15336                           
 15337                           ;Config register IDLOC5 @ 0x20000A
 15338                           ;	unspecified, using default values
 15339   20000A                     	org	2097162
 15340   20000A  FFFF               	dw	65535
 15341                           
 15342                           ;Config register IDLOC6 @ 0x20000C
 15343                           ;	unspecified, using default values
 15344   20000C                     	org	2097164
 15345   20000C  FFFF               	dw	65535
 15346                           
 15347                           ;Config register IDLOC7 @ 0x20000E
 15348                           ;	unspecified, using default values
 15349   20000E                     	org	2097166
 15350   20000E  FFFF               	dw	65535
 15351                           
 15352                           ;Config register IDLOC8 @ 0x200010
 15353                           ;	unspecified, using default values
 15354   200010                     	org	2097168
 15355   200010  FFFF               	dw	65535
 15356                           
 15357                           ;Config register IDLOC9 @ 0x200012
 15358                           ;	unspecified, using default values
 15359   200012                     	org	2097170
 15360   200012  FFFF               	dw	65535
 15361                           
 15362                           ;Config register IDLOC10 @ 0x200014
 15363                           ;	unspecified, using default values
 15364   200014                     	org	2097172
 15365   200014  FFFF               	dw	65535
 15366                           
 15367                           ;Config register IDLOC11 @ 0x200016
 15368                           ;	unspecified, using default values
 15369   200016                     	org	2097174
 15370   200016  FFFF               	dw	65535
 15371                           
 15372                           ;Config register IDLOC12 @ 0x200018
 15373                           ;	unspecified, using default values
 15374   200018                     	org	2097176
 15375   200018  FFFF               	dw	65535
 15376                           
 15377                           ;Config register IDLOC13 @ 0x20001A
 15378                           ;	unspecified, using default values
 15379   20001A                     	org	2097178
 15380   20001A  FFFF               	dw	65535
 15381                           
 15382                           ;Config register IDLOC14 @ 0x20001C
 15383                           ;	unspecified, using default values
 15384   20001C                     	org	2097180
 15385   20001C  FFFF               	dw	65535
 15386                           
 15387                           ;Config register IDLOC15 @ 0x20001E
 15388                           ;	unspecified, using default values
 15389   20001E                     	org	2097182
 15390   20001E  FFFF               	dw	65535
 15391                           
 15392                           ;Config register IDLOC16 @ 0x200020
 15393                           ;	unspecified, using default values
 15394   200020                     	org	2097184
 15395   200020  FFFF               	dw	65535
 15396                           
 15397                           ;Config register IDLOC17 @ 0x200022
 15398                           ;	unspecified, using default values
 15399   200022                     	org	2097186
 15400   200022  FFFF               	dw	65535
 15401                           
 15402                           ;Config register IDLOC18 @ 0x200024
 15403                           ;	unspecified, using default values
 15404   200024                     	org	2097188
 15405   200024  FFFF               	dw	65535
 15406                           
 15407                           ;Config register IDLOC19 @ 0x200026
 15408                           ;	unspecified, using default values
 15409   200026                     	org	2097190
 15410   200026  FFFF               	dw	65535
 15411                           
 15412                           ;Config register IDLOC20 @ 0x200028
 15413                           ;	unspecified, using default values
 15414   200028                     	org	2097192
 15415   200028  FFFF               	dw	65535
 15416                           
 15417                           ;Config register IDLOC21 @ 0x20002A
 15418                           ;	unspecified, using default values
 15419   20002A                     	org	2097194
 15420   20002A  FFFF               	dw	65535
 15421                           
 15422                           ;Config register IDLOC22 @ 0x20002C
 15423                           ;	unspecified, using default values
 15424   20002C                     	org	2097196
 15425   20002C  FFFF               	dw	65535
 15426                           
 15427                           ;Config register IDLOC23 @ 0x20002E
 15428                           ;	unspecified, using default values
 15429   20002E                     	org	2097198
 15430   20002E  FFFF               	dw	65535
 15431                           
 15432                           ;Config register IDLOC24 @ 0x200030
 15433                           ;	unspecified, using default values
 15434   200030                     	org	2097200
 15435   200030  FFFF               	dw	65535
 15436                           
 15437                           ;Config register IDLOC25 @ 0x200032
 15438                           ;	unspecified, using default values
 15439   200032                     	org	2097202
 15440   200032  FFFF               	dw	65535
 15441                           
 15442                           ;Config register IDLOC26 @ 0x200034
 15443                           ;	unspecified, using default values
 15444   200034                     	org	2097204
 15445   200034  FFFF               	dw	65535
 15446                           
 15447                           ;Config register IDLOC27 @ 0x200036
 15448                           ;	unspecified, using default values
 15449   200036                     	org	2097206
 15450   200036  FFFF               	dw	65535
 15451                           
 15452                           ;Config register IDLOC28 @ 0x200038
 15453                           ;	unspecified, using default values
 15454   200038                     	org	2097208
 15455   200038  FFFF               	dw	65535
 15456                           
 15457                           ;Config register IDLOC29 @ 0x20003A
 15458                           ;	unspecified, using default values
 15459   20003A                     	org	2097210
 15460   20003A  FFFF               	dw	65535
 15461                           
 15462                           ;Config register IDLOC30 @ 0x20003C
 15463                           ;	unspecified, using default values
 15464   20003C                     	org	2097212
 15465   20003C  FFFF               	dw	65535
 15466                           
 15467                           ;Config register IDLOC31 @ 0x20003E
 15468                           ;	unspecified, using default values
 15469   20003E                     	org	2097214
 15470   20003E  FFFF               	dw	65535
 15471                           
 15472                           	psect	config
 15473                           
 15474                           ;Config register CONFIG1 @ 0x300000
 15475                           ;	External Oscillator Selection
 15476                           ;	FEXTOSC = ECH, EC (external clock) above 8 MHz
 15477                           ;	Reset Oscillator Selection
 15478                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 15479   300000                     	org	3145728
 15480   300000  8F                 	db	143
 15481                           
 15482                           ;Config register CONFIG2 @ 0x300001
 15483                           ;	Clock out Enable bit
 15484                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 15485                           ;	PRLOCKED One-Way Set Enable bit
 15486                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
 15487                           ;	Clock Switch Enable bit
 15488                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 15489                           ;	Fail-Safe Clock Monitor Enable bit
 15490                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 15491   300001                     	org	3145729
 15492   300001  FF                 	db	255
 15493                           
 15494                           ;Config register CONFIG3 @ 0x300002
 15495                           ;	MCLR Enable bit
 15496                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 15497                           ;	Power-up timer selection bits
 15498                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 15499                           ;	Multi-vector enable bit
 15500                           ;	MVECEN = OFF, Interrupt contoller does not use vector table to prioritze interrupts
 15501                           ;	IVTLOCK bit One-way set enable bit
 15502                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
 15503                           ;	Low Power BOR Enable bit
 15504                           ;	LPBOREN = OFF, Low-Power BOR disabled
 15505                           ;	Brown-out Reset Enable bits
 15506                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 15507   300002                     	org	3145730
 15508   300002  F7                 	db	247
 15509                           
 15510                           ;Config register CONFIG4 @ 0x300003
 15511                           ;	Brown-out Reset Voltage Selection bits
 15512                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
 15513                           ;	ZCD Disable bit
 15514                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
 15515                           ;	PPSLOCK bit One-Way Set Enable bit
 15516                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
 15517                           ;	Stack Full/Underflow Reset Enable bit
 15518                           ;	STVREN = ON, Stack full/underflow will cause Reset
 15519                           ;	Low Voltage Programming Enable bit
 15520                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 15521                           ;	Extended Instruction Set Enable bit
 15522                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 15523   300003                     	org	3145731
 15524   300003  FF                 	db	255
 15525                           
 15526                           ;Config register CONFIG5 @ 0x300004
 15527                           ;	WDT Period selection bits
 15528                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 15529                           ;	WDT operating mode
 15530                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 15531   300004                     	org	3145732
 15532   300004  9F                 	db	159
 15533                           
 15534                           ;Config register CONFIG6 @ 0x300005
 15535                           ;	WDT Window Select bits
 15536                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 15537                           ;	WDT input clock selector
 15538                           ;	WDTCCS = SC, Software Control
 15539   300005                     	org	3145733
 15540   300005  FF                 	db	255
 15541                           
 15542                           ;Config register CONFIG7 @ 0x300006
 15543                           ;	Boot Block Size selection bits
 15544                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 15545                           ;	Boot Block enable bit
 15546                           ;	BBEN = OFF, Boot block disabled
 15547                           ;	Storage Area Flash enable bit
 15548                           ;	SAFEN = OFF, SAF disabled
 15549                           ;	Background Debugger
 15550                           ;	DEBUG = 0x1, unprogrammed default
 15551   300006                     	org	3145734
 15552   300006  FF                 	db	255
 15553                           
 15554                           ;Config register CONFIG8 @ 0x300007
 15555                           ;	Boot Block Write Protection bit
 15556                           ;	WRTB = OFF, Boot Block not Write protected
 15557                           ;	Configuration Register Write Protection bit
 15558                           ;	WRTC = OFF, Configuration registers not Write protected
 15559                           ;	Data EEPROM Write Protection bit
 15560                           ;	WRTD = OFF, Data EEPROM not Write protected
 15561                           ;	SAF Write protection bit
 15562                           ;	WRTSAF = OFF, SAF not Write Protected
 15563                           ;	Application Block write protection bit
 15564                           ;	WRTAPP = OFF, Application Block not write protected
 15565   300007                     	org	3145735
 15566   300007  FF                 	db	255
 15567                           
 15568                           ;Config register CONFIG10 @ 0x300009
 15569                           ;	PFM and Data EEPROM Code Protection bit
 15570                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 15571   300009                     	org	3145737
 15572   300009  FF                 	db	255
 15573                           tosu	equ	0x4FF
 15574                           tosh	equ	0x4FE
 15575                           tosl	equ	0x4FD
 15576                           stkptr	equ	0x4FC
 15577                           pclatu	equ	0x4FB
 15578                           pclath	equ	0x4FA
 15579                           pcl	equ	0x4F9
 15580                           tblptru	equ	0x4F8
 15581                           tblptrh	equ	0x4F7
 15582                           tblptrl	equ	0x4F6
 15583                           tablat	equ	0x4F5
 15584                           prodh	equ	0x4F4
 15585                           prodl	equ	0x4F3
 15586                           indf0	equ	0x4EF
 15587                           postinc0	equ	0x4EE
 15588                           postdec0	equ	0x4ED
 15589                           preinc0	equ	0x4EC
 15590                           plusw0	equ	0x4EB
 15591                           fsr0h	equ	0x4EA
 15592                           fsr0l	equ	0x4E9
 15593                           wreg	equ	0x4E8
 15594                           indf1	equ	0x4E7
 15595                           postinc1	equ	0x4E6
 15596                           postdec1	equ	0x4E5
 15597                           preinc1	equ	0x4E4
 15598                           plusw1	equ	0x4E3
 15599                           fsr1h	equ	0x4E2
 15600                           fsr1l	equ	0x4E1
 15601                           bsr	equ	0x4E0
 15602                           indf2	equ	0x4DF
 15603                           postinc2	equ	0x4DE
 15604                           postdec2	equ	0x4DD
 15605                           preinc2	equ	0x4DC
 15606                           plusw2	equ	0x4DB
 15607                           fsr2h	equ	0x4DA
 15608                           fsr2l	equ	0x4D9
 15609                           status	equ	0x4D8

Data Sizes:
    Strings     327
    Constant    105
    Data        56
    BSS         37
    Persistent  12
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     89      92
    BANK5           160     53     155
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    AdvancedSettings@dev	PTR struct . size(2) Largest target is 3
		 -> receiver@dev(BANK5[3]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK5[32]), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), NULL(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), NULL(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), NULL(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    Nrf24_config@dev	PTR struct . size(2) Largest target is 3
		 -> receiver@dev(BANK5[3]), 

    Nrf24_dataReady@dev	PTR struct . size(2) Largest target is 3
		 -> receiver@dev(BANK5[3]), 

    Nrf24_flushRx@dev	PTR struct . size(2) Largest target is 3
		 -> receiver@dev(BANK5[3]), 

    Nrf24_getCRCLength@dev	PTR struct . size(2) Largest target is 3
		 -> receiver@dev(BANK5[3]), 

    Nrf24_getData@data	PTR unsigned char  size(2) Largest target is 32
		 -> receiver@buf(BANK5[32]), 

    Nrf24_getData@dev	PTR struct . size(2) Largest target is 3
		 -> receiver@dev(BANK5[3]), 

    Nrf24_getDataRate@dev	PTR struct . size(2) Largest target is 3
		 -> receiver@dev(BANK5[3]), 

    Nrf24_getPALevel@dev	PTR struct . size(2) Largest target is 3
		 -> receiver@dev(BANK5[3]), 

    Nrf24_getRetransmitDelay@dev	PTR struct . size(2) Largest target is 3
		 -> receiver@dev(BANK5[3]), 

    Nrf24_getStatus@dev	PTR struct . size(2) Largest target is 3
		 -> receiver@dev(BANK5[3]), 

    Nrf24_init@dev	PTR struct . size(2) Largest target is 3
		 -> receiver@dev(BANK5[3]), 

    Nrf24_powerUpRx@dev	PTR struct . size(2) Largest target is 3
		 -> receiver@dev(BANK5[3]), 

    Nrf24_print_address_register@dev	PTR struct . size(2) Largest target is 3
		 -> receiver@dev(BANK5[3]), 

    Nrf24_print_address_register@name	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_3(CODE[13]), STR_5(CODE[9]), 

    Nrf24_print_byte_register@dev	PTR struct . size(2) Largest target is 3
		 -> receiver@dev(BANK5[3]), 

    Nrf24_print_byte_register@name	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_10(CODE[9]), STR_11(CODE[8]), STR_12(CODE[14]), STR_4(CODE[13]), 
		 -> STR_6(CODE[11]), STR_7(CODE[7]), STR_8(CODE[10]), STR_9(CODE[7]), 

    Nrf24_printDetails@dev	PTR struct . size(2) Largest target is 3
		 -> receiver@dev(BANK5[3]), 

    Nrf24_readRegister@value	PTR unsigned char  size(2) Largest target is 5
		 -> Nrf24_addRADDR@value(COMRAM[1]), Nrf24_getCRCLength@AA(COMRAM[1]), Nrf24_getCRCLength@config(COMRAM[1]), Nrf24_getDataRate@dr(COMRAM[1]), 
		 -> Nrf24_getPALevel@level(COMRAM[1]), Nrf24_getRetransmitDelay@value(COMRAM[1]), Nrf24_getStatus@rv(COMRAM[1]), Nrf24_print_address_register@buffer(BANK5[5]), 
		 -> Nrf24_print_byte_register@buffer(COMRAM[1]), Nrf24_rxFifoEmpty@fifoStatus(COMRAM[1]), Nrf24_SetOutputRF_PWR@value(COMRAM[1]), Nrf24_setRADDR@buffer(COMRAM[5]), 
		 -> Nrf24_setRetransmitDelay@value(COMRAM[1]), Nrf24_SetSpeedDataRates@value(COMRAM[1]), Nrf24_setTADDR@buffer(COMRAM[5]), 

    Nrf24_setRADDR@adr	PTR unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    Nrf24_setRADDR@dev	PTR struct . size(2) Largest target is 3
		 -> receiver@dev(BANK5[3]), 

    Nrf24_setRetransmitDelay@dev	PTR struct . size(2) Largest target is 3
		 -> receiver@dev(BANK5[3]), 

    Nrf24_SetSpeedDataRates@dev	PTR struct . size(2) Largest target is 3
		 -> receiver@dev(BANK5[3]), 

    Nrf24_writeRegister@value	PTR unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    NULL$0	PTR FTN()void  size(3) Largest target is 0

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK5[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 70
		 -> STR_13(CODE[17]), STR_14(CODE[18]), STR_15(CODE[16]), STR_16(CODE[21]), 
		 -> STR_17(CODE[70]), STR_18(CODE[6]), STR_19(CODE[4]), STR_2(CODE[53]), 
		 -> STR_20(CODE[5]), STR_21(CODE[3]), STR_22(CODE[6]), STR_23(CODE[8]), 
		 -> STR_24(CODE[3]), 

    read_prec_or_width@ap	PTR PTR void [1] size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    receiver@pvParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1841$buffer	PTR unsigned char  size(2) Largest target is 0

    S1841$source	PTR const unsigned char  size(2) Largest target is 0

    S40$4$0	PTR void  size(2) Largest target is 0

    S40$5$0	PTR void  size(2) Largest target is 0

    S40$6$0	PTR void  size(2) Largest target is 0

    S40SPI_INTERFACE$BufferExchange	PTR FTN(PTR void ,unsigned int ,)void  size(3) Largest target is 1
		 -> SPI1_BufferExchange(), 

    S40SPI_INTERFACE$BufferRead	PTR FTN(PTR void ,unsigned int ,)void  size(3) Largest target is 1
		 -> SPI1_BufferRead(), 

    S40SPI_INTERFACE$BufferWrite	PTR FTN(PTR void ,unsigned int ,)void  size(3) Largest target is 1
		 -> SPI1_BufferWrite(), 

    S40SPI_INTERFACE$ByteExchange	PTR FTN(unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> SPI1_ByteExchange(), 

    S40SPI_INTERFACE$ByteRead	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> SPI1_ByteRead(), 

    S40SPI_INTERFACE$ByteWrite	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> SPI1_ByteWrite(), 

    S40SPI_INTERFACE$Close	PTR FTN()void  size(3) Largest target is 1
		 -> SPI1_Close(), 

    S40SPI_INTERFACE$Deinitialize	PTR FTN()void  size(3) Largest target is 1
		 -> SPI1_Deinitialize(), 

    S40SPI_INTERFACE$Initialize	PTR FTN()void  size(3) Largest target is 1
		 -> SPI1_Initialize(), 

    S40SPI_INTERFACE$IsRxReady	PTR FTN()_Bool  size(3) Largest target is 1
		 -> SPI1_IsRxReady(), 

    S40SPI_INTERFACE$IsTxReady	PTR FTN()_Bool  size(3) Largest target is 1
		 -> SPI1_IsTxReady(), 

    S40SPI_INTERFACE$Open	PTR FTN(unsigned char ,)_Bool  size(3) Largest target is 1
		 -> SPI1_Open(), 

    S40SPI_INTERFACE$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    S40SPI_INTERFACE$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    S767$4$0	PTR FTN()void  size(3) Largest target is 1
		 -> led_toggle(), TMR0_DefaultOverflowCallback(), 

    S767TMR_INTERFACE$Initialize	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Initialize(), 

    S767TMR_INTERFACE$PeriodCountSet	PTR FTN(unsigned int ,)void  size(3) Largest target is 1
		 -> TMR0_Reload(), 

    S767TMR_INTERFACE$Start	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Start(), 

    S767TMR_INTERFACE$Stop	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Stop(), 

    S767TMR_INTERFACE$Tasks	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), 

    S767TMR_INTERFACE$TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> TMR0_OverflowCallbackRegister(), 

    sp__memset	PTR void  size(2) Largest target is 0

    sp__Nrf24_getDataRateString	PTR unsigned char  size(2) Largest target is 24
		 -> rf24_datarates(BANK5[24]), 

    sp__Nrf24_getPALevelString	PTR unsigned char  size(2) Largest target is 32
		 -> rf24_pa_dbm(BANK5[32]), 

    SPI1_nrf24$BufferExchange	PTR FTN(PTR void ,unsigned int ,)void  size(3) Largest target is 1
		 -> SPI1_BufferExchange(), 

    SPI1_nrf24$BufferRead	PTR FTN(PTR void ,unsigned int ,)void  size(3) Largest target is 1
		 -> SPI1_BufferRead(), 

    SPI1_nrf24$BufferWrite	PTR FTN(PTR void ,unsigned int ,)void  size(3) Largest target is 1
		 -> SPI1_BufferWrite(), 

    SPI1_nrf24$ByteExchange	PTR FTN(unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> SPI1_ByteExchange(), 

    SPI1_nrf24$ByteRead	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> SPI1_ByteRead(), 

    SPI1_nrf24$ByteWrite	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> SPI1_ByteWrite(), 

    SPI1_nrf24$Close	PTR FTN()void  size(3) Largest target is 1
		 -> SPI1_Close(), 

    SPI1_nrf24$Deinitialize	PTR FTN()void  size(3) Largest target is 1
		 -> SPI1_Deinitialize(), 

    SPI1_nrf24$Initialize	PTR FTN()void  size(3) Largest target is 1
		 -> SPI1_Initialize(), 

    SPI1_nrf24$IsRxReady	PTR FTN()_Bool  size(3) Largest target is 1
		 -> SPI1_IsRxReady(), 

    SPI1_nrf24$IsTxReady	PTR FTN()_Bool  size(3) Largest target is 1
		 -> SPI1_IsTxReady(), 

    SPI1_nrf24$Open	PTR FTN(unsigned char ,)_Bool  size(3) Largest target is 1
		 -> SPI1_Open(), 

    SPI1_nrf24$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    SPI1_nrf24$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    SPI_read_buff@buffer	PTR unsigned char  size(2) Largest target is 32
		 -> Nrf24_addRADDR@value(COMRAM[1]), Nrf24_getCRCLength@AA(COMRAM[1]), Nrf24_getCRCLength@config(COMRAM[1]), Nrf24_getDataRate@dr(COMRAM[1]), 
		 -> Nrf24_getPALevel@level(COMRAM[1]), Nrf24_getRetransmitDelay@value(COMRAM[1]), Nrf24_getStatus@rv(COMRAM[1]), Nrf24_print_address_register@buffer(BANK5[5]), 
		 -> Nrf24_print_byte_register@buffer(COMRAM[1]), Nrf24_rxFifoEmpty@fifoStatus(COMRAM[1]), Nrf24_SetOutputRF_PWR@value(COMRAM[1]), Nrf24_setRADDR@buffer(COMRAM[5]), 
		 -> Nrf24_setRetransmitDelay@value(COMRAM[1]), Nrf24_SetSpeedDataRates@value(COMRAM[1]), Nrf24_setTADDR@buffer(COMRAM[5]), receiver@buf(BANK5[32]), 

    SPI_write_buff@buffer	PTR unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 32
		 -> ?_printf(COMRAM[2]), rf24_crclength(CODE[30]), rf24_datarates(BANK5[24]), rf24_pa_dbm(BANK5[32]), 
		 -> STR_10(CODE[9]), STR_11(CODE[8]), STR_12(CODE[14]), STR_25(CODE[7]), 
		 -> STR_3(CODE[13]), STR_4(CODE[13]), STR_5(CODE[9]), STR_6(CODE[11]), 
		 -> STR_7(CODE[7]), STR_8(CODE[10]), STR_9(CODE[7]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 32
		 -> ?_printf(COMRAM[2]), rf24_crclength(CODE[30]), rf24_datarates(BANK5[24]), rf24_pa_dbm(BANK5[32]), 
		 -> STR_10(CODE[9]), STR_11(CODE[8]), STR_12(CODE[14]), STR_3(CODE[13]), 
		 -> STR_4(CODE[13]), STR_5(CODE[9]), STR_6(CODE[11]), STR_7(CODE[7]), 
		 -> STR_8(CODE[10]), STR_9(CODE[7]), 

    Timer0$Initialize	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Initialize(), 

    Timer0$PeriodCountSet	PTR FTN(unsigned int ,)void  size(3) Largest target is 1
		 -> TMR0_Reload(), 

    Timer0$Start	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Start(), 

    Timer0$Stop	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Stop(), 

    Timer0$Tasks	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), 

    Timer0$TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> TMR0_OverflowCallbackRegister(), 

    TMR0_OverflowCallback	PTR FTN()void  size(3) Largest target is 1
		 -> led_toggle(), TMR0_DefaultOverflowCallback(), NULL(), 

    TMR0_OverflowCallbackRegister@CallbackHandler	PTR FTN()void  size(3) Largest target is 1
		 -> led_toggle(), TMR0_DefaultOverflowCallback(), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 70
		 -> STR_13(CODE[17]), STR_14(CODE[18]), STR_15(CODE[16]), STR_16(CODE[21]), 
		 -> STR_17(CODE[70]), STR_18(CODE[6]), STR_19(CODE[4]), STR_2(CODE[53]), 
		 -> STR_20(CODE[5]), STR_21(CODE[3]), STR_22(CODE[6]), STR_23(CODE[8]), 
		 -> STR_24(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 70
		 -> STR_13(CODE[17]), STR_14(CODE[18]), STR_15(CODE[16]), STR_16(CODE[21]), 
		 -> STR_17(CODE[70]), STR_18(CODE[6]), STR_19(CODE[4]), STR_2(CODE[53]), 
		 -> STR_20(CODE[5]), STR_21(CODE[3]), STR_22(CODE[6]), STR_23(CODE[8]), 
		 -> STR_24(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 70
		 -> STR_13(CODE[17]), STR_14(CODE[18]), STR_15(CODE[16]), STR_16(CODE[21]), 
		 -> STR_17(CODE[70]), STR_18(CODE[6]), STR_19(CODE[4]), STR_2(CODE[53]), 
		 -> STR_20(CODE[5]), STR_21(CODE[3]), STR_22(CODE[6]), STR_23(CODE[8]), 
		 -> STR_24(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _receiver->_Nrf24_printDetails
    _Nrf24_setRADDR->_Nrf24_readRegister
    _Nrf24_setRADDR->_Nrf24_writeRegister
    _Nrf24_writeRegister->_SPI_write_buff
    _SPI_write_buff->_DELAY_microseconds
    _SPI_write_buff->_SPI1_ByteExchange
    _Nrf24_printDetails->_Nrf24_print_address_register
    _Nrf24_printDetails->_Nrf24_print_byte_register
    _Nrf24_print_status->_printf
    _Nrf24_print_byte_register->_printf
    _Nrf24_print_address_register->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _stoa->_fputc
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _Nrf24_getRetransmitDelay->_Nrf24_readRegister
    _Nrf24_getPALevel->_Nrf24_readRegister
    _Nrf24_getDataRate->_Nrf24_readRegister
    _Nrf24_getCRCLength->_Nrf24_readRegister
    _Nrf24_init->_SPI1_Open
    _Nrf24_getData->_SPI_read_buff
    _Nrf24_dataReady->_Nrf24_getStatus
    _Nrf24_config->_Nrf24_getStatus
    _Nrf24_powerUpRx->_Nrf24_configRegister
    _Nrf24_getStatus->_Nrf24_readRegister
    _Nrf24_flushRx->_SPI1_ByteExchange
    _AdvancedSettings->_Nrf24_SetSpeedDataRates
    _AdvancedSettings->_Nrf24_setRetransmitDelay
    _Nrf24_setRetransmitDelay->_Nrf24_readRegister
    _Nrf24_SetSpeedDataRates->_Nrf24_readRegister
    _Nrf24_readRegister->_SPI_read_buff
    _SPI_read_buff->_SPI1_ByteExchange
    _Nrf24_configRegister->_SPI1_ByteExchange
    _TMR0_Initialize->_TMR0_OverflowCallbackRegister
    _INTERRUPT_Initialize->_INT0_SetInterruptHandler
    _INTERRUPT_Initialize->_INT1_SetInterruptHandler
    _INTERRUPT_Initialize->_INT2_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR0_OverflowISR->_led_toggle

Critical Paths under _main in BANK5

    _main->_receiver
    _receiver->_Nrf24_printDetails
    _Nrf24_printDetails->_Nrf24_print_address_register

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   41631
                  _SYSTEM_Initialize
      _TMR0_OverflowCallbackRegister
                         _TMR0_Start
                           _receiver
 ---------------------------------------------------------------------------------
 (1) _receiver                                            41    39      2   41514
                                             14 BANK5     39    37      2
                   _AdvancedSettings
                 _DELAY_milliseconds
                       _Nrf24_config
                    _Nrf24_dataReady
                      _Nrf24_getData
                         _Nrf24_init
                 _Nrf24_printDetails
                     _Nrf24_setRADDR
 ---------------------------------------------------------------------------------
 (2) _Nrf24_setRADDR                                      16    12      4    1304
                                             13 COMRAM    16    12      4
                 _Nrf24_readRegister
                _Nrf24_writeRegister
 ---------------------------------------------------------------------------------
 (3) _Nrf24_writeRegister                                  4     1      3     486
                                              9 COMRAM     4     1      3
                  _SPI1_ByteExchange
                     _SPI_write_buff
 ---------------------------------------------------------------------------------
 (4) _SPI_write_buff                                       4     1      3     244
                                              5 COMRAM     4     1      3
                 _DELAY_microseconds
                  _SPI1_ByteExchange
 ---------------------------------------------------------------------------------
 (5) _DELAY_microseconds                                   2     0      2      46
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _Nrf24_printDetails                                   9     7      2   34630
                                             87 COMRAM     2     0      2
                                              7 BANK5      7     7      0
                 _Nrf24_getCRCLength
                  _Nrf24_getDataRate
                   _Nrf24_getPALevel
           _Nrf24_getRetransmitDelay
                    _Nrf24_getStatus
       _Nrf24_print_address_register
          _Nrf24_print_byte_register
                 _Nrf24_print_status
                             _printf
 ---------------------------------------------------------------------------------
 (3) _Nrf24_print_status                                   2     2      0    7528
                                             80 COMRAM     2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (3) _Nrf24_print_byte_register                            7     1      6    8018
                                             80 COMRAM     7     1      6
                 _Nrf24_readRegister
                             _printf
 ---------------------------------------------------------------------------------
 (3) _Nrf24_print_address_register                        14     8      6    8048
                                             80 COMRAM     7     1      6
                                              0 BANK5      7     7      0
                 _Nrf24_readRegister
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              18     4     14    7246
                                             64 COMRAM    16     2     14
                 _Nrf24_getCRCLength (ARG)
                  _Nrf24_getDataRate (ARG)
                   _Nrf24_getPALevel (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6    7108
                                             56 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           16    10      6    6851
                                             41 COMRAM    15     9      6
                               _dtoa
                              _fputc
                 _read_prec_or_width
                               _stoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (6) _xtoa                                                13     9      4    1572
                                             28 COMRAM    13     9      4
                                _pad
 ---------------------------------------------------------------------------------
 (6) _stoa                                                14    10      4     820
                                             12 COMRAM    14    10      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _read_prec_or_width                                   9     5      4     266
                                              3 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                12     8      4    2722
                                             28 COMRAM    12     8      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                  9     3      6    1133
                                             19 COMRAM     9     3      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4     505
                                             12 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4     353
                                              3 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2      96
                                              9 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     439
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     451
                                              3 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _Nrf24_getRetransmitDelay                             3     1      2     583
                                             13 COMRAM     3     1      2
                 _Nrf24_readRegister
 ---------------------------------------------------------------------------------
 (3) _Nrf24_getPALevel                                     3     1      2     620
                                             13 COMRAM     3     1      2
                 _Nrf24_readRegister
 ---------------------------------------------------------------------------------
 (3) _Nrf24_getDataRate                                    4     2      2     691
                                             13 COMRAM     4     2      2
                 _Nrf24_readRegister
 ---------------------------------------------------------------------------------
 (3) _Nrf24_getCRCLength                                   5     3      2     756
                                             13 COMRAM     5     3      2
                 _Nrf24_readRegister
 ---------------------------------------------------------------------------------
 (2) _Nrf24_init                                           2     0      2     199
                                              4 COMRAM     2     0      2
                          _SPI1_Open
 ---------------------------------------------------------------------------------
 (3) _SPI1_Open                                            2     2      0     154
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Nrf24_getData                                        4     0      4     593
                                              9 COMRAM     4     0      4
               _Nrf24_configRegister
                  _SPI1_ByteExchange
                      _SPI_read_buff
 ---------------------------------------------------------------------------------
 (2) _Nrf24_dataReady                                      3     1      2     675
                                             16 COMRAM     3     1      2
                    _Nrf24_getStatus
 ---------------------------------------------------------------------------------
 (2) _Nrf24_config                                         4     0      4    1527
                                             16 COMRAM     4     0      4
               _Nrf24_configRegister
                      _Nrf24_flushRx
                    _Nrf24_getStatus
                    _Nrf24_powerUpRx
 ---------------------------------------------------------------------------------
 (3) _Nrf24_powerUpRx                                      2     0      2     280
                                              7 COMRAM     2     0      2
               _Nrf24_configRegister
 ---------------------------------------------------------------------------------
 (3) _Nrf24_getStatus                                      3     1      2     604
                                             13 COMRAM     3     1      2
                 _Nrf24_readRegister
 ---------------------------------------------------------------------------------
 (3) _Nrf24_flushRx                                        2     0      2      87
                                              5 COMRAM     2     0      2
                  _SPI1_ByteExchange
 ---------------------------------------------------------------------------------
 (2) _DELAY_milliseconds                                   3     1      2      25
                                              3 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _AdvancedSettings                                     2     0      2    2070
                                             17 COMRAM     2     0      2
            _Nrf24_SetSpeedDataRates
           _Nrf24_setRetransmitDelay
 ---------------------------------------------------------------------------------
 (3) _Nrf24_setRetransmitDelay                             4     1      3     922
                                             13 COMRAM     4     1      3
               _Nrf24_configRegister
                 _Nrf24_readRegister
 ---------------------------------------------------------------------------------
 (3) _Nrf24_SetSpeedDataRates                              4     1      3    1083
                                             13 COMRAM     4     1      3
               _Nrf24_configRegister
                 _Nrf24_readRegister
 ---------------------------------------------------------------------------------
 (3) _Nrf24_readRegister                                   4     1      3     512
                                              9 COMRAM     4     1      3
                  _SPI1_ByteExchange
                      _SPI_read_buff
 ---------------------------------------------------------------------------------
 (4) _SPI_read_buff                                        4     1      3     198
                                              5 COMRAM     4     1      3
                  _SPI1_ByteExchange
 ---------------------------------------------------------------------------------
 (3) _Nrf24_configRegister                                 2     1      1     237
                                              5 COMRAM     2     1      1
                  _SPI1_ByteExchange
 ---------------------------------------------------------------------------------
 (5) _SPI1_ByteExchange                                    2     2      0      84
                                              3 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _TMR0_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      93
                   _CLOCK_Initialize
               _INTERRUPT_Initialize
             _PIN_MANAGER_Initialize
                    _SPI1_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0      24
      _TMR0_OverflowCallbackRegister
 ---------------------------------------------------------------------------------
 (1) _TMR0_OverflowCallbackRegister                        3     0      3      24
                                              3 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0      69
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             3     0      3      23
                                              3 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3      23
                                              3 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      23
                                              3 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManager                          2     2      0       0
                                              1 COMRAM     2     2      0
                   _TMR0_OverflowISR
 ---------------------------------------------------------------------------------
 (13) _TMR0_OverflowISR                                    0     0      0       0
                                NULL *
       _TMR0_DefaultOverflowCallback *
                         _led_toggle *
 ---------------------------------------------------------------------------------
 (14) _led_toggle                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (14) _TMR0_DefaultOverflowCallback                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _CLOCK_Initialize
     _INTERRUPT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _PIN_MANAGER_Initialize
     _SPI1_Initialize
     _TMR0_Initialize
       _TMR0_OverflowCallbackRegister
   _TMR0_OverflowCallbackRegister
   _TMR0_Start
   _receiver
     _AdvancedSettings
       _Nrf24_SetSpeedDataRates
         _Nrf24_configRegister
           _SPI1_ByteExchange
         _Nrf24_readRegister
           _SPI1_ByteExchange
           _SPI_read_buff
             _SPI1_ByteExchange
       _Nrf24_setRetransmitDelay
         _Nrf24_configRegister
         _Nrf24_readRegister
     _DELAY_milliseconds
     _Nrf24_config
       _Nrf24_configRegister
       _Nrf24_flushRx
         _SPI1_ByteExchange
       _Nrf24_getStatus
         _Nrf24_readRegister
       _Nrf24_powerUpRx
         _Nrf24_configRegister
     _Nrf24_dataReady
       _Nrf24_getStatus
     _Nrf24_getData
       _Nrf24_configRegister
       _SPI1_ByteExchange
       _SPI_read_buff
     _Nrf24_init
       _SPI1_Open
     _Nrf24_printDetails
       _Nrf24_getCRCLength
         _Nrf24_readRegister
       _Nrf24_getDataRate
         _Nrf24_readRegister
       _Nrf24_getPALevel
         _Nrf24_readRegister
       _Nrf24_getRetransmitDelay
         _Nrf24_readRegister
       _Nrf24_getStatus
       _Nrf24_print_address_register
         _Nrf24_readRegister
         _printf
           _Nrf24_getCRCLength (ARG)
           _Nrf24_getDataRate (ARG)
           _Nrf24_getPALevel (ARG)
           _vfprintf (ARG)
             _vfpfcnvrt
               _dtoa
                 ___awdiv
                 ___awmod
                 _abs
                   ___awmod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
               _fputc
               _read_prec_or_width
               _stoa
                 _fputc
               _xtoa
                 _pad
       _Nrf24_print_byte_register
         _Nrf24_readRegister
         _printf
       _Nrf24_print_status
         _printf
       _printf
     _Nrf24_setRADDR
       _Nrf24_readRegister
       _Nrf24_writeRegister
         _SPI1_ByteExchange
         _SPI_write_buff
           _DELAY_microseconds
           _SPI1_ByteExchange

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_OverflowISR
     NULL(Fake) *
     _TMR0_DefaultOverflowCallback *
     _led_toggle *

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            8191      0       0      0.0%
BITBIGSFRh        1150      0       0      0.0%
BITBIGSFR_1        256      0       0      0.0%
BITBANK36          256      0       0      0.0%
BANK36             256      0       0      0.0%
BITBANK35          256      0       0      0.0%
BANK35             256      0       0      0.0%
BITBANK34          256      0       0      0.0%
BANK34             256      0       0      0.0%
BITBANK33          256      0       0      0.0%
BANK33             256      0       0      0.0%
BITBANK32          256      0       0      0.0%
BANK32             256      0       0      0.0%
BITBANK31          256      0       0      0.0%
BANK31             256      0       0      0.0%
BITBANK30          256      0       0      0.0%
BANK30             256      0       0      0.0%
BITBANK29          256      0       0      0.0%
BANK29             256      0       0      0.0%
BITBANK28          256      0       0      0.0%
BANK28             256      0       0      0.0%
BITBANK27          256      0       0      0.0%
BANK27             256      0       0      0.0%
BITBANK26          256      0       0      0.0%
BANK26             256      0       0      0.0%
BITBANK25          256      0       0      0.0%
BANK25             256      0       0      0.0%
BITBANK24          256      0       0      0.0%
BANK24             256      0       0      0.0%
BITBANK23          256      0       0      0.0%
BANK23             256      0       0      0.0%
BITBANK22          256      0       0      0.0%
BANK22             256      0       0      0.0%
BITBANK21          256      0       0      0.0%
BANK21             256      0       0      0.0%
BITBANK20          256      0       0      0.0%
BANK20             256      0       0      0.0%
BITBANK19          256      0       0      0.0%
BANK19             256      0       0      0.0%
BITBANK18          256      0       0      0.0%
BANK18             256      0       0      0.0%
BITBANK17          256      0       0      0.0%
BANK17             256      0       0      0.0%
BITBANK16          256      0       0      0.0%
BANK16             256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BANK15             256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           160      0       0      0.0%
BANK5              160     53     155     96.9%
BITBIGSFRl         128      0       0      0.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     89      92     96.8%
STACK                0      0       0      0.0%
DATA                 0      0     247      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Mon Dec 16 20:35:53 2024

                           _SPI1_ByteExchange 1736                             ??_Nrf24_powerUpRx 050A  
                        ??_Nrf24_printDetails 059F                                            l61 18A8  
                                          l67 0CC8                                            l69 0CC8  
                          ?_SPI1_ByteExchange 0501                           ?_Nrf24_print_status 0501  
                                ___awdiv@sign 0509                                           l102 174C  
                                         l104 175A                                           l105 1760  
                                         l136 18E8                                           l307 14E6  
                                         l324 1920                                           l350 1904  
                                         l263 1018                                           l416 1788  
                                         l337 1912                                           l419 1932  
                                         l621 161E                                           l438 18F6  
                                         l366 18D4                                           l710 121C  
                                         l374 1680                                           l551 1584  
                                         l383 1334                      Nrf24_getCRCLength@config 0512  
                                         l624 187C                                           l632 1694  
                                         l608 17FC                                           l640 15CE  
                                         l553 1586                                           l617 15EE  
                                         l721 1132                                           l561 1460  
                                         l546 1554                                           l547 1556  
                                         l715 1734                                           l563 1462  
                                         l628 1890                                           l636 16B0  
                                         l740 13D4                                           l556 1420  
                                         l644 15EC                                           l477 1842  
                                         l557 1422                                           l582 11AE  
                                         l750 1268                                           l742 13D8  
                                         l718 0592                                           l735 12E2  
                                         l680 18BE                                           l576 1708  
                                         l753 1284                                           l729 0EDE  
                                         l497 16DA                                           l690 1922  
                                         l762 1878                                           l586 10AA  
                                         l748 1282                                           l756 1860  
                                         l588 10B2                                           l694 192C  
                                         l687 1820                    __end_of_DELAY_milliseconds 1682  
                  ??_INT0_SetInterruptHandler 0507                                           _abs 1520  
                                         _pad 0EE0                           ??_SPI1_ByteExchange 0504  
                                ___awmod@sign 0509                      Nrf24_getCRCLength@result 0510  
                                         prod 04F3                                           tosl 04FD  
                                         wreg 04E8                                          l1002 0D8A  
                                        l1015 0E38                                          ?_abs 050A  
                                        l2200 0FBE                                          l2210 0FC8  
                                        l2202 0FC0                                          l2220 0FD6  
                                        l2212 0FCA                                          l2204 0FC2  
                                        l2230 0FE4                                          l2222 0FD8  
                                        l2214 0FCC                                          l2206 0FC4  
                                        l1510 082A                                          l1503 077A  
                                        l2240 1002                                          l2232 0FE8  
                                        l2224 0FDA                                          l2216 0FCE  
                                        l2208 0FC6                                          l4000 1684  
                                        l3120 0CC2                                          l2250 100C  
                                        l2242 1004                                          l2234 0FEA  
                                        l2226 0FDC                                          l2218 0FD4  
                                        l2170 18A2                                          l3130 18EA  
                                        l4002 1696                                          l3122 0CC4  
                                        l3114 0C02                                          l4010 17BA  
                                        l1531 0B2C                                          l1515 0872  
                                        l2180 18DE                                          l3124 1914  
                                        l2260 1016                                          l2252 100E  
                                        l2244 1006                                          l2236 0FEC  
                                        l2228 0FE2                                          l2172 18A4  
                                        l2164 1892                                          l4004 169E  
                                        l4020 11D6                                          l3116 0C12  
                                        l4100 12C4                                          l3060 12F0  
                                        l2182 18E4                                          l3126 1906  
                                        l2254 1010                                          l2246 1008  
                                        l2238 0FFE                                          l2190 0FA0  
                                        l2174 18A6                                          l2166 189C  
                                        l4006 16AE                                          l4022 11E8  
                                        l4014 11B0                                          l4030 170A  
                                        l3118 0CC0                                          l3310 1704  
                                        l4110 13B2                                          l1550 038C  
                                        l4102 12D6                                          l3062 12F8  
                                        l1535 0B34                                          l1527 0976  
                                        l1551 021A                                          l1455 17D6  
                                        l2184 18E6                                          l2176 18D6  
                                        l3128 18F8                                          l2256 1012  
                                        l2248 100A                                          l2192 0FAA  
                                        l2168 18A0                                          l4024 11F4  
                                        l4032 171C                                          l4040 18BC  
                                        l4200 17F4                                          l3312 1706  
                                        l3304 16DE                                          l4120 121E  
                                        l4112 13BA                                          l4104 1388  
                                        l1480 0F7C                                          l4008 17B2  
                                        l3064 1312                                          l3056 12E4  
                                        l2178 18DC                                          l2258 1014  
                                        l2194 0FAC                                          l2186 0F7E  
                                        l4026 1202                                          l4018 11C4  
                                        l4034 1722                                          l4050 1814  
                                        l4210 15F6                                          l3306 16E4  
                                        l4130 1258                                          l4122 1220  
                                        l4114 13CC                                          l4106 139A  
                                        l1570 153A                                          l3066 131A  
                                        l3058 12E8                                          l1475 0F18  
                                        l1483 05F2                                          l2196 0FB2  
                                        l2188 0F9C                                          l4028 1212  
                                        l4036 172A                                          l4052 1816  
                                        l4044 17FE                                          l4204 17FA  
                                        l4212 1612                                          l3308 16F4  
                                        l4132 1276                                          l4124 1232  
                                        l4116 13D6                                          l4108 13A0  
                                        l4140 1856                                          l4060 15D0  
                                        l4220 0984                                          l1573 1552  
                                        l3270 14A8                                          l2198 0FBC  
                                        l2382 192E                                          l4054 1924  
                                        l4038 18AA                                          l4046 1808  
                                        l4214 1614                                          l4134 127E  
                                        l4126 1238                                          l4142 185E  
                                        l1478 0F5A                                          l1566 1386  
                                        l4070 0E52                                          l4062 15DA  
                                        l4230 09D8                                          l4222 0984  
                                        l3280 14D4                                          l3272 14AE  
                                        l4152 1822                                          l4056 192A  
                                        l4048 180A                                          l4160 116A  
                                        l4208 15F0                                          l4128 124A  
                                        l1496 0708                                          l4072 0E64  
                                        l4064 15EA                                          l4240 0A28  
                                        l4232 09E4                                          l4224 0998  
                                        l4216 0978                                          l1585 0BFE  
                                        l1593 14A6                                          l3274 14BE  
                                        l3290 1780                                          l3282 1762  
                                        l4162 1180                                          l4154 1134  
                                        l4138 1844                                          l4146 1862  
                                        l4090 0ED2                                          l4082 0E7C  
                                        l4074 0E66                                          l4066 10B6  
                                        l4058 15BE                                          l4170 1022  
                                        l4242 0A44                                          l4234 09F0  
                                        l4226 09B4                                          l4218 0984  
                                        l4250 16C8                                          l3276 14C0  
                                        l3292 1782                                          l3284 1768  
                                        l4164 1196                                          l4156 1154  
                                        l4148 1874                                          l3700 0DE0  
                                        l1596 1934                                          l3620 0B5A  
                                        l4084 0E9E                                          l4076 0E72  
                                        l4068 0E3A                                          l4092 1286  
                                        l4180 104E                                          l4172 1034  
                                        l4244 0A58                                          l4228 09C8  
                                        l4252 16CC                                          l3278 14D2  
                                        l3286 176E                                          l3382 18C0  
                                        l3294 1652                                          l4166 11A2  
                                        l4158 1160                                          l3702 0DEE  
                                        l3710 0E18                                          l3622 0B64  
                                        l3630 1464                                          l4086 0EA4  
                                        l4094 129E                                          l4190 0546  
                                        l4182 1086                                          l4174 1046  
                                        l4238 0A10                                          l4246 16B2  
                                        l3288 177E                                          l3384 18CC  
                                        l3296 1656                                          l3640 0CCC  
                                        l3712 0E28                                          l3704 0E04  
                                        l3624 0B82                                          l3616 0B36  
                                        l3632 1470                                          l3720 0EEE  
                                        l3800 079C                                          l4088 0EC0  
                                        l4096 12B0                                          l4192 0556  
                                        l4184 108A                                          l4168 101A  
                                        l4248 16B6                                          l3386 18D0  
                                        l3298 1666                                          l3650 0CFC  
                                        l3642 0CDA                                          l3714 0E30  
                                        l3706 0E0C                                          l3626 0BB8  
                                        l3618 0B48                                          l3634 1482  
                                        l3730 0F3C                                          l3722 0F02  
                                        l3802 07B0                                          l3810 0810  
                                        l4098 12B2                                          l4194 057E  
                                        l4186 108E                                          l4196 17D8  
                                        l3660 0D2A                                          l3652 0D00  
                                        l3644 0CE2                                          l3708 0E12  
                                        l3636 1486                                          l3732 0F68  
                                        l3724 0F10                                          l3740 0598  
                                        l3804 07B4                                          l3820 0874  
                                        l4188 038E                                          l4198 17E6  
                                        l3670 0D5E                                          l3662 0D38  
                                        l3654 0D08                                          l3646 0CE6  
                                        l3638 0CCA                                          l3734 1520  
                                        l3726 0F24                                          l3718 0EE0  
                                        l3750 05DA                                          l3742 05AC  
                                        l3814 083C                                          l3806 07D6  
                                        l3830 089C                                          l3822 0878  
                                        l3910 00C8                                          l3902 006A  
                                        ?_pad 0514                                          l3672 0D64  
                                        l3664 0D3E                                          l3656 0D1A  
                                        l3648 0CF4                                          l3736 152E  
                                        l3728 0F38                                          l3760 0608  
                                        l3752 05E6                                          l3744 05B4  
                                        l3816 0850                                          l3808 080C  
                                        l3840 08CA                                          l3832 08AC  
                                        l3824 0888                                          l3920 0166  
                                        l3912 00D2                                          l3904 008E  
                                        l3666 0D54                                          l3658 0D22  
                                        l3674 0D6A                                          l3690 0DA8  
                                        l3682 0D8C                                          l3770 0678  
                                        l3762 063A                                          l3754 05EE  
                                        l3746 05C4                                          l3738 0594  
                                        l3818 0854                                          l3850 092E  
                                        l3842 08D0                                          l3834 08B4  
                                        l3826 0890                                          l3914 00E2  
                                        l3906 009E                                          l3676 0D7A  
                                        l3668 0D5C                                          l3692 0DB6  
                                        l3684 0D8E                                          l3780 06D2  
                                        l3772 068A                                          l3764 063C  
                                        l3756 05FA                                          l3748 05CA  
                                        l3860 0A72                                          l3852 0948  
                                        l3836 08B8                                          l3828 0896  
                                        l3844 08F0                                          l3940 0252  
                                        l3924 017E                                          l3916 0102  
                                        l3908 00BA                                          l3870 1738  
                                        l3678 0D82                                          l3694 0DBE  
                                        l3686 0D9C                                          l3782 06D8  
                                        l3774 069A                                          l3766 0642  
                                        l3758 0602                                          l3862 0A9A  
                                        l3790 0724                                          l3846 090C  
                                        l3854 0956                                          l3838 08C8  
                                        l3942 025A                                          l3934 01FE  
                                        l3926 019E                                          l3918 0122  
                                        l3880 175E                                          l3872 173C  
                                        l3696 0DD0                                          l3688 0DA4  
                                        l3784 06E8                                          l3776 06B4  
                                        l3768 065E                                          l3864 0AD4  
                                        l3792 072C                                          l3848 091E  
                                        l3944 0282                                          l3952 0306  
                                        l3936 021C                                          l3928 01E6  
                                        l3874 1742                                          l3970 156C  
                                        l3698 0DD8                                          l3778 06C2  
                                        l3866 0AF2                                          l3858 0A6A  
                                        l3794 0738                                          l3954 0316  
                                        l3946 02BA                                          l3938 0244  
                                        l3890 0042                                          l3962 0360  
                                        l3876 1744                                          l3972 1570  
                                        l3868 0B00                                          l3796 073C  
                                        l3788 070A                                          l3948 02F2  
                                        l3892 0048                                          l3884 0000  
                                        l3980 135E                                          l3878 1748  
                                        l3974 1572                                          l3958 034E  
                                        l3894 004E                                          l3886 0028  
                                        l3982 137E                                          l3990 1440  
                                        l3968 155C                                          l3896 0050  
                                        l3888 0036                                          l3976 1336  
                                        l3992 144C                                          l3898 0062  
                                        l3978 1342                                          l3986 1428  
                                        l3994 144E                                          l3996 187E  
                                        l3988 143C                                          l3998 188E  
                                        STR_1 FFF5                                          STR_2 FEFE  
                                        STR_3 FF89                                          STR_4 FF96  
                                        STR_5 FFB8                                          STR_6 FFA3  
                                        STR_7 FFE1                                          STR_8 FFAE  
                                        STR_9 FFE8                          ??_Nrf24_print_status 0551  
                                        u3000 0B2C                                          u3001 0B28  
                                        u3010 175A                                          u3011 1756  
                                        u3100 02BA                                          u3020 0028  
                                        u3101 02B6                                          u3021 0024  
                                        _LATA 04BE                                          u3110 02F2  
                                        u3030 009E                                          _LATB 04BF  
                                        u3111 02EE                                          u3031 009A  
                                        _LATC 04C0                                          u3120 0316  
                                        u3040 00C8                                          u3200 10D4  
                                        _LATD 04C1                                          u3121 0312  
                                        u3041 00C4                                          u3201 10CE  
                                        _LATE 04C2                                          u3130 1584  
                                        u3050 0102                                          u3210 10D6  
                                        _LATF 04C3                                          u3131 1580  
                                        u3051 00FE                                          u2180 1680  
                                        u3060 0122                                          u3140 137E  
                                        u3300 12D6                                          u3220 10EA  
                                        u2181 167C                                          u3061 011E  
                                        u3141 137A                                          u3301 12D2  
                                        u3221 10E4                                          u3310 13B2  
                                        u2510 0B48                                          u3070 019E  
                                        u3230 10EC                                          u3150 1460  
                                        u3311 13AE                                          u2511 0B44  
                                        u3071 019A                                          u3151 145C  
                                        u3160 1694                                          u3320 13CC  
                                        u2600 0D54                                          u2520 0B5A  
                                        u3080 0244                                          u3240 1100  
                                        u3400 0A0C                                          u3161 1690  
                                        u3321 13C8                                          u2601 0D50  
                                        u2521 0B56                                          u3081 0240  
                                        u3241 10FA                                          u3401 0A08  
                                        u3170 11C0                                          u3330 1258  
                                        u2610 0D7A                                          u2530 0B82  
                                        u3090 0282                                          u3250 1102  
                                        u3410 0A44                                          u3171 11BC  
                                        u3331 1254                                          u2611 0D76  
                                        u2531 0B7E                                          u3091 027E  
                                        u3411 0A40                                          u3180 11E8  
                                        u3340 1268                                          u2620 0D9C  
                                        u2540 0BB8                                          u2700 0F5A  
                                        u3260 1128                                          u3181 11E4  
                                        u3341 1264                                          u2621 0D98  
                                        u2541 0BB4                                          u2701 0F56  
                                        u3261 1122                                          u3350 1276  
                                        u2630 0DB6                                          u2550 14A6  
                                        u2710 0F68                                          u3270 112A  
                                        u3190 15CE                                          u3351 1272  
                                        u2631 0DB2                                          u2551 14A2  
                                        u2711 0F64                                          u3191 15CA  
                                        u2560 0CDA                                          u2640 0DD0  
                                        u2720 152E                                          u2800 06B4  
                                        u3280 0EC0                                          u1920 130E  
                                        u3360 1086                                          u2561 0CD6  
                                        u2641 0DCC                                          u2721 152A  
                                        u2801 06B0                                          u3281 0EBC  
                                        u1921 130A                                          u3361 1082  
                                        u2570 0CF4                                          u2650 0DEE  
                                        u2810 06C2                                          u2730 05A8  
                                        u3290 0ED2                                          u1930 1334  
                                        u3370 10AA                                          u2571 0CF0  
                                        u2651 0DEA                                          u2811 06BE  
                                        u2731 05A2                                          u3291 0ECE  
                                        u1931 1330                                          u3371 10A6  
                                        u3380 17F4                                          u2580 0D1A  
                                        u2660 0E04                                          u2820 06D2  
                                        u2740 05AA                                          u2900 0838  
                                        u3381 17F0                                          u2581 0D16  
                                        u2661 0E00                                          u2821 06CE  
                                        u2901 0834                                          u2590 0D38  
                                        u2670 0E28                                          u2750 05C4  
                                        u2910 0872                                          u2830 0724  
                                        u3390 09C8                                          u2591 0D34  
                                        u2671 0E24                                          u2751 05C0  
                                        u2911 086E                                          u2831 0720  
                                        u3391 09C4                                          u2680 0EEE  
                                        u2760 05DA                                          u2840 076A  
                                        u2920 08AC                                          u2681 0EEA  
                                        u2761 05D6                                          u2921 08A8  
                                        u2690 0F10                                          u2770 0678  
                                        u2850 077A                                          u2691 0F0C  
                                        u2771 0674                                          u2851 0776  
                                        u1980 0C12                                          u2780 068A  
                                        u2860 0798                                          u2940 090C  
                                        u1981 0C0E                                          u2781 0686  
                                        u2861 0794                                          u2941 0908  
                                        u2790 069A                                          u2870 07D2  
                                        u2950 091E                                          u2791 0696  
                                        u2871 07CE                                          u2847 0760  
                                        u2951 091A                                          u2935 08DC  
                                        u2880 07F8                                          u2960 092E  
                                        u2961 092A                                          u3577 12EA  
                                        u2890 082A                                          u2970 0948  
                                        u2891 0826                                          u2971 0944  
                                        u3587 1314                                          u2980 0956  
                                        u3597 165C                                          u2981 0952  
                                        u2990 0A9A                                          u2991 0A96  
                                        u2887 07EE                                          _WPUA 0401  
                                        _WPUB 0409                                          _WPUC 0411  
                                        _WPUD 0419                                          _WPUE 0421  
                                        _WPUF 0429                                          abs@a 050A  
                                        _dbuf 05CF                                          _main 16B2  
                                        _dtoa 0594                                          _prec 05CD  
                                        pad@i 051B                                          pad@p 0518  
                                        fsr0h 04EA                                          fsr1h 04E2  
                                        indf0 04EF                                          fsr2h 04DA  
                                        fsr0l 04E9                                          indf2 04DF  
                                        fsr1l 04E1                                          fsr2l 04D9  
                                        _stoa 070A                                          _xtoa 0874  
                   ?_INT2_SetInterruptHandler 0504                                          prodh 04F4  
                                        prodl 04F3                                          start 001A  
                   __end_of_SPI1_ByteExchange 1762                                _SPI1STATUSbits 0087  
                                ___param_bank 0000                              _TMR0_OverflowISR 1588  
                    __end_of_AdvancedSettings 1844                                         ??_abs 050C  
                                       ??_pad 051A                       __end_of_TMR0_Initialize 178A  
                                       ?_main 0501                                         ?_dtoa 051D  
                             __end_of___awdiv 0D8C                                         STR_10 FFC1  
                                       STR_11 FFCA                                         STR_20 FFD5  
                                       STR_12 FF7B                                         STR_21 FEFB  
                                       STR_13 FF5A                                         STR_22 FFEF  
                                       STR_14 FF48                                         STR_23 FFD2  
                                       STR_15 FF6B                                         STR_24 FEFB  
                                       STR_16 FF33                                         STR_25 FFDA  
                                       STR_17 FEB8                                         STR_18 FFEF  
                                       STR_19 FFFB                               __end_of___awmod 0E3A  
                                       ?_stoa 050D                                SPI_read_buff@i 0509  
                             ___awdiv@divisor 0506                                         ?_xtoa 051D  
                                       _IOCAF 0407                                         _IOCBF 040F  
                                       _IOCCF 0417                                         _IOCAN 0406  
                                       _IOCEF 0427                                         _IOCAP 0405  
                                       _IOCBN 040E                                         _IOCBP 040D  
                                       _IOCCN 0416                                         _IOCCP 0415  
                                       _IOCEN 0426                                         _IOCEP 0425  
                                       i2l314 1648                                         i2l441 1936  
                                       i2l435 15BA                                         i2l472 178A  
                                       i2l474 17B0                               ___awdiv@counter 0508  
                                       _OSCEN 00B3                                  vfpfcnvrt@fmt 052C  
                                       _TMR0H 0319                                         _TMR0L 0318  
                                       _TRISA 04C6                                         _TRISB 04C7  
                                       _TRISC 04C8                                         _TRISD 04C9  
                                       _TRISE 04CA                                         _TRISF 04CB  
                                  _Nrf24_init 16DE                        ??_Nrf24_configRegister 0507  
                                 ?_TMR0_Start 0501                                         _flags 055C  
                         read_prec_or_width@c 050A                           read_prec_or_width@n 050B  
                                       _fputc 0B36                                         _fputs 1464  
                                       pad@fp 0514                                         _width 055A  
                                       _putch 1934                                         dtoa@d 051F  
                                       dtoa@i 0527                                         dtoa@p 0523  
                                       dtoa@s 0526                                         dtoa@w 0524  
                    _INT1_SetInterruptHandler 1906                                         pclath 04FA  
                                       pclatu 04FB                                         tablat 04F5  
                                       stoa@l 0519                                         stoa@p 0513  
                                       stoa@s 050F                                         stoa@w 0515  
                                       status 04D8                                         xtoa@c 0527  
                                       xtoa@d 051F                                         xtoa@i 0528  
                                       xtoa@p 0524                                         xtoa@w 0525  
                     _Nrf24_SetSpeedDataRates 11B0                               __initialization 13DA  
                    Nrf24_writeRegister@value 050A                                 _SPI_read_buff 1554  
                                __end_of_main 16DE                                  __end_of_dtoa 070A  
                     Nrf24_configRegister@reg 0507                                  __end_of_stoa 0874  
                                __end_of_xtoa 0978                  SPI1_ByteExchange@returnValue 0505  
                 ?_INTERRUPT_InterruptManager 0501                  Nrf24_print_byte_register@dev 0551  
                Nrf24_print_byte_register@reg 0555                  Nrf24_print_byte_register@qty 0556  
                   Nrf24_configRegister@value 0506                                        ??_main 055A  
                                      ??_dtoa 0521                           Nrf24_config@channel 0513  
                                      ??_stoa 0511                                        ??_xtoa 0521  
                               __activetblptr 0003                               _Nrf24_dataReady 17D8  
                 ??_Nrf24_print_byte_register 0557                          __end_of_Nrf24_config 11B0  
                  __end_of_read_prec_or_width 0B36                            Nrf24_dataReady@dev 0511  
                         Nrf24_config@payload 0514                                        ?_fputc 0504  
                                      _ACTCON 00AC                                        ?_fputs 050D  
                            ___awdiv@dividend 0504                                        _ANSELA 0400  
                                      ?_putch 0501                                        _ANSELB 0408  
                                      _ANSELC 0410                                        _ANSELD 0418  
                                      _ANSELE 0420                                        _ANSELF 0428  
                                      _T0CON0 031A                                        _T0CON1 031B  
                                      _RB1I2C 0289                                        _RB2I2C 0288  
                                      _RC3I2C 0287                                        _RC4I2C 0286  
                                      _RC4PPS 0215                                        _ODCONA 0402  
                                      _ODCONB 040A                                        _ODCONC 0412  
                                      _RC6PPS 0217                                        _ODCOND 041A  
                                      _ODCONE 0422                                        _ODCONF 042A  
                                      i2l3300 178A                                        i2l3420 1636  
                                      i2l3422 1644                                        i2l3418 1628  
                                      i2l3380 15A0                                        i2l3376 1588  
                                      i2l3378 158A                                        _INLVLA 0404  
                                      _INLVLB 040C                                        _INLVLC 0414  
                                      _INLVLD 041C                                        _INLVLE 0424  
                                      _INLVLF 042C                               _Nrf24_getStatus 18AA  
                                      _OSCFRQ 00B1                                 vfpfcnvrt@done 0536  
             Nrf24_print_byte_register@buffer 0557                             __end_of_SPI1_Open 0CCA  
                                      _Timer0 FE79                                ?_SPI_read_buff 0506  
                                vfprintf@cfmt 053F                                     ??___awdiv 0508  
                                   ??___awmod 0508                              ?_TMR0_Initialize 0501  
               Nrf24_getRetransmitDelay@value 0510                          read_prec_or_width@ap 0506  
                                      clear_0 1400                              ___awdiv@quotient 050A  
                             ___awmod@divisor 0506                                        isa$std 0001  
                            __end_of_receiver 0A6A                               ___awmod@counter 0508  
                                      _printf 17B2                                        pad@buf 0516  
                                      dtoa@fp 051D                             ?_CLOCK_Initialize 0501  
                                      fputc@c 0504                  _INT2_DefaultInterruptHandler 0000  
                                      fputs@c 0511                                        fputs@i 0512  
                                      fputs@s 050D                            ??_CLOCK_Initialize 0504  
                                __mediumconst FE4E                                        tblptrh 04F7  
                                      tblptrl 04F6                                        tblptru 04F8  
                                 ?_Nrf24_init 0505                                        stoa@cp 0517  
                                      stoa@fp 050D                                        putch@c 0501  
                            __end_of_vfprintf 1388      INT2_SetInterruptHandler@InterruptHandler 0504  
    INT1_SetInterruptHandler@InterruptHandler 0504      INT0_SetInterruptHandler@InterruptHandler 0504  
                                      xtoa@fp 051D                                _SPI1_IsRxReady 0000  
                              _SPI1_IsTxReady 0000                             _SYSTEM_Initialize 18C0  
                             _Nrf24_powerUpRx 17FE                                    __accesstop 0560  
                     __end_of__initialization 141A                         Nrf24_getCRCLength@dev 050E  
                   ??_Nrf24_SetSpeedDataRates 0511                                _SPI1_ByteWrite 0000  
                   _Nrf24_print_byte_register 1286                            ?_SYSTEM_Initialize 0501  
                          _Nrf24_getCRCLength 121E                                 ___rparam_used 0001  
               Nrf24_setRetransmitDelay@value 0511                                __pcstackCOMRAM 0501  
                                __pidataBANK5 14E8                           ??_SYSTEM_Initialize 0507  
                         ?_Nrf24_getCRCLength 050E                       __end_of_Nrf24_dataReady 17FE  
                               __end_of_fputc 0C00                                 __end_of_fputs 14A8  
                           ??_SPI1_Initialize 0504                            _DELAY_microseconds 12E4  
                               __end_of_putch 1936                                   receiver@dev 05CA  
                                 receiver@buf 05A8                     ?_Nrf24_getRetransmitDelay 050E  
                                 receiver@ret 05C8                     ?_Nrf24_setRetransmitDelay 050E  
                          _spi1_configuration FE8B                  Nrf24_SetSpeedDataRates@value 0511  
                         ?_DELAY_microseconds 0504                           SPI_write_buff@bytes 0508  
            __end_of_INT2_SetInterruptHandler 1906                 Nrf24_print_byte_register@name 0553  
                     __end_of_Nrf24_getStatus 18C0                          ??_Nrf24_getCRCLength 0510  
                    __end_of_TMR0_OverflowISR 15BC                                       ??_fputc 0508  
                   __end_of_SYSTEM_Initialize 18D6                                       ??_fputs 0511  
                                     ??_putch 0504                                _rf24_datarates 0580  
                                  __pbssBANK5 05CD                         Nrf24_dataReady@status 0513  
                          _DELAY_milliseconds 1652                         _INT0_InterruptHandler 05F8  
                       _TMR0_OverflowCallback 05EF                         __end_of_Nrf24_getData 1620  
                            _Nrf24_getPALevel 1844                               ??_SPI_read_buff 0509  
                                     IVTBASEH 045E                                       IVTBASEL 045D  
                                     IVTBASEU 045F                          ??_DELAY_microseconds 0506  
                              _rf24_crclength FE9A                         __end_of_Nrf24_flushRx 192E  
          Nrf24_print_address_register@buffer 0598                           ?_DELAY_milliseconds 0504  
                           ?_AdvancedSettings 0512                                       ?_printf 0541  
                          ??_AdvancedSettings 0514                    ??_INT1_SetInterruptHandler 0507  
                        Nrf24_getDataRate@dev 050E                          ??_DELAY_milliseconds 0506  
                                     _OSCCON1 00AD                                       _OSCCON3 00AF  
                                     _SPI1CLK 008C                       __end_of_Nrf24_powerUpRx 1822  
                                     _SPI1RXB 0080                                       _SPI1TXB 0081  
                  __end_of_Nrf24_readRegister 16B2                                       _OSCTUNE 00B0  
                                ??_TMR0_Start 0504                                       _SLRCONA 0403  
                                     _SLRCONB 040B                                       _SLRCONC 0413  
                                     _SLRCOND 041B                                       _SLRCONE 0423  
                                     _SLRCONF 042B                                    _led_toggle 178A  
                      __end_of_rf24_crclength FEB8                     ?_INT0_SetInterruptHandler 0504  
                                   ?_receiver 05A6                                       __Hparam 0000  
                                _Nrf24_config 1134                                       __Lparam 0000  
                        receiver@pvParameters 05A6                            __end_of_SPI1_nrf24 FE79  
                         _Nrf24_writeRegister 15BC                                _SPI_write_buff 1420  
                                     ___awdiv 0CCA                                       ___awmod 0D8C  
                            ?_Nrf24_dataReady 0511                                     ?_vfprintf 0539  
                          __end_of_TMR0_Start 1934                            SPI_read_buff@bytes 0508  
                                     __pcinit 13DA                                       __ramtop 2600  
                                     __ptext0 16B2                                       __ptext1 0978  
                                     __ptext2 101A                                       __ptext3 15BC  
                                     __ptext4 1420                                       __ptext5 12E4  
                                     __ptext6 038E                                       __ptext7 10B4  
                                     __ptext8 1286                                       __ptext9 0E3A  
                       read_prec_or_width@fmt 0504                              ___awmod@dividend 0504  
                    ??_PIN_MANAGER_Initialize 0504                              ?_Nrf24_getStatus 050E  
                        ?_Nrf24_writeRegister 050A                          end_of_initialization 141A  
                    _INT2_SetInterruptHandler 18F8                               Nrf24_config@dev 0511  
                                   _PIR10bits 04B8                                       fputc@fp 0506  
                                     fputs@fp 050F                            _read_prec_or_width 0A6A  
                                  ??_receiver 055A                 Nrf24_print_address_register@i 059D  
                      __end_of_SPI_write_buff 1464                             __end_of_vfpfcnvrt 038E  
                             _SPI1_BufferRead 0000                                     _SPI1TCNTH 0083  
                                   _SPI1TCNTL 0082                                       postdec1 04E5  
                                     postdec2 04DD                           ?_read_prec_or_width 0504  
                                     postinc0 04EE                                       postinc1 04E6  
                                     postinc2 04DE                              vfpfcnvrt@convarg 0532  
                                  ??_vfprintf 053F                                     _SPI1_Open 0C00  
                       _INT1_InterruptHandler 05F5                                     _TMR0_Stop 0000  
                       Nrf24_printDetails@dev 0558                           _SPI1_BufferExchange 0000  
                         Nrf24_getPALevel@dev 050E         __end_of_TMR0_OverflowCallbackRegister 18F8  
               _TMR0_OverflowCallbackRegister 18EA  TMR0_OverflowCallbackRegister@CallbackHandler 0504  
                                ??_Nrf24_init 0507                                     _TRISCbits 04C8  
                             Nrf24_setRADDR@i 051C                              ?_Nrf24_powerUpRx 0508  
                       ??_Nrf24_writeRegister 050D                          ??_read_prec_or_width 0508  
                                 ?_led_toggle 0501                               _SPI1_Initialize 1892  
        __end_of_TMR0_DefaultOverflowCallback 1938                  _TMR0_DefaultOverflowCallback 1936  
            __end_of_Nrf24_getRetransmitDelay 187A              __end_of_Nrf24_setRetransmitDelay 1736  
                             ?_SPI_write_buff 0506                                __end_of_Timer0 FE8B  
                __end_of_INTERRUPT_Initialize 14E8                            __end_of_Nrf24_init 170A  
                                 _rf24_pa_dbm 0560                  _INT0_DefaultInterruptHandler 0000  
                                  ?_SPI1_Open 0501                                   vfpfcnvrt@ap 052E  
                                 vfpfcnvrt@cp 0537                                   vfpfcnvrt@fp 052A  
                          Nrf24_getStatus@dev 050E                                __end_of_printf 17D8  
                    __end_of_Nrf24_getPALevel 1862                           start_initialization 13DA  
                                 __end_of_abs 1554                                   __end_of_pad 0F7E  
                           ?_TMR0_OverflowISR 0501                                    ivt0x8_base 0008  
                          ??_TMR0_OverflowISR 0502                          SPI_write_buff@buffer 0506  
               ?_TMR0_DefaultOverflowCallback 0501                                   vfprintf@fmt 053B  
                              _Nrf24_setRADDR 101A          __end_of_Nrf24_print_address_register 0EE0  
                _Nrf24_print_address_register 0E3A                                   __pdataBANK5 0560  
                                    ??_printf 054F                          Nrf24_getCRCLength@AA 0511  
                               _SPI1_ByteRead 0000                                   __pbssCOMRAM 055A  
            __end_of_INT0_SetInterruptHandler 1922                                 __pcstackBANK5 0598  
                     __end_of_SPI1_Initialize 18AA                ?_TMR0_OverflowCallbackRegister 0504  
                          Nrf24_powerUpRx@dev 0508                      Nrf24_print_status@status 0552  
                    ?_Nrf24_SetSpeedDataRates 050E                         _INT2_InterruptHandler 05F2  
                                   __pnvBANK5 05EF                            _Nrf24_readRegister 1682  
                      __end_of_Nrf24_setRADDR 10B4                        _PIN_MANAGER_Initialize 0F7E  
                                   _dtoa$1906 0521                             Nrf24_getData@data 050C  
                       __end_of_SPI_read_buff 1588                    __end_of_Nrf24_printDetails 0594  
                               __pmediumconst FE4E                                      ?___awdiv 0504  
                                    ?___awmod 0504                             _Nrf24_getDataRate 1388  
                    _Nrf24_getRetransmitDelay 1862                      _Nrf24_setRetransmitDelay 170A  
                                 ??_SPI1_Open 0504                           ?_Nrf24_readRegister 050A  
               ?_Nrf24_print_address_register 0551                           Nrf24_getDataRate@dr 0511  
                          ?_Nrf24_getDataRate 050E                  ??_INTERRUPT_InterruptManager 0502  
            Nrf24_print_address_register@name 0553                DELAY_microseconds@microseconds 0504  
                  ??_INT2_SetInterruptHandler 0507                           ??_Nrf24_getDataRate 0510  
                  __end_of_Nrf24_print_status 1134                               SPI_write_buff@i 0509  
                        ??_Nrf24_readRegister 050D                          _INTERRUPT_Initialize 14A8  
                       Nrf24_readRegister@len 050C                         Nrf24_readRegister@reg 050D  
                            _CLOCK_Initialize 18D6                             ??_TMR0_Initialize 0507  
                                    _LATCbits 04C0                                      _LATFbits 04C3  
                   ?_INT1_SetInterruptHandler 0504                                      _PIE3bits 04A1  
                                _SPI1CON0bits 0084                                      i2u223_40 15A0  
                                    i2u223_41 159C                               ?_Nrf24_setRADDR 050E  
                                    i2u224_48 15A6                                      i2u224_49 15BA  
                                    i2u219_40 179A                                      i2u219_41 1794  
                                    i2u219_46 179C                                      i2u228_40 1636  
                                    i2u228_41 1632                                      i2u229_40 1644  
                                    i2u229_41 1640                                      _PIR1bits 04AF  
                                    _SPI1BAUD 0089                                      _PIR3bits 04B1  
                                    _SPI1CON0 0084                                      _SPI1CON1 0085  
                                    _SPI1CON2 0086                     __end_of_Nrf24_getDataRate 13DA  
                                    _PIR6bits 04B4                DELAY_milliseconds@milliseconds 0504  
                __end_of_Nrf24_configRegister 1892                           AdvancedSettings@dev 0512  
              ??_TMR0_DefaultOverflowCallback 0501                                     _vfpfcnvrt 0000  
                                _SPI1INTFbits 008A                             _SPI1_Deinitialize 0000  
                 Nrf24_getRetransmitDelay@dev 050E               __end_of_Nrf24_SetSpeedDataRates 121E  
                 Nrf24_setRetransmitDelay@dev 050E                   Nrf24_setRetransmitDelay@val 0510  
                            ?_SPI1_Initialize 0501                             Nrf24_getStatus@rv 0510  
                                 _INTCON0bits 04D6                                     copy_data0 13EE  
                       ?_INTERRUPT_Initialize 0501                    Nrf24_SetSpeedDataRates@dev 050E  
                    _INT0_SetInterruptHandler 1914                    Nrf24_SetSpeedDataRates@val 0510  
                                ??_led_toggle 0501                        Nrf24_writeRegister@len 050C  
                      Nrf24_writeRegister@reg 050D                              ??_SPI_write_buff 0509  
                               _Nrf24_getData 15EE                                      __Hrparam 0000  
                                  vfprintf@ap 053D                                      __Lrparam 0000  
                                  vfprintf@fp 0539                                 _Nrf24_flushRx 1922  
                                  ?_vfpfcnvrt 052A                            __end_of_led_toggle 17B2  
                 __end_of_Nrf24_writeRegister 15EE                           SPI_read_buff@buffer 0506  
              ??_Nrf24_print_address_register 0557                                    _T0CON0bits 031A  
                           ?_Nrf24_getPALevel 050E                              Nrf24_getData@dev 050A  
                                    __pivt0x8 0008                                      __ptext10 17B2  
                                    __ptext11 1336                                      __ptext20 1934  
                                    __ptext12 0000                                      __ptext21 1520  
                                    __ptext13 0874                                      __ptext30 15EE  
                                    __ptext22 0D8C                                      __ptext14 070A  
                                    __ptext31 17D8                                      __ptext23 0CCA  
                                    __ptext15 0A6A                                      __ptext40 1682  
                                    __ptext32 1134                                      __ptext24 1862  
                                    __ptext16 0594                                      __ptext41 1554  
                                    __ptext33 17FE                                      __ptext25 1844  
                                    __ptext17 0EE0                                      __ptext50 14A8  
                                    __ptext42 187A                                      __ptext34 18AA  
                                    __ptext26 1388                                      __ptext18 1464  
                                    __ptext51 18F8                                      __ptext43 1736  
                                    __ptext35 1922                                      __ptext27 121E  
                                    __ptext19 0B36                                      __ptext52 1906  
                                    __ptext44 192E                                      __ptext36 1652  
                                    __ptext28 16DE                                      __ptext53 1914  
                                    __ptext45 18C0                                      __ptext37 1822  
                                    __ptext29 0C00                                      __ptext54 18D6  
                                    __ptext46 1762                                      __ptext38 170A  
                                    __ptext55 1620                                      __ptext47 18EA  
                                    __ptext39 11B0                                      __ptext56 1588  
                                    __ptext48 1892                                      __ptext57 1936  
                                    __ptext49 0F7E                                      __ptext58 178A  
                          ??_Nrf24_getPALevel 0510                              _AdvancedSettings 1822  
             Nrf24_print_address_register@dev 0551               Nrf24_print_address_register@reg 0555  
             Nrf24_print_address_register@qty 0556                       Nrf24_readRegister@value 050A  
                              ?_Nrf24_getData 050A                                      _receiver 0978  
                              ?_Nrf24_flushRx 0506                                      isa$xinst 0000  
                               Nrf24_init@dev 0505                                      _vfprintf 1336  
          __end_of_INTERRUPT_InterruptManager 1652                    _INTERRUPT_InterruptManager 1620  
                                   printf@fmt 0541                  _INT1_DefaultInterruptHandler 0000  
                  ?_Nrf24_print_byte_register 0551                        ??_INTERRUPT_Initialize 0507  
                        _Nrf24_configRegister 187A                                      intlevel2 0000  
                           ??_Nrf24_dataReady 0513                       Nrf24_getDataRate@result 0510  
                     ?_PIN_MANAGER_Initialize 0501                     SPI1_ByteExchange@byteData 0504  
                  ??_Nrf24_getRetransmitDelay 0510                    ??_Nrf24_setRetransmitDelay 0511  
                               ?_Nrf24_config 0511               ??_TMR0_OverflowCallbackRegister 0507  
                                 _TMR0_Reload 0000                             ??_Nrf24_getStatus 0510  
                                  _SPI1SDIPPS 026B                                    _SPI1SCKPPS 026A  
                                    printf@ap 054F                              _SPI1_BufferWrite 0000  
                                 ??_vfpfcnvrt 0530                       Nrf24_printDetails@delay 05A3  
                    __end_of_CLOCK_Initialize 18EA                                    _SPI1_Close 0000  
                Nrf24_printDetails@retransmit 05A5                         Nrf24_getPALevel@level 0510  
                          _Nrf24_printDetails 038E                                    _SPI1_nrf24 FE4F  
           __end_of_Nrf24_print_byte_register 12E4                               _TMR0_Initialize 1762  
            __end_of_INT1_SetInterruptHandler 1914                    __end_of_Nrf24_getCRCLength 1286  
                                  _TMR0_Start 192E                              Nrf24_flushRx@dev 0506  
                       ?_Nrf24_configRegister 0506                           ?_Nrf24_printDetails 0558  
              __end_of_PIN_MANAGER_Initialize 101A                               ??_Nrf24_getData 050E  
                        Nrf24_setRADDR@buffer 0515                              ??_Nrf24_setRADDR 0512  
                  __end_of_DELAY_microseconds 1336                               ??_Nrf24_flushRx 0508  
                     SPI1_Open@spiConfigIndex 0504                                ??_Nrf24_config 0515  
                          _Nrf24_print_status 10B4                             Nrf24_setRADDR@adr 0510  
                           Nrf24_setRADDR@dev 050E                    __end_of_spi1_configuration FE9A  
                           Nrf24_setRADDR@ret 051A  
