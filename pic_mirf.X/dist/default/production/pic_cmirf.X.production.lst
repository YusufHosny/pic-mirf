

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Tue Oct 22 08:42:27 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK5,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	idataBANK6,global,class=CODE,space=0,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,space=0,delta=1,noexec
     8                           	psect	nvBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1,group=3
    29                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1,group=1
    30                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1,group=1
    31                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1,group=1
    32                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1,group=1
    33                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1,group=1
    34                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1,group=1
    35                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1,group=1
    36                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1,group=3
    37                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1,group=3
    38                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1,group=3
    39                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1,group=3
    40                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1,group=2
    41                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1,group=2
    42                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,space=0,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,space=0,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,space=0,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,space=0,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,space=0,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,space=0,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,space=0,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,space=0,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,space=0,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,space=0,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,space=0,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,space=0,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,space=0,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,space=0,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,space=0,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,space=0,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,space=0,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,space=0,delta=1
    76                           	psect	ivt0x8,global,reloc=2,class=CODE,space=0,delta=1,noexec,keep,optim=
    77                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    78                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    79                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    80                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    81   000000                     
    82                           ; Generated 18/12/2023 GMT
    83                           ; 
    84                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    85                           ; All rights reserved.
    86                           ; 
    87                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    88                           ; 
    89                           ; Redistribution and use in source and binary forms, with or without modification, are
    90                           ; permitted provided that the following conditions are met:
    91                           ; 
    92                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    93                           ;        conditions and the following disclaimer.
    94                           ; 
    95                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    96                           ;        of conditions and the following disclaimer in the documentation and/or other
    97                           ;        materials provided with the distribution. Publication is not required when
    98                           ;        this file is used in an embedded application.
    99                           ; 
   100                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   101                           ;        software without specific prior written permission.
   102                           ; 
   103                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   104                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   105                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   106                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   107                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   108                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   109                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   110                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   111                           ; 
   112                           ; 
   113                           ; Code-generator required, PIC18F57Q43 Definitions
   114                           ; 
   115                           ; SFR Addresses
   116   0004E0                     bsr             equ	1248
   117   0004E9                     fsr0            equ	1257
   118   0004EA                     fsr0h           equ	1258
   119   0004E9                     fsr0l           equ	1257
   120   0004E1                     fsr1            equ	1249
   121   0004E2                     fsr1h           equ	1250
   122   0004E1                     fsr1l           equ	1249
   123   0004D9                     fsr2            equ	1241
   124   0004DA                     fsr2h           equ	1242
   125   0004D9                     fsr2l           equ	1241
   126   0004EF                     indf0           equ	1263
   127   0004E7                     indf1           equ	1255
   128   0004DF                     indf2           equ	1247
   129   0004D6                     intcon          equ	1238
   130   000041                     nvmcon          equ	65
   131   0004F9                     pcl             equ	1273
   132   0004FA                     pclath          equ	1274
   133   0004FB                     pclatu          equ	1275
   134   0004EB                     plusw0          equ	1259
   135   0004E3                     plusw1          equ	1251
   136   0004DB                     plusw2          equ	1243
   137   0004ED                     postdec0        equ	1261
   138   0004E5                     postdec1        equ	1253
   139   0004DD                     postdec2        equ	1245
   140   0004EE                     postinc0        equ	1262
   141   0004E6                     postinc1        equ	1254
   142   0004DE                     postinc2        equ	1246
   143   0004EC                     preinc0         equ	1260
   144   0004E4                     preinc1         equ	1252
   145   0004DC                     preinc2         equ	1244
   146   0004F3                     prod            equ	1267
   147   0004F4                     prodh           equ	1268
   148   0004F3                     prodl           equ	1267
   149   0004D8                     status          equ	1240
   150   0004F5                     tablat          equ	1269
   151   0004F6                     tblptr          equ	1270
   152   0004F7                     tblptrh         equ	1271
   153   0004F6                     tblptrl         equ	1270
   154   0004F8                     tblptru         equ	1272
   155   0004FD                     tosl            equ	1277
   156   0004E8                     wreg            equ	1256
   157   000039                     CLKRCON         equ	57	;# 
   158   00003A                     CLKRCLK         equ	58	;# 
   159   000040                     NVMCON0         equ	64	;# 
   160   000041                     NVMCON1         equ	65	;# 
   161   000042                     NVMLOCK         equ	66	;# 
   162   000043                     NVMADR          equ	67	;# 
   163   000043                     NVMADRL         equ	67	;# 
   164   000044                     NVMADRH         equ	68	;# 
   165   000045                     NVMADRU         equ	69	;# 
   166   000046                     NVMDAT          equ	70	;# 
   167   000046                     NVMDATL         equ	70	;# 
   168   000047                     NVMDATH         equ	71	;# 
   169   000048                     VREGCON         equ	72	;# 
   170   000049                     BORCON          equ	73	;# 
   171   00004A                     HLVDCON0        equ	74	;# 
   172   00004B                     HLVDCON1        equ	75	;# 
   173   00004C                     ZCDCON          equ	76	;# 
   174   000060                     PMD0            equ	96	;# 
   175   000061                     PMD1            equ	97	;# 
   176   000063                     PMD3            equ	99	;# 
   177   000064                     PMD4            equ	100	;# 
   178   000065                     PMD5            equ	101	;# 
   179   000066                     PMD6            equ	102	;# 
   180   000067                     PMD7            equ	103	;# 
   181   000068                     PMD8            equ	104	;# 
   182   00006A                     MD1CON0         equ	106	;# 
   183   00006B                     MD1CON1         equ	107	;# 
   184   00006C                     MD1SRC          equ	108	;# 
   185   00006D                     MD1CARL         equ	109	;# 
   186   00006E                     MD1CARH         equ	110	;# 
   187   00006F                     CMOUT           equ	111	;# 
   188   000070                     CM1CON0         equ	112	;# 
   189   000071                     CM1CON1         equ	113	;# 
   190   000072                     CM1NCH          equ	114	;# 
   191   000073                     CM1PCH          equ	115	;# 
   192   000074                     CM2CON0         equ	116	;# 
   193   000075                     CM2CON1         equ	117	;# 
   194   000076                     CM2NCH          equ	118	;# 
   195   000077                     CM2PCH          equ	119	;# 
   196   000078                     WDTCON0         equ	120	;# 
   197   000079                     WDTCON1         equ	121	;# 
   198   00007A                     WDTPS           equ	122	;# 
   199   00007A                     WDTPSL          equ	122	;# 
   200   00007B                     WDTPSH          equ	123	;# 
   201   00007C                     WDTTMR          equ	124	;# 
   202   00007D                     DAC1DAT         equ	125	;# 
   203   00007D                     DAC1DATL        equ	125	;# 
   204   00007F                     DAC1CON         equ	127	;# 
   205   000080                     SPI1RXB         equ	128	;# 
   206   000081                     SPI1TXB         equ	129	;# 
   207   000082                     SPI1TCNT        equ	130	;# 
   208   000082                     SPI1TCNTL       equ	130	;# 
   209   000083                     SPI1TCNTH       equ	131	;# 
   210   000084                     SPI1CON0        equ	132	;# 
   211   000085                     SPI1CON1        equ	133	;# 
   212   000086                     SPI1CON2        equ	134	;# 
   213   000087                     SPI1STATUS      equ	135	;# 
   214   000088                     SPI1TWIDTH      equ	136	;# 
   215   000089                     SPI1BAUD        equ	137	;# 
   216   00008A                     SPI1INTF        equ	138	;# 
   217   00008B                     SPI1INTE        equ	139	;# 
   218   00008C                     SPI1CLK         equ	140	;# 
   219   00008D                     SPI2RXB         equ	141	;# 
   220   00008E                     SPI2TXB         equ	142	;# 
   221   00008F                     SPI2TCNT        equ	143	;# 
   222   00008F                     SPI2TCNTL       equ	143	;# 
   223   000090                     SPI2TCNTH       equ	144	;# 
   224   000091                     SPI2CON0        equ	145	;# 
   225   000092                     SPI2CON1        equ	146	;# 
   226   000093                     SPI2CON2        equ	147	;# 
   227   000094                     SPI2STATUS      equ	148	;# 
   228   000095                     SPI2TWIDTH      equ	149	;# 
   229   000096                     SPI2BAUD        equ	150	;# 
   230   000097                     SPI2INTF        equ	151	;# 
   231   000098                     SPI2INTE        equ	152	;# 
   232   000099                     SPI2CLK         equ	153	;# 
   233   0000AC                     ACTCON          equ	172	;# 
   234   0000AD                     OSCCON1         equ	173	;# 
   235   0000AE                     OSCCON2         equ	174	;# 
   236   0000AF                     OSCCON3         equ	175	;# 
   237   0000B0                     OSCTUNE         equ	176	;# 
   238   0000B1                     OSCFRQ          equ	177	;# 
   239   0000B1                     OSCFREQ         equ	177	;# 
   240   0000B2                     OSCSTAT         equ	178	;# 
   241   0000B2                     OSCSTAT1        equ	178	;# 
   242   0000B3                     OSCEN           equ	179	;# 
   243   0000B4                     PRLOCK          equ	180	;# 
   244   0000B5                     SCANPR          equ	181	;# 
   245   0000B6                     DMA1PR          equ	182	;# 
   246   0000B7                     DMA2PR          equ	183	;# 
   247   0000B8                     DMA3PR          equ	184	;# 
   248   0000B9                     DMA4PR          equ	185	;# 
   249   0000BA                     DMA5PR          equ	186	;# 
   250   0000BB                     DMA6PR          equ	187	;# 
   251   0000BE                     MAINPR          equ	190	;# 
   252   0000BF                     ISRPR           equ	191	;# 
   253   0000D4                     CLCDATA         equ	212	;# 
   254   0000D5                     CLCSELECT       equ	213	;# 
   255   0000D6                     CLCnCON         equ	214	;# 
   256   0000D7                     CLCnPOL         equ	215	;# 
   257   0000D8                     CLCnSEL0        equ	216	;# 
   258   0000D9                     CLCnSEL1        equ	217	;# 
   259   0000DA                     CLCnSEL2        equ	218	;# 
   260   0000DB                     CLCnSEL3        equ	219	;# 
   261   0000DC                     CLCnGLS0        equ	220	;# 
   262   0000DD                     CLCnGLS1        equ	221	;# 
   263   0000DE                     CLCnGLS2        equ	222	;# 
   264   0000DF                     CLCnGLS3        equ	223	;# 
   265   0000E8                     DMASELECT       equ	232	;# 
   266   0000E9                     DMAnBUF         equ	233	;# 
   267   0000EA                     DMAnDCNT        equ	234	;# 
   268   0000EA                     DMAnDCNTL       equ	234	;# 
   269   0000EB                     DMAnDCNTH       equ	235	;# 
   270   0000EC                     DMAnDPTR        equ	236	;# 
   271   0000EC                     DMAnDPTRL       equ	236	;# 
   272   0000ED                     DMAnDPTRH       equ	237	;# 
   273   0000EE                     DMAnDSZ         equ	238	;# 
   274   0000EE                     DMAnDSZL        equ	238	;# 
   275   0000EF                     DMAnDSZH        equ	239	;# 
   276   0000F0                     DMAnDSA         equ	240	;# 
   277   0000F0                     DMAnDSAL        equ	240	;# 
   278   0000F1                     DMAnDSAH        equ	241	;# 
   279   0000F2                     DMAnSCNT        equ	242	;# 
   280   0000F2                     DMAnSCNTL       equ	242	;# 
   281   0000F3                     DMAnSCNTH       equ	243	;# 
   282   0000F4                     DMAnSPTR        equ	244	;# 
   283   0000F4                     DMAnSPTRL       equ	244	;# 
   284   0000F5                     DMAnSPTRH       equ	245	;# 
   285   0000F6                     DMAnSPTRU       equ	246	;# 
   286   0000F7                     DMAnSSZ         equ	247	;# 
   287   0000F7                     DMAnSSZL        equ	247	;# 
   288   0000F8                     DMAnSSZH        equ	248	;# 
   289   0000F9                     DMAnSSA         equ	249	;# 
   290   0000F9                     DMAnSSAL        equ	249	;# 
   291   0000FA                     DMAnSSAH        equ	250	;# 
   292   0000FB                     DMAnSSAU        equ	251	;# 
   293   0000FC                     DMAnCON0        equ	252	;# 
   294   0000FD                     DMAnCON1        equ	253	;# 
   295   0000FE                     DMAnAIRQ        equ	254	;# 
   296   0000FF                     DMAnSIRQ        equ	255	;# 
   297   000200                     PPSLOCK         equ	512	;# 
   298   000201                     RA0PPS          equ	513	;# 
   299   000202                     RA1PPS          equ	514	;# 
   300   000203                     RA2PPS          equ	515	;# 
   301   000204                     RA3PPS          equ	516	;# 
   302   000205                     RA4PPS          equ	517	;# 
   303   000206                     RA5PPS          equ	518	;# 
   304   000207                     RA6PPS          equ	519	;# 
   305   000208                     RA7PPS          equ	520	;# 
   306   000209                     RB0PPS          equ	521	;# 
   307   00020A                     RB1PPS          equ	522	;# 
   308   00020B                     RB2PPS          equ	523	;# 
   309   00020C                     RB3PPS          equ	524	;# 
   310   00020D                     RB4PPS          equ	525	;# 
   311   00020E                     RB5PPS          equ	526	;# 
   312   00020F                     RB6PPS          equ	527	;# 
   313   000210                     RB7PPS          equ	528	;# 
   314   000211                     RC0PPS          equ	529	;# 
   315   000212                     RC1PPS          equ	530	;# 
   316   000213                     RC2PPS          equ	531	;# 
   317   000214                     RC3PPS          equ	532	;# 
   318   000215                     RC4PPS          equ	533	;# 
   319   000216                     RC5PPS          equ	534	;# 
   320   000217                     RC6PPS          equ	535	;# 
   321   000218                     RC7PPS          equ	536	;# 
   322   000219                     RD0PPS          equ	537	;# 
   323   00021A                     RD1PPS          equ	538	;# 
   324   00021B                     RD2PPS          equ	539	;# 
   325   00021C                     RD3PPS          equ	540	;# 
   326   00021D                     RD4PPS          equ	541	;# 
   327   00021E                     RD5PPS          equ	542	;# 
   328   00021F                     RD6PPS          equ	543	;# 
   329   000220                     RD7PPS          equ	544	;# 
   330   000221                     RE0PPS          equ	545	;# 
   331   000222                     RE1PPS          equ	546	;# 
   332   000223                     RE2PPS          equ	547	;# 
   333   000229                     RF0PPS          equ	553	;# 
   334   00022A                     RF1PPS          equ	554	;# 
   335   00022B                     RF2PPS          equ	555	;# 
   336   00022C                     RF3PPS          equ	556	;# 
   337   00022D                     RF4PPS          equ	557	;# 
   338   00022E                     RF5PPS          equ	558	;# 
   339   00022F                     RF6PPS          equ	559	;# 
   340   000230                     RF7PPS          equ	560	;# 
   341   00023E                     INT0PPS         equ	574	;# 
   342   00023F                     INT1PPS         equ	575	;# 
   343   000240                     INT2PPS         equ	576	;# 
   344   000241                     T0CKIPPS        equ	577	;# 
   345   000242                     T1CKIPPS        equ	578	;# 
   346   000243                     T1GPPS          equ	579	;# 
   347   000244                     T3CKIPPS        equ	580	;# 
   348   000245                     T3GPPS          equ	581	;# 
   349   000246                     T5CKIPPS        equ	582	;# 
   350   000247                     T5GPPS          equ	583	;# 
   351   000248                     T2INPPS         equ	584	;# 
   352   000249                     T4INPPS         equ	585	;# 
   353   00024A                     T6INPPS         equ	586	;# 
   354   00024F                     CCP1PPS         equ	591	;# 
   355   000250                     CCP2PPS         equ	592	;# 
   356   000251                     CCP3PPS         equ	593	;# 
   357   000253                     PWM1ERSPPS      equ	595	;# 
   358   000254                     PWM2ERSPPS      equ	596	;# 
   359   000255                     PWM3ERSPPS      equ	597	;# 
   360   000257                     PWMIN0PPS       equ	599	;# 
   361   000258                     PWMIN1PPS       equ	600	;# 
   362   000259                     SMT1WINPPS      equ	601	;# 
   363   00025A                     SMT1SIGPPS      equ	602	;# 
   364   00025B                     CWG1PPS         equ	603	;# 
   365   00025B                     CWG1INPPS       equ	603	;# 
   366   00025C                     CWG2PPS         equ	604	;# 
   367   00025C                     CWG2INPPS       equ	604	;# 
   368   00025D                     CWG3PPS         equ	605	;# 
   369   00025D                     CWG3INPPS       equ	605	;# 
   370   00025E                     MD1CARLPPS      equ	606	;# 
   371   00025E                     MDCARLPPS       equ	606	;# 
   372   00025F                     MD1CARHPPS      equ	607	;# 
   373   00025F                     MDCARHPPS       equ	607	;# 
   374   000260                     MD1SRCPPS       equ	608	;# 
   375   000260                     MDSRCPPS        equ	608	;# 
   376   000261                     CLCIN0PPS       equ	609	;# 
   377   000262                     CLCIN1PPS       equ	610	;# 
   378   000263                     CLCIN2PPS       equ	611	;# 
   379   000264                     CLCIN3PPS       equ	612	;# 
   380   000265                     CLCIN4PPS       equ	613	;# 
   381   000266                     CLCIN5PPS       equ	614	;# 
   382   000267                     CLCIN6PPS       equ	615	;# 
   383   000268                     CLCIN7PPS       equ	616	;# 
   384   000269                     ADACTPPS        equ	617	;# 
   385   00026A                     SPI1SCKPPS      equ	618	;# 
   386   00026B                     SPI1SDIPPS      equ	619	;# 
   387   00026C                     SPI1SSPPS       equ	620	;# 
   388   00026D                     SPI2SCKPPS      equ	621	;# 
   389   00026E                     SPI2SDIPPS      equ	622	;# 
   390   00026F                     SPI2SSPPS       equ	623	;# 
   391   000270                     I2C1SDAPPS      equ	624	;# 
   392   000271                     I2C1SCLPPS      equ	625	;# 
   393   000272                     U1RXPPS         equ	626	;# 
   394   000273                     U1CTSPPS        equ	627	;# 
   395   000274                     U2RXPPS         equ	628	;# 
   396   000275                     U2CTSPPS        equ	629	;# 
   397   000276                     U3RXPPS         equ	630	;# 
   398   000277                     U3CTSPPS        equ	631	;# 
   399   000278                     U4RXPPS         equ	632	;# 
   400   000279                     U4CTSPPS        equ	633	;# 
   401   00027A                     U5RXPPS         equ	634	;# 
   402   00027B                     U5CTSPPS        equ	635	;# 
   403   000286                     RC4I2C          equ	646	;# 
   404   000287                     RC3I2C          equ	647	;# 
   405   000288                     RB2I2C          equ	648	;# 
   406   000289                     RB1I2C          equ	649	;# 
   407   00028B                     I2C1RXB         equ	651	;# 
   408   00028C                     I2C1TXB         equ	652	;# 
   409   00028D                     I2C1CNT         equ	653	;# 
   410   00028E                     I2C1ADB0        equ	654	;# 
   411   00028F                     I2C1ADB1        equ	655	;# 
   412   000290                     I2C1ADR0        equ	656	;# 
   413   000291                     I2C1ADR1        equ	657	;# 
   414   000292                     I2C1ADR2        equ	658	;# 
   415   000293                     I2C1ADR3        equ	659	;# 
   416   000294                     I2C1CON0        equ	660	;# 
   417   000295                     I2C1CON1        equ	661	;# 
   418   000296                     I2C1CON2        equ	662	;# 
   419   000297                     I2C1ERR         equ	663	;# 
   420   000298                     I2C1STAT0       equ	664	;# 
   421   000299                     I2C1STAT1       equ	665	;# 
   422   00029A                     I2C1PIR         equ	666	;# 
   423   00029B                     I2C1PIE         equ	667	;# 
   424   00029C                     I2C1CLK         equ	668	;# 
   425   00029D                     I2C1BTO         equ	669	;# 
   426   0002A1                     U1RXB           equ	673	;# 
   427   0002A1                     U1RXBL          equ	673	;# 
   428   0002A2                     U1RXCHK         equ	674	;# 
   429   0002A3                     U1TXB           equ	675	;# 
   430   0002A3                     U1TXBL          equ	675	;# 
   431   0002A4                     U1TXCHK         equ	676	;# 
   432   0002A5                     U1P1            equ	677	;# 
   433   0002A5                     U1P1L           equ	677	;# 
   434   0002A6                     U1P1H           equ	678	;# 
   435   0002A7                     U1P2            equ	679	;# 
   436   0002A7                     U1P2L           equ	679	;# 
   437   0002A8                     U1P2H           equ	680	;# 
   438   0002A9                     U1P3            equ	681	;# 
   439   0002A9                     U1P3L           equ	681	;# 
   440   0002AA                     U1P3H           equ	682	;# 
   441   0002AB                     U1CON0          equ	683	;# 
   442   0002AC                     U1CON1          equ	684	;# 
   443   0002AD                     U1CON2          equ	685	;# 
   444   0002AE                     U1BRG           equ	686	;# 
   445   0002AE                     U1BRGL          equ	686	;# 
   446   0002AF                     U1BRGH          equ	687	;# 
   447   0002B0                     U1FIFO          equ	688	;# 
   448   0002B1                     U1UIR           equ	689	;# 
   449   0002B2                     U1ERRIR         equ	690	;# 
   450   0002B3                     U1ERRIE         equ	691	;# 
   451   0002B4                     U2RXB           equ	692	;# 
   452   0002B4                     U2RXBL          equ	692	;# 
   453   0002B6                     U2TXB           equ	694	;# 
   454   0002B6                     U2TXBL          equ	694	;# 
   455   0002B8                     U2P1            equ	696	;# 
   456   0002B8                     U2P1L           equ	696	;# 
   457   0002BA                     U2P2            equ	698	;# 
   458   0002BA                     U2P2L           equ	698	;# 
   459   0002BC                     U2P3            equ	700	;# 
   460   0002BC                     U2P3L           equ	700	;# 
   461   0002BE                     U2CON0          equ	702	;# 
   462   0002BF                     U2CON1          equ	703	;# 
   463   0002C0                     U2CON2          equ	704	;# 
   464   0002C1                     U2BRG           equ	705	;# 
   465   0002C1                     U2BRGL          equ	705	;# 
   466   0002C2                     U2BRGH          equ	706	;# 
   467   0002C3                     U2FIFO          equ	707	;# 
   468   0002C4                     U2UIR           equ	708	;# 
   469   0002C5                     U2ERRIR         equ	709	;# 
   470   0002C6                     U2ERRIE         equ	710	;# 
   471   0002C7                     U3RXB           equ	711	;# 
   472   0002C7                     U3RXBL          equ	711	;# 
   473   0002C9                     U3TXB           equ	713	;# 
   474   0002C9                     U3TXBL          equ	713	;# 
   475   0002CB                     U3P1            equ	715	;# 
   476   0002CB                     U3P1L           equ	715	;# 
   477   0002CD                     U3P2            equ	717	;# 
   478   0002CD                     U3P2L           equ	717	;# 
   479   0002CF                     U3P3            equ	719	;# 
   480   0002CF                     U3P3L           equ	719	;# 
   481   0002D1                     U3CON0          equ	721	;# 
   482   0002D2                     U3CON1          equ	722	;# 
   483   0002D3                     U3CON2          equ	723	;# 
   484   0002D4                     U3BRG           equ	724	;# 
   485   0002D4                     U3BRGL          equ	724	;# 
   486   0002D5                     U3BRGH          equ	725	;# 
   487   0002D6                     U3FIFO          equ	726	;# 
   488   0002D7                     U3UIR           equ	727	;# 
   489   0002D8                     U3ERRIR         equ	728	;# 
   490   0002D9                     U3ERRIE         equ	729	;# 
   491   0002DA                     U4RXB           equ	730	;# 
   492   0002DA                     U4RXBL          equ	730	;# 
   493   0002DC                     U4TXB           equ	732	;# 
   494   0002DC                     U4TXBL          equ	732	;# 
   495   0002DE                     U4P1            equ	734	;# 
   496   0002DE                     U4P1L           equ	734	;# 
   497   0002E0                     U4P2            equ	736	;# 
   498   0002E0                     U4P2L           equ	736	;# 
   499   0002E2                     U4P3            equ	738	;# 
   500   0002E2                     U4P3L           equ	738	;# 
   501   0002E4                     U4CON0          equ	740	;# 
   502   0002E5                     U4CON1          equ	741	;# 
   503   0002E6                     U4CON2          equ	742	;# 
   504   0002E7                     U4BRG           equ	743	;# 
   505   0002E7                     U4BRGL          equ	743	;# 
   506   0002E8                     U4BRGH          equ	744	;# 
   507   0002E9                     U4FIFO          equ	745	;# 
   508   0002EA                     U4UIR           equ	746	;# 
   509   0002EB                     U4ERRIR         equ	747	;# 
   510   0002EC                     U4ERRIE         equ	748	;# 
   511   0002ED                     U5RXB           equ	749	;# 
   512   0002ED                     U5RXBL          equ	749	;# 
   513   0002EF                     U5TXB           equ	751	;# 
   514   0002EF                     U5TXBL          equ	751	;# 
   515   0002F1                     U5P1            equ	753	;# 
   516   0002F1                     U5P1L           equ	753	;# 
   517   0002F3                     U5P2            equ	755	;# 
   518   0002F3                     U5P2L           equ	755	;# 
   519   0002F5                     U5P3            equ	757	;# 
   520   0002F5                     U5P3L           equ	757	;# 
   521   0002F7                     U5CON0          equ	759	;# 
   522   0002F8                     U5CON1          equ	760	;# 
   523   0002F9                     U5CON2          equ	761	;# 
   524   0002FA                     U5BRG           equ	762	;# 
   525   0002FA                     U5BRGL          equ	762	;# 
   526   0002FB                     U5BRGH          equ	763	;# 
   527   0002FC                     U5FIFO          equ	764	;# 
   528   0002FD                     U5UIR           equ	765	;# 
   529   0002FE                     U5ERRIR         equ	766	;# 
   530   0002FF                     U5ERRIE         equ	767	;# 
   531   000300                     SMT1TMR         equ	768	;# 
   532   000300                     SMT1TMRL        equ	768	;# 
   533   000301                     SMT1TMRH        equ	769	;# 
   534   000302                     SMT1TMRU        equ	770	;# 
   535   000303                     SMT1CPR         equ	771	;# 
   536   000303                     SMT1CPRL        equ	771	;# 
   537   000304                     SMT1CPRH        equ	772	;# 
   538   000305                     SMT1CPRU        equ	773	;# 
   539   000306                     SMT1CPW         equ	774	;# 
   540   000306                     SMT1CPWL        equ	774	;# 
   541   000307                     SMT1CPWH        equ	775	;# 
   542   000308                     SMT1CPWU        equ	776	;# 
   543   000309                     SMT1PR          equ	777	;# 
   544   000309                     SMT1PRL         equ	777	;# 
   545   00030A                     SMT1PRH         equ	778	;# 
   546   00030B                     SMT1PRU         equ	779	;# 
   547   00030C                     SMT1CON0        equ	780	;# 
   548   00030D                     SMT1CON1        equ	781	;# 
   549   00030E                     SMT1STAT        equ	782	;# 
   550   00030F                     SMT1CLK         equ	783	;# 
   551   000310                     SMT1SIG         equ	784	;# 
   552   000311                     SMT1WIN         equ	785	;# 
   553   000318                     TMR0L           equ	792	;# 
   554   000318                     TMR0            equ	792	;# 
   555   000319                     TMR0H           equ	793	;# 
   556   000319                     PR0             equ	793	;# 
   557   00031A                     T0CON0          equ	794	;# 
   558   00031B                     T0CON1          equ	795	;# 
   559   00031C                     TMR1            equ	796	;# 
   560   00031C                     TMR1L           equ	796	;# 
   561   00031D                     TMR1H           equ	797	;# 
   562   00031E                     T1CON           equ	798	;# 
   563   00031E                     TMR1CON         equ	798	;# 
   564   00031F                     T1GCON          equ	799	;# 
   565   00031F                     TMR1GCON        equ	799	;# 
   566   000320                     T1GATE          equ	800	;# 
   567   000320                     TMR1GATE        equ	800	;# 
   568   000321                     T1CLK           equ	801	;# 
   569   000321                     TMR1CLK         equ	801	;# 
   570   000321                     PR1             equ	801	;# 
   571   000322                     T2TMR           equ	802	;# 
   572   000322                     TMR2            equ	802	;# 
   573   000323                     T2PR            equ	803	;# 
   574   000323                     PR2             equ	803	;# 
   575   000324                     T2CON           equ	804	;# 
   576   000325                     T2HLT           equ	805	;# 
   577   000326                     T2CLKCON        equ	806	;# 
   578   000326                     T2CLK           equ	806	;# 
   579   000327                     T2RST           equ	807	;# 
   580   000328                     TMR3            equ	808	;# 
   581   000328                     TMR3L           equ	808	;# 
   582   000329                     TMR3H           equ	809	;# 
   583   00032A                     T3CON           equ	810	;# 
   584   00032A                     TMR3CON         equ	810	;# 
   585   00032B                     T3GCON          equ	811	;# 
   586   00032B                     TMR3GCON        equ	811	;# 
   587   00032C                     T3GATE          equ	812	;# 
   588   00032C                     TMR3GATE        equ	812	;# 
   589   00032D                     T3CLK           equ	813	;# 
   590   00032D                     TMR3CLK         equ	813	;# 
   591   00032D                     PR3             equ	813	;# 
   592   00032E                     T4TMR           equ	814	;# 
   593   00032E                     TMR4            equ	814	;# 
   594   00032F                     T4PR            equ	815	;# 
   595   00032F                     PR4             equ	815	;# 
   596   000330                     T4CON           equ	816	;# 
   597   000331                     T4HLT           equ	817	;# 
   598   000332                     T4CLKCON        equ	818	;# 
   599   000332                     T4CLK           equ	818	;# 
   600   000333                     T4RST           equ	819	;# 
   601   000334                     TMR5            equ	820	;# 
   602   000334                     TMR5L           equ	820	;# 
   603   000335                     TMR5H           equ	821	;# 
   604   000336                     T5CON           equ	822	;# 
   605   000336                     TMR5CON         equ	822	;# 
   606   000337                     T5GCON          equ	823	;# 
   607   000337                     TMR5GCON        equ	823	;# 
   608   000338                     T5GATE          equ	824	;# 
   609   000338                     TMR5GATE        equ	824	;# 
   610   000339                     T5CLK           equ	825	;# 
   611   000339                     TMR5CLK         equ	825	;# 
   612   000339                     PR5             equ	825	;# 
   613   00033A                     T6TMR           equ	826	;# 
   614   00033A                     TMR6            equ	826	;# 
   615   00033B                     T6PR            equ	827	;# 
   616   00033B                     PR6             equ	827	;# 
   617   00033C                     T6CON           equ	828	;# 
   618   00033D                     T6HLT           equ	829	;# 
   619   00033E                     T6CLKCON        equ	830	;# 
   620   00033E                     T6CLK           equ	830	;# 
   621   00033F                     T6RST           equ	831	;# 
   622   000340                     CCPR1           equ	832	;# 
   623   000340                     CCPR1L          equ	832	;# 
   624   000341                     CCPR1H          equ	833	;# 
   625   000342                     CCP1CON         equ	834	;# 
   626   000343                     CCP1CAP         equ	835	;# 
   627   000344                     CCPR2           equ	836	;# 
   628   000344                     CCPR2L          equ	836	;# 
   629   000345                     CCPR2H          equ	837	;# 
   630   000346                     CCP2CON         equ	838	;# 
   631   000347                     CCP2CAP         equ	839	;# 
   632   000348                     CCPR3           equ	840	;# 
   633   000348                     CCPR3L          equ	840	;# 
   634   000349                     CCPR3H          equ	841	;# 
   635   00034A                     CCP3CON         equ	842	;# 
   636   00034B                     CCP3CAP         equ	843	;# 
   637   00034C                     CCPTMRS0        equ	844	;# 
   638   00034F                     CRCDATA         equ	847	;# 
   639   00034F                     CRCDATL         equ	847	;# 
   640   000350                     CRCDATH         equ	848	;# 
   641   000351                     CRCACC          equ	849	;# 
   642   000351                     CRCACCL         equ	849	;# 
   643   000352                     CRCACCH         equ	850	;# 
   644   000353                     CRCSHFT         equ	851	;# 
   645   000353                     CRCSHIFTL       equ	851	;# 
   646   000354                     CRCSHIFTH       equ	852	;# 
   647   000355                     CRCXOR          equ	853	;# 
   648   000355                     CRCXORL         equ	853	;# 
   649   000356                     CRCXORH         equ	854	;# 
   650   000357                     CRCCON0         equ	855	;# 
   651   000358                     CRCCON1         equ	856	;# 
   652   00035A                     SCANLADR        equ	858	;# 
   653   00035A                     SCANLADRL       equ	858	;# 
   654   00035B                     SCANLADRH       equ	859	;# 
   655   00035C                     SCANLADRU       equ	860	;# 
   656   00035D                     SCANHADR        equ	861	;# 
   657   00035D                     SCANHADRL       equ	861	;# 
   658   00035E                     SCANHADRH       equ	862	;# 
   659   00035F                     SCANHADRU       equ	863	;# 
   660   000360                     SCANCON0        equ	864	;# 
   661   000361                     SCANTRIG        equ	865	;# 
   662   000362                     IPR0            equ	866	;# 
   663   000363                     IPR1            equ	867	;# 
   664   000364                     IPR2            equ	868	;# 
   665   000365                     IPR3            equ	869	;# 
   666   000366                     IPR4            equ	870	;# 
   667   000367                     IPR5            equ	871	;# 
   668   000368                     IPR6            equ	872	;# 
   669   000369                     IPR7            equ	873	;# 
   670   00036A                     IPR8            equ	874	;# 
   671   00036B                     IPR9            equ	875	;# 
   672   00036C                     IPR10           equ	876	;# 
   673   00036D                     IPR11           equ	877	;# 
   674   00036E                     IPR12           equ	878	;# 
   675   00036F                     IPR13           equ	879	;# 
   676   000370                     IPR14           equ	880	;# 
   677   000371                     IPR15           equ	881	;# 
   678   000373                     STATUS_CSHAD    equ	883	;# 
   679   000374                     WREG_CSHAD      equ	884	;# 
   680   000375                     BSR_CSHAD       equ	885	;# 
   681   000376                     SHADCON         equ	886	;# 
   682   000377                     STATUS_SHAD     equ	887	;# 
   683   000378                     WREG_SHAD       equ	888	;# 
   684   000379                     BSR_SHAD        equ	889	;# 
   685   00037A                     PCLATH_SHAD     equ	890	;# 
   686   00037B                     PCLATU_SHAD     equ	891	;# 
   687   00037C                     FSR0SH          equ	892	;# 
   688   00037C                     FSR0L_SHAD      equ	892	;# 
   689   00037D                     FSR0H_SHAD      equ	893	;# 
   690   00037E                     FSR1SH          equ	894	;# 
   691   00037E                     FSR1L_SHAD      equ	894	;# 
   692   00037F                     FSR1H_SHAD      equ	895	;# 
   693   000380                     FSR2SH          equ	896	;# 
   694   000380                     FSR2L_SHAD      equ	896	;# 
   695   000381                     FSR2H_SHAD      equ	897	;# 
   696   000382                     PRODSH          equ	898	;# 
   697   000382                     PRODL_SHAD      equ	898	;# 
   698   000383                     PRODH_SHAD      equ	899	;# 
   699   0003BC                     CWG1CLK         equ	956	;# 
   700   0003BC                     CWG1CLKCON      equ	956	;# 
   701   0003BD                     CWG1ISM         equ	957	;# 
   702   0003BD                     CWG1DAT         equ	957	;# 
   703   0003BE                     CWG1DBR         equ	958	;# 
   704   0003BF                     CWG1DBF         equ	959	;# 
   705   0003C0                     CWG1CON0        equ	960	;# 
   706   0003C1                     CWG1CON1        equ	961	;# 
   707   0003C2                     CWG1AS0         equ	962	;# 
   708   0003C3                     CWG1AS1         equ	963	;# 
   709   0003C4                     CWG1STR         equ	964	;# 
   710   0003C5                     CWG2CLK         equ	965	;# 
   711   0003C5                     CWG2CLKCON      equ	965	;# 
   712   0003C6                     CWG2ISM         equ	966	;# 
   713   0003C6                     CWG2DAT         equ	966	;# 
   714   0003C7                     CWG2DBR         equ	967	;# 
   715   0003C8                     CWG2DBF         equ	968	;# 
   716   0003C9                     CWG2CON0        equ	969	;# 
   717   0003CA                     CWG2CON1        equ	970	;# 
   718   0003CB                     CWG2AS0         equ	971	;# 
   719   0003CC                     CWG2AS1         equ	972	;# 
   720   0003CD                     CWG2STR         equ	973	;# 
   721   0003CE                     CWG3CLK         equ	974	;# 
   722   0003CE                     CWG3CLKCON      equ	974	;# 
   723   0003CF                     CWG3ISM         equ	975	;# 
   724   0003CF                     CWG3DAT         equ	975	;# 
   725   0003D0                     CWG3DBR         equ	976	;# 
   726   0003D1                     CWG3DBF         equ	977	;# 
   727   0003D2                     CWG3CON0        equ	978	;# 
   728   0003D3                     CWG3CON1        equ	979	;# 
   729   0003D4                     CWG3AS0         equ	980	;# 
   730   0003D5                     CWG3AS1         equ	981	;# 
   731   0003D6                     CWG3STR         equ	982	;# 
   732   0003D7                     FVRCON          equ	983	;# 
   733   0003D8                     ADCPCON         equ	984	;# 
   734   0003D8                     ADCP            equ	984	;# 
   735   0003D9                     ADLTH           equ	985	;# 
   736   0003D9                     ADLTHL          equ	985	;# 
   737   0003DA                     ADLTHH          equ	986	;# 
   738   0003DB                     ADUTH           equ	987	;# 
   739   0003DB                     ADUTHL          equ	987	;# 
   740   0003DC                     ADUTHH          equ	988	;# 
   741   0003DD                     ADERR           equ	989	;# 
   742   0003DD                     ADERRL          equ	989	;# 
   743   0003DE                     ADERRH          equ	990	;# 
   744   0003DF                     ADSTPT          equ	991	;# 
   745   0003DF                     ADSTPTL         equ	991	;# 
   746   0003E0                     ADSTPTH         equ	992	;# 
   747   0003E1                     ADFLTR          equ	993	;# 
   748   0003E1                     ADFLTRL         equ	993	;# 
   749   0003E2                     ADFLTRH         equ	994	;# 
   750   0003E3                     ADACC           equ	995	;# 
   751   0003E3                     ADACCL          equ	995	;# 
   752   0003E4                     ADACCH          equ	996	;# 
   753   0003E5                     ADACCU          equ	997	;# 
   754   0003E6                     ADCNT           equ	998	;# 
   755   0003E7                     ADRPT           equ	999	;# 
   756   0003E8                     ADPREV          equ	1000	;# 
   757   0003E8                     ADPREVL         equ	1000	;# 
   758   0003E9                     ADPREVH         equ	1001	;# 
   759   0003EA                     ADRES           equ	1002	;# 
   760   0003EA                     ADRESL          equ	1002	;# 
   761   0003EB                     ADRESH          equ	1003	;# 
   762   0003EC                     ADPCH           equ	1004	;# 
   763   0003EE                     ADACQ           equ	1006	;# 
   764   0003EE                     ADACQL          equ	1006	;# 
   765   0003EF                     ADACQH          equ	1007	;# 
   766   0003F0                     ADCAP           equ	1008	;# 
   767   0003F1                     ADPRE           equ	1009	;# 
   768   0003F1                     ADPREL          equ	1009	;# 
   769   0003F2                     ADPREH          equ	1010	;# 
   770   0003F3                     ADCON0          equ	1011	;# 
   771   0003F4                     ADCON1          equ	1012	;# 
   772   0003F5                     ADCON2          equ	1013	;# 
   773   0003F6                     ADCON3          equ	1014	;# 
   774   0003F7                     ADSTAT          equ	1015	;# 
   775   0003F8                     ADREF           equ	1016	;# 
   776   0003F9                     ADACT           equ	1017	;# 
   777   0003FA                     ADCLK           equ	1018	;# 
   778   000400                     ANSELA          equ	1024	;# 
   779   000401                     WPUA            equ	1025	;# 
   780   000402                     ODCONA          equ	1026	;# 
   781   000403                     SLRCONA         equ	1027	;# 
   782   000404                     INLVLA          equ	1028	;# 
   783   000405                     IOCAP           equ	1029	;# 
   784   000406                     IOCAN           equ	1030	;# 
   785   000407                     IOCAF           equ	1031	;# 
   786   000408                     ANSELB          equ	1032	;# 
   787   000409                     WPUB            equ	1033	;# 
   788   00040A                     ODCONB          equ	1034	;# 
   789   00040B                     SLRCONB         equ	1035	;# 
   790   00040C                     INLVLB          equ	1036	;# 
   791   00040D                     IOCBP           equ	1037	;# 
   792   00040E                     IOCBN           equ	1038	;# 
   793   00040F                     IOCBF           equ	1039	;# 
   794   000410                     ANSELC          equ	1040	;# 
   795   000411                     WPUC            equ	1041	;# 
   796   000412                     ODCONC          equ	1042	;# 
   797   000413                     SLRCONC         equ	1043	;# 
   798   000414                     INLVLC          equ	1044	;# 
   799   000415                     IOCCP           equ	1045	;# 
   800   000416                     IOCCN           equ	1046	;# 
   801   000417                     IOCCF           equ	1047	;# 
   802   000418                     ANSELD          equ	1048	;# 
   803   000419                     WPUD            equ	1049	;# 
   804   00041A                     ODCOND          equ	1050	;# 
   805   00041B                     SLRCOND         equ	1051	;# 
   806   00041C                     INLVLD          equ	1052	;# 
   807   000420                     ANSELE          equ	1056	;# 
   808   000421                     WPUE            equ	1057	;# 
   809   000422                     ODCONE          equ	1058	;# 
   810   000423                     SLRCONE         equ	1059	;# 
   811   000424                     INLVLE          equ	1060	;# 
   812   000425                     IOCEP           equ	1061	;# 
   813   000426                     IOCEN           equ	1062	;# 
   814   000427                     IOCEF           equ	1063	;# 
   815   000428                     ANSELF          equ	1064	;# 
   816   000429                     WPUF            equ	1065	;# 
   817   00042A                     ODCONF          equ	1066	;# 
   818   00042B                     SLRCONF         equ	1067	;# 
   819   00042C                     INLVLF          equ	1068	;# 
   820   000440                     NCO1ACC         equ	1088	;# 
   821   000440                     NCO1ACCL        equ	1088	;# 
   822   000441                     NCO1ACCH        equ	1089	;# 
   823   000442                     NCO1ACCU        equ	1090	;# 
   824   000443                     NCO1INC         equ	1091	;# 
   825   000443                     NCO1INCL        equ	1091	;# 
   826   000444                     NCO1INCH        equ	1092	;# 
   827   000445                     NCO1INCU        equ	1093	;# 
   828   000446                     NCO1CON         equ	1094	;# 
   829   000447                     NCO1CLK         equ	1095	;# 
   830   000448                     NCO2ACC         equ	1096	;# 
   831   000448                     NCO2ACCL        equ	1096	;# 
   832   000449                     NCO2ACCH        equ	1097	;# 
   833   00044A                     NCO2ACCU        equ	1098	;# 
   834   00044B                     NCO2INC         equ	1099	;# 
   835   00044B                     NCO2INCL        equ	1099	;# 
   836   00044C                     NCO2INCH        equ	1100	;# 
   837   00044D                     NCO2INCU        equ	1101	;# 
   838   00044E                     NCO2CON         equ	1102	;# 
   839   00044F                     NCO2CLK         equ	1103	;# 
   840   000450                     NCO3ACC         equ	1104	;# 
   841   000450                     NCO3ACCL        equ	1104	;# 
   842   000451                     NCO3ACCH        equ	1105	;# 
   843   000452                     NCO3ACCU        equ	1106	;# 
   844   000453                     NCO3INC         equ	1107	;# 
   845   000453                     NCO3INCL        equ	1107	;# 
   846   000454                     NCO3INCH        equ	1108	;# 
   847   000455                     NCO3INCU        equ	1109	;# 
   848   000456                     NCO3CON         equ	1110	;# 
   849   000457                     NCO3CLK         equ	1111	;# 
   850   000459                     IVTLOCK         equ	1113	;# 
   851   00045A                     IVTAD           equ	1114	;# 
   852   00045A                     IVTADL          equ	1114	;# 
   853   00045B                     IVTADH          equ	1115	;# 
   854   00045C                     IVTADU          equ	1116	;# 
   855   00045D                     IVTBASE         equ	1117	;# 
   856   00045D                     IVTBASEL        equ	1117	;# 
   857   00045E                     IVTBASEH        equ	1118	;# 
   858   00045F                     IVTBASEU        equ	1119	;# 
   859   000460                     PWM1ERS         equ	1120	;# 
   860   000461                     PWM1CLK         equ	1121	;# 
   861   000462                     PWM1LDS         equ	1122	;# 
   862   000463                     PWM1PR          equ	1123	;# 
   863   000463                     PWM1PRL         equ	1123	;# 
   864   000464                     PWM1PRH         equ	1124	;# 
   865   000465                     PWM1CPRE        equ	1125	;# 
   866   000466                     PWM1PIPOS       equ	1126	;# 
   867   000467                     PWM1GIR         equ	1127	;# 
   868   000468                     PWM1GIE         equ	1128	;# 
   869   000469                     PWM1CON         equ	1129	;# 
   870   00046A                     PWM1S1CFG       equ	1130	;# 
   871   00046B                     PWM1S1P1        equ	1131	;# 
   872   00046B                     PWM1S1P1L       equ	1131	;# 
   873   00046C                     PWM1S1P1H       equ	1132	;# 
   874   00046D                     PWM1S1P2        equ	1133	;# 
   875   00046D                     PWM1S1P2L       equ	1133	;# 
   876   00046E                     PWM1S1P2H       equ	1134	;# 
   877   00046F                     PWM2ERS         equ	1135	;# 
   878   000470                     PWM2CLK         equ	1136	;# 
   879   000471                     PWM2LDS         equ	1137	;# 
   880   000472                     PWM2PR          equ	1138	;# 
   881   000472                     PWM2PRL         equ	1138	;# 
   882   000473                     PWM2PRH         equ	1139	;# 
   883   000474                     PWM2CPRE        equ	1140	;# 
   884   000475                     PWM2PIPOS       equ	1141	;# 
   885   000476                     PWM2GIR         equ	1142	;# 
   886   000477                     PWM2GIE         equ	1143	;# 
   887   000478                     PWM2CON         equ	1144	;# 
   888   000479                     PWM2S1CFG       equ	1145	;# 
   889   00047A                     PWM2S1P1        equ	1146	;# 
   890   00047A                     PWM2S1P1L       equ	1146	;# 
   891   00047B                     PWM2S1P1H       equ	1147	;# 
   892   00047C                     PWM2S1P2        equ	1148	;# 
   893   00047C                     PWM2S1P2L       equ	1148	;# 
   894   00047D                     PWM2S1P2H       equ	1149	;# 
   895   00047E                     PWM3ERS         equ	1150	;# 
   896   00047F                     PWM3CLK         equ	1151	;# 
   897   000480                     PWM3LDS         equ	1152	;# 
   898   000481                     PWM3PR          equ	1153	;# 
   899   000481                     PWM3PRL         equ	1153	;# 
   900   000482                     PWM3PRH         equ	1154	;# 
   901   000483                     PWM3CPRE        equ	1155	;# 
   902   000484                     PWM3PIPOS       equ	1156	;# 
   903   000485                     PWM3GIR         equ	1157	;# 
   904   000486                     PWM3GIE         equ	1158	;# 
   905   000487                     PWM3CON         equ	1159	;# 
   906   000488                     PWM3S1CFG       equ	1160	;# 
   907   000489                     PWM3S1P1        equ	1161	;# 
   908   000489                     PWM3S1P1L       equ	1161	;# 
   909   00048A                     PWM3S1P1H       equ	1162	;# 
   910   00048B                     PWM3S1P2        equ	1163	;# 
   911   00048B                     PWM3S1P2L       equ	1163	;# 
   912   00048C                     PWM3S1P2H       equ	1164	;# 
   913   00049C                     PWMLOAD         equ	1180	;# 
   914   00049D                     PWMEN           equ	1181	;# 
   915   00049E                     PIE0            equ	1182	;# 
   916   00049F                     PIE1            equ	1183	;# 
   917   0004A0                     PIE2            equ	1184	;# 
   918   0004A1                     PIE3            equ	1185	;# 
   919   0004A2                     PIE4            equ	1186	;# 
   920   0004A3                     PIE5            equ	1187	;# 
   921   0004A4                     PIE6            equ	1188	;# 
   922   0004A5                     PIE7            equ	1189	;# 
   923   0004A6                     PIE8            equ	1190	;# 
   924   0004A7                     PIE9            equ	1191	;# 
   925   0004A8                     PIE10           equ	1192	;# 
   926   0004A9                     PIE11           equ	1193	;# 
   927   0004AA                     PIE12           equ	1194	;# 
   928   0004AB                     PIE13           equ	1195	;# 
   929   0004AC                     PIE14           equ	1196	;# 
   930   0004AD                     PIE15           equ	1197	;# 
   931   0004AE                     PIR0            equ	1198	;# 
   932   0004AF                     PIR1            equ	1199	;# 
   933   0004B0                     PIR2            equ	1200	;# 
   934   0004B1                     PIR3            equ	1201	;# 
   935   0004B2                     PIR4            equ	1202	;# 
   936   0004B3                     PIR5            equ	1203	;# 
   937   0004B4                     PIR6            equ	1204	;# 
   938   0004B5                     PIR7            equ	1205	;# 
   939   0004B6                     PIR8            equ	1206	;# 
   940   0004B7                     PIR9            equ	1207	;# 
   941   0004B8                     PIR10           equ	1208	;# 
   942   0004B9                     PIR11           equ	1209	;# 
   943   0004BA                     PIR12           equ	1210	;# 
   944   0004BB                     PIR13           equ	1211	;# 
   945   0004BC                     PIR14           equ	1212	;# 
   946   0004BD                     PIR15           equ	1213	;# 
   947   0004BE                     LATA            equ	1214	;# 
   948   0004BF                     LATB            equ	1215	;# 
   949   0004C0                     LATC            equ	1216	;# 
   950   0004C1                     LATD            equ	1217	;# 
   951   0004C2                     LATE            equ	1218	;# 
   952   0004C3                     LATF            equ	1219	;# 
   953   0004C6                     TRISA           equ	1222	;# 
   954   0004C7                     TRISB           equ	1223	;# 
   955   0004C8                     TRISC           equ	1224	;# 
   956   0004C9                     TRISD           equ	1225	;# 
   957   0004CA                     TRISE           equ	1226	;# 
   958   0004CB                     TRISF           equ	1227	;# 
   959   0004CE                     PORTA           equ	1230	;# 
   960   0004CF                     PORTB           equ	1231	;# 
   961   0004D0                     PORTC           equ	1232	;# 
   962   0004D1                     PORTD           equ	1233	;# 
   963   0004D2                     PORTE           equ	1234	;# 
   964   0004D3                     PORTF           equ	1235	;# 
   965   0004D6                     INTCON0         equ	1238	;# 
   966   0004D7                     INTCON1         equ	1239	;# 
   967   0004D8                     STATUS          equ	1240	;# 
   968   0004D9                     FSR2            equ	1241	;# 
   969   0004D9                     FSR2L           equ	1241	;# 
   970   0004DA                     FSR2H           equ	1242	;# 
   971   0004DB                     PLUSW2          equ	1243	;# 
   972   0004DC                     PREINC2         equ	1244	;# 
   973   0004DD                     POSTDEC2        equ	1245	;# 
   974   0004DE                     POSTINC2        equ	1246	;# 
   975   0004DF                     INDF2           equ	1247	;# 
   976   0004E0                     BSR             equ	1248	;# 
   977   0004E1                     FSR1            equ	1249	;# 
   978   0004E1                     FSR1L           equ	1249	;# 
   979   0004E2                     FSR1H           equ	1250	;# 
   980   0004E3                     PLUSW1          equ	1251	;# 
   981   0004E4                     PREINC1         equ	1252	;# 
   982   0004E5                     POSTDEC1        equ	1253	;# 
   983   0004E6                     POSTINC1        equ	1254	;# 
   984   0004E7                     INDF1           equ	1255	;# 
   985   0004E8                     WREG            equ	1256	;# 
   986   0004E9                     FSR0            equ	1257	;# 
   987   0004E9                     FSR0L           equ	1257	;# 
   988   0004EA                     FSR0H           equ	1258	;# 
   989   0004EB                     PLUSW0          equ	1259	;# 
   990   0004EC                     PREINC0         equ	1260	;# 
   991   0004ED                     POSTDEC0        equ	1261	;# 
   992   0004EE                     POSTINC0        equ	1262	;# 
   993   0004EF                     INDF0           equ	1263	;# 
   994   0004F0                     PCON0           equ	1264	;# 
   995   0004F1                     PCON1           equ	1265	;# 
   996   0004F2                     CPUDOZE         equ	1266	;# 
   997   0004F3                     PROD            equ	1267	;# 
   998   0004F3                     PRODL           equ	1267	;# 
   999   0004F4                     PRODH           equ	1268	;# 
  1000   0004F5                     TABLAT          equ	1269	;# 
  1001   0004F6                     TBLPTR          equ	1270	;# 
  1002   0004F6                     TBLPTRL         equ	1270	;# 
  1003   0004F7                     TBLPTRH         equ	1271	;# 
  1004   0004F8                     TBLPTRU         equ	1272	;# 
  1005   0004F9                     PCLAT           equ	1273	;# 
  1006   0004F9                     PCL             equ	1273	;# 
  1007   0004FA                     PCLATH          equ	1274	;# 
  1008   0004FB                     PCLATU          equ	1275	;# 
  1009   0004FC                     STKPTR          equ	1276	;# 
  1010   0004FD                     TOS             equ	1277	;# 
  1011   0004FD                     TOSL            equ	1277	;# 
  1012   0004FE                     TOSH            equ	1278	;# 
  1013   0004FF                     TOSU            equ	1279	;# 
  1014   000039                     CLKRCON         equ	57	;# 
  1015   00003A                     CLKRCLK         equ	58	;# 
  1016   000040                     NVMCON0         equ	64	;# 
  1017   000041                     NVMCON1         equ	65	;# 
  1018   000042                     NVMLOCK         equ	66	;# 
  1019   000043                     NVMADR          equ	67	;# 
  1020   000043                     NVMADRL         equ	67	;# 
  1021   000044                     NVMADRH         equ	68	;# 
  1022   000045                     NVMADRU         equ	69	;# 
  1023   000046                     NVMDAT          equ	70	;# 
  1024   000046                     NVMDATL         equ	70	;# 
  1025   000047                     NVMDATH         equ	71	;# 
  1026   000048                     VREGCON         equ	72	;# 
  1027   000049                     BORCON          equ	73	;# 
  1028   00004A                     HLVDCON0        equ	74	;# 
  1029   00004B                     HLVDCON1        equ	75	;# 
  1030   00004C                     ZCDCON          equ	76	;# 
  1031   000060                     PMD0            equ	96	;# 
  1032   000061                     PMD1            equ	97	;# 
  1033   000063                     PMD3            equ	99	;# 
  1034   000064                     PMD4            equ	100	;# 
  1035   000065                     PMD5            equ	101	;# 
  1036   000066                     PMD6            equ	102	;# 
  1037   000067                     PMD7            equ	103	;# 
  1038   000068                     PMD8            equ	104	;# 
  1039   00006A                     MD1CON0         equ	106	;# 
  1040   00006B                     MD1CON1         equ	107	;# 
  1041   00006C                     MD1SRC          equ	108	;# 
  1042   00006D                     MD1CARL         equ	109	;# 
  1043   00006E                     MD1CARH         equ	110	;# 
  1044   00006F                     CMOUT           equ	111	;# 
  1045   000070                     CM1CON0         equ	112	;# 
  1046   000071                     CM1CON1         equ	113	;# 
  1047   000072                     CM1NCH          equ	114	;# 
  1048   000073                     CM1PCH          equ	115	;# 
  1049   000074                     CM2CON0         equ	116	;# 
  1050   000075                     CM2CON1         equ	117	;# 
  1051   000076                     CM2NCH          equ	118	;# 
  1052   000077                     CM2PCH          equ	119	;# 
  1053   000078                     WDTCON0         equ	120	;# 
  1054   000079                     WDTCON1         equ	121	;# 
  1055   00007A                     WDTPS           equ	122	;# 
  1056   00007A                     WDTPSL          equ	122	;# 
  1057   00007B                     WDTPSH          equ	123	;# 
  1058   00007C                     WDTTMR          equ	124	;# 
  1059   00007D                     DAC1DAT         equ	125	;# 
  1060   00007D                     DAC1DATL        equ	125	;# 
  1061   00007F                     DAC1CON         equ	127	;# 
  1062   000080                     SPI1RXB         equ	128	;# 
  1063   000081                     SPI1TXB         equ	129	;# 
  1064   000082                     SPI1TCNT        equ	130	;# 
  1065   000082                     SPI1TCNTL       equ	130	;# 
  1066   000083                     SPI1TCNTH       equ	131	;# 
  1067   000084                     SPI1CON0        equ	132	;# 
  1068   000085                     SPI1CON1        equ	133	;# 
  1069   000086                     SPI1CON2        equ	134	;# 
  1070   000087                     SPI1STATUS      equ	135	;# 
  1071   000088                     SPI1TWIDTH      equ	136	;# 
  1072   000089                     SPI1BAUD        equ	137	;# 
  1073   00008A                     SPI1INTF        equ	138	;# 
  1074   00008B                     SPI1INTE        equ	139	;# 
  1075   00008C                     SPI1CLK         equ	140	;# 
  1076   00008D                     SPI2RXB         equ	141	;# 
  1077   00008E                     SPI2TXB         equ	142	;# 
  1078   00008F                     SPI2TCNT        equ	143	;# 
  1079   00008F                     SPI2TCNTL       equ	143	;# 
  1080   000090                     SPI2TCNTH       equ	144	;# 
  1081   000091                     SPI2CON0        equ	145	;# 
  1082   000092                     SPI2CON1        equ	146	;# 
  1083   000093                     SPI2CON2        equ	147	;# 
  1084   000094                     SPI2STATUS      equ	148	;# 
  1085   000095                     SPI2TWIDTH      equ	149	;# 
  1086   000096                     SPI2BAUD        equ	150	;# 
  1087   000097                     SPI2INTF        equ	151	;# 
  1088   000098                     SPI2INTE        equ	152	;# 
  1089   000099                     SPI2CLK         equ	153	;# 
  1090   0000AC                     ACTCON          equ	172	;# 
  1091   0000AD                     OSCCON1         equ	173	;# 
  1092   0000AE                     OSCCON2         equ	174	;# 
  1093   0000AF                     OSCCON3         equ	175	;# 
  1094   0000B0                     OSCTUNE         equ	176	;# 
  1095   0000B1                     OSCFRQ          equ	177	;# 
  1096   0000B1                     OSCFREQ         equ	177	;# 
  1097   0000B2                     OSCSTAT         equ	178	;# 
  1098   0000B2                     OSCSTAT1        equ	178	;# 
  1099   0000B3                     OSCEN           equ	179	;# 
  1100   0000B4                     PRLOCK          equ	180	;# 
  1101   0000B5                     SCANPR          equ	181	;# 
  1102   0000B6                     DMA1PR          equ	182	;# 
  1103   0000B7                     DMA2PR          equ	183	;# 
  1104   0000B8                     DMA3PR          equ	184	;# 
  1105   0000B9                     DMA4PR          equ	185	;# 
  1106   0000BA                     DMA5PR          equ	186	;# 
  1107   0000BB                     DMA6PR          equ	187	;# 
  1108   0000BE                     MAINPR          equ	190	;# 
  1109   0000BF                     ISRPR           equ	191	;# 
  1110   0000D4                     CLCDATA         equ	212	;# 
  1111   0000D5                     CLCSELECT       equ	213	;# 
  1112   0000D6                     CLCnCON         equ	214	;# 
  1113   0000D7                     CLCnPOL         equ	215	;# 
  1114   0000D8                     CLCnSEL0        equ	216	;# 
  1115   0000D9                     CLCnSEL1        equ	217	;# 
  1116   0000DA                     CLCnSEL2        equ	218	;# 
  1117   0000DB                     CLCnSEL3        equ	219	;# 
  1118   0000DC                     CLCnGLS0        equ	220	;# 
  1119   0000DD                     CLCnGLS1        equ	221	;# 
  1120   0000DE                     CLCnGLS2        equ	222	;# 
  1121   0000DF                     CLCnGLS3        equ	223	;# 
  1122   0000E8                     DMASELECT       equ	232	;# 
  1123   0000E9                     DMAnBUF         equ	233	;# 
  1124   0000EA                     DMAnDCNT        equ	234	;# 
  1125   0000EA                     DMAnDCNTL       equ	234	;# 
  1126   0000EB                     DMAnDCNTH       equ	235	;# 
  1127   0000EC                     DMAnDPTR        equ	236	;# 
  1128   0000EC                     DMAnDPTRL       equ	236	;# 
  1129   0000ED                     DMAnDPTRH       equ	237	;# 
  1130   0000EE                     DMAnDSZ         equ	238	;# 
  1131   0000EE                     DMAnDSZL        equ	238	;# 
  1132   0000EF                     DMAnDSZH        equ	239	;# 
  1133   0000F0                     DMAnDSA         equ	240	;# 
  1134   0000F0                     DMAnDSAL        equ	240	;# 
  1135   0000F1                     DMAnDSAH        equ	241	;# 
  1136   0000F2                     DMAnSCNT        equ	242	;# 
  1137   0000F2                     DMAnSCNTL       equ	242	;# 
  1138   0000F3                     DMAnSCNTH       equ	243	;# 
  1139   0000F4                     DMAnSPTR        equ	244	;# 
  1140   0000F4                     DMAnSPTRL       equ	244	;# 
  1141   0000F5                     DMAnSPTRH       equ	245	;# 
  1142   0000F6                     DMAnSPTRU       equ	246	;# 
  1143   0000F7                     DMAnSSZ         equ	247	;# 
  1144   0000F7                     DMAnSSZL        equ	247	;# 
  1145   0000F8                     DMAnSSZH        equ	248	;# 
  1146   0000F9                     DMAnSSA         equ	249	;# 
  1147   0000F9                     DMAnSSAL        equ	249	;# 
  1148   0000FA                     DMAnSSAH        equ	250	;# 
  1149   0000FB                     DMAnSSAU        equ	251	;# 
  1150   0000FC                     DMAnCON0        equ	252	;# 
  1151   0000FD                     DMAnCON1        equ	253	;# 
  1152   0000FE                     DMAnAIRQ        equ	254	;# 
  1153   0000FF                     DMAnSIRQ        equ	255	;# 
  1154   000200                     PPSLOCK         equ	512	;# 
  1155   000201                     RA0PPS          equ	513	;# 
  1156   000202                     RA1PPS          equ	514	;# 
  1157   000203                     RA2PPS          equ	515	;# 
  1158   000204                     RA3PPS          equ	516	;# 
  1159   000205                     RA4PPS          equ	517	;# 
  1160   000206                     RA5PPS          equ	518	;# 
  1161   000207                     RA6PPS          equ	519	;# 
  1162   000208                     RA7PPS          equ	520	;# 
  1163   000209                     RB0PPS          equ	521	;# 
  1164   00020A                     RB1PPS          equ	522	;# 
  1165   00020B                     RB2PPS          equ	523	;# 
  1166   00020C                     RB3PPS          equ	524	;# 
  1167   00020D                     RB4PPS          equ	525	;# 
  1168   00020E                     RB5PPS          equ	526	;# 
  1169   00020F                     RB6PPS          equ	527	;# 
  1170   000210                     RB7PPS          equ	528	;# 
  1171   000211                     RC0PPS          equ	529	;# 
  1172   000212                     RC1PPS          equ	530	;# 
  1173   000213                     RC2PPS          equ	531	;# 
  1174   000214                     RC3PPS          equ	532	;# 
  1175   000215                     RC4PPS          equ	533	;# 
  1176   000216                     RC5PPS          equ	534	;# 
  1177   000217                     RC6PPS          equ	535	;# 
  1178   000218                     RC7PPS          equ	536	;# 
  1179   000219                     RD0PPS          equ	537	;# 
  1180   00021A                     RD1PPS          equ	538	;# 
  1181   00021B                     RD2PPS          equ	539	;# 
  1182   00021C                     RD3PPS          equ	540	;# 
  1183   00021D                     RD4PPS          equ	541	;# 
  1184   00021E                     RD5PPS          equ	542	;# 
  1185   00021F                     RD6PPS          equ	543	;# 
  1186   000220                     RD7PPS          equ	544	;# 
  1187   000221                     RE0PPS          equ	545	;# 
  1188   000222                     RE1PPS          equ	546	;# 
  1189   000223                     RE2PPS          equ	547	;# 
  1190   000229                     RF0PPS          equ	553	;# 
  1191   00022A                     RF1PPS          equ	554	;# 
  1192   00022B                     RF2PPS          equ	555	;# 
  1193   00022C                     RF3PPS          equ	556	;# 
  1194   00022D                     RF4PPS          equ	557	;# 
  1195   00022E                     RF5PPS          equ	558	;# 
  1196   00022F                     RF6PPS          equ	559	;# 
  1197   000230                     RF7PPS          equ	560	;# 
  1198   00023E                     INT0PPS         equ	574	;# 
  1199   00023F                     INT1PPS         equ	575	;# 
  1200   000240                     INT2PPS         equ	576	;# 
  1201   000241                     T0CKIPPS        equ	577	;# 
  1202   000242                     T1CKIPPS        equ	578	;# 
  1203   000243                     T1GPPS          equ	579	;# 
  1204   000244                     T3CKIPPS        equ	580	;# 
  1205   000245                     T3GPPS          equ	581	;# 
  1206   000246                     T5CKIPPS        equ	582	;# 
  1207   000247                     T5GPPS          equ	583	;# 
  1208   000248                     T2INPPS         equ	584	;# 
  1209   000249                     T4INPPS         equ	585	;# 
  1210   00024A                     T6INPPS         equ	586	;# 
  1211   00024F                     CCP1PPS         equ	591	;# 
  1212   000250                     CCP2PPS         equ	592	;# 
  1213   000251                     CCP3PPS         equ	593	;# 
  1214   000253                     PWM1ERSPPS      equ	595	;# 
  1215   000254                     PWM2ERSPPS      equ	596	;# 
  1216   000255                     PWM3ERSPPS      equ	597	;# 
  1217   000257                     PWMIN0PPS       equ	599	;# 
  1218   000258                     PWMIN1PPS       equ	600	;# 
  1219   000259                     SMT1WINPPS      equ	601	;# 
  1220   00025A                     SMT1SIGPPS      equ	602	;# 
  1221   00025B                     CWG1PPS         equ	603	;# 
  1222   00025B                     CWG1INPPS       equ	603	;# 
  1223   00025C                     CWG2PPS         equ	604	;# 
  1224   00025C                     CWG2INPPS       equ	604	;# 
  1225   00025D                     CWG3PPS         equ	605	;# 
  1226   00025D                     CWG3INPPS       equ	605	;# 
  1227   00025E                     MD1CARLPPS      equ	606	;# 
  1228   00025E                     MDCARLPPS       equ	606	;# 
  1229   00025F                     MD1CARHPPS      equ	607	;# 
  1230   00025F                     MDCARHPPS       equ	607	;# 
  1231   000260                     MD1SRCPPS       equ	608	;# 
  1232   000260                     MDSRCPPS        equ	608	;# 
  1233   000261                     CLCIN0PPS       equ	609	;# 
  1234   000262                     CLCIN1PPS       equ	610	;# 
  1235   000263                     CLCIN2PPS       equ	611	;# 
  1236   000264                     CLCIN3PPS       equ	612	;# 
  1237   000265                     CLCIN4PPS       equ	613	;# 
  1238   000266                     CLCIN5PPS       equ	614	;# 
  1239   000267                     CLCIN6PPS       equ	615	;# 
  1240   000268                     CLCIN7PPS       equ	616	;# 
  1241   000269                     ADACTPPS        equ	617	;# 
  1242   00026A                     SPI1SCKPPS      equ	618	;# 
  1243   00026B                     SPI1SDIPPS      equ	619	;# 
  1244   00026C                     SPI1SSPPS       equ	620	;# 
  1245   00026D                     SPI2SCKPPS      equ	621	;# 
  1246   00026E                     SPI2SDIPPS      equ	622	;# 
  1247   00026F                     SPI2SSPPS       equ	623	;# 
  1248   000270                     I2C1SDAPPS      equ	624	;# 
  1249   000271                     I2C1SCLPPS      equ	625	;# 
  1250   000272                     U1RXPPS         equ	626	;# 
  1251   000273                     U1CTSPPS        equ	627	;# 
  1252   000274                     U2RXPPS         equ	628	;# 
  1253   000275                     U2CTSPPS        equ	629	;# 
  1254   000276                     U3RXPPS         equ	630	;# 
  1255   000277                     U3CTSPPS        equ	631	;# 
  1256   000278                     U4RXPPS         equ	632	;# 
  1257   000279                     U4CTSPPS        equ	633	;# 
  1258   00027A                     U5RXPPS         equ	634	;# 
  1259   00027B                     U5CTSPPS        equ	635	;# 
  1260   000286                     RC4I2C          equ	646	;# 
  1261   000287                     RC3I2C          equ	647	;# 
  1262   000288                     RB2I2C          equ	648	;# 
  1263   000289                     RB1I2C          equ	649	;# 
  1264   00028B                     I2C1RXB         equ	651	;# 
  1265   00028C                     I2C1TXB         equ	652	;# 
  1266   00028D                     I2C1CNT         equ	653	;# 
  1267   00028E                     I2C1ADB0        equ	654	;# 
  1268   00028F                     I2C1ADB1        equ	655	;# 
  1269   000290                     I2C1ADR0        equ	656	;# 
  1270   000291                     I2C1ADR1        equ	657	;# 
  1271   000292                     I2C1ADR2        equ	658	;# 
  1272   000293                     I2C1ADR3        equ	659	;# 
  1273   000294                     I2C1CON0        equ	660	;# 
  1274   000295                     I2C1CON1        equ	661	;# 
  1275   000296                     I2C1CON2        equ	662	;# 
  1276   000297                     I2C1ERR         equ	663	;# 
  1277   000298                     I2C1STAT0       equ	664	;# 
  1278   000299                     I2C1STAT1       equ	665	;# 
  1279   00029A                     I2C1PIR         equ	666	;# 
  1280   00029B                     I2C1PIE         equ	667	;# 
  1281   00029C                     I2C1CLK         equ	668	;# 
  1282   00029D                     I2C1BTO         equ	669	;# 
  1283   0002A1                     U1RXB           equ	673	;# 
  1284   0002A1                     U1RXBL          equ	673	;# 
  1285   0002A2                     U1RXCHK         equ	674	;# 
  1286   0002A3                     U1TXB           equ	675	;# 
  1287   0002A3                     U1TXBL          equ	675	;# 
  1288   0002A4                     U1TXCHK         equ	676	;# 
  1289   0002A5                     U1P1            equ	677	;# 
  1290   0002A5                     U1P1L           equ	677	;# 
  1291   0002A6                     U1P1H           equ	678	;# 
  1292   0002A7                     U1P2            equ	679	;# 
  1293   0002A7                     U1P2L           equ	679	;# 
  1294   0002A8                     U1P2H           equ	680	;# 
  1295   0002A9                     U1P3            equ	681	;# 
  1296   0002A9                     U1P3L           equ	681	;# 
  1297   0002AA                     U1P3H           equ	682	;# 
  1298   0002AB                     U1CON0          equ	683	;# 
  1299   0002AC                     U1CON1          equ	684	;# 
  1300   0002AD                     U1CON2          equ	685	;# 
  1301   0002AE                     U1BRG           equ	686	;# 
  1302   0002AE                     U1BRGL          equ	686	;# 
  1303   0002AF                     U1BRGH          equ	687	;# 
  1304   0002B0                     U1FIFO          equ	688	;# 
  1305   0002B1                     U1UIR           equ	689	;# 
  1306   0002B2                     U1ERRIR         equ	690	;# 
  1307   0002B3                     U1ERRIE         equ	691	;# 
  1308   0002B4                     U2RXB           equ	692	;# 
  1309   0002B4                     U2RXBL          equ	692	;# 
  1310   0002B6                     U2TXB           equ	694	;# 
  1311   0002B6                     U2TXBL          equ	694	;# 
  1312   0002B8                     U2P1            equ	696	;# 
  1313   0002B8                     U2P1L           equ	696	;# 
  1314   0002BA                     U2P2            equ	698	;# 
  1315   0002BA                     U2P2L           equ	698	;# 
  1316   0002BC                     U2P3            equ	700	;# 
  1317   0002BC                     U2P3L           equ	700	;# 
  1318   0002BE                     U2CON0          equ	702	;# 
  1319   0002BF                     U2CON1          equ	703	;# 
  1320   0002C0                     U2CON2          equ	704	;# 
  1321   0002C1                     U2BRG           equ	705	;# 
  1322   0002C1                     U2BRGL          equ	705	;# 
  1323   0002C2                     U2BRGH          equ	706	;# 
  1324   0002C3                     U2FIFO          equ	707	;# 
  1325   0002C4                     U2UIR           equ	708	;# 
  1326   0002C5                     U2ERRIR         equ	709	;# 
  1327   0002C6                     U2ERRIE         equ	710	;# 
  1328   0002C7                     U3RXB           equ	711	;# 
  1329   0002C7                     U3RXBL          equ	711	;# 
  1330   0002C9                     U3TXB           equ	713	;# 
  1331   0002C9                     U3TXBL          equ	713	;# 
  1332   0002CB                     U3P1            equ	715	;# 
  1333   0002CB                     U3P1L           equ	715	;# 
  1334   0002CD                     U3P2            equ	717	;# 
  1335   0002CD                     U3P2L           equ	717	;# 
  1336   0002CF                     U3P3            equ	719	;# 
  1337   0002CF                     U3P3L           equ	719	;# 
  1338   0002D1                     U3CON0          equ	721	;# 
  1339   0002D2                     U3CON1          equ	722	;# 
  1340   0002D3                     U3CON2          equ	723	;# 
  1341   0002D4                     U3BRG           equ	724	;# 
  1342   0002D4                     U3BRGL          equ	724	;# 
  1343   0002D5                     U3BRGH          equ	725	;# 
  1344   0002D6                     U3FIFO          equ	726	;# 
  1345   0002D7                     U3UIR           equ	727	;# 
  1346   0002D8                     U3ERRIR         equ	728	;# 
  1347   0002D9                     U3ERRIE         equ	729	;# 
  1348   0002DA                     U4RXB           equ	730	;# 
  1349   0002DA                     U4RXBL          equ	730	;# 
  1350   0002DC                     U4TXB           equ	732	;# 
  1351   0002DC                     U4TXBL          equ	732	;# 
  1352   0002DE                     U4P1            equ	734	;# 
  1353   0002DE                     U4P1L           equ	734	;# 
  1354   0002E0                     U4P2            equ	736	;# 
  1355   0002E0                     U4P2L           equ	736	;# 
  1356   0002E2                     U4P3            equ	738	;# 
  1357   0002E2                     U4P3L           equ	738	;# 
  1358   0002E4                     U4CON0          equ	740	;# 
  1359   0002E5                     U4CON1          equ	741	;# 
  1360   0002E6                     U4CON2          equ	742	;# 
  1361   0002E7                     U4BRG           equ	743	;# 
  1362   0002E7                     U4BRGL          equ	743	;# 
  1363   0002E8                     U4BRGH          equ	744	;# 
  1364   0002E9                     U4FIFO          equ	745	;# 
  1365   0002EA                     U4UIR           equ	746	;# 
  1366   0002EB                     U4ERRIR         equ	747	;# 
  1367   0002EC                     U4ERRIE         equ	748	;# 
  1368   0002ED                     U5RXB           equ	749	;# 
  1369   0002ED                     U5RXBL          equ	749	;# 
  1370   0002EF                     U5TXB           equ	751	;# 
  1371   0002EF                     U5TXBL          equ	751	;# 
  1372   0002F1                     U5P1            equ	753	;# 
  1373   0002F1                     U5P1L           equ	753	;# 
  1374   0002F3                     U5P2            equ	755	;# 
  1375   0002F3                     U5P2L           equ	755	;# 
  1376   0002F5                     U5P3            equ	757	;# 
  1377   0002F5                     U5P3L           equ	757	;# 
  1378   0002F7                     U5CON0          equ	759	;# 
  1379   0002F8                     U5CON1          equ	760	;# 
  1380   0002F9                     U5CON2          equ	761	;# 
  1381   0002FA                     U5BRG           equ	762	;# 
  1382   0002FA                     U5BRGL          equ	762	;# 
  1383   0002FB                     U5BRGH          equ	763	;# 
  1384   0002FC                     U5FIFO          equ	764	;# 
  1385   0002FD                     U5UIR           equ	765	;# 
  1386   0002FE                     U5ERRIR         equ	766	;# 
  1387   0002FF                     U5ERRIE         equ	767	;# 
  1388   000300                     SMT1TMR         equ	768	;# 
  1389   000300                     SMT1TMRL        equ	768	;# 
  1390   000301                     SMT1TMRH        equ	769	;# 
  1391   000302                     SMT1TMRU        equ	770	;# 
  1392   000303                     SMT1CPR         equ	771	;# 
  1393   000303                     SMT1CPRL        equ	771	;# 
  1394   000304                     SMT1CPRH        equ	772	;# 
  1395   000305                     SMT1CPRU        equ	773	;# 
  1396   000306                     SMT1CPW         equ	774	;# 
  1397   000306                     SMT1CPWL        equ	774	;# 
  1398   000307                     SMT1CPWH        equ	775	;# 
  1399   000308                     SMT1CPWU        equ	776	;# 
  1400   000309                     SMT1PR          equ	777	;# 
  1401   000309                     SMT1PRL         equ	777	;# 
  1402   00030A                     SMT1PRH         equ	778	;# 
  1403   00030B                     SMT1PRU         equ	779	;# 
  1404   00030C                     SMT1CON0        equ	780	;# 
  1405   00030D                     SMT1CON1        equ	781	;# 
  1406   00030E                     SMT1STAT        equ	782	;# 
  1407   00030F                     SMT1CLK         equ	783	;# 
  1408   000310                     SMT1SIG         equ	784	;# 
  1409   000311                     SMT1WIN         equ	785	;# 
  1410   000318                     TMR0L           equ	792	;# 
  1411   000318                     TMR0            equ	792	;# 
  1412   000319                     TMR0H           equ	793	;# 
  1413   000319                     PR0             equ	793	;# 
  1414   00031A                     T0CON0          equ	794	;# 
  1415   00031B                     T0CON1          equ	795	;# 
  1416   00031C                     TMR1            equ	796	;# 
  1417   00031C                     TMR1L           equ	796	;# 
  1418   00031D                     TMR1H           equ	797	;# 
  1419   00031E                     T1CON           equ	798	;# 
  1420   00031E                     TMR1CON         equ	798	;# 
  1421   00031F                     T1GCON          equ	799	;# 
  1422   00031F                     TMR1GCON        equ	799	;# 
  1423   000320                     T1GATE          equ	800	;# 
  1424   000320                     TMR1GATE        equ	800	;# 
  1425   000321                     T1CLK           equ	801	;# 
  1426   000321                     TMR1CLK         equ	801	;# 
  1427   000321                     PR1             equ	801	;# 
  1428   000322                     T2TMR           equ	802	;# 
  1429   000322                     TMR2            equ	802	;# 
  1430   000323                     T2PR            equ	803	;# 
  1431   000323                     PR2             equ	803	;# 
  1432   000324                     T2CON           equ	804	;# 
  1433   000325                     T2HLT           equ	805	;# 
  1434   000326                     T2CLKCON        equ	806	;# 
  1435   000326                     T2CLK           equ	806	;# 
  1436   000327                     T2RST           equ	807	;# 
  1437   000328                     TMR3            equ	808	;# 
  1438   000328                     TMR3L           equ	808	;# 
  1439   000329                     TMR3H           equ	809	;# 
  1440   00032A                     T3CON           equ	810	;# 
  1441   00032A                     TMR3CON         equ	810	;# 
  1442   00032B                     T3GCON          equ	811	;# 
  1443   00032B                     TMR3GCON        equ	811	;# 
  1444   00032C                     T3GATE          equ	812	;# 
  1445   00032C                     TMR3GATE        equ	812	;# 
  1446   00032D                     T3CLK           equ	813	;# 
  1447   00032D                     TMR3CLK         equ	813	;# 
  1448   00032D                     PR3             equ	813	;# 
  1449   00032E                     T4TMR           equ	814	;# 
  1450   00032E                     TMR4            equ	814	;# 
  1451   00032F                     T4PR            equ	815	;# 
  1452   00032F                     PR4             equ	815	;# 
  1453   000330                     T4CON           equ	816	;# 
  1454   000331                     T4HLT           equ	817	;# 
  1455   000332                     T4CLKCON        equ	818	;# 
  1456   000332                     T4CLK           equ	818	;# 
  1457   000333                     T4RST           equ	819	;# 
  1458   000334                     TMR5            equ	820	;# 
  1459   000334                     TMR5L           equ	820	;# 
  1460   000335                     TMR5H           equ	821	;# 
  1461   000336                     T5CON           equ	822	;# 
  1462   000336                     TMR5CON         equ	822	;# 
  1463   000337                     T5GCON          equ	823	;# 
  1464   000337                     TMR5GCON        equ	823	;# 
  1465   000338                     T5GATE          equ	824	;# 
  1466   000338                     TMR5GATE        equ	824	;# 
  1467   000339                     T5CLK           equ	825	;# 
  1468   000339                     TMR5CLK         equ	825	;# 
  1469   000339                     PR5             equ	825	;# 
  1470   00033A                     T6TMR           equ	826	;# 
  1471   00033A                     TMR6            equ	826	;# 
  1472   00033B                     T6PR            equ	827	;# 
  1473   00033B                     PR6             equ	827	;# 
  1474   00033C                     T6CON           equ	828	;# 
  1475   00033D                     T6HLT           equ	829	;# 
  1476   00033E                     T6CLKCON        equ	830	;# 
  1477   00033E                     T6CLK           equ	830	;# 
  1478   00033F                     T6RST           equ	831	;# 
  1479   000340                     CCPR1           equ	832	;# 
  1480   000340                     CCPR1L          equ	832	;# 
  1481   000341                     CCPR1H          equ	833	;# 
  1482   000342                     CCP1CON         equ	834	;# 
  1483   000343                     CCP1CAP         equ	835	;# 
  1484   000344                     CCPR2           equ	836	;# 
  1485   000344                     CCPR2L          equ	836	;# 
  1486   000345                     CCPR2H          equ	837	;# 
  1487   000346                     CCP2CON         equ	838	;# 
  1488   000347                     CCP2CAP         equ	839	;# 
  1489   000348                     CCPR3           equ	840	;# 
  1490   000348                     CCPR3L          equ	840	;# 
  1491   000349                     CCPR3H          equ	841	;# 
  1492   00034A                     CCP3CON         equ	842	;# 
  1493   00034B                     CCP3CAP         equ	843	;# 
  1494   00034C                     CCPTMRS0        equ	844	;# 
  1495   00034F                     CRCDATA         equ	847	;# 
  1496   00034F                     CRCDATL         equ	847	;# 
  1497   000350                     CRCDATH         equ	848	;# 
  1498   000351                     CRCACC          equ	849	;# 
  1499   000351                     CRCACCL         equ	849	;# 
  1500   000352                     CRCACCH         equ	850	;# 
  1501   000353                     CRCSHFT         equ	851	;# 
  1502   000353                     CRCSHIFTL       equ	851	;# 
  1503   000354                     CRCSHIFTH       equ	852	;# 
  1504   000355                     CRCXOR          equ	853	;# 
  1505   000355                     CRCXORL         equ	853	;# 
  1506   000356                     CRCXORH         equ	854	;# 
  1507   000357                     CRCCON0         equ	855	;# 
  1508   000358                     CRCCON1         equ	856	;# 
  1509   00035A                     SCANLADR        equ	858	;# 
  1510   00035A                     SCANLADRL       equ	858	;# 
  1511   00035B                     SCANLADRH       equ	859	;# 
  1512   00035C                     SCANLADRU       equ	860	;# 
  1513   00035D                     SCANHADR        equ	861	;# 
  1514   00035D                     SCANHADRL       equ	861	;# 
  1515   00035E                     SCANHADRH       equ	862	;# 
  1516   00035F                     SCANHADRU       equ	863	;# 
  1517   000360                     SCANCON0        equ	864	;# 
  1518   000361                     SCANTRIG        equ	865	;# 
  1519   000362                     IPR0            equ	866	;# 
  1520   000363                     IPR1            equ	867	;# 
  1521   000364                     IPR2            equ	868	;# 
  1522   000365                     IPR3            equ	869	;# 
  1523   000366                     IPR4            equ	870	;# 
  1524   000367                     IPR5            equ	871	;# 
  1525   000368                     IPR6            equ	872	;# 
  1526   000369                     IPR7            equ	873	;# 
  1527   00036A                     IPR8            equ	874	;# 
  1528   00036B                     IPR9            equ	875	;# 
  1529   00036C                     IPR10           equ	876	;# 
  1530   00036D                     IPR11           equ	877	;# 
  1531   00036E                     IPR12           equ	878	;# 
  1532   00036F                     IPR13           equ	879	;# 
  1533   000370                     IPR14           equ	880	;# 
  1534   000371                     IPR15           equ	881	;# 
  1535   000373                     STATUS_CSHAD    equ	883	;# 
  1536   000374                     WREG_CSHAD      equ	884	;# 
  1537   000375                     BSR_CSHAD       equ	885	;# 
  1538   000376                     SHADCON         equ	886	;# 
  1539   000377                     STATUS_SHAD     equ	887	;# 
  1540   000378                     WREG_SHAD       equ	888	;# 
  1541   000379                     BSR_SHAD        equ	889	;# 
  1542   00037A                     PCLATH_SHAD     equ	890	;# 
  1543   00037B                     PCLATU_SHAD     equ	891	;# 
  1544   00037C                     FSR0SH          equ	892	;# 
  1545   00037C                     FSR0L_SHAD      equ	892	;# 
  1546   00037D                     FSR0H_SHAD      equ	893	;# 
  1547   00037E                     FSR1SH          equ	894	;# 
  1548   00037E                     FSR1L_SHAD      equ	894	;# 
  1549   00037F                     FSR1H_SHAD      equ	895	;# 
  1550   000380                     FSR2SH          equ	896	;# 
  1551   000380                     FSR2L_SHAD      equ	896	;# 
  1552   000381                     FSR2H_SHAD      equ	897	;# 
  1553   000382                     PRODSH          equ	898	;# 
  1554   000382                     PRODL_SHAD      equ	898	;# 
  1555   000383                     PRODH_SHAD      equ	899	;# 
  1556   0003BC                     CWG1CLK         equ	956	;# 
  1557   0003BC                     CWG1CLKCON      equ	956	;# 
  1558   0003BD                     CWG1ISM         equ	957	;# 
  1559   0003BD                     CWG1DAT         equ	957	;# 
  1560   0003BE                     CWG1DBR         equ	958	;# 
  1561   0003BF                     CWG1DBF         equ	959	;# 
  1562   0003C0                     CWG1CON0        equ	960	;# 
  1563   0003C1                     CWG1CON1        equ	961	;# 
  1564   0003C2                     CWG1AS0         equ	962	;# 
  1565   0003C3                     CWG1AS1         equ	963	;# 
  1566   0003C4                     CWG1STR         equ	964	;# 
  1567   0003C5                     CWG2CLK         equ	965	;# 
  1568   0003C5                     CWG2CLKCON      equ	965	;# 
  1569   0003C6                     CWG2ISM         equ	966	;# 
  1570   0003C6                     CWG2DAT         equ	966	;# 
  1571   0003C7                     CWG2DBR         equ	967	;# 
  1572   0003C8                     CWG2DBF         equ	968	;# 
  1573   0003C9                     CWG2CON0        equ	969	;# 
  1574   0003CA                     CWG2CON1        equ	970	;# 
  1575   0003CB                     CWG2AS0         equ	971	;# 
  1576   0003CC                     CWG2AS1         equ	972	;# 
  1577   0003CD                     CWG2STR         equ	973	;# 
  1578   0003CE                     CWG3CLK         equ	974	;# 
  1579   0003CE                     CWG3CLKCON      equ	974	;# 
  1580   0003CF                     CWG3ISM         equ	975	;# 
  1581   0003CF                     CWG3DAT         equ	975	;# 
  1582   0003D0                     CWG3DBR         equ	976	;# 
  1583   0003D1                     CWG3DBF         equ	977	;# 
  1584   0003D2                     CWG3CON0        equ	978	;# 
  1585   0003D3                     CWG3CON1        equ	979	;# 
  1586   0003D4                     CWG3AS0         equ	980	;# 
  1587   0003D5                     CWG3AS1         equ	981	;# 
  1588   0003D6                     CWG3STR         equ	982	;# 
  1589   0003D7                     FVRCON          equ	983	;# 
  1590   0003D8                     ADCPCON         equ	984	;# 
  1591   0003D8                     ADCP            equ	984	;# 
  1592   0003D9                     ADLTH           equ	985	;# 
  1593   0003D9                     ADLTHL          equ	985	;# 
  1594   0003DA                     ADLTHH          equ	986	;# 
  1595   0003DB                     ADUTH           equ	987	;# 
  1596   0003DB                     ADUTHL          equ	987	;# 
  1597   0003DC                     ADUTHH          equ	988	;# 
  1598   0003DD                     ADERR           equ	989	;# 
  1599   0003DD                     ADERRL          equ	989	;# 
  1600   0003DE                     ADERRH          equ	990	;# 
  1601   0003DF                     ADSTPT          equ	991	;# 
  1602   0003DF                     ADSTPTL         equ	991	;# 
  1603   0003E0                     ADSTPTH         equ	992	;# 
  1604   0003E1                     ADFLTR          equ	993	;# 
  1605   0003E1                     ADFLTRL         equ	993	;# 
  1606   0003E2                     ADFLTRH         equ	994	;# 
  1607   0003E3                     ADACC           equ	995	;# 
  1608   0003E3                     ADACCL          equ	995	;# 
  1609   0003E4                     ADACCH          equ	996	;# 
  1610   0003E5                     ADACCU          equ	997	;# 
  1611   0003E6                     ADCNT           equ	998	;# 
  1612   0003E7                     ADRPT           equ	999	;# 
  1613   0003E8                     ADPREV          equ	1000	;# 
  1614   0003E8                     ADPREVL         equ	1000	;# 
  1615   0003E9                     ADPREVH         equ	1001	;# 
  1616   0003EA                     ADRES           equ	1002	;# 
  1617   0003EA                     ADRESL          equ	1002	;# 
  1618   0003EB                     ADRESH          equ	1003	;# 
  1619   0003EC                     ADPCH           equ	1004	;# 
  1620   0003EE                     ADACQ           equ	1006	;# 
  1621   0003EE                     ADACQL          equ	1006	;# 
  1622   0003EF                     ADACQH          equ	1007	;# 
  1623   0003F0                     ADCAP           equ	1008	;# 
  1624   0003F1                     ADPRE           equ	1009	;# 
  1625   0003F1                     ADPREL          equ	1009	;# 
  1626   0003F2                     ADPREH          equ	1010	;# 
  1627   0003F3                     ADCON0          equ	1011	;# 
  1628   0003F4                     ADCON1          equ	1012	;# 
  1629   0003F5                     ADCON2          equ	1013	;# 
  1630   0003F6                     ADCON3          equ	1014	;# 
  1631   0003F7                     ADSTAT          equ	1015	;# 
  1632   0003F8                     ADREF           equ	1016	;# 
  1633   0003F9                     ADACT           equ	1017	;# 
  1634   0003FA                     ADCLK           equ	1018	;# 
  1635   000400                     ANSELA          equ	1024	;# 
  1636   000401                     WPUA            equ	1025	;# 
  1637   000402                     ODCONA          equ	1026	;# 
  1638   000403                     SLRCONA         equ	1027	;# 
  1639   000404                     INLVLA          equ	1028	;# 
  1640   000405                     IOCAP           equ	1029	;# 
  1641   000406                     IOCAN           equ	1030	;# 
  1642   000407                     IOCAF           equ	1031	;# 
  1643   000408                     ANSELB          equ	1032	;# 
  1644   000409                     WPUB            equ	1033	;# 
  1645   00040A                     ODCONB          equ	1034	;# 
  1646   00040B                     SLRCONB         equ	1035	;# 
  1647   00040C                     INLVLB          equ	1036	;# 
  1648   00040D                     IOCBP           equ	1037	;# 
  1649   00040E                     IOCBN           equ	1038	;# 
  1650   00040F                     IOCBF           equ	1039	;# 
  1651   000410                     ANSELC          equ	1040	;# 
  1652   000411                     WPUC            equ	1041	;# 
  1653   000412                     ODCONC          equ	1042	;# 
  1654   000413                     SLRCONC         equ	1043	;# 
  1655   000414                     INLVLC          equ	1044	;# 
  1656   000415                     IOCCP           equ	1045	;# 
  1657   000416                     IOCCN           equ	1046	;# 
  1658   000417                     IOCCF           equ	1047	;# 
  1659   000418                     ANSELD          equ	1048	;# 
  1660   000419                     WPUD            equ	1049	;# 
  1661   00041A                     ODCOND          equ	1050	;# 
  1662   00041B                     SLRCOND         equ	1051	;# 
  1663   00041C                     INLVLD          equ	1052	;# 
  1664   000420                     ANSELE          equ	1056	;# 
  1665   000421                     WPUE            equ	1057	;# 
  1666   000422                     ODCONE          equ	1058	;# 
  1667   000423                     SLRCONE         equ	1059	;# 
  1668   000424                     INLVLE          equ	1060	;# 
  1669   000425                     IOCEP           equ	1061	;# 
  1670   000426                     IOCEN           equ	1062	;# 
  1671   000427                     IOCEF           equ	1063	;# 
  1672   000428                     ANSELF          equ	1064	;# 
  1673   000429                     WPUF            equ	1065	;# 
  1674   00042A                     ODCONF          equ	1066	;# 
  1675   00042B                     SLRCONF         equ	1067	;# 
  1676   00042C                     INLVLF          equ	1068	;# 
  1677   000440                     NCO1ACC         equ	1088	;# 
  1678   000440                     NCO1ACCL        equ	1088	;# 
  1679   000441                     NCO1ACCH        equ	1089	;# 
  1680   000442                     NCO1ACCU        equ	1090	;# 
  1681   000443                     NCO1INC         equ	1091	;# 
  1682   000443                     NCO1INCL        equ	1091	;# 
  1683   000444                     NCO1INCH        equ	1092	;# 
  1684   000445                     NCO1INCU        equ	1093	;# 
  1685   000446                     NCO1CON         equ	1094	;# 
  1686   000447                     NCO1CLK         equ	1095	;# 
  1687   000448                     NCO2ACC         equ	1096	;# 
  1688   000448                     NCO2ACCL        equ	1096	;# 
  1689   000449                     NCO2ACCH        equ	1097	;# 
  1690   00044A                     NCO2ACCU        equ	1098	;# 
  1691   00044B                     NCO2INC         equ	1099	;# 
  1692   00044B                     NCO2INCL        equ	1099	;# 
  1693   00044C                     NCO2INCH        equ	1100	;# 
  1694   00044D                     NCO2INCU        equ	1101	;# 
  1695   00044E                     NCO2CON         equ	1102	;# 
  1696   00044F                     NCO2CLK         equ	1103	;# 
  1697   000450                     NCO3ACC         equ	1104	;# 
  1698   000450                     NCO3ACCL        equ	1104	;# 
  1699   000451                     NCO3ACCH        equ	1105	;# 
  1700   000452                     NCO3ACCU        equ	1106	;# 
  1701   000453                     NCO3INC         equ	1107	;# 
  1702   000453                     NCO3INCL        equ	1107	;# 
  1703   000454                     NCO3INCH        equ	1108	;# 
  1704   000455                     NCO3INCU        equ	1109	;# 
  1705   000456                     NCO3CON         equ	1110	;# 
  1706   000457                     NCO3CLK         equ	1111	;# 
  1707   000459                     IVTLOCK         equ	1113	;# 
  1708   00045A                     IVTAD           equ	1114	;# 
  1709   00045A                     IVTADL          equ	1114	;# 
  1710   00045B                     IVTADH          equ	1115	;# 
  1711   00045C                     IVTADU          equ	1116	;# 
  1712   00045D                     IVTBASE         equ	1117	;# 
  1713   00045D                     IVTBASEL        equ	1117	;# 
  1714   00045E                     IVTBASEH        equ	1118	;# 
  1715   00045F                     IVTBASEU        equ	1119	;# 
  1716   000460                     PWM1ERS         equ	1120	;# 
  1717   000461                     PWM1CLK         equ	1121	;# 
  1718   000462                     PWM1LDS         equ	1122	;# 
  1719   000463                     PWM1PR          equ	1123	;# 
  1720   000463                     PWM1PRL         equ	1123	;# 
  1721   000464                     PWM1PRH         equ	1124	;# 
  1722   000465                     PWM1CPRE        equ	1125	;# 
  1723   000466                     PWM1PIPOS       equ	1126	;# 
  1724   000467                     PWM1GIR         equ	1127	;# 
  1725   000468                     PWM1GIE         equ	1128	;# 
  1726   000469                     PWM1CON         equ	1129	;# 
  1727   00046A                     PWM1S1CFG       equ	1130	;# 
  1728   00046B                     PWM1S1P1        equ	1131	;# 
  1729   00046B                     PWM1S1P1L       equ	1131	;# 
  1730   00046C                     PWM1S1P1H       equ	1132	;# 
  1731   00046D                     PWM1S1P2        equ	1133	;# 
  1732   00046D                     PWM1S1P2L       equ	1133	;# 
  1733   00046E                     PWM1S1P2H       equ	1134	;# 
  1734   00046F                     PWM2ERS         equ	1135	;# 
  1735   000470                     PWM2CLK         equ	1136	;# 
  1736   000471                     PWM2LDS         equ	1137	;# 
  1737   000472                     PWM2PR          equ	1138	;# 
  1738   000472                     PWM2PRL         equ	1138	;# 
  1739   000473                     PWM2PRH         equ	1139	;# 
  1740   000474                     PWM2CPRE        equ	1140	;# 
  1741   000475                     PWM2PIPOS       equ	1141	;# 
  1742   000476                     PWM2GIR         equ	1142	;# 
  1743   000477                     PWM2GIE         equ	1143	;# 
  1744   000478                     PWM2CON         equ	1144	;# 
  1745   000479                     PWM2S1CFG       equ	1145	;# 
  1746   00047A                     PWM2S1P1        equ	1146	;# 
  1747   00047A                     PWM2S1P1L       equ	1146	;# 
  1748   00047B                     PWM2S1P1H       equ	1147	;# 
  1749   00047C                     PWM2S1P2        equ	1148	;# 
  1750   00047C                     PWM2S1P2L       equ	1148	;# 
  1751   00047D                     PWM2S1P2H       equ	1149	;# 
  1752   00047E                     PWM3ERS         equ	1150	;# 
  1753   00047F                     PWM3CLK         equ	1151	;# 
  1754   000480                     PWM3LDS         equ	1152	;# 
  1755   000481                     PWM3PR          equ	1153	;# 
  1756   000481                     PWM3PRL         equ	1153	;# 
  1757   000482                     PWM3PRH         equ	1154	;# 
  1758   000483                     PWM3CPRE        equ	1155	;# 
  1759   000484                     PWM3PIPOS       equ	1156	;# 
  1760   000485                     PWM3GIR         equ	1157	;# 
  1761   000486                     PWM3GIE         equ	1158	;# 
  1762   000487                     PWM3CON         equ	1159	;# 
  1763   000488                     PWM3S1CFG       equ	1160	;# 
  1764   000489                     PWM3S1P1        equ	1161	;# 
  1765   000489                     PWM3S1P1L       equ	1161	;# 
  1766   00048A                     PWM3S1P1H       equ	1162	;# 
  1767   00048B                     PWM3S1P2        equ	1163	;# 
  1768   00048B                     PWM3S1P2L       equ	1163	;# 
  1769   00048C                     PWM3S1P2H       equ	1164	;# 
  1770   00049C                     PWMLOAD         equ	1180	;# 
  1771   00049D                     PWMEN           equ	1181	;# 
  1772   00049E                     PIE0            equ	1182	;# 
  1773   00049F                     PIE1            equ	1183	;# 
  1774   0004A0                     PIE2            equ	1184	;# 
  1775   0004A1                     PIE3            equ	1185	;# 
  1776   0004A2                     PIE4            equ	1186	;# 
  1777   0004A3                     PIE5            equ	1187	;# 
  1778   0004A4                     PIE6            equ	1188	;# 
  1779   0004A5                     PIE7            equ	1189	;# 
  1780   0004A6                     PIE8            equ	1190	;# 
  1781   0004A7                     PIE9            equ	1191	;# 
  1782   0004A8                     PIE10           equ	1192	;# 
  1783   0004A9                     PIE11           equ	1193	;# 
  1784   0004AA                     PIE12           equ	1194	;# 
  1785   0004AB                     PIE13           equ	1195	;# 
  1786   0004AC                     PIE14           equ	1196	;# 
  1787   0004AD                     PIE15           equ	1197	;# 
  1788   0004AE                     PIR0            equ	1198	;# 
  1789   0004AF                     PIR1            equ	1199	;# 
  1790   0004B0                     PIR2            equ	1200	;# 
  1791   0004B1                     PIR3            equ	1201	;# 
  1792   0004B2                     PIR4            equ	1202	;# 
  1793   0004B3                     PIR5            equ	1203	;# 
  1794   0004B4                     PIR6            equ	1204	;# 
  1795   0004B5                     PIR7            equ	1205	;# 
  1796   0004B6                     PIR8            equ	1206	;# 
  1797   0004B7                     PIR9            equ	1207	;# 
  1798   0004B8                     PIR10           equ	1208	;# 
  1799   0004B9                     PIR11           equ	1209	;# 
  1800   0004BA                     PIR12           equ	1210	;# 
  1801   0004BB                     PIR13           equ	1211	;# 
  1802   0004BC                     PIR14           equ	1212	;# 
  1803   0004BD                     PIR15           equ	1213	;# 
  1804   0004BE                     LATA            equ	1214	;# 
  1805   0004BF                     LATB            equ	1215	;# 
  1806   0004C0                     LATC            equ	1216	;# 
  1807   0004C1                     LATD            equ	1217	;# 
  1808   0004C2                     LATE            equ	1218	;# 
  1809   0004C3                     LATF            equ	1219	;# 
  1810   0004C6                     TRISA           equ	1222	;# 
  1811   0004C7                     TRISB           equ	1223	;# 
  1812   0004C8                     TRISC           equ	1224	;# 
  1813   0004C9                     TRISD           equ	1225	;# 
  1814   0004CA                     TRISE           equ	1226	;# 
  1815   0004CB                     TRISF           equ	1227	;# 
  1816   0004CE                     PORTA           equ	1230	;# 
  1817   0004CF                     PORTB           equ	1231	;# 
  1818   0004D0                     PORTC           equ	1232	;# 
  1819   0004D1                     PORTD           equ	1233	;# 
  1820   0004D2                     PORTE           equ	1234	;# 
  1821   0004D3                     PORTF           equ	1235	;# 
  1822   0004D6                     INTCON0         equ	1238	;# 
  1823   0004D7                     INTCON1         equ	1239	;# 
  1824   0004D8                     STATUS          equ	1240	;# 
  1825   0004D9                     FSR2            equ	1241	;# 
  1826   0004D9                     FSR2L           equ	1241	;# 
  1827   0004DA                     FSR2H           equ	1242	;# 
  1828   0004DB                     PLUSW2          equ	1243	;# 
  1829   0004DC                     PREINC2         equ	1244	;# 
  1830   0004DD                     POSTDEC2        equ	1245	;# 
  1831   0004DE                     POSTINC2        equ	1246	;# 
  1832   0004DF                     INDF2           equ	1247	;# 
  1833   0004E0                     BSR             equ	1248	;# 
  1834   0004E1                     FSR1            equ	1249	;# 
  1835   0004E1                     FSR1L           equ	1249	;# 
  1836   0004E2                     FSR1H           equ	1250	;# 
  1837   0004E3                     PLUSW1          equ	1251	;# 
  1838   0004E4                     PREINC1         equ	1252	;# 
  1839   0004E5                     POSTDEC1        equ	1253	;# 
  1840   0004E6                     POSTINC1        equ	1254	;# 
  1841   0004E7                     INDF1           equ	1255	;# 
  1842   0004E8                     WREG            equ	1256	;# 
  1843   0004E9                     FSR0            equ	1257	;# 
  1844   0004E9                     FSR0L           equ	1257	;# 
  1845   0004EA                     FSR0H           equ	1258	;# 
  1846   0004EB                     PLUSW0          equ	1259	;# 
  1847   0004EC                     PREINC0         equ	1260	;# 
  1848   0004ED                     POSTDEC0        equ	1261	;# 
  1849   0004EE                     POSTINC0        equ	1262	;# 
  1850   0004EF                     INDF0           equ	1263	;# 
  1851   0004F0                     PCON0           equ	1264	;# 
  1852   0004F1                     PCON1           equ	1265	;# 
  1853   0004F2                     CPUDOZE         equ	1266	;# 
  1854   0004F3                     PROD            equ	1267	;# 
  1855   0004F3                     PRODL           equ	1267	;# 
  1856   0004F4                     PRODH           equ	1268	;# 
  1857   0004F5                     TABLAT          equ	1269	;# 
  1858   0004F6                     TBLPTR          equ	1270	;# 
  1859   0004F6                     TBLPTRL         equ	1270	;# 
  1860   0004F7                     TBLPTRH         equ	1271	;# 
  1861   0004F8                     TBLPTRU         equ	1272	;# 
  1862   0004F9                     PCLAT           equ	1273	;# 
  1863   0004F9                     PCL             equ	1273	;# 
  1864   0004FA                     PCLATH          equ	1274	;# 
  1865   0004FB                     PCLATU          equ	1275	;# 
  1866   0004FC                     STKPTR          equ	1276	;# 
  1867   0004FD                     TOS             equ	1277	;# 
  1868   0004FD                     TOSL            equ	1277	;# 
  1869   0004FE                     TOSH            equ	1278	;# 
  1870   0004FF                     TOSU            equ	1279	;# 
  1871   000039                     CLKRCON         equ	57	;# 
  1872   00003A                     CLKRCLK         equ	58	;# 
  1873   000040                     NVMCON0         equ	64	;# 
  1874   000041                     NVMCON1         equ	65	;# 
  1875   000042                     NVMLOCK         equ	66	;# 
  1876   000043                     NVMADR          equ	67	;# 
  1877   000043                     NVMADRL         equ	67	;# 
  1878   000044                     NVMADRH         equ	68	;# 
  1879   000045                     NVMADRU         equ	69	;# 
  1880   000046                     NVMDAT          equ	70	;# 
  1881   000046                     NVMDATL         equ	70	;# 
  1882   000047                     NVMDATH         equ	71	;# 
  1883   000048                     VREGCON         equ	72	;# 
  1884   000049                     BORCON          equ	73	;# 
  1885   00004A                     HLVDCON0        equ	74	;# 
  1886   00004B                     HLVDCON1        equ	75	;# 
  1887   00004C                     ZCDCON          equ	76	;# 
  1888   000060                     PMD0            equ	96	;# 
  1889   000061                     PMD1            equ	97	;# 
  1890   000063                     PMD3            equ	99	;# 
  1891   000064                     PMD4            equ	100	;# 
  1892   000065                     PMD5            equ	101	;# 
  1893   000066                     PMD6            equ	102	;# 
  1894   000067                     PMD7            equ	103	;# 
  1895   000068                     PMD8            equ	104	;# 
  1896   00006A                     MD1CON0         equ	106	;# 
  1897   00006B                     MD1CON1         equ	107	;# 
  1898   00006C                     MD1SRC          equ	108	;# 
  1899   00006D                     MD1CARL         equ	109	;# 
  1900   00006E                     MD1CARH         equ	110	;# 
  1901   00006F                     CMOUT           equ	111	;# 
  1902   000070                     CM1CON0         equ	112	;# 
  1903   000071                     CM1CON1         equ	113	;# 
  1904   000072                     CM1NCH          equ	114	;# 
  1905   000073                     CM1PCH          equ	115	;# 
  1906   000074                     CM2CON0         equ	116	;# 
  1907   000075                     CM2CON1         equ	117	;# 
  1908   000076                     CM2NCH          equ	118	;# 
  1909   000077                     CM2PCH          equ	119	;# 
  1910   000078                     WDTCON0         equ	120	;# 
  1911   000079                     WDTCON1         equ	121	;# 
  1912   00007A                     WDTPS           equ	122	;# 
  1913   00007A                     WDTPSL          equ	122	;# 
  1914   00007B                     WDTPSH          equ	123	;# 
  1915   00007C                     WDTTMR          equ	124	;# 
  1916   00007D                     DAC1DAT         equ	125	;# 
  1917   00007D                     DAC1DATL        equ	125	;# 
  1918   00007F                     DAC1CON         equ	127	;# 
  1919   000080                     SPI1RXB         equ	128	;# 
  1920   000081                     SPI1TXB         equ	129	;# 
  1921   000082                     SPI1TCNT        equ	130	;# 
  1922   000082                     SPI1TCNTL       equ	130	;# 
  1923   000083                     SPI1TCNTH       equ	131	;# 
  1924   000084                     SPI1CON0        equ	132	;# 
  1925   000085                     SPI1CON1        equ	133	;# 
  1926   000086                     SPI1CON2        equ	134	;# 
  1927   000087                     SPI1STATUS      equ	135	;# 
  1928   000088                     SPI1TWIDTH      equ	136	;# 
  1929   000089                     SPI1BAUD        equ	137	;# 
  1930   00008A                     SPI1INTF        equ	138	;# 
  1931   00008B                     SPI1INTE        equ	139	;# 
  1932   00008C                     SPI1CLK         equ	140	;# 
  1933   00008D                     SPI2RXB         equ	141	;# 
  1934   00008E                     SPI2TXB         equ	142	;# 
  1935   00008F                     SPI2TCNT        equ	143	;# 
  1936   00008F                     SPI2TCNTL       equ	143	;# 
  1937   000090                     SPI2TCNTH       equ	144	;# 
  1938   000091                     SPI2CON0        equ	145	;# 
  1939   000092                     SPI2CON1        equ	146	;# 
  1940   000093                     SPI2CON2        equ	147	;# 
  1941   000094                     SPI2STATUS      equ	148	;# 
  1942   000095                     SPI2TWIDTH      equ	149	;# 
  1943   000096                     SPI2BAUD        equ	150	;# 
  1944   000097                     SPI2INTF        equ	151	;# 
  1945   000098                     SPI2INTE        equ	152	;# 
  1946   000099                     SPI2CLK         equ	153	;# 
  1947   0000AC                     ACTCON          equ	172	;# 
  1948   0000AD                     OSCCON1         equ	173	;# 
  1949   0000AE                     OSCCON2         equ	174	;# 
  1950   0000AF                     OSCCON3         equ	175	;# 
  1951   0000B0                     OSCTUNE         equ	176	;# 
  1952   0000B1                     OSCFRQ          equ	177	;# 
  1953   0000B1                     OSCFREQ         equ	177	;# 
  1954   0000B2                     OSCSTAT         equ	178	;# 
  1955   0000B2                     OSCSTAT1        equ	178	;# 
  1956   0000B3                     OSCEN           equ	179	;# 
  1957   0000B4                     PRLOCK          equ	180	;# 
  1958   0000B5                     SCANPR          equ	181	;# 
  1959   0000B6                     DMA1PR          equ	182	;# 
  1960   0000B7                     DMA2PR          equ	183	;# 
  1961   0000B8                     DMA3PR          equ	184	;# 
  1962   0000B9                     DMA4PR          equ	185	;# 
  1963   0000BA                     DMA5PR          equ	186	;# 
  1964   0000BB                     DMA6PR          equ	187	;# 
  1965   0000BE                     MAINPR          equ	190	;# 
  1966   0000BF                     ISRPR           equ	191	;# 
  1967   0000D4                     CLCDATA         equ	212	;# 
  1968   0000D5                     CLCSELECT       equ	213	;# 
  1969   0000D6                     CLCnCON         equ	214	;# 
  1970   0000D7                     CLCnPOL         equ	215	;# 
  1971   0000D8                     CLCnSEL0        equ	216	;# 
  1972   0000D9                     CLCnSEL1        equ	217	;# 
  1973   0000DA                     CLCnSEL2        equ	218	;# 
  1974   0000DB                     CLCnSEL3        equ	219	;# 
  1975   0000DC                     CLCnGLS0        equ	220	;# 
  1976   0000DD                     CLCnGLS1        equ	221	;# 
  1977   0000DE                     CLCnGLS2        equ	222	;# 
  1978   0000DF                     CLCnGLS3        equ	223	;# 
  1979   0000E8                     DMASELECT       equ	232	;# 
  1980   0000E9                     DMAnBUF         equ	233	;# 
  1981   0000EA                     DMAnDCNT        equ	234	;# 
  1982   0000EA                     DMAnDCNTL       equ	234	;# 
  1983   0000EB                     DMAnDCNTH       equ	235	;# 
  1984   0000EC                     DMAnDPTR        equ	236	;# 
  1985   0000EC                     DMAnDPTRL       equ	236	;# 
  1986   0000ED                     DMAnDPTRH       equ	237	;# 
  1987   0000EE                     DMAnDSZ         equ	238	;# 
  1988   0000EE                     DMAnDSZL        equ	238	;# 
  1989   0000EF                     DMAnDSZH        equ	239	;# 
  1990   0000F0                     DMAnDSA         equ	240	;# 
  1991   0000F0                     DMAnDSAL        equ	240	;# 
  1992   0000F1                     DMAnDSAH        equ	241	;# 
  1993   0000F2                     DMAnSCNT        equ	242	;# 
  1994   0000F2                     DMAnSCNTL       equ	242	;# 
  1995   0000F3                     DMAnSCNTH       equ	243	;# 
  1996   0000F4                     DMAnSPTR        equ	244	;# 
  1997   0000F4                     DMAnSPTRL       equ	244	;# 
  1998   0000F5                     DMAnSPTRH       equ	245	;# 
  1999   0000F6                     DMAnSPTRU       equ	246	;# 
  2000   0000F7                     DMAnSSZ         equ	247	;# 
  2001   0000F7                     DMAnSSZL        equ	247	;# 
  2002   0000F8                     DMAnSSZH        equ	248	;# 
  2003   0000F9                     DMAnSSA         equ	249	;# 
  2004   0000F9                     DMAnSSAL        equ	249	;# 
  2005   0000FA                     DMAnSSAH        equ	250	;# 
  2006   0000FB                     DMAnSSAU        equ	251	;# 
  2007   0000FC                     DMAnCON0        equ	252	;# 
  2008   0000FD                     DMAnCON1        equ	253	;# 
  2009   0000FE                     DMAnAIRQ        equ	254	;# 
  2010   0000FF                     DMAnSIRQ        equ	255	;# 
  2011   000200                     PPSLOCK         equ	512	;# 
  2012   000201                     RA0PPS          equ	513	;# 
  2013   000202                     RA1PPS          equ	514	;# 
  2014   000203                     RA2PPS          equ	515	;# 
  2015   000204                     RA3PPS          equ	516	;# 
  2016   000205                     RA4PPS          equ	517	;# 
  2017   000206                     RA5PPS          equ	518	;# 
  2018   000207                     RA6PPS          equ	519	;# 
  2019   000208                     RA7PPS          equ	520	;# 
  2020   000209                     RB0PPS          equ	521	;# 
  2021   00020A                     RB1PPS          equ	522	;# 
  2022   00020B                     RB2PPS          equ	523	;# 
  2023   00020C                     RB3PPS          equ	524	;# 
  2024   00020D                     RB4PPS          equ	525	;# 
  2025   00020E                     RB5PPS          equ	526	;# 
  2026   00020F                     RB6PPS          equ	527	;# 
  2027   000210                     RB7PPS          equ	528	;# 
  2028   000211                     RC0PPS          equ	529	;# 
  2029   000212                     RC1PPS          equ	530	;# 
  2030   000213                     RC2PPS          equ	531	;# 
  2031   000214                     RC3PPS          equ	532	;# 
  2032   000215                     RC4PPS          equ	533	;# 
  2033   000216                     RC5PPS          equ	534	;# 
  2034   000217                     RC6PPS          equ	535	;# 
  2035   000218                     RC7PPS          equ	536	;# 
  2036   000219                     RD0PPS          equ	537	;# 
  2037   00021A                     RD1PPS          equ	538	;# 
  2038   00021B                     RD2PPS          equ	539	;# 
  2039   00021C                     RD3PPS          equ	540	;# 
  2040   00021D                     RD4PPS          equ	541	;# 
  2041   00021E                     RD5PPS          equ	542	;# 
  2042   00021F                     RD6PPS          equ	543	;# 
  2043   000220                     RD7PPS          equ	544	;# 
  2044   000221                     RE0PPS          equ	545	;# 
  2045   000222                     RE1PPS          equ	546	;# 
  2046   000223                     RE2PPS          equ	547	;# 
  2047   000229                     RF0PPS          equ	553	;# 
  2048   00022A                     RF1PPS          equ	554	;# 
  2049   00022B                     RF2PPS          equ	555	;# 
  2050   00022C                     RF3PPS          equ	556	;# 
  2051   00022D                     RF4PPS          equ	557	;# 
  2052   00022E                     RF5PPS          equ	558	;# 
  2053   00022F                     RF6PPS          equ	559	;# 
  2054   000230                     RF7PPS          equ	560	;# 
  2055   00023E                     INT0PPS         equ	574	;# 
  2056   00023F                     INT1PPS         equ	575	;# 
  2057   000240                     INT2PPS         equ	576	;# 
  2058   000241                     T0CKIPPS        equ	577	;# 
  2059   000242                     T1CKIPPS        equ	578	;# 
  2060   000243                     T1GPPS          equ	579	;# 
  2061   000244                     T3CKIPPS        equ	580	;# 
  2062   000245                     T3GPPS          equ	581	;# 
  2063   000246                     T5CKIPPS        equ	582	;# 
  2064   000247                     T5GPPS          equ	583	;# 
  2065   000248                     T2INPPS         equ	584	;# 
  2066   000249                     T4INPPS         equ	585	;# 
  2067   00024A                     T6INPPS         equ	586	;# 
  2068   00024F                     CCP1PPS         equ	591	;# 
  2069   000250                     CCP2PPS         equ	592	;# 
  2070   000251                     CCP3PPS         equ	593	;# 
  2071   000253                     PWM1ERSPPS      equ	595	;# 
  2072   000254                     PWM2ERSPPS      equ	596	;# 
  2073   000255                     PWM3ERSPPS      equ	597	;# 
  2074   000257                     PWMIN0PPS       equ	599	;# 
  2075   000258                     PWMIN1PPS       equ	600	;# 
  2076   000259                     SMT1WINPPS      equ	601	;# 
  2077   00025A                     SMT1SIGPPS      equ	602	;# 
  2078   00025B                     CWG1PPS         equ	603	;# 
  2079   00025B                     CWG1INPPS       equ	603	;# 
  2080   00025C                     CWG2PPS         equ	604	;# 
  2081   00025C                     CWG2INPPS       equ	604	;# 
  2082   00025D                     CWG3PPS         equ	605	;# 
  2083   00025D                     CWG3INPPS       equ	605	;# 
  2084   00025E                     MD1CARLPPS      equ	606	;# 
  2085   00025E                     MDCARLPPS       equ	606	;# 
  2086   00025F                     MD1CARHPPS      equ	607	;# 
  2087   00025F                     MDCARHPPS       equ	607	;# 
  2088   000260                     MD1SRCPPS       equ	608	;# 
  2089   000260                     MDSRCPPS        equ	608	;# 
  2090   000261                     CLCIN0PPS       equ	609	;# 
  2091   000262                     CLCIN1PPS       equ	610	;# 
  2092   000263                     CLCIN2PPS       equ	611	;# 
  2093   000264                     CLCIN3PPS       equ	612	;# 
  2094   000265                     CLCIN4PPS       equ	613	;# 
  2095   000266                     CLCIN5PPS       equ	614	;# 
  2096   000267                     CLCIN6PPS       equ	615	;# 
  2097   000268                     CLCIN7PPS       equ	616	;# 
  2098   000269                     ADACTPPS        equ	617	;# 
  2099   00026A                     SPI1SCKPPS      equ	618	;# 
  2100   00026B                     SPI1SDIPPS      equ	619	;# 
  2101   00026C                     SPI1SSPPS       equ	620	;# 
  2102   00026D                     SPI2SCKPPS      equ	621	;# 
  2103   00026E                     SPI2SDIPPS      equ	622	;# 
  2104   00026F                     SPI2SSPPS       equ	623	;# 
  2105   000270                     I2C1SDAPPS      equ	624	;# 
  2106   000271                     I2C1SCLPPS      equ	625	;# 
  2107   000272                     U1RXPPS         equ	626	;# 
  2108   000273                     U1CTSPPS        equ	627	;# 
  2109   000274                     U2RXPPS         equ	628	;# 
  2110   000275                     U2CTSPPS        equ	629	;# 
  2111   000276                     U3RXPPS         equ	630	;# 
  2112   000277                     U3CTSPPS        equ	631	;# 
  2113   000278                     U4RXPPS         equ	632	;# 
  2114   000279                     U4CTSPPS        equ	633	;# 
  2115   00027A                     U5RXPPS         equ	634	;# 
  2116   00027B                     U5CTSPPS        equ	635	;# 
  2117   000286                     RC4I2C          equ	646	;# 
  2118   000287                     RC3I2C          equ	647	;# 
  2119   000288                     RB2I2C          equ	648	;# 
  2120   000289                     RB1I2C          equ	649	;# 
  2121   00028B                     I2C1RXB         equ	651	;# 
  2122   00028C                     I2C1TXB         equ	652	;# 
  2123   00028D                     I2C1CNT         equ	653	;# 
  2124   00028E                     I2C1ADB0        equ	654	;# 
  2125   00028F                     I2C1ADB1        equ	655	;# 
  2126   000290                     I2C1ADR0        equ	656	;# 
  2127   000291                     I2C1ADR1        equ	657	;# 
  2128   000292                     I2C1ADR2        equ	658	;# 
  2129   000293                     I2C1ADR3        equ	659	;# 
  2130   000294                     I2C1CON0        equ	660	;# 
  2131   000295                     I2C1CON1        equ	661	;# 
  2132   000296                     I2C1CON2        equ	662	;# 
  2133   000297                     I2C1ERR         equ	663	;# 
  2134   000298                     I2C1STAT0       equ	664	;# 
  2135   000299                     I2C1STAT1       equ	665	;# 
  2136   00029A                     I2C1PIR         equ	666	;# 
  2137   00029B                     I2C1PIE         equ	667	;# 
  2138   00029C                     I2C1CLK         equ	668	;# 
  2139   00029D                     I2C1BTO         equ	669	;# 
  2140   0002A1                     U1RXB           equ	673	;# 
  2141   0002A1                     U1RXBL          equ	673	;# 
  2142   0002A2                     U1RXCHK         equ	674	;# 
  2143   0002A3                     U1TXB           equ	675	;# 
  2144   0002A3                     U1TXBL          equ	675	;# 
  2145   0002A4                     U1TXCHK         equ	676	;# 
  2146   0002A5                     U1P1            equ	677	;# 
  2147   0002A5                     U1P1L           equ	677	;# 
  2148   0002A6                     U1P1H           equ	678	;# 
  2149   0002A7                     U1P2            equ	679	;# 
  2150   0002A7                     U1P2L           equ	679	;# 
  2151   0002A8                     U1P2H           equ	680	;# 
  2152   0002A9                     U1P3            equ	681	;# 
  2153   0002A9                     U1P3L           equ	681	;# 
  2154   0002AA                     U1P3H           equ	682	;# 
  2155   0002AB                     U1CON0          equ	683	;# 
  2156   0002AC                     U1CON1          equ	684	;# 
  2157   0002AD                     U1CON2          equ	685	;# 
  2158   0002AE                     U1BRG           equ	686	;# 
  2159   0002AE                     U1BRGL          equ	686	;# 
  2160   0002AF                     U1BRGH          equ	687	;# 
  2161   0002B0                     U1FIFO          equ	688	;# 
  2162   0002B1                     U1UIR           equ	689	;# 
  2163   0002B2                     U1ERRIR         equ	690	;# 
  2164   0002B3                     U1ERRIE         equ	691	;# 
  2165   0002B4                     U2RXB           equ	692	;# 
  2166   0002B4                     U2RXBL          equ	692	;# 
  2167   0002B6                     U2TXB           equ	694	;# 
  2168   0002B6                     U2TXBL          equ	694	;# 
  2169   0002B8                     U2P1            equ	696	;# 
  2170   0002B8                     U2P1L           equ	696	;# 
  2171   0002BA                     U2P2            equ	698	;# 
  2172   0002BA                     U2P2L           equ	698	;# 
  2173   0002BC                     U2P3            equ	700	;# 
  2174   0002BC                     U2P3L           equ	700	;# 
  2175   0002BE                     U2CON0          equ	702	;# 
  2176   0002BF                     U2CON1          equ	703	;# 
  2177   0002C0                     U2CON2          equ	704	;# 
  2178   0002C1                     U2BRG           equ	705	;# 
  2179   0002C1                     U2BRGL          equ	705	;# 
  2180   0002C2                     U2BRGH          equ	706	;# 
  2181   0002C3                     U2FIFO          equ	707	;# 
  2182   0002C4                     U2UIR           equ	708	;# 
  2183   0002C5                     U2ERRIR         equ	709	;# 
  2184   0002C6                     U2ERRIE         equ	710	;# 
  2185   0002C7                     U3RXB           equ	711	;# 
  2186   0002C7                     U3RXBL          equ	711	;# 
  2187   0002C9                     U3TXB           equ	713	;# 
  2188   0002C9                     U3TXBL          equ	713	;# 
  2189   0002CB                     U3P1            equ	715	;# 
  2190   0002CB                     U3P1L           equ	715	;# 
  2191   0002CD                     U3P2            equ	717	;# 
  2192   0002CD                     U3P2L           equ	717	;# 
  2193   0002CF                     U3P3            equ	719	;# 
  2194   0002CF                     U3P3L           equ	719	;# 
  2195   0002D1                     U3CON0          equ	721	;# 
  2196   0002D2                     U3CON1          equ	722	;# 
  2197   0002D3                     U3CON2          equ	723	;# 
  2198   0002D4                     U3BRG           equ	724	;# 
  2199   0002D4                     U3BRGL          equ	724	;# 
  2200   0002D5                     U3BRGH          equ	725	;# 
  2201   0002D6                     U3FIFO          equ	726	;# 
  2202   0002D7                     U3UIR           equ	727	;# 
  2203   0002D8                     U3ERRIR         equ	728	;# 
  2204   0002D9                     U3ERRIE         equ	729	;# 
  2205   0002DA                     U4RXB           equ	730	;# 
  2206   0002DA                     U4RXBL          equ	730	;# 
  2207   0002DC                     U4TXB           equ	732	;# 
  2208   0002DC                     U4TXBL          equ	732	;# 
  2209   0002DE                     U4P1            equ	734	;# 
  2210   0002DE                     U4P1L           equ	734	;# 
  2211   0002E0                     U4P2            equ	736	;# 
  2212   0002E0                     U4P2L           equ	736	;# 
  2213   0002E2                     U4P3            equ	738	;# 
  2214   0002E2                     U4P3L           equ	738	;# 
  2215   0002E4                     U4CON0          equ	740	;# 
  2216   0002E5                     U4CON1          equ	741	;# 
  2217   0002E6                     U4CON2          equ	742	;# 
  2218   0002E7                     U4BRG           equ	743	;# 
  2219   0002E7                     U4BRGL          equ	743	;# 
  2220   0002E8                     U4BRGH          equ	744	;# 
  2221   0002E9                     U4FIFO          equ	745	;# 
  2222   0002EA                     U4UIR           equ	746	;# 
  2223   0002EB                     U4ERRIR         equ	747	;# 
  2224   0002EC                     U4ERRIE         equ	748	;# 
  2225   0002ED                     U5RXB           equ	749	;# 
  2226   0002ED                     U5RXBL          equ	749	;# 
  2227   0002EF                     U5TXB           equ	751	;# 
  2228   0002EF                     U5TXBL          equ	751	;# 
  2229   0002F1                     U5P1            equ	753	;# 
  2230   0002F1                     U5P1L           equ	753	;# 
  2231   0002F3                     U5P2            equ	755	;# 
  2232   0002F3                     U5P2L           equ	755	;# 
  2233   0002F5                     U5P3            equ	757	;# 
  2234   0002F5                     U5P3L           equ	757	;# 
  2235   0002F7                     U5CON0          equ	759	;# 
  2236   0002F8                     U5CON1          equ	760	;# 
  2237   0002F9                     U5CON2          equ	761	;# 
  2238   0002FA                     U5BRG           equ	762	;# 
  2239   0002FA                     U5BRGL          equ	762	;# 
  2240   0002FB                     U5BRGH          equ	763	;# 
  2241   0002FC                     U5FIFO          equ	764	;# 
  2242   0002FD                     U5UIR           equ	765	;# 
  2243   0002FE                     U5ERRIR         equ	766	;# 
  2244   0002FF                     U5ERRIE         equ	767	;# 
  2245   000300                     SMT1TMR         equ	768	;# 
  2246   000300                     SMT1TMRL        equ	768	;# 
  2247   000301                     SMT1TMRH        equ	769	;# 
  2248   000302                     SMT1TMRU        equ	770	;# 
  2249   000303                     SMT1CPR         equ	771	;# 
  2250   000303                     SMT1CPRL        equ	771	;# 
  2251   000304                     SMT1CPRH        equ	772	;# 
  2252   000305                     SMT1CPRU        equ	773	;# 
  2253   000306                     SMT1CPW         equ	774	;# 
  2254   000306                     SMT1CPWL        equ	774	;# 
  2255   000307                     SMT1CPWH        equ	775	;# 
  2256   000308                     SMT1CPWU        equ	776	;# 
  2257   000309                     SMT1PR          equ	777	;# 
  2258   000309                     SMT1PRL         equ	777	;# 
  2259   00030A                     SMT1PRH         equ	778	;# 
  2260   00030B                     SMT1PRU         equ	779	;# 
  2261   00030C                     SMT1CON0        equ	780	;# 
  2262   00030D                     SMT1CON1        equ	781	;# 
  2263   00030E                     SMT1STAT        equ	782	;# 
  2264   00030F                     SMT1CLK         equ	783	;# 
  2265   000310                     SMT1SIG         equ	784	;# 
  2266   000311                     SMT1WIN         equ	785	;# 
  2267   000318                     TMR0L           equ	792	;# 
  2268   000318                     TMR0            equ	792	;# 
  2269   000319                     TMR0H           equ	793	;# 
  2270   000319                     PR0             equ	793	;# 
  2271   00031A                     T0CON0          equ	794	;# 
  2272   00031B                     T0CON1          equ	795	;# 
  2273   00031C                     TMR1            equ	796	;# 
  2274   00031C                     TMR1L           equ	796	;# 
  2275   00031D                     TMR1H           equ	797	;# 
  2276   00031E                     T1CON           equ	798	;# 
  2277   00031E                     TMR1CON         equ	798	;# 
  2278   00031F                     T1GCON          equ	799	;# 
  2279   00031F                     TMR1GCON        equ	799	;# 
  2280   000320                     T1GATE          equ	800	;# 
  2281   000320                     TMR1GATE        equ	800	;# 
  2282   000321                     T1CLK           equ	801	;# 
  2283   000321                     TMR1CLK         equ	801	;# 
  2284   000321                     PR1             equ	801	;# 
  2285   000322                     T2TMR           equ	802	;# 
  2286   000322                     TMR2            equ	802	;# 
  2287   000323                     T2PR            equ	803	;# 
  2288   000323                     PR2             equ	803	;# 
  2289   000324                     T2CON           equ	804	;# 
  2290   000325                     T2HLT           equ	805	;# 
  2291   000326                     T2CLKCON        equ	806	;# 
  2292   000326                     T2CLK           equ	806	;# 
  2293   000327                     T2RST           equ	807	;# 
  2294   000328                     TMR3            equ	808	;# 
  2295   000328                     TMR3L           equ	808	;# 
  2296   000329                     TMR3H           equ	809	;# 
  2297   00032A                     T3CON           equ	810	;# 
  2298   00032A                     TMR3CON         equ	810	;# 
  2299   00032B                     T3GCON          equ	811	;# 
  2300   00032B                     TMR3GCON        equ	811	;# 
  2301   00032C                     T3GATE          equ	812	;# 
  2302   00032C                     TMR3GATE        equ	812	;# 
  2303   00032D                     T3CLK           equ	813	;# 
  2304   00032D                     TMR3CLK         equ	813	;# 
  2305   00032D                     PR3             equ	813	;# 
  2306   00032E                     T4TMR           equ	814	;# 
  2307   00032E                     TMR4            equ	814	;# 
  2308   00032F                     T4PR            equ	815	;# 
  2309   00032F                     PR4             equ	815	;# 
  2310   000330                     T4CON           equ	816	;# 
  2311   000331                     T4HLT           equ	817	;# 
  2312   000332                     T4CLKCON        equ	818	;# 
  2313   000332                     T4CLK           equ	818	;# 
  2314   000333                     T4RST           equ	819	;# 
  2315   000334                     TMR5            equ	820	;# 
  2316   000334                     TMR5L           equ	820	;# 
  2317   000335                     TMR5H           equ	821	;# 
  2318   000336                     T5CON           equ	822	;# 
  2319   000336                     TMR5CON         equ	822	;# 
  2320   000337                     T5GCON          equ	823	;# 
  2321   000337                     TMR5GCON        equ	823	;# 
  2322   000338                     T5GATE          equ	824	;# 
  2323   000338                     TMR5GATE        equ	824	;# 
  2324   000339                     T5CLK           equ	825	;# 
  2325   000339                     TMR5CLK         equ	825	;# 
  2326   000339                     PR5             equ	825	;# 
  2327   00033A                     T6TMR           equ	826	;# 
  2328   00033A                     TMR6            equ	826	;# 
  2329   00033B                     T6PR            equ	827	;# 
  2330   00033B                     PR6             equ	827	;# 
  2331   00033C                     T6CON           equ	828	;# 
  2332   00033D                     T6HLT           equ	829	;# 
  2333   00033E                     T6CLKCON        equ	830	;# 
  2334   00033E                     T6CLK           equ	830	;# 
  2335   00033F                     T6RST           equ	831	;# 
  2336   000340                     CCPR1           equ	832	;# 
  2337   000340                     CCPR1L          equ	832	;# 
  2338   000341                     CCPR1H          equ	833	;# 
  2339   000342                     CCP1CON         equ	834	;# 
  2340   000343                     CCP1CAP         equ	835	;# 
  2341   000344                     CCPR2           equ	836	;# 
  2342   000344                     CCPR2L          equ	836	;# 
  2343   000345                     CCPR2H          equ	837	;# 
  2344   000346                     CCP2CON         equ	838	;# 
  2345   000347                     CCP2CAP         equ	839	;# 
  2346   000348                     CCPR3           equ	840	;# 
  2347   000348                     CCPR3L          equ	840	;# 
  2348   000349                     CCPR3H          equ	841	;# 
  2349   00034A                     CCP3CON         equ	842	;# 
  2350   00034B                     CCP3CAP         equ	843	;# 
  2351   00034C                     CCPTMRS0        equ	844	;# 
  2352   00034F                     CRCDATA         equ	847	;# 
  2353   00034F                     CRCDATL         equ	847	;# 
  2354   000350                     CRCDATH         equ	848	;# 
  2355   000351                     CRCACC          equ	849	;# 
  2356   000351                     CRCACCL         equ	849	;# 
  2357   000352                     CRCACCH         equ	850	;# 
  2358   000353                     CRCSHFT         equ	851	;# 
  2359   000353                     CRCSHIFTL       equ	851	;# 
  2360   000354                     CRCSHIFTH       equ	852	;# 
  2361   000355                     CRCXOR          equ	853	;# 
  2362   000355                     CRCXORL         equ	853	;# 
  2363   000356                     CRCXORH         equ	854	;# 
  2364   000357                     CRCCON0         equ	855	;# 
  2365   000358                     CRCCON1         equ	856	;# 
  2366   00035A                     SCANLADR        equ	858	;# 
  2367   00035A                     SCANLADRL       equ	858	;# 
  2368   00035B                     SCANLADRH       equ	859	;# 
  2369   00035C                     SCANLADRU       equ	860	;# 
  2370   00035D                     SCANHADR        equ	861	;# 
  2371   00035D                     SCANHADRL       equ	861	;# 
  2372   00035E                     SCANHADRH       equ	862	;# 
  2373   00035F                     SCANHADRU       equ	863	;# 
  2374   000360                     SCANCON0        equ	864	;# 
  2375   000361                     SCANTRIG        equ	865	;# 
  2376   000362                     IPR0            equ	866	;# 
  2377   000363                     IPR1            equ	867	;# 
  2378   000364                     IPR2            equ	868	;# 
  2379   000365                     IPR3            equ	869	;# 
  2380   000366                     IPR4            equ	870	;# 
  2381   000367                     IPR5            equ	871	;# 
  2382   000368                     IPR6            equ	872	;# 
  2383   000369                     IPR7            equ	873	;# 
  2384   00036A                     IPR8            equ	874	;# 
  2385   00036B                     IPR9            equ	875	;# 
  2386   00036C                     IPR10           equ	876	;# 
  2387   00036D                     IPR11           equ	877	;# 
  2388   00036E                     IPR12           equ	878	;# 
  2389   00036F                     IPR13           equ	879	;# 
  2390   000370                     IPR14           equ	880	;# 
  2391   000371                     IPR15           equ	881	;# 
  2392   000373                     STATUS_CSHAD    equ	883	;# 
  2393   000374                     WREG_CSHAD      equ	884	;# 
  2394   000375                     BSR_CSHAD       equ	885	;# 
  2395   000376                     SHADCON         equ	886	;# 
  2396   000377                     STATUS_SHAD     equ	887	;# 
  2397   000378                     WREG_SHAD       equ	888	;# 
  2398   000379                     BSR_SHAD        equ	889	;# 
  2399   00037A                     PCLATH_SHAD     equ	890	;# 
  2400   00037B                     PCLATU_SHAD     equ	891	;# 
  2401   00037C                     FSR0SH          equ	892	;# 
  2402   00037C                     FSR0L_SHAD      equ	892	;# 
  2403   00037D                     FSR0H_SHAD      equ	893	;# 
  2404   00037E                     FSR1SH          equ	894	;# 
  2405   00037E                     FSR1L_SHAD      equ	894	;# 
  2406   00037F                     FSR1H_SHAD      equ	895	;# 
  2407   000380                     FSR2SH          equ	896	;# 
  2408   000380                     FSR2L_SHAD      equ	896	;# 
  2409   000381                     FSR2H_SHAD      equ	897	;# 
  2410   000382                     PRODSH          equ	898	;# 
  2411   000382                     PRODL_SHAD      equ	898	;# 
  2412   000383                     PRODH_SHAD      equ	899	;# 
  2413   0003BC                     CWG1CLK         equ	956	;# 
  2414   0003BC                     CWG1CLKCON      equ	956	;# 
  2415   0003BD                     CWG1ISM         equ	957	;# 
  2416   0003BD                     CWG1DAT         equ	957	;# 
  2417   0003BE                     CWG1DBR         equ	958	;# 
  2418   0003BF                     CWG1DBF         equ	959	;# 
  2419   0003C0                     CWG1CON0        equ	960	;# 
  2420   0003C1                     CWG1CON1        equ	961	;# 
  2421   0003C2                     CWG1AS0         equ	962	;# 
  2422   0003C3                     CWG1AS1         equ	963	;# 
  2423   0003C4                     CWG1STR         equ	964	;# 
  2424   0003C5                     CWG2CLK         equ	965	;# 
  2425   0003C5                     CWG2CLKCON      equ	965	;# 
  2426   0003C6                     CWG2ISM         equ	966	;# 
  2427   0003C6                     CWG2DAT         equ	966	;# 
  2428   0003C7                     CWG2DBR         equ	967	;# 
  2429   0003C8                     CWG2DBF         equ	968	;# 
  2430   0003C9                     CWG2CON0        equ	969	;# 
  2431   0003CA                     CWG2CON1        equ	970	;# 
  2432   0003CB                     CWG2AS0         equ	971	;# 
  2433   0003CC                     CWG2AS1         equ	972	;# 
  2434   0003CD                     CWG2STR         equ	973	;# 
  2435   0003CE                     CWG3CLK         equ	974	;# 
  2436   0003CE                     CWG3CLKCON      equ	974	;# 
  2437   0003CF                     CWG3ISM         equ	975	;# 
  2438   0003CF                     CWG3DAT         equ	975	;# 
  2439   0003D0                     CWG3DBR         equ	976	;# 
  2440   0003D1                     CWG3DBF         equ	977	;# 
  2441   0003D2                     CWG3CON0        equ	978	;# 
  2442   0003D3                     CWG3CON1        equ	979	;# 
  2443   0003D4                     CWG3AS0         equ	980	;# 
  2444   0003D5                     CWG3AS1         equ	981	;# 
  2445   0003D6                     CWG3STR         equ	982	;# 
  2446   0003D7                     FVRCON          equ	983	;# 
  2447   0003D8                     ADCPCON         equ	984	;# 
  2448   0003D8                     ADCP            equ	984	;# 
  2449   0003D9                     ADLTH           equ	985	;# 
  2450   0003D9                     ADLTHL          equ	985	;# 
  2451   0003DA                     ADLTHH          equ	986	;# 
  2452   0003DB                     ADUTH           equ	987	;# 
  2453   0003DB                     ADUTHL          equ	987	;# 
  2454   0003DC                     ADUTHH          equ	988	;# 
  2455   0003DD                     ADERR           equ	989	;# 
  2456   0003DD                     ADERRL          equ	989	;# 
  2457   0003DE                     ADERRH          equ	990	;# 
  2458   0003DF                     ADSTPT          equ	991	;# 
  2459   0003DF                     ADSTPTL         equ	991	;# 
  2460   0003E0                     ADSTPTH         equ	992	;# 
  2461   0003E1                     ADFLTR          equ	993	;# 
  2462   0003E1                     ADFLTRL         equ	993	;# 
  2463   0003E2                     ADFLTRH         equ	994	;# 
  2464   0003E3                     ADACC           equ	995	;# 
  2465   0003E3                     ADACCL          equ	995	;# 
  2466   0003E4                     ADACCH          equ	996	;# 
  2467   0003E5                     ADACCU          equ	997	;# 
  2468   0003E6                     ADCNT           equ	998	;# 
  2469   0003E7                     ADRPT           equ	999	;# 
  2470   0003E8                     ADPREV          equ	1000	;# 
  2471   0003E8                     ADPREVL         equ	1000	;# 
  2472   0003E9                     ADPREVH         equ	1001	;# 
  2473   0003EA                     ADRES           equ	1002	;# 
  2474   0003EA                     ADRESL          equ	1002	;# 
  2475   0003EB                     ADRESH          equ	1003	;# 
  2476   0003EC                     ADPCH           equ	1004	;# 
  2477   0003EE                     ADACQ           equ	1006	;# 
  2478   0003EE                     ADACQL          equ	1006	;# 
  2479   0003EF                     ADACQH          equ	1007	;# 
  2480   0003F0                     ADCAP           equ	1008	;# 
  2481   0003F1                     ADPRE           equ	1009	;# 
  2482   0003F1                     ADPREL          equ	1009	;# 
  2483   0003F2                     ADPREH          equ	1010	;# 
  2484   0003F3                     ADCON0          equ	1011	;# 
  2485   0003F4                     ADCON1          equ	1012	;# 
  2486   0003F5                     ADCON2          equ	1013	;# 
  2487   0003F6                     ADCON3          equ	1014	;# 
  2488   0003F7                     ADSTAT          equ	1015	;# 
  2489   0003F8                     ADREF           equ	1016	;# 
  2490   0003F9                     ADACT           equ	1017	;# 
  2491   0003FA                     ADCLK           equ	1018	;# 
  2492   000400                     ANSELA          equ	1024	;# 
  2493   000401                     WPUA            equ	1025	;# 
  2494   000402                     ODCONA          equ	1026	;# 
  2495   000403                     SLRCONA         equ	1027	;# 
  2496   000404                     INLVLA          equ	1028	;# 
  2497   000405                     IOCAP           equ	1029	;# 
  2498   000406                     IOCAN           equ	1030	;# 
  2499   000407                     IOCAF           equ	1031	;# 
  2500   000408                     ANSELB          equ	1032	;# 
  2501   000409                     WPUB            equ	1033	;# 
  2502   00040A                     ODCONB          equ	1034	;# 
  2503   00040B                     SLRCONB         equ	1035	;# 
  2504   00040C                     INLVLB          equ	1036	;# 
  2505   00040D                     IOCBP           equ	1037	;# 
  2506   00040E                     IOCBN           equ	1038	;# 
  2507   00040F                     IOCBF           equ	1039	;# 
  2508   000410                     ANSELC          equ	1040	;# 
  2509   000411                     WPUC            equ	1041	;# 
  2510   000412                     ODCONC          equ	1042	;# 
  2511   000413                     SLRCONC         equ	1043	;# 
  2512   000414                     INLVLC          equ	1044	;# 
  2513   000415                     IOCCP           equ	1045	;# 
  2514   000416                     IOCCN           equ	1046	;# 
  2515   000417                     IOCCF           equ	1047	;# 
  2516   000418                     ANSELD          equ	1048	;# 
  2517   000419                     WPUD            equ	1049	;# 
  2518   00041A                     ODCOND          equ	1050	;# 
  2519   00041B                     SLRCOND         equ	1051	;# 
  2520   00041C                     INLVLD          equ	1052	;# 
  2521   000420                     ANSELE          equ	1056	;# 
  2522   000421                     WPUE            equ	1057	;# 
  2523   000422                     ODCONE          equ	1058	;# 
  2524   000423                     SLRCONE         equ	1059	;# 
  2525   000424                     INLVLE          equ	1060	;# 
  2526   000425                     IOCEP           equ	1061	;# 
  2527   000426                     IOCEN           equ	1062	;# 
  2528   000427                     IOCEF           equ	1063	;# 
  2529   000428                     ANSELF          equ	1064	;# 
  2530   000429                     WPUF            equ	1065	;# 
  2531   00042A                     ODCONF          equ	1066	;# 
  2532   00042B                     SLRCONF         equ	1067	;# 
  2533   00042C                     INLVLF          equ	1068	;# 
  2534   000440                     NCO1ACC         equ	1088	;# 
  2535   000440                     NCO1ACCL        equ	1088	;# 
  2536   000441                     NCO1ACCH        equ	1089	;# 
  2537   000442                     NCO1ACCU        equ	1090	;# 
  2538   000443                     NCO1INC         equ	1091	;# 
  2539   000443                     NCO1INCL        equ	1091	;# 
  2540   000444                     NCO1INCH        equ	1092	;# 
  2541   000445                     NCO1INCU        equ	1093	;# 
  2542   000446                     NCO1CON         equ	1094	;# 
  2543   000447                     NCO1CLK         equ	1095	;# 
  2544   000448                     NCO2ACC         equ	1096	;# 
  2545   000448                     NCO2ACCL        equ	1096	;# 
  2546   000449                     NCO2ACCH        equ	1097	;# 
  2547   00044A                     NCO2ACCU        equ	1098	;# 
  2548   00044B                     NCO2INC         equ	1099	;# 
  2549   00044B                     NCO2INCL        equ	1099	;# 
  2550   00044C                     NCO2INCH        equ	1100	;# 
  2551   00044D                     NCO2INCU        equ	1101	;# 
  2552   00044E                     NCO2CON         equ	1102	;# 
  2553   00044F                     NCO2CLK         equ	1103	;# 
  2554   000450                     NCO3ACC         equ	1104	;# 
  2555   000450                     NCO3ACCL        equ	1104	;# 
  2556   000451                     NCO3ACCH        equ	1105	;# 
  2557   000452                     NCO3ACCU        equ	1106	;# 
  2558   000453                     NCO3INC         equ	1107	;# 
  2559   000453                     NCO3INCL        equ	1107	;# 
  2560   000454                     NCO3INCH        equ	1108	;# 
  2561   000455                     NCO3INCU        equ	1109	;# 
  2562   000456                     NCO3CON         equ	1110	;# 
  2563   000457                     NCO3CLK         equ	1111	;# 
  2564   000459                     IVTLOCK         equ	1113	;# 
  2565   00045A                     IVTAD           equ	1114	;# 
  2566   00045A                     IVTADL          equ	1114	;# 
  2567   00045B                     IVTADH          equ	1115	;# 
  2568   00045C                     IVTADU          equ	1116	;# 
  2569   00045D                     IVTBASE         equ	1117	;# 
  2570   00045D                     IVTBASEL        equ	1117	;# 
  2571   00045E                     IVTBASEH        equ	1118	;# 
  2572   00045F                     IVTBASEU        equ	1119	;# 
  2573   000460                     PWM1ERS         equ	1120	;# 
  2574   000461                     PWM1CLK         equ	1121	;# 
  2575   000462                     PWM1LDS         equ	1122	;# 
  2576   000463                     PWM1PR          equ	1123	;# 
  2577   000463                     PWM1PRL         equ	1123	;# 
  2578   000464                     PWM1PRH         equ	1124	;# 
  2579   000465                     PWM1CPRE        equ	1125	;# 
  2580   000466                     PWM1PIPOS       equ	1126	;# 
  2581   000467                     PWM1GIR         equ	1127	;# 
  2582   000468                     PWM1GIE         equ	1128	;# 
  2583   000469                     PWM1CON         equ	1129	;# 
  2584   00046A                     PWM1S1CFG       equ	1130	;# 
  2585   00046B                     PWM1S1P1        equ	1131	;# 
  2586   00046B                     PWM1S1P1L       equ	1131	;# 
  2587   00046C                     PWM1S1P1H       equ	1132	;# 
  2588   00046D                     PWM1S1P2        equ	1133	;# 
  2589   00046D                     PWM1S1P2L       equ	1133	;# 
  2590   00046E                     PWM1S1P2H       equ	1134	;# 
  2591   00046F                     PWM2ERS         equ	1135	;# 
  2592   000470                     PWM2CLK         equ	1136	;# 
  2593   000471                     PWM2LDS         equ	1137	;# 
  2594   000472                     PWM2PR          equ	1138	;# 
  2595   000472                     PWM2PRL         equ	1138	;# 
  2596   000473                     PWM2PRH         equ	1139	;# 
  2597   000474                     PWM2CPRE        equ	1140	;# 
  2598   000475                     PWM2PIPOS       equ	1141	;# 
  2599   000476                     PWM2GIR         equ	1142	;# 
  2600   000477                     PWM2GIE         equ	1143	;# 
  2601   000478                     PWM2CON         equ	1144	;# 
  2602   000479                     PWM2S1CFG       equ	1145	;# 
  2603   00047A                     PWM2S1P1        equ	1146	;# 
  2604   00047A                     PWM2S1P1L       equ	1146	;# 
  2605   00047B                     PWM2S1P1H       equ	1147	;# 
  2606   00047C                     PWM2S1P2        equ	1148	;# 
  2607   00047C                     PWM2S1P2L       equ	1148	;# 
  2608   00047D                     PWM2S1P2H       equ	1149	;# 
  2609   00047E                     PWM3ERS         equ	1150	;# 
  2610   00047F                     PWM3CLK         equ	1151	;# 
  2611   000480                     PWM3LDS         equ	1152	;# 
  2612   000481                     PWM3PR          equ	1153	;# 
  2613   000481                     PWM3PRL         equ	1153	;# 
  2614   000482                     PWM3PRH         equ	1154	;# 
  2615   000483                     PWM3CPRE        equ	1155	;# 
  2616   000484                     PWM3PIPOS       equ	1156	;# 
  2617   000485                     PWM3GIR         equ	1157	;# 
  2618   000486                     PWM3GIE         equ	1158	;# 
  2619   000487                     PWM3CON         equ	1159	;# 
  2620   000488                     PWM3S1CFG       equ	1160	;# 
  2621   000489                     PWM3S1P1        equ	1161	;# 
  2622   000489                     PWM3S1P1L       equ	1161	;# 
  2623   00048A                     PWM3S1P1H       equ	1162	;# 
  2624   00048B                     PWM3S1P2        equ	1163	;# 
  2625   00048B                     PWM3S1P2L       equ	1163	;# 
  2626   00048C                     PWM3S1P2H       equ	1164	;# 
  2627   00049C                     PWMLOAD         equ	1180	;# 
  2628   00049D                     PWMEN           equ	1181	;# 
  2629   00049E                     PIE0            equ	1182	;# 
  2630   00049F                     PIE1            equ	1183	;# 
  2631   0004A0                     PIE2            equ	1184	;# 
  2632   0004A1                     PIE3            equ	1185	;# 
  2633   0004A2                     PIE4            equ	1186	;# 
  2634   0004A3                     PIE5            equ	1187	;# 
  2635   0004A4                     PIE6            equ	1188	;# 
  2636   0004A5                     PIE7            equ	1189	;# 
  2637   0004A6                     PIE8            equ	1190	;# 
  2638   0004A7                     PIE9            equ	1191	;# 
  2639   0004A8                     PIE10           equ	1192	;# 
  2640   0004A9                     PIE11           equ	1193	;# 
  2641   0004AA                     PIE12           equ	1194	;# 
  2642   0004AB                     PIE13           equ	1195	;# 
  2643   0004AC                     PIE14           equ	1196	;# 
  2644   0004AD                     PIE15           equ	1197	;# 
  2645   0004AE                     PIR0            equ	1198	;# 
  2646   0004AF                     PIR1            equ	1199	;# 
  2647   0004B0                     PIR2            equ	1200	;# 
  2648   0004B1                     PIR3            equ	1201	;# 
  2649   0004B2                     PIR4            equ	1202	;# 
  2650   0004B3                     PIR5            equ	1203	;# 
  2651   0004B4                     PIR6            equ	1204	;# 
  2652   0004B5                     PIR7            equ	1205	;# 
  2653   0004B6                     PIR8            equ	1206	;# 
  2654   0004B7                     PIR9            equ	1207	;# 
  2655   0004B8                     PIR10           equ	1208	;# 
  2656   0004B9                     PIR11           equ	1209	;# 
  2657   0004BA                     PIR12           equ	1210	;# 
  2658   0004BB                     PIR13           equ	1211	;# 
  2659   0004BC                     PIR14           equ	1212	;# 
  2660   0004BD                     PIR15           equ	1213	;# 
  2661   0004BE                     LATA            equ	1214	;# 
  2662   0004BF                     LATB            equ	1215	;# 
  2663   0004C0                     LATC            equ	1216	;# 
  2664   0004C1                     LATD            equ	1217	;# 
  2665   0004C2                     LATE            equ	1218	;# 
  2666   0004C3                     LATF            equ	1219	;# 
  2667   0004C6                     TRISA           equ	1222	;# 
  2668   0004C7                     TRISB           equ	1223	;# 
  2669   0004C8                     TRISC           equ	1224	;# 
  2670   0004C9                     TRISD           equ	1225	;# 
  2671   0004CA                     TRISE           equ	1226	;# 
  2672   0004CB                     TRISF           equ	1227	;# 
  2673   0004CE                     PORTA           equ	1230	;# 
  2674   0004CF                     PORTB           equ	1231	;# 
  2675   0004D0                     PORTC           equ	1232	;# 
  2676   0004D1                     PORTD           equ	1233	;# 
  2677   0004D2                     PORTE           equ	1234	;# 
  2678   0004D3                     PORTF           equ	1235	;# 
  2679   0004D6                     INTCON0         equ	1238	;# 
  2680   0004D7                     INTCON1         equ	1239	;# 
  2681   0004D8                     STATUS          equ	1240	;# 
  2682   0004D9                     FSR2            equ	1241	;# 
  2683   0004D9                     FSR2L           equ	1241	;# 
  2684   0004DA                     FSR2H           equ	1242	;# 
  2685   0004DB                     PLUSW2          equ	1243	;# 
  2686   0004DC                     PREINC2         equ	1244	;# 
  2687   0004DD                     POSTDEC2        equ	1245	;# 
  2688   0004DE                     POSTINC2        equ	1246	;# 
  2689   0004DF                     INDF2           equ	1247	;# 
  2690   0004E0                     BSR             equ	1248	;# 
  2691   0004E1                     FSR1            equ	1249	;# 
  2692   0004E1                     FSR1L           equ	1249	;# 
  2693   0004E2                     FSR1H           equ	1250	;# 
  2694   0004E3                     PLUSW1          equ	1251	;# 
  2695   0004E4                     PREINC1         equ	1252	;# 
  2696   0004E5                     POSTDEC1        equ	1253	;# 
  2697   0004E6                     POSTINC1        equ	1254	;# 
  2698   0004E7                     INDF1           equ	1255	;# 
  2699   0004E8                     WREG            equ	1256	;# 
  2700   0004E9                     FSR0            equ	1257	;# 
  2701   0004E9                     FSR0L           equ	1257	;# 
  2702   0004EA                     FSR0H           equ	1258	;# 
  2703   0004EB                     PLUSW0          equ	1259	;# 
  2704   0004EC                     PREINC0         equ	1260	;# 
  2705   0004ED                     POSTDEC0        equ	1261	;# 
  2706   0004EE                     POSTINC0        equ	1262	;# 
  2707   0004EF                     INDF0           equ	1263	;# 
  2708   0004F0                     PCON0           equ	1264	;# 
  2709   0004F1                     PCON1           equ	1265	;# 
  2710   0004F2                     CPUDOZE         equ	1266	;# 
  2711   0004F3                     PROD            equ	1267	;# 
  2712   0004F3                     PRODL           equ	1267	;# 
  2713   0004F4                     PRODH           equ	1268	;# 
  2714   0004F5                     TABLAT          equ	1269	;# 
  2715   0004F6                     TBLPTR          equ	1270	;# 
  2716   0004F6                     TBLPTRL         equ	1270	;# 
  2717   0004F7                     TBLPTRH         equ	1271	;# 
  2718   0004F8                     TBLPTRU         equ	1272	;# 
  2719   0004F9                     PCLAT           equ	1273	;# 
  2720   0004F9                     PCL             equ	1273	;# 
  2721   0004FA                     PCLATH          equ	1274	;# 
  2722   0004FB                     PCLATU          equ	1275	;# 
  2723   0004FC                     STKPTR          equ	1276	;# 
  2724   0004FD                     TOS             equ	1277	;# 
  2725   0004FD                     TOSL            equ	1277	;# 
  2726   0004FE                     TOSH            equ	1278	;# 
  2727   0004FF                     TOSU            equ	1279	;# 
  2728   000039                     CLKRCON         equ	57	;# 
  2729   00003A                     CLKRCLK         equ	58	;# 
  2730   000040                     NVMCON0         equ	64	;# 
  2731   000041                     NVMCON1         equ	65	;# 
  2732   000042                     NVMLOCK         equ	66	;# 
  2733   000043                     NVMADR          equ	67	;# 
  2734   000043                     NVMADRL         equ	67	;# 
  2735   000044                     NVMADRH         equ	68	;# 
  2736   000045                     NVMADRU         equ	69	;# 
  2737   000046                     NVMDAT          equ	70	;# 
  2738   000046                     NVMDATL         equ	70	;# 
  2739   000047                     NVMDATH         equ	71	;# 
  2740   000048                     VREGCON         equ	72	;# 
  2741   000049                     BORCON          equ	73	;# 
  2742   00004A                     HLVDCON0        equ	74	;# 
  2743   00004B                     HLVDCON1        equ	75	;# 
  2744   00004C                     ZCDCON          equ	76	;# 
  2745   000060                     PMD0            equ	96	;# 
  2746   000061                     PMD1            equ	97	;# 
  2747   000063                     PMD3            equ	99	;# 
  2748   000064                     PMD4            equ	100	;# 
  2749   000065                     PMD5            equ	101	;# 
  2750   000066                     PMD6            equ	102	;# 
  2751   000067                     PMD7            equ	103	;# 
  2752   000068                     PMD8            equ	104	;# 
  2753   00006A                     MD1CON0         equ	106	;# 
  2754   00006B                     MD1CON1         equ	107	;# 
  2755   00006C                     MD1SRC          equ	108	;# 
  2756   00006D                     MD1CARL         equ	109	;# 
  2757   00006E                     MD1CARH         equ	110	;# 
  2758   00006F                     CMOUT           equ	111	;# 
  2759   000070                     CM1CON0         equ	112	;# 
  2760   000071                     CM1CON1         equ	113	;# 
  2761   000072                     CM1NCH          equ	114	;# 
  2762   000073                     CM1PCH          equ	115	;# 
  2763   000074                     CM2CON0         equ	116	;# 
  2764   000075                     CM2CON1         equ	117	;# 
  2765   000076                     CM2NCH          equ	118	;# 
  2766   000077                     CM2PCH          equ	119	;# 
  2767   000078                     WDTCON0         equ	120	;# 
  2768   000079                     WDTCON1         equ	121	;# 
  2769   00007A                     WDTPS           equ	122	;# 
  2770   00007A                     WDTPSL          equ	122	;# 
  2771   00007B                     WDTPSH          equ	123	;# 
  2772   00007C                     WDTTMR          equ	124	;# 
  2773   00007D                     DAC1DAT         equ	125	;# 
  2774   00007D                     DAC1DATL        equ	125	;# 
  2775   00007F                     DAC1CON         equ	127	;# 
  2776   000080                     SPI1RXB         equ	128	;# 
  2777   000081                     SPI1TXB         equ	129	;# 
  2778   000082                     SPI1TCNT        equ	130	;# 
  2779   000082                     SPI1TCNTL       equ	130	;# 
  2780   000083                     SPI1TCNTH       equ	131	;# 
  2781   000084                     SPI1CON0        equ	132	;# 
  2782   000085                     SPI1CON1        equ	133	;# 
  2783   000086                     SPI1CON2        equ	134	;# 
  2784   000087                     SPI1STATUS      equ	135	;# 
  2785   000088                     SPI1TWIDTH      equ	136	;# 
  2786   000089                     SPI1BAUD        equ	137	;# 
  2787   00008A                     SPI1INTF        equ	138	;# 
  2788   00008B                     SPI1INTE        equ	139	;# 
  2789   00008C                     SPI1CLK         equ	140	;# 
  2790   00008D                     SPI2RXB         equ	141	;# 
  2791   00008E                     SPI2TXB         equ	142	;# 
  2792   00008F                     SPI2TCNT        equ	143	;# 
  2793   00008F                     SPI2TCNTL       equ	143	;# 
  2794   000090                     SPI2TCNTH       equ	144	;# 
  2795   000091                     SPI2CON0        equ	145	;# 
  2796   000092                     SPI2CON1        equ	146	;# 
  2797   000093                     SPI2CON2        equ	147	;# 
  2798   000094                     SPI2STATUS      equ	148	;# 
  2799   000095                     SPI2TWIDTH      equ	149	;# 
  2800   000096                     SPI2BAUD        equ	150	;# 
  2801   000097                     SPI2INTF        equ	151	;# 
  2802   000098                     SPI2INTE        equ	152	;# 
  2803   000099                     SPI2CLK         equ	153	;# 
  2804   0000AC                     ACTCON          equ	172	;# 
  2805   0000AD                     OSCCON1         equ	173	;# 
  2806   0000AE                     OSCCON2         equ	174	;# 
  2807   0000AF                     OSCCON3         equ	175	;# 
  2808   0000B0                     OSCTUNE         equ	176	;# 
  2809   0000B1                     OSCFRQ          equ	177	;# 
  2810   0000B1                     OSCFREQ         equ	177	;# 
  2811   0000B2                     OSCSTAT         equ	178	;# 
  2812   0000B2                     OSCSTAT1        equ	178	;# 
  2813   0000B3                     OSCEN           equ	179	;# 
  2814   0000B4                     PRLOCK          equ	180	;# 
  2815   0000B5                     SCANPR          equ	181	;# 
  2816   0000B6                     DMA1PR          equ	182	;# 
  2817   0000B7                     DMA2PR          equ	183	;# 
  2818   0000B8                     DMA3PR          equ	184	;# 
  2819   0000B9                     DMA4PR          equ	185	;# 
  2820   0000BA                     DMA5PR          equ	186	;# 
  2821   0000BB                     DMA6PR          equ	187	;# 
  2822   0000BE                     MAINPR          equ	190	;# 
  2823   0000BF                     ISRPR           equ	191	;# 
  2824   0000D4                     CLCDATA         equ	212	;# 
  2825   0000D5                     CLCSELECT       equ	213	;# 
  2826   0000D6                     CLCnCON         equ	214	;# 
  2827   0000D7                     CLCnPOL         equ	215	;# 
  2828   0000D8                     CLCnSEL0        equ	216	;# 
  2829   0000D9                     CLCnSEL1        equ	217	;# 
  2830   0000DA                     CLCnSEL2        equ	218	;# 
  2831   0000DB                     CLCnSEL3        equ	219	;# 
  2832   0000DC                     CLCnGLS0        equ	220	;# 
  2833   0000DD                     CLCnGLS1        equ	221	;# 
  2834   0000DE                     CLCnGLS2        equ	222	;# 
  2835   0000DF                     CLCnGLS3        equ	223	;# 
  2836   0000E8                     DMASELECT       equ	232	;# 
  2837   0000E9                     DMAnBUF         equ	233	;# 
  2838   0000EA                     DMAnDCNT        equ	234	;# 
  2839   0000EA                     DMAnDCNTL       equ	234	;# 
  2840   0000EB                     DMAnDCNTH       equ	235	;# 
  2841   0000EC                     DMAnDPTR        equ	236	;# 
  2842   0000EC                     DMAnDPTRL       equ	236	;# 
  2843   0000ED                     DMAnDPTRH       equ	237	;# 
  2844   0000EE                     DMAnDSZ         equ	238	;# 
  2845   0000EE                     DMAnDSZL        equ	238	;# 
  2846   0000EF                     DMAnDSZH        equ	239	;# 
  2847   0000F0                     DMAnDSA         equ	240	;# 
  2848   0000F0                     DMAnDSAL        equ	240	;# 
  2849   0000F1                     DMAnDSAH        equ	241	;# 
  2850   0000F2                     DMAnSCNT        equ	242	;# 
  2851   0000F2                     DMAnSCNTL       equ	242	;# 
  2852   0000F3                     DMAnSCNTH       equ	243	;# 
  2853   0000F4                     DMAnSPTR        equ	244	;# 
  2854   0000F4                     DMAnSPTRL       equ	244	;# 
  2855   0000F5                     DMAnSPTRH       equ	245	;# 
  2856   0000F6                     DMAnSPTRU       equ	246	;# 
  2857   0000F7                     DMAnSSZ         equ	247	;# 
  2858   0000F7                     DMAnSSZL        equ	247	;# 
  2859   0000F8                     DMAnSSZH        equ	248	;# 
  2860   0000F9                     DMAnSSA         equ	249	;# 
  2861   0000F9                     DMAnSSAL        equ	249	;# 
  2862   0000FA                     DMAnSSAH        equ	250	;# 
  2863   0000FB                     DMAnSSAU        equ	251	;# 
  2864   0000FC                     DMAnCON0        equ	252	;# 
  2865   0000FD                     DMAnCON1        equ	253	;# 
  2866   0000FE                     DMAnAIRQ        equ	254	;# 
  2867   0000FF                     DMAnSIRQ        equ	255	;# 
  2868   000200                     PPSLOCK         equ	512	;# 
  2869   000201                     RA0PPS          equ	513	;# 
  2870   000202                     RA1PPS          equ	514	;# 
  2871   000203                     RA2PPS          equ	515	;# 
  2872   000204                     RA3PPS          equ	516	;# 
  2873   000205                     RA4PPS          equ	517	;# 
  2874   000206                     RA5PPS          equ	518	;# 
  2875   000207                     RA6PPS          equ	519	;# 
  2876   000208                     RA7PPS          equ	520	;# 
  2877   000209                     RB0PPS          equ	521	;# 
  2878   00020A                     RB1PPS          equ	522	;# 
  2879   00020B                     RB2PPS          equ	523	;# 
  2880   00020C                     RB3PPS          equ	524	;# 
  2881   00020D                     RB4PPS          equ	525	;# 
  2882   00020E                     RB5PPS          equ	526	;# 
  2883   00020F                     RB6PPS          equ	527	;# 
  2884   000210                     RB7PPS          equ	528	;# 
  2885   000211                     RC0PPS          equ	529	;# 
  2886   000212                     RC1PPS          equ	530	;# 
  2887   000213                     RC2PPS          equ	531	;# 
  2888   000214                     RC3PPS          equ	532	;# 
  2889   000215                     RC4PPS          equ	533	;# 
  2890   000216                     RC5PPS          equ	534	;# 
  2891   000217                     RC6PPS          equ	535	;# 
  2892   000218                     RC7PPS          equ	536	;# 
  2893   000219                     RD0PPS          equ	537	;# 
  2894   00021A                     RD1PPS          equ	538	;# 
  2895   00021B                     RD2PPS          equ	539	;# 
  2896   00021C                     RD3PPS          equ	540	;# 
  2897   00021D                     RD4PPS          equ	541	;# 
  2898   00021E                     RD5PPS          equ	542	;# 
  2899   00021F                     RD6PPS          equ	543	;# 
  2900   000220                     RD7PPS          equ	544	;# 
  2901   000221                     RE0PPS          equ	545	;# 
  2902   000222                     RE1PPS          equ	546	;# 
  2903   000223                     RE2PPS          equ	547	;# 
  2904   000229                     RF0PPS          equ	553	;# 
  2905   00022A                     RF1PPS          equ	554	;# 
  2906   00022B                     RF2PPS          equ	555	;# 
  2907   00022C                     RF3PPS          equ	556	;# 
  2908   00022D                     RF4PPS          equ	557	;# 
  2909   00022E                     RF5PPS          equ	558	;# 
  2910   00022F                     RF6PPS          equ	559	;# 
  2911   000230                     RF7PPS          equ	560	;# 
  2912   00023E                     INT0PPS         equ	574	;# 
  2913   00023F                     INT1PPS         equ	575	;# 
  2914   000240                     INT2PPS         equ	576	;# 
  2915   000241                     T0CKIPPS        equ	577	;# 
  2916   000242                     T1CKIPPS        equ	578	;# 
  2917   000243                     T1GPPS          equ	579	;# 
  2918   000244                     T3CKIPPS        equ	580	;# 
  2919   000245                     T3GPPS          equ	581	;# 
  2920   000246                     T5CKIPPS        equ	582	;# 
  2921   000247                     T5GPPS          equ	583	;# 
  2922   000248                     T2INPPS         equ	584	;# 
  2923   000249                     T4INPPS         equ	585	;# 
  2924   00024A                     T6INPPS         equ	586	;# 
  2925   00024F                     CCP1PPS         equ	591	;# 
  2926   000250                     CCP2PPS         equ	592	;# 
  2927   000251                     CCP3PPS         equ	593	;# 
  2928   000253                     PWM1ERSPPS      equ	595	;# 
  2929   000254                     PWM2ERSPPS      equ	596	;# 
  2930   000255                     PWM3ERSPPS      equ	597	;# 
  2931   000257                     PWMIN0PPS       equ	599	;# 
  2932   000258                     PWMIN1PPS       equ	600	;# 
  2933   000259                     SMT1WINPPS      equ	601	;# 
  2934   00025A                     SMT1SIGPPS      equ	602	;# 
  2935   00025B                     CWG1PPS         equ	603	;# 
  2936   00025B                     CWG1INPPS       equ	603	;# 
  2937   00025C                     CWG2PPS         equ	604	;# 
  2938   00025C                     CWG2INPPS       equ	604	;# 
  2939   00025D                     CWG3PPS         equ	605	;# 
  2940   00025D                     CWG3INPPS       equ	605	;# 
  2941   00025E                     MD1CARLPPS      equ	606	;# 
  2942   00025E                     MDCARLPPS       equ	606	;# 
  2943   00025F                     MD1CARHPPS      equ	607	;# 
  2944   00025F                     MDCARHPPS       equ	607	;# 
  2945   000260                     MD1SRCPPS       equ	608	;# 
  2946   000260                     MDSRCPPS        equ	608	;# 
  2947   000261                     CLCIN0PPS       equ	609	;# 
  2948   000262                     CLCIN1PPS       equ	610	;# 
  2949   000263                     CLCIN2PPS       equ	611	;# 
  2950   000264                     CLCIN3PPS       equ	612	;# 
  2951   000265                     CLCIN4PPS       equ	613	;# 
  2952   000266                     CLCIN5PPS       equ	614	;# 
  2953   000267                     CLCIN6PPS       equ	615	;# 
  2954   000268                     CLCIN7PPS       equ	616	;# 
  2955   000269                     ADACTPPS        equ	617	;# 
  2956   00026A                     SPI1SCKPPS      equ	618	;# 
  2957   00026B                     SPI1SDIPPS      equ	619	;# 
  2958   00026C                     SPI1SSPPS       equ	620	;# 
  2959   00026D                     SPI2SCKPPS      equ	621	;# 
  2960   00026E                     SPI2SDIPPS      equ	622	;# 
  2961   00026F                     SPI2SSPPS       equ	623	;# 
  2962   000270                     I2C1SDAPPS      equ	624	;# 
  2963   000271                     I2C1SCLPPS      equ	625	;# 
  2964   000272                     U1RXPPS         equ	626	;# 
  2965   000273                     U1CTSPPS        equ	627	;# 
  2966   000274                     U2RXPPS         equ	628	;# 
  2967   000275                     U2CTSPPS        equ	629	;# 
  2968   000276                     U3RXPPS         equ	630	;# 
  2969   000277                     U3CTSPPS        equ	631	;# 
  2970   000278                     U4RXPPS         equ	632	;# 
  2971   000279                     U4CTSPPS        equ	633	;# 
  2972   00027A                     U5RXPPS         equ	634	;# 
  2973   00027B                     U5CTSPPS        equ	635	;# 
  2974   000286                     RC4I2C          equ	646	;# 
  2975   000287                     RC3I2C          equ	647	;# 
  2976   000288                     RB2I2C          equ	648	;# 
  2977   000289                     RB1I2C          equ	649	;# 
  2978   00028B                     I2C1RXB         equ	651	;# 
  2979   00028C                     I2C1TXB         equ	652	;# 
  2980   00028D                     I2C1CNT         equ	653	;# 
  2981   00028E                     I2C1ADB0        equ	654	;# 
  2982   00028F                     I2C1ADB1        equ	655	;# 
  2983   000290                     I2C1ADR0        equ	656	;# 
  2984   000291                     I2C1ADR1        equ	657	;# 
  2985   000292                     I2C1ADR2        equ	658	;# 
  2986   000293                     I2C1ADR3        equ	659	;# 
  2987   000294                     I2C1CON0        equ	660	;# 
  2988   000295                     I2C1CON1        equ	661	;# 
  2989   000296                     I2C1CON2        equ	662	;# 
  2990   000297                     I2C1ERR         equ	663	;# 
  2991   000298                     I2C1STAT0       equ	664	;# 
  2992   000299                     I2C1STAT1       equ	665	;# 
  2993   00029A                     I2C1PIR         equ	666	;# 
  2994   00029B                     I2C1PIE         equ	667	;# 
  2995   00029C                     I2C1CLK         equ	668	;# 
  2996   00029D                     I2C1BTO         equ	669	;# 
  2997   0002A1                     U1RXB           equ	673	;# 
  2998   0002A1                     U1RXBL          equ	673	;# 
  2999   0002A2                     U1RXCHK         equ	674	;# 
  3000   0002A3                     U1TXB           equ	675	;# 
  3001   0002A3                     U1TXBL          equ	675	;# 
  3002   0002A4                     U1TXCHK         equ	676	;# 
  3003   0002A5                     U1P1            equ	677	;# 
  3004   0002A5                     U1P1L           equ	677	;# 
  3005   0002A6                     U1P1H           equ	678	;# 
  3006   0002A7                     U1P2            equ	679	;# 
  3007   0002A7                     U1P2L           equ	679	;# 
  3008   0002A8                     U1P2H           equ	680	;# 
  3009   0002A9                     U1P3            equ	681	;# 
  3010   0002A9                     U1P3L           equ	681	;# 
  3011   0002AA                     U1P3H           equ	682	;# 
  3012   0002AB                     U1CON0          equ	683	;# 
  3013   0002AC                     U1CON1          equ	684	;# 
  3014   0002AD                     U1CON2          equ	685	;# 
  3015   0002AE                     U1BRG           equ	686	;# 
  3016   0002AE                     U1BRGL          equ	686	;# 
  3017   0002AF                     U1BRGH          equ	687	;# 
  3018   0002B0                     U1FIFO          equ	688	;# 
  3019   0002B1                     U1UIR           equ	689	;# 
  3020   0002B2                     U1ERRIR         equ	690	;# 
  3021   0002B3                     U1ERRIE         equ	691	;# 
  3022   0002B4                     U2RXB           equ	692	;# 
  3023   0002B4                     U2RXBL          equ	692	;# 
  3024   0002B6                     U2TXB           equ	694	;# 
  3025   0002B6                     U2TXBL          equ	694	;# 
  3026   0002B8                     U2P1            equ	696	;# 
  3027   0002B8                     U2P1L           equ	696	;# 
  3028   0002BA                     U2P2            equ	698	;# 
  3029   0002BA                     U2P2L           equ	698	;# 
  3030   0002BC                     U2P3            equ	700	;# 
  3031   0002BC                     U2P3L           equ	700	;# 
  3032   0002BE                     U2CON0          equ	702	;# 
  3033   0002BF                     U2CON1          equ	703	;# 
  3034   0002C0                     U2CON2          equ	704	;# 
  3035   0002C1                     U2BRG           equ	705	;# 
  3036   0002C1                     U2BRGL          equ	705	;# 
  3037   0002C2                     U2BRGH          equ	706	;# 
  3038   0002C3                     U2FIFO          equ	707	;# 
  3039   0002C4                     U2UIR           equ	708	;# 
  3040   0002C5                     U2ERRIR         equ	709	;# 
  3041   0002C6                     U2ERRIE         equ	710	;# 
  3042   0002C7                     U3RXB           equ	711	;# 
  3043   0002C7                     U3RXBL          equ	711	;# 
  3044   0002C9                     U3TXB           equ	713	;# 
  3045   0002C9                     U3TXBL          equ	713	;# 
  3046   0002CB                     U3P1            equ	715	;# 
  3047   0002CB                     U3P1L           equ	715	;# 
  3048   0002CD                     U3P2            equ	717	;# 
  3049   0002CD                     U3P2L           equ	717	;# 
  3050   0002CF                     U3P3            equ	719	;# 
  3051   0002CF                     U3P3L           equ	719	;# 
  3052   0002D1                     U3CON0          equ	721	;# 
  3053   0002D2                     U3CON1          equ	722	;# 
  3054   0002D3                     U3CON2          equ	723	;# 
  3055   0002D4                     U3BRG           equ	724	;# 
  3056   0002D4                     U3BRGL          equ	724	;# 
  3057   0002D5                     U3BRGH          equ	725	;# 
  3058   0002D6                     U3FIFO          equ	726	;# 
  3059   0002D7                     U3UIR           equ	727	;# 
  3060   0002D8                     U3ERRIR         equ	728	;# 
  3061   0002D9                     U3ERRIE         equ	729	;# 
  3062   0002DA                     U4RXB           equ	730	;# 
  3063   0002DA                     U4RXBL          equ	730	;# 
  3064   0002DC                     U4TXB           equ	732	;# 
  3065   0002DC                     U4TXBL          equ	732	;# 
  3066   0002DE                     U4P1            equ	734	;# 
  3067   0002DE                     U4P1L           equ	734	;# 
  3068   0002E0                     U4P2            equ	736	;# 
  3069   0002E0                     U4P2L           equ	736	;# 
  3070   0002E2                     U4P3            equ	738	;# 
  3071   0002E2                     U4P3L           equ	738	;# 
  3072   0002E4                     U4CON0          equ	740	;# 
  3073   0002E5                     U4CON1          equ	741	;# 
  3074   0002E6                     U4CON2          equ	742	;# 
  3075   0002E7                     U4BRG           equ	743	;# 
  3076   0002E7                     U4BRGL          equ	743	;# 
  3077   0002E8                     U4BRGH          equ	744	;# 
  3078   0002E9                     U4FIFO          equ	745	;# 
  3079   0002EA                     U4UIR           equ	746	;# 
  3080   0002EB                     U4ERRIR         equ	747	;# 
  3081   0002EC                     U4ERRIE         equ	748	;# 
  3082   0002ED                     U5RXB           equ	749	;# 
  3083   0002ED                     U5RXBL          equ	749	;# 
  3084   0002EF                     U5TXB           equ	751	;# 
  3085   0002EF                     U5TXBL          equ	751	;# 
  3086   0002F1                     U5P1            equ	753	;# 
  3087   0002F1                     U5P1L           equ	753	;# 
  3088   0002F3                     U5P2            equ	755	;# 
  3089   0002F3                     U5P2L           equ	755	;# 
  3090   0002F5                     U5P3            equ	757	;# 
  3091   0002F5                     U5P3L           equ	757	;# 
  3092   0002F7                     U5CON0          equ	759	;# 
  3093   0002F8                     U5CON1          equ	760	;# 
  3094   0002F9                     U5CON2          equ	761	;# 
  3095   0002FA                     U5BRG           equ	762	;# 
  3096   0002FA                     U5BRGL          equ	762	;# 
  3097   0002FB                     U5BRGH          equ	763	;# 
  3098   0002FC                     U5FIFO          equ	764	;# 
  3099   0002FD                     U5UIR           equ	765	;# 
  3100   0002FE                     U5ERRIR         equ	766	;# 
  3101   0002FF                     U5ERRIE         equ	767	;# 
  3102   000300                     SMT1TMR         equ	768	;# 
  3103   000300                     SMT1TMRL        equ	768	;# 
  3104   000301                     SMT1TMRH        equ	769	;# 
  3105   000302                     SMT1TMRU        equ	770	;# 
  3106   000303                     SMT1CPR         equ	771	;# 
  3107   000303                     SMT1CPRL        equ	771	;# 
  3108   000304                     SMT1CPRH        equ	772	;# 
  3109   000305                     SMT1CPRU        equ	773	;# 
  3110   000306                     SMT1CPW         equ	774	;# 
  3111   000306                     SMT1CPWL        equ	774	;# 
  3112   000307                     SMT1CPWH        equ	775	;# 
  3113   000308                     SMT1CPWU        equ	776	;# 
  3114   000309                     SMT1PR          equ	777	;# 
  3115   000309                     SMT1PRL         equ	777	;# 
  3116   00030A                     SMT1PRH         equ	778	;# 
  3117   00030B                     SMT1PRU         equ	779	;# 
  3118   00030C                     SMT1CON0        equ	780	;# 
  3119   00030D                     SMT1CON1        equ	781	;# 
  3120   00030E                     SMT1STAT        equ	782	;# 
  3121   00030F                     SMT1CLK         equ	783	;# 
  3122   000310                     SMT1SIG         equ	784	;# 
  3123   000311                     SMT1WIN         equ	785	;# 
  3124   000318                     TMR0L           equ	792	;# 
  3125   000318                     TMR0            equ	792	;# 
  3126   000319                     TMR0H           equ	793	;# 
  3127   000319                     PR0             equ	793	;# 
  3128   00031A                     T0CON0          equ	794	;# 
  3129   00031B                     T0CON1          equ	795	;# 
  3130   00031C                     TMR1            equ	796	;# 
  3131   00031C                     TMR1L           equ	796	;# 
  3132   00031D                     TMR1H           equ	797	;# 
  3133   00031E                     T1CON           equ	798	;# 
  3134   00031E                     TMR1CON         equ	798	;# 
  3135   00031F                     T1GCON          equ	799	;# 
  3136   00031F                     TMR1GCON        equ	799	;# 
  3137   000320                     T1GATE          equ	800	;# 
  3138   000320                     TMR1GATE        equ	800	;# 
  3139   000321                     T1CLK           equ	801	;# 
  3140   000321                     TMR1CLK         equ	801	;# 
  3141   000321                     PR1             equ	801	;# 
  3142   000322                     T2TMR           equ	802	;# 
  3143   000322                     TMR2            equ	802	;# 
  3144   000323                     T2PR            equ	803	;# 
  3145   000323                     PR2             equ	803	;# 
  3146   000324                     T2CON           equ	804	;# 
  3147   000325                     T2HLT           equ	805	;# 
  3148   000326                     T2CLKCON        equ	806	;# 
  3149   000326                     T2CLK           equ	806	;# 
  3150   000327                     T2RST           equ	807	;# 
  3151   000328                     TMR3            equ	808	;# 
  3152   000328                     TMR3L           equ	808	;# 
  3153   000329                     TMR3H           equ	809	;# 
  3154   00032A                     T3CON           equ	810	;# 
  3155   00032A                     TMR3CON         equ	810	;# 
  3156   00032B                     T3GCON          equ	811	;# 
  3157   00032B                     TMR3GCON        equ	811	;# 
  3158   00032C                     T3GATE          equ	812	;# 
  3159   00032C                     TMR3GATE        equ	812	;# 
  3160   00032D                     T3CLK           equ	813	;# 
  3161   00032D                     TMR3CLK         equ	813	;# 
  3162   00032D                     PR3             equ	813	;# 
  3163   00032E                     T4TMR           equ	814	;# 
  3164   00032E                     TMR4            equ	814	;# 
  3165   00032F                     T4PR            equ	815	;# 
  3166   00032F                     PR4             equ	815	;# 
  3167   000330                     T4CON           equ	816	;# 
  3168   000331                     T4HLT           equ	817	;# 
  3169   000332                     T4CLKCON        equ	818	;# 
  3170   000332                     T4CLK           equ	818	;# 
  3171   000333                     T4RST           equ	819	;# 
  3172   000334                     TMR5            equ	820	;# 
  3173   000334                     TMR5L           equ	820	;# 
  3174   000335                     TMR5H           equ	821	;# 
  3175   000336                     T5CON           equ	822	;# 
  3176   000336                     TMR5CON         equ	822	;# 
  3177   000337                     T5GCON          equ	823	;# 
  3178   000337                     TMR5GCON        equ	823	;# 
  3179   000338                     T5GATE          equ	824	;# 
  3180   000338                     TMR5GATE        equ	824	;# 
  3181   000339                     T5CLK           equ	825	;# 
  3182   000339                     TMR5CLK         equ	825	;# 
  3183   000339                     PR5             equ	825	;# 
  3184   00033A                     T6TMR           equ	826	;# 
  3185   00033A                     TMR6            equ	826	;# 
  3186   00033B                     T6PR            equ	827	;# 
  3187   00033B                     PR6             equ	827	;# 
  3188   00033C                     T6CON           equ	828	;# 
  3189   00033D                     T6HLT           equ	829	;# 
  3190   00033E                     T6CLKCON        equ	830	;# 
  3191   00033E                     T6CLK           equ	830	;# 
  3192   00033F                     T6RST           equ	831	;# 
  3193   000340                     CCPR1           equ	832	;# 
  3194   000340                     CCPR1L          equ	832	;# 
  3195   000341                     CCPR1H          equ	833	;# 
  3196   000342                     CCP1CON         equ	834	;# 
  3197   000343                     CCP1CAP         equ	835	;# 
  3198   000344                     CCPR2           equ	836	;# 
  3199   000344                     CCPR2L          equ	836	;# 
  3200   000345                     CCPR2H          equ	837	;# 
  3201   000346                     CCP2CON         equ	838	;# 
  3202   000347                     CCP2CAP         equ	839	;# 
  3203   000348                     CCPR3           equ	840	;# 
  3204   000348                     CCPR3L          equ	840	;# 
  3205   000349                     CCPR3H          equ	841	;# 
  3206   00034A                     CCP3CON         equ	842	;# 
  3207   00034B                     CCP3CAP         equ	843	;# 
  3208   00034C                     CCPTMRS0        equ	844	;# 
  3209   00034F                     CRCDATA         equ	847	;# 
  3210   00034F                     CRCDATL         equ	847	;# 
  3211   000350                     CRCDATH         equ	848	;# 
  3212   000351                     CRCACC          equ	849	;# 
  3213   000351                     CRCACCL         equ	849	;# 
  3214   000352                     CRCACCH         equ	850	;# 
  3215   000353                     CRCSHFT         equ	851	;# 
  3216   000353                     CRCSHIFTL       equ	851	;# 
  3217   000354                     CRCSHIFTH       equ	852	;# 
  3218   000355                     CRCXOR          equ	853	;# 
  3219   000355                     CRCXORL         equ	853	;# 
  3220   000356                     CRCXORH         equ	854	;# 
  3221   000357                     CRCCON0         equ	855	;# 
  3222   000358                     CRCCON1         equ	856	;# 
  3223   00035A                     SCANLADR        equ	858	;# 
  3224   00035A                     SCANLADRL       equ	858	;# 
  3225   00035B                     SCANLADRH       equ	859	;# 
  3226   00035C                     SCANLADRU       equ	860	;# 
  3227   00035D                     SCANHADR        equ	861	;# 
  3228   00035D                     SCANHADRL       equ	861	;# 
  3229   00035E                     SCANHADRH       equ	862	;# 
  3230   00035F                     SCANHADRU       equ	863	;# 
  3231   000360                     SCANCON0        equ	864	;# 
  3232   000361                     SCANTRIG        equ	865	;# 
  3233   000362                     IPR0            equ	866	;# 
  3234   000363                     IPR1            equ	867	;# 
  3235   000364                     IPR2            equ	868	;# 
  3236   000365                     IPR3            equ	869	;# 
  3237   000366                     IPR4            equ	870	;# 
  3238   000367                     IPR5            equ	871	;# 
  3239   000368                     IPR6            equ	872	;# 
  3240   000369                     IPR7            equ	873	;# 
  3241   00036A                     IPR8            equ	874	;# 
  3242   00036B                     IPR9            equ	875	;# 
  3243   00036C                     IPR10           equ	876	;# 
  3244   00036D                     IPR11           equ	877	;# 
  3245   00036E                     IPR12           equ	878	;# 
  3246   00036F                     IPR13           equ	879	;# 
  3247   000370                     IPR14           equ	880	;# 
  3248   000371                     IPR15           equ	881	;# 
  3249   000373                     STATUS_CSHAD    equ	883	;# 
  3250   000374                     WREG_CSHAD      equ	884	;# 
  3251   000375                     BSR_CSHAD       equ	885	;# 
  3252   000376                     SHADCON         equ	886	;# 
  3253   000377                     STATUS_SHAD     equ	887	;# 
  3254   000378                     WREG_SHAD       equ	888	;# 
  3255   000379                     BSR_SHAD        equ	889	;# 
  3256   00037A                     PCLATH_SHAD     equ	890	;# 
  3257   00037B                     PCLATU_SHAD     equ	891	;# 
  3258   00037C                     FSR0SH          equ	892	;# 
  3259   00037C                     FSR0L_SHAD      equ	892	;# 
  3260   00037D                     FSR0H_SHAD      equ	893	;# 
  3261   00037E                     FSR1SH          equ	894	;# 
  3262   00037E                     FSR1L_SHAD      equ	894	;# 
  3263   00037F                     FSR1H_SHAD      equ	895	;# 
  3264   000380                     FSR2SH          equ	896	;# 
  3265   000380                     FSR2L_SHAD      equ	896	;# 
  3266   000381                     FSR2H_SHAD      equ	897	;# 
  3267   000382                     PRODSH          equ	898	;# 
  3268   000382                     PRODL_SHAD      equ	898	;# 
  3269   000383                     PRODH_SHAD      equ	899	;# 
  3270   0003BC                     CWG1CLK         equ	956	;# 
  3271   0003BC                     CWG1CLKCON      equ	956	;# 
  3272   0003BD                     CWG1ISM         equ	957	;# 
  3273   0003BD                     CWG1DAT         equ	957	;# 
  3274   0003BE                     CWG1DBR         equ	958	;# 
  3275   0003BF                     CWG1DBF         equ	959	;# 
  3276   0003C0                     CWG1CON0        equ	960	;# 
  3277   0003C1                     CWG1CON1        equ	961	;# 
  3278   0003C2                     CWG1AS0         equ	962	;# 
  3279   0003C3                     CWG1AS1         equ	963	;# 
  3280   0003C4                     CWG1STR         equ	964	;# 
  3281   0003C5                     CWG2CLK         equ	965	;# 
  3282   0003C5                     CWG2CLKCON      equ	965	;# 
  3283   0003C6                     CWG2ISM         equ	966	;# 
  3284   0003C6                     CWG2DAT         equ	966	;# 
  3285   0003C7                     CWG2DBR         equ	967	;# 
  3286   0003C8                     CWG2DBF         equ	968	;# 
  3287   0003C9                     CWG2CON0        equ	969	;# 
  3288   0003CA                     CWG2CON1        equ	970	;# 
  3289   0003CB                     CWG2AS0         equ	971	;# 
  3290   0003CC                     CWG2AS1         equ	972	;# 
  3291   0003CD                     CWG2STR         equ	973	;# 
  3292   0003CE                     CWG3CLK         equ	974	;# 
  3293   0003CE                     CWG3CLKCON      equ	974	;# 
  3294   0003CF                     CWG3ISM         equ	975	;# 
  3295   0003CF                     CWG3DAT         equ	975	;# 
  3296   0003D0                     CWG3DBR         equ	976	;# 
  3297   0003D1                     CWG3DBF         equ	977	;# 
  3298   0003D2                     CWG3CON0        equ	978	;# 
  3299   0003D3                     CWG3CON1        equ	979	;# 
  3300   0003D4                     CWG3AS0         equ	980	;# 
  3301   0003D5                     CWG3AS1         equ	981	;# 
  3302   0003D6                     CWG3STR         equ	982	;# 
  3303   0003D7                     FVRCON          equ	983	;# 
  3304   0003D8                     ADCPCON         equ	984	;# 
  3305   0003D8                     ADCP            equ	984	;# 
  3306   0003D9                     ADLTH           equ	985	;# 
  3307   0003D9                     ADLTHL          equ	985	;# 
  3308   0003DA                     ADLTHH          equ	986	;# 
  3309   0003DB                     ADUTH           equ	987	;# 
  3310   0003DB                     ADUTHL          equ	987	;# 
  3311   0003DC                     ADUTHH          equ	988	;# 
  3312   0003DD                     ADERR           equ	989	;# 
  3313   0003DD                     ADERRL          equ	989	;# 
  3314   0003DE                     ADERRH          equ	990	;# 
  3315   0003DF                     ADSTPT          equ	991	;# 
  3316   0003DF                     ADSTPTL         equ	991	;# 
  3317   0003E0                     ADSTPTH         equ	992	;# 
  3318   0003E1                     ADFLTR          equ	993	;# 
  3319   0003E1                     ADFLTRL         equ	993	;# 
  3320   0003E2                     ADFLTRH         equ	994	;# 
  3321   0003E3                     ADACC           equ	995	;# 
  3322   0003E3                     ADACCL          equ	995	;# 
  3323   0003E4                     ADACCH          equ	996	;# 
  3324   0003E5                     ADACCU          equ	997	;# 
  3325   0003E6                     ADCNT           equ	998	;# 
  3326   0003E7                     ADRPT           equ	999	;# 
  3327   0003E8                     ADPREV          equ	1000	;# 
  3328   0003E8                     ADPREVL         equ	1000	;# 
  3329   0003E9                     ADPREVH         equ	1001	;# 
  3330   0003EA                     ADRES           equ	1002	;# 
  3331   0003EA                     ADRESL          equ	1002	;# 
  3332   0003EB                     ADRESH          equ	1003	;# 
  3333   0003EC                     ADPCH           equ	1004	;# 
  3334   0003EE                     ADACQ           equ	1006	;# 
  3335   0003EE                     ADACQL          equ	1006	;# 
  3336   0003EF                     ADACQH          equ	1007	;# 
  3337   0003F0                     ADCAP           equ	1008	;# 
  3338   0003F1                     ADPRE           equ	1009	;# 
  3339   0003F1                     ADPREL          equ	1009	;# 
  3340   0003F2                     ADPREH          equ	1010	;# 
  3341   0003F3                     ADCON0          equ	1011	;# 
  3342   0003F4                     ADCON1          equ	1012	;# 
  3343   0003F5                     ADCON2          equ	1013	;# 
  3344   0003F6                     ADCON3          equ	1014	;# 
  3345   0003F7                     ADSTAT          equ	1015	;# 
  3346   0003F8                     ADREF           equ	1016	;# 
  3347   0003F9                     ADACT           equ	1017	;# 
  3348   0003FA                     ADCLK           equ	1018	;# 
  3349   000400                     ANSELA          equ	1024	;# 
  3350   000401                     WPUA            equ	1025	;# 
  3351   000402                     ODCONA          equ	1026	;# 
  3352   000403                     SLRCONA         equ	1027	;# 
  3353   000404                     INLVLA          equ	1028	;# 
  3354   000405                     IOCAP           equ	1029	;# 
  3355   000406                     IOCAN           equ	1030	;# 
  3356   000407                     IOCAF           equ	1031	;# 
  3357   000408                     ANSELB          equ	1032	;# 
  3358   000409                     WPUB            equ	1033	;# 
  3359   00040A                     ODCONB          equ	1034	;# 
  3360   00040B                     SLRCONB         equ	1035	;# 
  3361   00040C                     INLVLB          equ	1036	;# 
  3362   00040D                     IOCBP           equ	1037	;# 
  3363   00040E                     IOCBN           equ	1038	;# 
  3364   00040F                     IOCBF           equ	1039	;# 
  3365   000410                     ANSELC          equ	1040	;# 
  3366   000411                     WPUC            equ	1041	;# 
  3367   000412                     ODCONC          equ	1042	;# 
  3368   000413                     SLRCONC         equ	1043	;# 
  3369   000414                     INLVLC          equ	1044	;# 
  3370   000415                     IOCCP           equ	1045	;# 
  3371   000416                     IOCCN           equ	1046	;# 
  3372   000417                     IOCCF           equ	1047	;# 
  3373   000418                     ANSELD          equ	1048	;# 
  3374   000419                     WPUD            equ	1049	;# 
  3375   00041A                     ODCOND          equ	1050	;# 
  3376   00041B                     SLRCOND         equ	1051	;# 
  3377   00041C                     INLVLD          equ	1052	;# 
  3378   000420                     ANSELE          equ	1056	;# 
  3379   000421                     WPUE            equ	1057	;# 
  3380   000422                     ODCONE          equ	1058	;# 
  3381   000423                     SLRCONE         equ	1059	;# 
  3382   000424                     INLVLE          equ	1060	;# 
  3383   000425                     IOCEP           equ	1061	;# 
  3384   000426                     IOCEN           equ	1062	;# 
  3385   000427                     IOCEF           equ	1063	;# 
  3386   000428                     ANSELF          equ	1064	;# 
  3387   000429                     WPUF            equ	1065	;# 
  3388   00042A                     ODCONF          equ	1066	;# 
  3389   00042B                     SLRCONF         equ	1067	;# 
  3390   00042C                     INLVLF          equ	1068	;# 
  3391   000440                     NCO1ACC         equ	1088	;# 
  3392   000440                     NCO1ACCL        equ	1088	;# 
  3393   000441                     NCO1ACCH        equ	1089	;# 
  3394   000442                     NCO1ACCU        equ	1090	;# 
  3395   000443                     NCO1INC         equ	1091	;# 
  3396   000443                     NCO1INCL        equ	1091	;# 
  3397   000444                     NCO1INCH        equ	1092	;# 
  3398   000445                     NCO1INCU        equ	1093	;# 
  3399   000446                     NCO1CON         equ	1094	;# 
  3400   000447                     NCO1CLK         equ	1095	;# 
  3401   000448                     NCO2ACC         equ	1096	;# 
  3402   000448                     NCO2ACCL        equ	1096	;# 
  3403   000449                     NCO2ACCH        equ	1097	;# 
  3404   00044A                     NCO2ACCU        equ	1098	;# 
  3405   00044B                     NCO2INC         equ	1099	;# 
  3406   00044B                     NCO2INCL        equ	1099	;# 
  3407   00044C                     NCO2INCH        equ	1100	;# 
  3408   00044D                     NCO2INCU        equ	1101	;# 
  3409   00044E                     NCO2CON         equ	1102	;# 
  3410   00044F                     NCO2CLK         equ	1103	;# 
  3411   000450                     NCO3ACC         equ	1104	;# 
  3412   000450                     NCO3ACCL        equ	1104	;# 
  3413   000451                     NCO3ACCH        equ	1105	;# 
  3414   000452                     NCO3ACCU        equ	1106	;# 
  3415   000453                     NCO3INC         equ	1107	;# 
  3416   000453                     NCO3INCL        equ	1107	;# 
  3417   000454                     NCO3INCH        equ	1108	;# 
  3418   000455                     NCO3INCU        equ	1109	;# 
  3419   000456                     NCO3CON         equ	1110	;# 
  3420   000457                     NCO3CLK         equ	1111	;# 
  3421   000459                     IVTLOCK         equ	1113	;# 
  3422   00045A                     IVTAD           equ	1114	;# 
  3423   00045A                     IVTADL          equ	1114	;# 
  3424   00045B                     IVTADH          equ	1115	;# 
  3425   00045C                     IVTADU          equ	1116	;# 
  3426   00045D                     IVTBASE         equ	1117	;# 
  3427   00045D                     IVTBASEL        equ	1117	;# 
  3428   00045E                     IVTBASEH        equ	1118	;# 
  3429   00045F                     IVTBASEU        equ	1119	;# 
  3430   000460                     PWM1ERS         equ	1120	;# 
  3431   000461                     PWM1CLK         equ	1121	;# 
  3432   000462                     PWM1LDS         equ	1122	;# 
  3433   000463                     PWM1PR          equ	1123	;# 
  3434   000463                     PWM1PRL         equ	1123	;# 
  3435   000464                     PWM1PRH         equ	1124	;# 
  3436   000465                     PWM1CPRE        equ	1125	;# 
  3437   000466                     PWM1PIPOS       equ	1126	;# 
  3438   000467                     PWM1GIR         equ	1127	;# 
  3439   000468                     PWM1GIE         equ	1128	;# 
  3440   000469                     PWM1CON         equ	1129	;# 
  3441   00046A                     PWM1S1CFG       equ	1130	;# 
  3442   00046B                     PWM1S1P1        equ	1131	;# 
  3443   00046B                     PWM1S1P1L       equ	1131	;# 
  3444   00046C                     PWM1S1P1H       equ	1132	;# 
  3445   00046D                     PWM1S1P2        equ	1133	;# 
  3446   00046D                     PWM1S1P2L       equ	1133	;# 
  3447   00046E                     PWM1S1P2H       equ	1134	;# 
  3448   00046F                     PWM2ERS         equ	1135	;# 
  3449   000470                     PWM2CLK         equ	1136	;# 
  3450   000471                     PWM2LDS         equ	1137	;# 
  3451   000472                     PWM2PR          equ	1138	;# 
  3452   000472                     PWM2PRL         equ	1138	;# 
  3453   000473                     PWM2PRH         equ	1139	;# 
  3454   000474                     PWM2CPRE        equ	1140	;# 
  3455   000475                     PWM2PIPOS       equ	1141	;# 
  3456   000476                     PWM2GIR         equ	1142	;# 
  3457   000477                     PWM2GIE         equ	1143	;# 
  3458   000478                     PWM2CON         equ	1144	;# 
  3459   000479                     PWM2S1CFG       equ	1145	;# 
  3460   00047A                     PWM2S1P1        equ	1146	;# 
  3461   00047A                     PWM2S1P1L       equ	1146	;# 
  3462   00047B                     PWM2S1P1H       equ	1147	;# 
  3463   00047C                     PWM2S1P2        equ	1148	;# 
  3464   00047C                     PWM2S1P2L       equ	1148	;# 
  3465   00047D                     PWM2S1P2H       equ	1149	;# 
  3466   00047E                     PWM3ERS         equ	1150	;# 
  3467   00047F                     PWM3CLK         equ	1151	;# 
  3468   000480                     PWM3LDS         equ	1152	;# 
  3469   000481                     PWM3PR          equ	1153	;# 
  3470   000481                     PWM3PRL         equ	1153	;# 
  3471   000482                     PWM3PRH         equ	1154	;# 
  3472   000483                     PWM3CPRE        equ	1155	;# 
  3473   000484                     PWM3PIPOS       equ	1156	;# 
  3474   000485                     PWM3GIR         equ	1157	;# 
  3475   000486                     PWM3GIE         equ	1158	;# 
  3476   000487                     PWM3CON         equ	1159	;# 
  3477   000488                     PWM3S1CFG       equ	1160	;# 
  3478   000489                     PWM3S1P1        equ	1161	;# 
  3479   000489                     PWM3S1P1L       equ	1161	;# 
  3480   00048A                     PWM3S1P1H       equ	1162	;# 
  3481   00048B                     PWM3S1P2        equ	1163	;# 
  3482   00048B                     PWM3S1P2L       equ	1163	;# 
  3483   00048C                     PWM3S1P2H       equ	1164	;# 
  3484   00049C                     PWMLOAD         equ	1180	;# 
  3485   00049D                     PWMEN           equ	1181	;# 
  3486   00049E                     PIE0            equ	1182	;# 
  3487   00049F                     PIE1            equ	1183	;# 
  3488   0004A0                     PIE2            equ	1184	;# 
  3489   0004A1                     PIE3            equ	1185	;# 
  3490   0004A2                     PIE4            equ	1186	;# 
  3491   0004A3                     PIE5            equ	1187	;# 
  3492   0004A4                     PIE6            equ	1188	;# 
  3493   0004A5                     PIE7            equ	1189	;# 
  3494   0004A6                     PIE8            equ	1190	;# 
  3495   0004A7                     PIE9            equ	1191	;# 
  3496   0004A8                     PIE10           equ	1192	;# 
  3497   0004A9                     PIE11           equ	1193	;# 
  3498   0004AA                     PIE12           equ	1194	;# 
  3499   0004AB                     PIE13           equ	1195	;# 
  3500   0004AC                     PIE14           equ	1196	;# 
  3501   0004AD                     PIE15           equ	1197	;# 
  3502   0004AE                     PIR0            equ	1198	;# 
  3503   0004AF                     PIR1            equ	1199	;# 
  3504   0004B0                     PIR2            equ	1200	;# 
  3505   0004B1                     PIR3            equ	1201	;# 
  3506   0004B2                     PIR4            equ	1202	;# 
  3507   0004B3                     PIR5            equ	1203	;# 
  3508   0004B4                     PIR6            equ	1204	;# 
  3509   0004B5                     PIR7            equ	1205	;# 
  3510   0004B6                     PIR8            equ	1206	;# 
  3511   0004B7                     PIR9            equ	1207	;# 
  3512   0004B8                     PIR10           equ	1208	;# 
  3513   0004B9                     PIR11           equ	1209	;# 
  3514   0004BA                     PIR12           equ	1210	;# 
  3515   0004BB                     PIR13           equ	1211	;# 
  3516   0004BC                     PIR14           equ	1212	;# 
  3517   0004BD                     PIR15           equ	1213	;# 
  3518   0004BE                     LATA            equ	1214	;# 
  3519   0004BF                     LATB            equ	1215	;# 
  3520   0004C0                     LATC            equ	1216	;# 
  3521   0004C1                     LATD            equ	1217	;# 
  3522   0004C2                     LATE            equ	1218	;# 
  3523   0004C3                     LATF            equ	1219	;# 
  3524   0004C6                     TRISA           equ	1222	;# 
  3525   0004C7                     TRISB           equ	1223	;# 
  3526   0004C8                     TRISC           equ	1224	;# 
  3527   0004C9                     TRISD           equ	1225	;# 
  3528   0004CA                     TRISE           equ	1226	;# 
  3529   0004CB                     TRISF           equ	1227	;# 
  3530   0004CE                     PORTA           equ	1230	;# 
  3531   0004CF                     PORTB           equ	1231	;# 
  3532   0004D0                     PORTC           equ	1232	;# 
  3533   0004D1                     PORTD           equ	1233	;# 
  3534   0004D2                     PORTE           equ	1234	;# 
  3535   0004D3                     PORTF           equ	1235	;# 
  3536   0004D6                     INTCON0         equ	1238	;# 
  3537   0004D7                     INTCON1         equ	1239	;# 
  3538   0004D8                     STATUS          equ	1240	;# 
  3539   0004D9                     FSR2            equ	1241	;# 
  3540   0004D9                     FSR2L           equ	1241	;# 
  3541   0004DA                     FSR2H           equ	1242	;# 
  3542   0004DB                     PLUSW2          equ	1243	;# 
  3543   0004DC                     PREINC2         equ	1244	;# 
  3544   0004DD                     POSTDEC2        equ	1245	;# 
  3545   0004DE                     POSTINC2        equ	1246	;# 
  3546   0004DF                     INDF2           equ	1247	;# 
  3547   0004E0                     BSR             equ	1248	;# 
  3548   0004E1                     FSR1            equ	1249	;# 
  3549   0004E1                     FSR1L           equ	1249	;# 
  3550   0004E2                     FSR1H           equ	1250	;# 
  3551   0004E3                     PLUSW1          equ	1251	;# 
  3552   0004E4                     PREINC1         equ	1252	;# 
  3553   0004E5                     POSTDEC1        equ	1253	;# 
  3554   0004E6                     POSTINC1        equ	1254	;# 
  3555   0004E7                     INDF1           equ	1255	;# 
  3556   0004E8                     WREG            equ	1256	;# 
  3557   0004E9                     FSR0            equ	1257	;# 
  3558   0004E9                     FSR0L           equ	1257	;# 
  3559   0004EA                     FSR0H           equ	1258	;# 
  3560   0004EB                     PLUSW0          equ	1259	;# 
  3561   0004EC                     PREINC0         equ	1260	;# 
  3562   0004ED                     POSTDEC0        equ	1261	;# 
  3563   0004EE                     POSTINC0        equ	1262	;# 
  3564   0004EF                     INDF0           equ	1263	;# 
  3565   0004F0                     PCON0           equ	1264	;# 
  3566   0004F1                     PCON1           equ	1265	;# 
  3567   0004F2                     CPUDOZE         equ	1266	;# 
  3568   0004F3                     PROD            equ	1267	;# 
  3569   0004F3                     PRODL           equ	1267	;# 
  3570   0004F4                     PRODH           equ	1268	;# 
  3571   0004F5                     TABLAT          equ	1269	;# 
  3572   0004F6                     TBLPTR          equ	1270	;# 
  3573   0004F6                     TBLPTRL         equ	1270	;# 
  3574   0004F7                     TBLPTRH         equ	1271	;# 
  3575   0004F8                     TBLPTRU         equ	1272	;# 
  3576   0004F9                     PCLAT           equ	1273	;# 
  3577   0004F9                     PCL             equ	1273	;# 
  3578   0004FA                     PCLATH          equ	1274	;# 
  3579   0004FB                     PCLATU          equ	1275	;# 
  3580   0004FC                     STKPTR          equ	1276	;# 
  3581   0004FD                     TOS             equ	1277	;# 
  3582   0004FD                     TOSL            equ	1277	;# 
  3583   0004FE                     TOSH            equ	1278	;# 
  3584   0004FF                     TOSU            equ	1279	;# 
  3585   000039                     CLKRCON         equ	57	;# 
  3586   00003A                     CLKRCLK         equ	58	;# 
  3587   000040                     NVMCON0         equ	64	;# 
  3588   000041                     NVMCON1         equ	65	;# 
  3589   000042                     NVMLOCK         equ	66	;# 
  3590   000043                     NVMADR          equ	67	;# 
  3591   000043                     NVMADRL         equ	67	;# 
  3592   000044                     NVMADRH         equ	68	;# 
  3593   000045                     NVMADRU         equ	69	;# 
  3594   000046                     NVMDAT          equ	70	;# 
  3595   000046                     NVMDATL         equ	70	;# 
  3596   000047                     NVMDATH         equ	71	;# 
  3597   000048                     VREGCON         equ	72	;# 
  3598   000049                     BORCON          equ	73	;# 
  3599   00004A                     HLVDCON0        equ	74	;# 
  3600   00004B                     HLVDCON1        equ	75	;# 
  3601   00004C                     ZCDCON          equ	76	;# 
  3602   000060                     PMD0            equ	96	;# 
  3603   000061                     PMD1            equ	97	;# 
  3604   000063                     PMD3            equ	99	;# 
  3605   000064                     PMD4            equ	100	;# 
  3606   000065                     PMD5            equ	101	;# 
  3607   000066                     PMD6            equ	102	;# 
  3608   000067                     PMD7            equ	103	;# 
  3609   000068                     PMD8            equ	104	;# 
  3610   00006A                     MD1CON0         equ	106	;# 
  3611   00006B                     MD1CON1         equ	107	;# 
  3612   00006C                     MD1SRC          equ	108	;# 
  3613   00006D                     MD1CARL         equ	109	;# 
  3614   00006E                     MD1CARH         equ	110	;# 
  3615   00006F                     CMOUT           equ	111	;# 
  3616   000070                     CM1CON0         equ	112	;# 
  3617   000071                     CM1CON1         equ	113	;# 
  3618   000072                     CM1NCH          equ	114	;# 
  3619   000073                     CM1PCH          equ	115	;# 
  3620   000074                     CM2CON0         equ	116	;# 
  3621   000075                     CM2CON1         equ	117	;# 
  3622   000076                     CM2NCH          equ	118	;# 
  3623   000077                     CM2PCH          equ	119	;# 
  3624   000078                     WDTCON0         equ	120	;# 
  3625   000079                     WDTCON1         equ	121	;# 
  3626   00007A                     WDTPS           equ	122	;# 
  3627   00007A                     WDTPSL          equ	122	;# 
  3628   00007B                     WDTPSH          equ	123	;# 
  3629   00007C                     WDTTMR          equ	124	;# 
  3630   00007D                     DAC1DAT         equ	125	;# 
  3631   00007D                     DAC1DATL        equ	125	;# 
  3632   00007F                     DAC1CON         equ	127	;# 
  3633   000080                     SPI1RXB         equ	128	;# 
  3634   000081                     SPI1TXB         equ	129	;# 
  3635   000082                     SPI1TCNT        equ	130	;# 
  3636   000082                     SPI1TCNTL       equ	130	;# 
  3637   000083                     SPI1TCNTH       equ	131	;# 
  3638   000084                     SPI1CON0        equ	132	;# 
  3639   000085                     SPI1CON1        equ	133	;# 
  3640   000086                     SPI1CON2        equ	134	;# 
  3641   000087                     SPI1STATUS      equ	135	;# 
  3642   000088                     SPI1TWIDTH      equ	136	;# 
  3643   000089                     SPI1BAUD        equ	137	;# 
  3644   00008A                     SPI1INTF        equ	138	;# 
  3645   00008B                     SPI1INTE        equ	139	;# 
  3646   00008C                     SPI1CLK         equ	140	;# 
  3647   00008D                     SPI2RXB         equ	141	;# 
  3648   00008E                     SPI2TXB         equ	142	;# 
  3649   00008F                     SPI2TCNT        equ	143	;# 
  3650   00008F                     SPI2TCNTL       equ	143	;# 
  3651   000090                     SPI2TCNTH       equ	144	;# 
  3652   000091                     SPI2CON0        equ	145	;# 
  3653   000092                     SPI2CON1        equ	146	;# 
  3654   000093                     SPI2CON2        equ	147	;# 
  3655   000094                     SPI2STATUS      equ	148	;# 
  3656   000095                     SPI2TWIDTH      equ	149	;# 
  3657   000096                     SPI2BAUD        equ	150	;# 
  3658   000097                     SPI2INTF        equ	151	;# 
  3659   000098                     SPI2INTE        equ	152	;# 
  3660   000099                     SPI2CLK         equ	153	;# 
  3661   0000AC                     ACTCON          equ	172	;# 
  3662   0000AD                     OSCCON1         equ	173	;# 
  3663   0000AE                     OSCCON2         equ	174	;# 
  3664   0000AF                     OSCCON3         equ	175	;# 
  3665   0000B0                     OSCTUNE         equ	176	;# 
  3666   0000B1                     OSCFRQ          equ	177	;# 
  3667   0000B1                     OSCFREQ         equ	177	;# 
  3668   0000B2                     OSCSTAT         equ	178	;# 
  3669   0000B2                     OSCSTAT1        equ	178	;# 
  3670   0000B3                     OSCEN           equ	179	;# 
  3671   0000B4                     PRLOCK          equ	180	;# 
  3672   0000B5                     SCANPR          equ	181	;# 
  3673   0000B6                     DMA1PR          equ	182	;# 
  3674   0000B7                     DMA2PR          equ	183	;# 
  3675   0000B8                     DMA3PR          equ	184	;# 
  3676   0000B9                     DMA4PR          equ	185	;# 
  3677   0000BA                     DMA5PR          equ	186	;# 
  3678   0000BB                     DMA6PR          equ	187	;# 
  3679   0000BE                     MAINPR          equ	190	;# 
  3680   0000BF                     ISRPR           equ	191	;# 
  3681   0000D4                     CLCDATA         equ	212	;# 
  3682   0000D5                     CLCSELECT       equ	213	;# 
  3683   0000D6                     CLCnCON         equ	214	;# 
  3684   0000D7                     CLCnPOL         equ	215	;# 
  3685   0000D8                     CLCnSEL0        equ	216	;# 
  3686   0000D9                     CLCnSEL1        equ	217	;# 
  3687   0000DA                     CLCnSEL2        equ	218	;# 
  3688   0000DB                     CLCnSEL3        equ	219	;# 
  3689   0000DC                     CLCnGLS0        equ	220	;# 
  3690   0000DD                     CLCnGLS1        equ	221	;# 
  3691   0000DE                     CLCnGLS2        equ	222	;# 
  3692   0000DF                     CLCnGLS3        equ	223	;# 
  3693   0000E8                     DMASELECT       equ	232	;# 
  3694   0000E9                     DMAnBUF         equ	233	;# 
  3695   0000EA                     DMAnDCNT        equ	234	;# 
  3696   0000EA                     DMAnDCNTL       equ	234	;# 
  3697   0000EB                     DMAnDCNTH       equ	235	;# 
  3698   0000EC                     DMAnDPTR        equ	236	;# 
  3699   0000EC                     DMAnDPTRL       equ	236	;# 
  3700   0000ED                     DMAnDPTRH       equ	237	;# 
  3701   0000EE                     DMAnDSZ         equ	238	;# 
  3702   0000EE                     DMAnDSZL        equ	238	;# 
  3703   0000EF                     DMAnDSZH        equ	239	;# 
  3704   0000F0                     DMAnDSA         equ	240	;# 
  3705   0000F0                     DMAnDSAL        equ	240	;# 
  3706   0000F1                     DMAnDSAH        equ	241	;# 
  3707   0000F2                     DMAnSCNT        equ	242	;# 
  3708   0000F2                     DMAnSCNTL       equ	242	;# 
  3709   0000F3                     DMAnSCNTH       equ	243	;# 
  3710   0000F4                     DMAnSPTR        equ	244	;# 
  3711   0000F4                     DMAnSPTRL       equ	244	;# 
  3712   0000F5                     DMAnSPTRH       equ	245	;# 
  3713   0000F6                     DMAnSPTRU       equ	246	;# 
  3714   0000F7                     DMAnSSZ         equ	247	;# 
  3715   0000F7                     DMAnSSZL        equ	247	;# 
  3716   0000F8                     DMAnSSZH        equ	248	;# 
  3717   0000F9                     DMAnSSA         equ	249	;# 
  3718   0000F9                     DMAnSSAL        equ	249	;# 
  3719   0000FA                     DMAnSSAH        equ	250	;# 
  3720   0000FB                     DMAnSSAU        equ	251	;# 
  3721   0000FC                     DMAnCON0        equ	252	;# 
  3722   0000FD                     DMAnCON1        equ	253	;# 
  3723   0000FE                     DMAnAIRQ        equ	254	;# 
  3724   0000FF                     DMAnSIRQ        equ	255	;# 
  3725   000200                     PPSLOCK         equ	512	;# 
  3726   000201                     RA0PPS          equ	513	;# 
  3727   000202                     RA1PPS          equ	514	;# 
  3728   000203                     RA2PPS          equ	515	;# 
  3729   000204                     RA3PPS          equ	516	;# 
  3730   000205                     RA4PPS          equ	517	;# 
  3731   000206                     RA5PPS          equ	518	;# 
  3732   000207                     RA6PPS          equ	519	;# 
  3733   000208                     RA7PPS          equ	520	;# 
  3734   000209                     RB0PPS          equ	521	;# 
  3735   00020A                     RB1PPS          equ	522	;# 
  3736   00020B                     RB2PPS          equ	523	;# 
  3737   00020C                     RB3PPS          equ	524	;# 
  3738   00020D                     RB4PPS          equ	525	;# 
  3739   00020E                     RB5PPS          equ	526	;# 
  3740   00020F                     RB6PPS          equ	527	;# 
  3741   000210                     RB7PPS          equ	528	;# 
  3742   000211                     RC0PPS          equ	529	;# 
  3743   000212                     RC1PPS          equ	530	;# 
  3744   000213                     RC2PPS          equ	531	;# 
  3745   000214                     RC3PPS          equ	532	;# 
  3746   000215                     RC4PPS          equ	533	;# 
  3747   000216                     RC5PPS          equ	534	;# 
  3748   000217                     RC6PPS          equ	535	;# 
  3749   000218                     RC7PPS          equ	536	;# 
  3750   000219                     RD0PPS          equ	537	;# 
  3751   00021A                     RD1PPS          equ	538	;# 
  3752   00021B                     RD2PPS          equ	539	;# 
  3753   00021C                     RD3PPS          equ	540	;# 
  3754   00021D                     RD4PPS          equ	541	;# 
  3755   00021E                     RD5PPS          equ	542	;# 
  3756   00021F                     RD6PPS          equ	543	;# 
  3757   000220                     RD7PPS          equ	544	;# 
  3758   000221                     RE0PPS          equ	545	;# 
  3759   000222                     RE1PPS          equ	546	;# 
  3760   000223                     RE2PPS          equ	547	;# 
  3761   000229                     RF0PPS          equ	553	;# 
  3762   00022A                     RF1PPS          equ	554	;# 
  3763   00022B                     RF2PPS          equ	555	;# 
  3764   00022C                     RF3PPS          equ	556	;# 
  3765   00022D                     RF4PPS          equ	557	;# 
  3766   00022E                     RF5PPS          equ	558	;# 
  3767   00022F                     RF6PPS          equ	559	;# 
  3768   000230                     RF7PPS          equ	560	;# 
  3769   00023E                     INT0PPS         equ	574	;# 
  3770   00023F                     INT1PPS         equ	575	;# 
  3771   000240                     INT2PPS         equ	576	;# 
  3772   000241                     T0CKIPPS        equ	577	;# 
  3773   000242                     T1CKIPPS        equ	578	;# 
  3774   000243                     T1GPPS          equ	579	;# 
  3775   000244                     T3CKIPPS        equ	580	;# 
  3776   000245                     T3GPPS          equ	581	;# 
  3777   000246                     T5CKIPPS        equ	582	;# 
  3778   000247                     T5GPPS          equ	583	;# 
  3779   000248                     T2INPPS         equ	584	;# 
  3780   000249                     T4INPPS         equ	585	;# 
  3781   00024A                     T6INPPS         equ	586	;# 
  3782   00024F                     CCP1PPS         equ	591	;# 
  3783   000250                     CCP2PPS         equ	592	;# 
  3784   000251                     CCP3PPS         equ	593	;# 
  3785   000253                     PWM1ERSPPS      equ	595	;# 
  3786   000254                     PWM2ERSPPS      equ	596	;# 
  3787   000255                     PWM3ERSPPS      equ	597	;# 
  3788   000257                     PWMIN0PPS       equ	599	;# 
  3789   000258                     PWMIN1PPS       equ	600	;# 
  3790   000259                     SMT1WINPPS      equ	601	;# 
  3791   00025A                     SMT1SIGPPS      equ	602	;# 
  3792   00025B                     CWG1PPS         equ	603	;# 
  3793   00025B                     CWG1INPPS       equ	603	;# 
  3794   00025C                     CWG2PPS         equ	604	;# 
  3795   00025C                     CWG2INPPS       equ	604	;# 
  3796   00025D                     CWG3PPS         equ	605	;# 
  3797   00025D                     CWG3INPPS       equ	605	;# 
  3798   00025E                     MD1CARLPPS      equ	606	;# 
  3799   00025E                     MDCARLPPS       equ	606	;# 
  3800   00025F                     MD1CARHPPS      equ	607	;# 
  3801   00025F                     MDCARHPPS       equ	607	;# 
  3802   000260                     MD1SRCPPS       equ	608	;# 
  3803   000260                     MDSRCPPS        equ	608	;# 
  3804   000261                     CLCIN0PPS       equ	609	;# 
  3805   000262                     CLCIN1PPS       equ	610	;# 
  3806   000263                     CLCIN2PPS       equ	611	;# 
  3807   000264                     CLCIN3PPS       equ	612	;# 
  3808   000265                     CLCIN4PPS       equ	613	;# 
  3809   000266                     CLCIN5PPS       equ	614	;# 
  3810   000267                     CLCIN6PPS       equ	615	;# 
  3811   000268                     CLCIN7PPS       equ	616	;# 
  3812   000269                     ADACTPPS        equ	617	;# 
  3813   00026A                     SPI1SCKPPS      equ	618	;# 
  3814   00026B                     SPI1SDIPPS      equ	619	;# 
  3815   00026C                     SPI1SSPPS       equ	620	;# 
  3816   00026D                     SPI2SCKPPS      equ	621	;# 
  3817   00026E                     SPI2SDIPPS      equ	622	;# 
  3818   00026F                     SPI2SSPPS       equ	623	;# 
  3819   000270                     I2C1SDAPPS      equ	624	;# 
  3820   000271                     I2C1SCLPPS      equ	625	;# 
  3821   000272                     U1RXPPS         equ	626	;# 
  3822   000273                     U1CTSPPS        equ	627	;# 
  3823   000274                     U2RXPPS         equ	628	;# 
  3824   000275                     U2CTSPPS        equ	629	;# 
  3825   000276                     U3RXPPS         equ	630	;# 
  3826   000277                     U3CTSPPS        equ	631	;# 
  3827   000278                     U4RXPPS         equ	632	;# 
  3828   000279                     U4CTSPPS        equ	633	;# 
  3829   00027A                     U5RXPPS         equ	634	;# 
  3830   00027B                     U5CTSPPS        equ	635	;# 
  3831   000286                     RC4I2C          equ	646	;# 
  3832   000287                     RC3I2C          equ	647	;# 
  3833   000288                     RB2I2C          equ	648	;# 
  3834   000289                     RB1I2C          equ	649	;# 
  3835   00028B                     I2C1RXB         equ	651	;# 
  3836   00028C                     I2C1TXB         equ	652	;# 
  3837   00028D                     I2C1CNT         equ	653	;# 
  3838   00028E                     I2C1ADB0        equ	654	;# 
  3839   00028F                     I2C1ADB1        equ	655	;# 
  3840   000290                     I2C1ADR0        equ	656	;# 
  3841   000291                     I2C1ADR1        equ	657	;# 
  3842   000292                     I2C1ADR2        equ	658	;# 
  3843   000293                     I2C1ADR3        equ	659	;# 
  3844   000294                     I2C1CON0        equ	660	;# 
  3845   000295                     I2C1CON1        equ	661	;# 
  3846   000296                     I2C1CON2        equ	662	;# 
  3847   000297                     I2C1ERR         equ	663	;# 
  3848   000298                     I2C1STAT0       equ	664	;# 
  3849   000299                     I2C1STAT1       equ	665	;# 
  3850   00029A                     I2C1PIR         equ	666	;# 
  3851   00029B                     I2C1PIE         equ	667	;# 
  3852   00029C                     I2C1CLK         equ	668	;# 
  3853   00029D                     I2C1BTO         equ	669	;# 
  3854   0002A1                     U1RXB           equ	673	;# 
  3855   0002A1                     U1RXBL          equ	673	;# 
  3856   0002A2                     U1RXCHK         equ	674	;# 
  3857   0002A3                     U1TXB           equ	675	;# 
  3858   0002A3                     U1TXBL          equ	675	;# 
  3859   0002A4                     U1TXCHK         equ	676	;# 
  3860   0002A5                     U1P1            equ	677	;# 
  3861   0002A5                     U1P1L           equ	677	;# 
  3862   0002A6                     U1P1H           equ	678	;# 
  3863   0002A7                     U1P2            equ	679	;# 
  3864   0002A7                     U1P2L           equ	679	;# 
  3865   0002A8                     U1P2H           equ	680	;# 
  3866   0002A9                     U1P3            equ	681	;# 
  3867   0002A9                     U1P3L           equ	681	;# 
  3868   0002AA                     U1P3H           equ	682	;# 
  3869   0002AB                     U1CON0          equ	683	;# 
  3870   0002AC                     U1CON1          equ	684	;# 
  3871   0002AD                     U1CON2          equ	685	;# 
  3872   0002AE                     U1BRG           equ	686	;# 
  3873   0002AE                     U1BRGL          equ	686	;# 
  3874   0002AF                     U1BRGH          equ	687	;# 
  3875   0002B0                     U1FIFO          equ	688	;# 
  3876   0002B1                     U1UIR           equ	689	;# 
  3877   0002B2                     U1ERRIR         equ	690	;# 
  3878   0002B3                     U1ERRIE         equ	691	;# 
  3879   0002B4                     U2RXB           equ	692	;# 
  3880   0002B4                     U2RXBL          equ	692	;# 
  3881   0002B6                     U2TXB           equ	694	;# 
  3882   0002B6                     U2TXBL          equ	694	;# 
  3883   0002B8                     U2P1            equ	696	;# 
  3884   0002B8                     U2P1L           equ	696	;# 
  3885   0002BA                     U2P2            equ	698	;# 
  3886   0002BA                     U2P2L           equ	698	;# 
  3887   0002BC                     U2P3            equ	700	;# 
  3888   0002BC                     U2P3L           equ	700	;# 
  3889   0002BE                     U2CON0          equ	702	;# 
  3890   0002BF                     U2CON1          equ	703	;# 
  3891   0002C0                     U2CON2          equ	704	;# 
  3892   0002C1                     U2BRG           equ	705	;# 
  3893   0002C1                     U2BRGL          equ	705	;# 
  3894   0002C2                     U2BRGH          equ	706	;# 
  3895   0002C3                     U2FIFO          equ	707	;# 
  3896   0002C4                     U2UIR           equ	708	;# 
  3897   0002C5                     U2ERRIR         equ	709	;# 
  3898   0002C6                     U2ERRIE         equ	710	;# 
  3899   0002C7                     U3RXB           equ	711	;# 
  3900   0002C7                     U3RXBL          equ	711	;# 
  3901   0002C9                     U3TXB           equ	713	;# 
  3902   0002C9                     U3TXBL          equ	713	;# 
  3903   0002CB                     U3P1            equ	715	;# 
  3904   0002CB                     U3P1L           equ	715	;# 
  3905   0002CD                     U3P2            equ	717	;# 
  3906   0002CD                     U3P2L           equ	717	;# 
  3907   0002CF                     U3P3            equ	719	;# 
  3908   0002CF                     U3P3L           equ	719	;# 
  3909   0002D1                     U3CON0          equ	721	;# 
  3910   0002D2                     U3CON1          equ	722	;# 
  3911   0002D3                     U3CON2          equ	723	;# 
  3912   0002D4                     U3BRG           equ	724	;# 
  3913   0002D4                     U3BRGL          equ	724	;# 
  3914   0002D5                     U3BRGH          equ	725	;# 
  3915   0002D6                     U3FIFO          equ	726	;# 
  3916   0002D7                     U3UIR           equ	727	;# 
  3917   0002D8                     U3ERRIR         equ	728	;# 
  3918   0002D9                     U3ERRIE         equ	729	;# 
  3919   0002DA                     U4RXB           equ	730	;# 
  3920   0002DA                     U4RXBL          equ	730	;# 
  3921   0002DC                     U4TXB           equ	732	;# 
  3922   0002DC                     U4TXBL          equ	732	;# 
  3923   0002DE                     U4P1            equ	734	;# 
  3924   0002DE                     U4P1L           equ	734	;# 
  3925   0002E0                     U4P2            equ	736	;# 
  3926   0002E0                     U4P2L           equ	736	;# 
  3927   0002E2                     U4P3            equ	738	;# 
  3928   0002E2                     U4P3L           equ	738	;# 
  3929   0002E4                     U4CON0          equ	740	;# 
  3930   0002E5                     U4CON1          equ	741	;# 
  3931   0002E6                     U4CON2          equ	742	;# 
  3932   0002E7                     U4BRG           equ	743	;# 
  3933   0002E7                     U4BRGL          equ	743	;# 
  3934   0002E8                     U4BRGH          equ	744	;# 
  3935   0002E9                     U4FIFO          equ	745	;# 
  3936   0002EA                     U4UIR           equ	746	;# 
  3937   0002EB                     U4ERRIR         equ	747	;# 
  3938   0002EC                     U4ERRIE         equ	748	;# 
  3939   0002ED                     U5RXB           equ	749	;# 
  3940   0002ED                     U5RXBL          equ	749	;# 
  3941   0002EF                     U5TXB           equ	751	;# 
  3942   0002EF                     U5TXBL          equ	751	;# 
  3943   0002F1                     U5P1            equ	753	;# 
  3944   0002F1                     U5P1L           equ	753	;# 
  3945   0002F3                     U5P2            equ	755	;# 
  3946   0002F3                     U5P2L           equ	755	;# 
  3947   0002F5                     U5P3            equ	757	;# 
  3948   0002F5                     U5P3L           equ	757	;# 
  3949   0002F7                     U5CON0          equ	759	;# 
  3950   0002F8                     U5CON1          equ	760	;# 
  3951   0002F9                     U5CON2          equ	761	;# 
  3952   0002FA                     U5BRG           equ	762	;# 
  3953   0002FA                     U5BRGL          equ	762	;# 
  3954   0002FB                     U5BRGH          equ	763	;# 
  3955   0002FC                     U5FIFO          equ	764	;# 
  3956   0002FD                     U5UIR           equ	765	;# 
  3957   0002FE                     U5ERRIR         equ	766	;# 
  3958   0002FF                     U5ERRIE         equ	767	;# 
  3959   000300                     SMT1TMR         equ	768	;# 
  3960   000300                     SMT1TMRL        equ	768	;# 
  3961   000301                     SMT1TMRH        equ	769	;# 
  3962   000302                     SMT1TMRU        equ	770	;# 
  3963   000303                     SMT1CPR         equ	771	;# 
  3964   000303                     SMT1CPRL        equ	771	;# 
  3965   000304                     SMT1CPRH        equ	772	;# 
  3966   000305                     SMT1CPRU        equ	773	;# 
  3967   000306                     SMT1CPW         equ	774	;# 
  3968   000306                     SMT1CPWL        equ	774	;# 
  3969   000307                     SMT1CPWH        equ	775	;# 
  3970   000308                     SMT1CPWU        equ	776	;# 
  3971   000309                     SMT1PR          equ	777	;# 
  3972   000309                     SMT1PRL         equ	777	;# 
  3973   00030A                     SMT1PRH         equ	778	;# 
  3974   00030B                     SMT1PRU         equ	779	;# 
  3975   00030C                     SMT1CON0        equ	780	;# 
  3976   00030D                     SMT1CON1        equ	781	;# 
  3977   00030E                     SMT1STAT        equ	782	;# 
  3978   00030F                     SMT1CLK         equ	783	;# 
  3979   000310                     SMT1SIG         equ	784	;# 
  3980   000311                     SMT1WIN         equ	785	;# 
  3981   000318                     TMR0L           equ	792	;# 
  3982   000318                     TMR0            equ	792	;# 
  3983   000319                     TMR0H           equ	793	;# 
  3984   000319                     PR0             equ	793	;# 
  3985   00031A                     T0CON0          equ	794	;# 
  3986   00031B                     T0CON1          equ	795	;# 
  3987   00031C                     TMR1            equ	796	;# 
  3988   00031C                     TMR1L           equ	796	;# 
  3989   00031D                     TMR1H           equ	797	;# 
  3990   00031E                     T1CON           equ	798	;# 
  3991   00031E                     TMR1CON         equ	798	;# 
  3992   00031F                     T1GCON          equ	799	;# 
  3993   00031F                     TMR1GCON        equ	799	;# 
  3994   000320                     T1GATE          equ	800	;# 
  3995   000320                     TMR1GATE        equ	800	;# 
  3996   000321                     T1CLK           equ	801	;# 
  3997   000321                     TMR1CLK         equ	801	;# 
  3998   000321                     PR1             equ	801	;# 
  3999   000322                     T2TMR           equ	802	;# 
  4000   000322                     TMR2            equ	802	;# 
  4001   000323                     T2PR            equ	803	;# 
  4002   000323                     PR2             equ	803	;# 
  4003   000324                     T2CON           equ	804	;# 
  4004   000325                     T2HLT           equ	805	;# 
  4005   000326                     T2CLKCON        equ	806	;# 
  4006   000326                     T2CLK           equ	806	;# 
  4007   000327                     T2RST           equ	807	;# 
  4008   000328                     TMR3            equ	808	;# 
  4009   000328                     TMR3L           equ	808	;# 
  4010   000329                     TMR3H           equ	809	;# 
  4011   00032A                     T3CON           equ	810	;# 
  4012   00032A                     TMR3CON         equ	810	;# 
  4013   00032B                     T3GCON          equ	811	;# 
  4014   00032B                     TMR3GCON        equ	811	;# 
  4015   00032C                     T3GATE          equ	812	;# 
  4016   00032C                     TMR3GATE        equ	812	;# 
  4017   00032D                     T3CLK           equ	813	;# 
  4018   00032D                     TMR3CLK         equ	813	;# 
  4019   00032D                     PR3             equ	813	;# 
  4020   00032E                     T4TMR           equ	814	;# 
  4021   00032E                     TMR4            equ	814	;# 
  4022   00032F                     T4PR            equ	815	;# 
  4023   00032F                     PR4             equ	815	;# 
  4024   000330                     T4CON           equ	816	;# 
  4025   000331                     T4HLT           equ	817	;# 
  4026   000332                     T4CLKCON        equ	818	;# 
  4027   000332                     T4CLK           equ	818	;# 
  4028   000333                     T4RST           equ	819	;# 
  4029   000334                     TMR5            equ	820	;# 
  4030   000334                     TMR5L           equ	820	;# 
  4031   000335                     TMR5H           equ	821	;# 
  4032   000336                     T5CON           equ	822	;# 
  4033   000336                     TMR5CON         equ	822	;# 
  4034   000337                     T5GCON          equ	823	;# 
  4035   000337                     TMR5GCON        equ	823	;# 
  4036   000338                     T5GATE          equ	824	;# 
  4037   000338                     TMR5GATE        equ	824	;# 
  4038   000339                     T5CLK           equ	825	;# 
  4039   000339                     TMR5CLK         equ	825	;# 
  4040   000339                     PR5             equ	825	;# 
  4041   00033A                     T6TMR           equ	826	;# 
  4042   00033A                     TMR6            equ	826	;# 
  4043   00033B                     T6PR            equ	827	;# 
  4044   00033B                     PR6             equ	827	;# 
  4045   00033C                     T6CON           equ	828	;# 
  4046   00033D                     T6HLT           equ	829	;# 
  4047   00033E                     T6CLKCON        equ	830	;# 
  4048   00033E                     T6CLK           equ	830	;# 
  4049   00033F                     T6RST           equ	831	;# 
  4050   000340                     CCPR1           equ	832	;# 
  4051   000340                     CCPR1L          equ	832	;# 
  4052   000341                     CCPR1H          equ	833	;# 
  4053   000342                     CCP1CON         equ	834	;# 
  4054   000343                     CCP1CAP         equ	835	;# 
  4055   000344                     CCPR2           equ	836	;# 
  4056   000344                     CCPR2L          equ	836	;# 
  4057   000345                     CCPR2H          equ	837	;# 
  4058   000346                     CCP2CON         equ	838	;# 
  4059   000347                     CCP2CAP         equ	839	;# 
  4060   000348                     CCPR3           equ	840	;# 
  4061   000348                     CCPR3L          equ	840	;# 
  4062   000349                     CCPR3H          equ	841	;# 
  4063   00034A                     CCP3CON         equ	842	;# 
  4064   00034B                     CCP3CAP         equ	843	;# 
  4065   00034C                     CCPTMRS0        equ	844	;# 
  4066   00034F                     CRCDATA         equ	847	;# 
  4067   00034F                     CRCDATL         equ	847	;# 
  4068   000350                     CRCDATH         equ	848	;# 
  4069   000351                     CRCACC          equ	849	;# 
  4070   000351                     CRCACCL         equ	849	;# 
  4071   000352                     CRCACCH         equ	850	;# 
  4072   000353                     CRCSHFT         equ	851	;# 
  4073   000353                     CRCSHIFTL       equ	851	;# 
  4074   000354                     CRCSHIFTH       equ	852	;# 
  4075   000355                     CRCXOR          equ	853	;# 
  4076   000355                     CRCXORL         equ	853	;# 
  4077   000356                     CRCXORH         equ	854	;# 
  4078   000357                     CRCCON0         equ	855	;# 
  4079   000358                     CRCCON1         equ	856	;# 
  4080   00035A                     SCANLADR        equ	858	;# 
  4081   00035A                     SCANLADRL       equ	858	;# 
  4082   00035B                     SCANLADRH       equ	859	;# 
  4083   00035C                     SCANLADRU       equ	860	;# 
  4084   00035D                     SCANHADR        equ	861	;# 
  4085   00035D                     SCANHADRL       equ	861	;# 
  4086   00035E                     SCANHADRH       equ	862	;# 
  4087   00035F                     SCANHADRU       equ	863	;# 
  4088   000360                     SCANCON0        equ	864	;# 
  4089   000361                     SCANTRIG        equ	865	;# 
  4090   000362                     IPR0            equ	866	;# 
  4091   000363                     IPR1            equ	867	;# 
  4092   000364                     IPR2            equ	868	;# 
  4093   000365                     IPR3            equ	869	;# 
  4094   000366                     IPR4            equ	870	;# 
  4095   000367                     IPR5            equ	871	;# 
  4096   000368                     IPR6            equ	872	;# 
  4097   000369                     IPR7            equ	873	;# 
  4098   00036A                     IPR8            equ	874	;# 
  4099   00036B                     IPR9            equ	875	;# 
  4100   00036C                     IPR10           equ	876	;# 
  4101   00036D                     IPR11           equ	877	;# 
  4102   00036E                     IPR12           equ	878	;# 
  4103   00036F                     IPR13           equ	879	;# 
  4104   000370                     IPR14           equ	880	;# 
  4105   000371                     IPR15           equ	881	;# 
  4106   000373                     STATUS_CSHAD    equ	883	;# 
  4107   000374                     WREG_CSHAD      equ	884	;# 
  4108   000375                     BSR_CSHAD       equ	885	;# 
  4109   000376                     SHADCON         equ	886	;# 
  4110   000377                     STATUS_SHAD     equ	887	;# 
  4111   000378                     WREG_SHAD       equ	888	;# 
  4112   000379                     BSR_SHAD        equ	889	;# 
  4113   00037A                     PCLATH_SHAD     equ	890	;# 
  4114   00037B                     PCLATU_SHAD     equ	891	;# 
  4115   00037C                     FSR0SH          equ	892	;# 
  4116   00037C                     FSR0L_SHAD      equ	892	;# 
  4117   00037D                     FSR0H_SHAD      equ	893	;# 
  4118   00037E                     FSR1SH          equ	894	;# 
  4119   00037E                     FSR1L_SHAD      equ	894	;# 
  4120   00037F                     FSR1H_SHAD      equ	895	;# 
  4121   000380                     FSR2SH          equ	896	;# 
  4122   000380                     FSR2L_SHAD      equ	896	;# 
  4123   000381                     FSR2H_SHAD      equ	897	;# 
  4124   000382                     PRODSH          equ	898	;# 
  4125   000382                     PRODL_SHAD      equ	898	;# 
  4126   000383                     PRODH_SHAD      equ	899	;# 
  4127   0003BC                     CWG1CLK         equ	956	;# 
  4128   0003BC                     CWG1CLKCON      equ	956	;# 
  4129   0003BD                     CWG1ISM         equ	957	;# 
  4130   0003BD                     CWG1DAT         equ	957	;# 
  4131   0003BE                     CWG1DBR         equ	958	;# 
  4132   0003BF                     CWG1DBF         equ	959	;# 
  4133   0003C0                     CWG1CON0        equ	960	;# 
  4134   0003C1                     CWG1CON1        equ	961	;# 
  4135   0003C2                     CWG1AS0         equ	962	;# 
  4136   0003C3                     CWG1AS1         equ	963	;# 
  4137   0003C4                     CWG1STR         equ	964	;# 
  4138   0003C5                     CWG2CLK         equ	965	;# 
  4139   0003C5                     CWG2CLKCON      equ	965	;# 
  4140   0003C6                     CWG2ISM         equ	966	;# 
  4141   0003C6                     CWG2DAT         equ	966	;# 
  4142   0003C7                     CWG2DBR         equ	967	;# 
  4143   0003C8                     CWG2DBF         equ	968	;# 
  4144   0003C9                     CWG2CON0        equ	969	;# 
  4145   0003CA                     CWG2CON1        equ	970	;# 
  4146   0003CB                     CWG2AS0         equ	971	;# 
  4147   0003CC                     CWG2AS1         equ	972	;# 
  4148   0003CD                     CWG2STR         equ	973	;# 
  4149   0003CE                     CWG3CLK         equ	974	;# 
  4150   0003CE                     CWG3CLKCON      equ	974	;# 
  4151   0003CF                     CWG3ISM         equ	975	;# 
  4152   0003CF                     CWG3DAT         equ	975	;# 
  4153   0003D0                     CWG3DBR         equ	976	;# 
  4154   0003D1                     CWG3DBF         equ	977	;# 
  4155   0003D2                     CWG3CON0        equ	978	;# 
  4156   0003D3                     CWG3CON1        equ	979	;# 
  4157   0003D4                     CWG3AS0         equ	980	;# 
  4158   0003D5                     CWG3AS1         equ	981	;# 
  4159   0003D6                     CWG3STR         equ	982	;# 
  4160   0003D7                     FVRCON          equ	983	;# 
  4161   0003D8                     ADCPCON         equ	984	;# 
  4162   0003D8                     ADCP            equ	984	;# 
  4163   0003D9                     ADLTH           equ	985	;# 
  4164   0003D9                     ADLTHL          equ	985	;# 
  4165   0003DA                     ADLTHH          equ	986	;# 
  4166   0003DB                     ADUTH           equ	987	;# 
  4167   0003DB                     ADUTHL          equ	987	;# 
  4168   0003DC                     ADUTHH          equ	988	;# 
  4169   0003DD                     ADERR           equ	989	;# 
  4170   0003DD                     ADERRL          equ	989	;# 
  4171   0003DE                     ADERRH          equ	990	;# 
  4172   0003DF                     ADSTPT          equ	991	;# 
  4173   0003DF                     ADSTPTL         equ	991	;# 
  4174   0003E0                     ADSTPTH         equ	992	;# 
  4175   0003E1                     ADFLTR          equ	993	;# 
  4176   0003E1                     ADFLTRL         equ	993	;# 
  4177   0003E2                     ADFLTRH         equ	994	;# 
  4178   0003E3                     ADACC           equ	995	;# 
  4179   0003E3                     ADACCL          equ	995	;# 
  4180   0003E4                     ADACCH          equ	996	;# 
  4181   0003E5                     ADACCU          equ	997	;# 
  4182   0003E6                     ADCNT           equ	998	;# 
  4183   0003E7                     ADRPT           equ	999	;# 
  4184   0003E8                     ADPREV          equ	1000	;# 
  4185   0003E8                     ADPREVL         equ	1000	;# 
  4186   0003E9                     ADPREVH         equ	1001	;# 
  4187   0003EA                     ADRES           equ	1002	;# 
  4188   0003EA                     ADRESL          equ	1002	;# 
  4189   0003EB                     ADRESH          equ	1003	;# 
  4190   0003EC                     ADPCH           equ	1004	;# 
  4191   0003EE                     ADACQ           equ	1006	;# 
  4192   0003EE                     ADACQL          equ	1006	;# 
  4193   0003EF                     ADACQH          equ	1007	;# 
  4194   0003F0                     ADCAP           equ	1008	;# 
  4195   0003F1                     ADPRE           equ	1009	;# 
  4196   0003F1                     ADPREL          equ	1009	;# 
  4197   0003F2                     ADPREH          equ	1010	;# 
  4198   0003F3                     ADCON0          equ	1011	;# 
  4199   0003F4                     ADCON1          equ	1012	;# 
  4200   0003F5                     ADCON2          equ	1013	;# 
  4201   0003F6                     ADCON3          equ	1014	;# 
  4202   0003F7                     ADSTAT          equ	1015	;# 
  4203   0003F8                     ADREF           equ	1016	;# 
  4204   0003F9                     ADACT           equ	1017	;# 
  4205   0003FA                     ADCLK           equ	1018	;# 
  4206   000400                     ANSELA          equ	1024	;# 
  4207   000401                     WPUA            equ	1025	;# 
  4208   000402                     ODCONA          equ	1026	;# 
  4209   000403                     SLRCONA         equ	1027	;# 
  4210   000404                     INLVLA          equ	1028	;# 
  4211   000405                     IOCAP           equ	1029	;# 
  4212   000406                     IOCAN           equ	1030	;# 
  4213   000407                     IOCAF           equ	1031	;# 
  4214   000408                     ANSELB          equ	1032	;# 
  4215   000409                     WPUB            equ	1033	;# 
  4216   00040A                     ODCONB          equ	1034	;# 
  4217   00040B                     SLRCONB         equ	1035	;# 
  4218   00040C                     INLVLB          equ	1036	;# 
  4219   00040D                     IOCBP           equ	1037	;# 
  4220   00040E                     IOCBN           equ	1038	;# 
  4221   00040F                     IOCBF           equ	1039	;# 
  4222   000410                     ANSELC          equ	1040	;# 
  4223   000411                     WPUC            equ	1041	;# 
  4224   000412                     ODCONC          equ	1042	;# 
  4225   000413                     SLRCONC         equ	1043	;# 
  4226   000414                     INLVLC          equ	1044	;# 
  4227   000415                     IOCCP           equ	1045	;# 
  4228   000416                     IOCCN           equ	1046	;# 
  4229   000417                     IOCCF           equ	1047	;# 
  4230   000418                     ANSELD          equ	1048	;# 
  4231   000419                     WPUD            equ	1049	;# 
  4232   00041A                     ODCOND          equ	1050	;# 
  4233   00041B                     SLRCOND         equ	1051	;# 
  4234   00041C                     INLVLD          equ	1052	;# 
  4235   000420                     ANSELE          equ	1056	;# 
  4236   000421                     WPUE            equ	1057	;# 
  4237   000422                     ODCONE          equ	1058	;# 
  4238   000423                     SLRCONE         equ	1059	;# 
  4239   000424                     INLVLE          equ	1060	;# 
  4240   000425                     IOCEP           equ	1061	;# 
  4241   000426                     IOCEN           equ	1062	;# 
  4242   000427                     IOCEF           equ	1063	;# 
  4243   000428                     ANSELF          equ	1064	;# 
  4244   000429                     WPUF            equ	1065	;# 
  4245   00042A                     ODCONF          equ	1066	;# 
  4246   00042B                     SLRCONF         equ	1067	;# 
  4247   00042C                     INLVLF          equ	1068	;# 
  4248   000440                     NCO1ACC         equ	1088	;# 
  4249   000440                     NCO1ACCL        equ	1088	;# 
  4250   000441                     NCO1ACCH        equ	1089	;# 
  4251   000442                     NCO1ACCU        equ	1090	;# 
  4252   000443                     NCO1INC         equ	1091	;# 
  4253   000443                     NCO1INCL        equ	1091	;# 
  4254   000444                     NCO1INCH        equ	1092	;# 
  4255   000445                     NCO1INCU        equ	1093	;# 
  4256   000446                     NCO1CON         equ	1094	;# 
  4257   000447                     NCO1CLK         equ	1095	;# 
  4258   000448                     NCO2ACC         equ	1096	;# 
  4259   000448                     NCO2ACCL        equ	1096	;# 
  4260   000449                     NCO2ACCH        equ	1097	;# 
  4261   00044A                     NCO2ACCU        equ	1098	;# 
  4262   00044B                     NCO2INC         equ	1099	;# 
  4263   00044B                     NCO2INCL        equ	1099	;# 
  4264   00044C                     NCO2INCH        equ	1100	;# 
  4265   00044D                     NCO2INCU        equ	1101	;# 
  4266   00044E                     NCO2CON         equ	1102	;# 
  4267   00044F                     NCO2CLK         equ	1103	;# 
  4268   000450                     NCO3ACC         equ	1104	;# 
  4269   000450                     NCO3ACCL        equ	1104	;# 
  4270   000451                     NCO3ACCH        equ	1105	;# 
  4271   000452                     NCO3ACCU        equ	1106	;# 
  4272   000453                     NCO3INC         equ	1107	;# 
  4273   000453                     NCO3INCL        equ	1107	;# 
  4274   000454                     NCO3INCH        equ	1108	;# 
  4275   000455                     NCO3INCU        equ	1109	;# 
  4276   000456                     NCO3CON         equ	1110	;# 
  4277   000457                     NCO3CLK         equ	1111	;# 
  4278   000459                     IVTLOCK         equ	1113	;# 
  4279   00045A                     IVTAD           equ	1114	;# 
  4280   00045A                     IVTADL          equ	1114	;# 
  4281   00045B                     IVTADH          equ	1115	;# 
  4282   00045C                     IVTADU          equ	1116	;# 
  4283   00045D                     IVTBASE         equ	1117	;# 
  4284   00045D                     IVTBASEL        equ	1117	;# 
  4285   00045E                     IVTBASEH        equ	1118	;# 
  4286   00045F                     IVTBASEU        equ	1119	;# 
  4287   000460                     PWM1ERS         equ	1120	;# 
  4288   000461                     PWM1CLK         equ	1121	;# 
  4289   000462                     PWM1LDS         equ	1122	;# 
  4290   000463                     PWM1PR          equ	1123	;# 
  4291   000463                     PWM1PRL         equ	1123	;# 
  4292   000464                     PWM1PRH         equ	1124	;# 
  4293   000465                     PWM1CPRE        equ	1125	;# 
  4294   000466                     PWM1PIPOS       equ	1126	;# 
  4295   000467                     PWM1GIR         equ	1127	;# 
  4296   000468                     PWM1GIE         equ	1128	;# 
  4297   000469                     PWM1CON         equ	1129	;# 
  4298   00046A                     PWM1S1CFG       equ	1130	;# 
  4299   00046B                     PWM1S1P1        equ	1131	;# 
  4300   00046B                     PWM1S1P1L       equ	1131	;# 
  4301   00046C                     PWM1S1P1H       equ	1132	;# 
  4302   00046D                     PWM1S1P2        equ	1133	;# 
  4303   00046D                     PWM1S1P2L       equ	1133	;# 
  4304   00046E                     PWM1S1P2H       equ	1134	;# 
  4305   00046F                     PWM2ERS         equ	1135	;# 
  4306   000470                     PWM2CLK         equ	1136	;# 
  4307   000471                     PWM2LDS         equ	1137	;# 
  4308   000472                     PWM2PR          equ	1138	;# 
  4309   000472                     PWM2PRL         equ	1138	;# 
  4310   000473                     PWM2PRH         equ	1139	;# 
  4311   000474                     PWM2CPRE        equ	1140	;# 
  4312   000475                     PWM2PIPOS       equ	1141	;# 
  4313   000476                     PWM2GIR         equ	1142	;# 
  4314   000477                     PWM2GIE         equ	1143	;# 
  4315   000478                     PWM2CON         equ	1144	;# 
  4316   000479                     PWM2S1CFG       equ	1145	;# 
  4317   00047A                     PWM2S1P1        equ	1146	;# 
  4318   00047A                     PWM2S1P1L       equ	1146	;# 
  4319   00047B                     PWM2S1P1H       equ	1147	;# 
  4320   00047C                     PWM2S1P2        equ	1148	;# 
  4321   00047C                     PWM2S1P2L       equ	1148	;# 
  4322   00047D                     PWM2S1P2H       equ	1149	;# 
  4323   00047E                     PWM3ERS         equ	1150	;# 
  4324   00047F                     PWM3CLK         equ	1151	;# 
  4325   000480                     PWM3LDS         equ	1152	;# 
  4326   000481                     PWM3PR          equ	1153	;# 
  4327   000481                     PWM3PRL         equ	1153	;# 
  4328   000482                     PWM3PRH         equ	1154	;# 
  4329   000483                     PWM3CPRE        equ	1155	;# 
  4330   000484                     PWM3PIPOS       equ	1156	;# 
  4331   000485                     PWM3GIR         equ	1157	;# 
  4332   000486                     PWM3GIE         equ	1158	;# 
  4333   000487                     PWM3CON         equ	1159	;# 
  4334   000488                     PWM3S1CFG       equ	1160	;# 
  4335   000489                     PWM3S1P1        equ	1161	;# 
  4336   000489                     PWM3S1P1L       equ	1161	;# 
  4337   00048A                     PWM3S1P1H       equ	1162	;# 
  4338   00048B                     PWM3S1P2        equ	1163	;# 
  4339   00048B                     PWM3S1P2L       equ	1163	;# 
  4340   00048C                     PWM3S1P2H       equ	1164	;# 
  4341   00049C                     PWMLOAD         equ	1180	;# 
  4342   00049D                     PWMEN           equ	1181	;# 
  4343   00049E                     PIE0            equ	1182	;# 
  4344   00049F                     PIE1            equ	1183	;# 
  4345   0004A0                     PIE2            equ	1184	;# 
  4346   0004A1                     PIE3            equ	1185	;# 
  4347   0004A2                     PIE4            equ	1186	;# 
  4348   0004A3                     PIE5            equ	1187	;# 
  4349   0004A4                     PIE6            equ	1188	;# 
  4350   0004A5                     PIE7            equ	1189	;# 
  4351   0004A6                     PIE8            equ	1190	;# 
  4352   0004A7                     PIE9            equ	1191	;# 
  4353   0004A8                     PIE10           equ	1192	;# 
  4354   0004A9                     PIE11           equ	1193	;# 
  4355   0004AA                     PIE12           equ	1194	;# 
  4356   0004AB                     PIE13           equ	1195	;# 
  4357   0004AC                     PIE14           equ	1196	;# 
  4358   0004AD                     PIE15           equ	1197	;# 
  4359   0004AE                     PIR0            equ	1198	;# 
  4360   0004AF                     PIR1            equ	1199	;# 
  4361   0004B0                     PIR2            equ	1200	;# 
  4362   0004B1                     PIR3            equ	1201	;# 
  4363   0004B2                     PIR4            equ	1202	;# 
  4364   0004B3                     PIR5            equ	1203	;# 
  4365   0004B4                     PIR6            equ	1204	;# 
  4366   0004B5                     PIR7            equ	1205	;# 
  4367   0004B6                     PIR8            equ	1206	;# 
  4368   0004B7                     PIR9            equ	1207	;# 
  4369   0004B8                     PIR10           equ	1208	;# 
  4370   0004B9                     PIR11           equ	1209	;# 
  4371   0004BA                     PIR12           equ	1210	;# 
  4372   0004BB                     PIR13           equ	1211	;# 
  4373   0004BC                     PIR14           equ	1212	;# 
  4374   0004BD                     PIR15           equ	1213	;# 
  4375   0004BE                     LATA            equ	1214	;# 
  4376   0004BF                     LATB            equ	1215	;# 
  4377   0004C0                     LATC            equ	1216	;# 
  4378   0004C1                     LATD            equ	1217	;# 
  4379   0004C2                     LATE            equ	1218	;# 
  4380   0004C3                     LATF            equ	1219	;# 
  4381   0004C6                     TRISA           equ	1222	;# 
  4382   0004C7                     TRISB           equ	1223	;# 
  4383   0004C8                     TRISC           equ	1224	;# 
  4384   0004C9                     TRISD           equ	1225	;# 
  4385   0004CA                     TRISE           equ	1226	;# 
  4386   0004CB                     TRISF           equ	1227	;# 
  4387   0004CE                     PORTA           equ	1230	;# 
  4388   0004CF                     PORTB           equ	1231	;# 
  4389   0004D0                     PORTC           equ	1232	;# 
  4390   0004D1                     PORTD           equ	1233	;# 
  4391   0004D2                     PORTE           equ	1234	;# 
  4392   0004D3                     PORTF           equ	1235	;# 
  4393   0004D6                     INTCON0         equ	1238	;# 
  4394   0004D7                     INTCON1         equ	1239	;# 
  4395   0004D8                     STATUS          equ	1240	;# 
  4396   0004D9                     FSR2            equ	1241	;# 
  4397   0004D9                     FSR2L           equ	1241	;# 
  4398   0004DA                     FSR2H           equ	1242	;# 
  4399   0004DB                     PLUSW2          equ	1243	;# 
  4400   0004DC                     PREINC2         equ	1244	;# 
  4401   0004DD                     POSTDEC2        equ	1245	;# 
  4402   0004DE                     POSTINC2        equ	1246	;# 
  4403   0004DF                     INDF2           equ	1247	;# 
  4404   0004E0                     BSR             equ	1248	;# 
  4405   0004E1                     FSR1            equ	1249	;# 
  4406   0004E1                     FSR1L           equ	1249	;# 
  4407   0004E2                     FSR1H           equ	1250	;# 
  4408   0004E3                     PLUSW1          equ	1251	;# 
  4409   0004E4                     PREINC1         equ	1252	;# 
  4410   0004E5                     POSTDEC1        equ	1253	;# 
  4411   0004E6                     POSTINC1        equ	1254	;# 
  4412   0004E7                     INDF1           equ	1255	;# 
  4413   0004E8                     WREG            equ	1256	;# 
  4414   0004E9                     FSR0            equ	1257	;# 
  4415   0004E9                     FSR0L           equ	1257	;# 
  4416   0004EA                     FSR0H           equ	1258	;# 
  4417   0004EB                     PLUSW0          equ	1259	;# 
  4418   0004EC                     PREINC0         equ	1260	;# 
  4419   0004ED                     POSTDEC0        equ	1261	;# 
  4420   0004EE                     POSTINC0        equ	1262	;# 
  4421   0004EF                     INDF0           equ	1263	;# 
  4422   0004F0                     PCON0           equ	1264	;# 
  4423   0004F1                     PCON1           equ	1265	;# 
  4424   0004F2                     CPUDOZE         equ	1266	;# 
  4425   0004F3                     PROD            equ	1267	;# 
  4426   0004F3                     PRODL           equ	1267	;# 
  4427   0004F4                     PRODH           equ	1268	;# 
  4428   0004F5                     TABLAT          equ	1269	;# 
  4429   0004F6                     TBLPTR          equ	1270	;# 
  4430   0004F6                     TBLPTRL         equ	1270	;# 
  4431   0004F7                     TBLPTRH         equ	1271	;# 
  4432   0004F8                     TBLPTRU         equ	1272	;# 
  4433   0004F9                     PCLAT           equ	1273	;# 
  4434   0004F9                     PCL             equ	1273	;# 
  4435   0004FA                     PCLATH          equ	1274	;# 
  4436   0004FB                     PCLATU          equ	1275	;# 
  4437   0004FC                     STKPTR          equ	1276	;# 
  4438   0004FD                     TOS             equ	1277	;# 
  4439   0004FD                     TOSL            equ	1277	;# 
  4440   0004FE                     TOSH            equ	1278	;# 
  4441   0004FF                     TOSU            equ	1279	;# 
  4442   000039                     CLKRCON         equ	57	;# 
  4443   00003A                     CLKRCLK         equ	58	;# 
  4444   000040                     NVMCON0         equ	64	;# 
  4445   000041                     NVMCON1         equ	65	;# 
  4446   000042                     NVMLOCK         equ	66	;# 
  4447   000043                     NVMADR          equ	67	;# 
  4448   000043                     NVMADRL         equ	67	;# 
  4449   000044                     NVMADRH         equ	68	;# 
  4450   000045                     NVMADRU         equ	69	;# 
  4451   000046                     NVMDAT          equ	70	;# 
  4452   000046                     NVMDATL         equ	70	;# 
  4453   000047                     NVMDATH         equ	71	;# 
  4454   000048                     VREGCON         equ	72	;# 
  4455   000049                     BORCON          equ	73	;# 
  4456   00004A                     HLVDCON0        equ	74	;# 
  4457   00004B                     HLVDCON1        equ	75	;# 
  4458   00004C                     ZCDCON          equ	76	;# 
  4459   000060                     PMD0            equ	96	;# 
  4460   000061                     PMD1            equ	97	;# 
  4461   000063                     PMD3            equ	99	;# 
  4462   000064                     PMD4            equ	100	;# 
  4463   000065                     PMD5            equ	101	;# 
  4464   000066                     PMD6            equ	102	;# 
  4465   000067                     PMD7            equ	103	;# 
  4466   000068                     PMD8            equ	104	;# 
  4467   00006A                     MD1CON0         equ	106	;# 
  4468   00006B                     MD1CON1         equ	107	;# 
  4469   00006C                     MD1SRC          equ	108	;# 
  4470   00006D                     MD1CARL         equ	109	;# 
  4471   00006E                     MD1CARH         equ	110	;# 
  4472   00006F                     CMOUT           equ	111	;# 
  4473   000070                     CM1CON0         equ	112	;# 
  4474   000071                     CM1CON1         equ	113	;# 
  4475   000072                     CM1NCH          equ	114	;# 
  4476   000073                     CM1PCH          equ	115	;# 
  4477   000074                     CM2CON0         equ	116	;# 
  4478   000075                     CM2CON1         equ	117	;# 
  4479   000076                     CM2NCH          equ	118	;# 
  4480   000077                     CM2PCH          equ	119	;# 
  4481   000078                     WDTCON0         equ	120	;# 
  4482   000079                     WDTCON1         equ	121	;# 
  4483   00007A                     WDTPS           equ	122	;# 
  4484   00007A                     WDTPSL          equ	122	;# 
  4485   00007B                     WDTPSH          equ	123	;# 
  4486   00007C                     WDTTMR          equ	124	;# 
  4487   00007D                     DAC1DAT         equ	125	;# 
  4488   00007D                     DAC1DATL        equ	125	;# 
  4489   00007F                     DAC1CON         equ	127	;# 
  4490   000080                     SPI1RXB         equ	128	;# 
  4491   000081                     SPI1TXB         equ	129	;# 
  4492   000082                     SPI1TCNT        equ	130	;# 
  4493   000082                     SPI1TCNTL       equ	130	;# 
  4494   000083                     SPI1TCNTH       equ	131	;# 
  4495   000084                     SPI1CON0        equ	132	;# 
  4496   000085                     SPI1CON1        equ	133	;# 
  4497   000086                     SPI1CON2        equ	134	;# 
  4498   000087                     SPI1STATUS      equ	135	;# 
  4499   000088                     SPI1TWIDTH      equ	136	;# 
  4500   000089                     SPI1BAUD        equ	137	;# 
  4501   00008A                     SPI1INTF        equ	138	;# 
  4502   00008B                     SPI1INTE        equ	139	;# 
  4503   00008C                     SPI1CLK         equ	140	;# 
  4504   00008D                     SPI2RXB         equ	141	;# 
  4505   00008E                     SPI2TXB         equ	142	;# 
  4506   00008F                     SPI2TCNT        equ	143	;# 
  4507   00008F                     SPI2TCNTL       equ	143	;# 
  4508   000090                     SPI2TCNTH       equ	144	;# 
  4509   000091                     SPI2CON0        equ	145	;# 
  4510   000092                     SPI2CON1        equ	146	;# 
  4511   000093                     SPI2CON2        equ	147	;# 
  4512   000094                     SPI2STATUS      equ	148	;# 
  4513   000095                     SPI2TWIDTH      equ	149	;# 
  4514   000096                     SPI2BAUD        equ	150	;# 
  4515   000097                     SPI2INTF        equ	151	;# 
  4516   000098                     SPI2INTE        equ	152	;# 
  4517   000099                     SPI2CLK         equ	153	;# 
  4518   0000AC                     ACTCON          equ	172	;# 
  4519   0000AD                     OSCCON1         equ	173	;# 
  4520   0000AE                     OSCCON2         equ	174	;# 
  4521   0000AF                     OSCCON3         equ	175	;# 
  4522   0000B0                     OSCTUNE         equ	176	;# 
  4523   0000B1                     OSCFRQ          equ	177	;# 
  4524   0000B1                     OSCFREQ         equ	177	;# 
  4525   0000B2                     OSCSTAT         equ	178	;# 
  4526   0000B2                     OSCSTAT1        equ	178	;# 
  4527   0000B3                     OSCEN           equ	179	;# 
  4528   0000B4                     PRLOCK          equ	180	;# 
  4529   0000B5                     SCANPR          equ	181	;# 
  4530   0000B6                     DMA1PR          equ	182	;# 
  4531   0000B7                     DMA2PR          equ	183	;# 
  4532   0000B8                     DMA3PR          equ	184	;# 
  4533   0000B9                     DMA4PR          equ	185	;# 
  4534   0000BA                     DMA5PR          equ	186	;# 
  4535   0000BB                     DMA6PR          equ	187	;# 
  4536   0000BE                     MAINPR          equ	190	;# 
  4537   0000BF                     ISRPR           equ	191	;# 
  4538   0000D4                     CLCDATA         equ	212	;# 
  4539   0000D5                     CLCSELECT       equ	213	;# 
  4540   0000D6                     CLCnCON         equ	214	;# 
  4541   0000D7                     CLCnPOL         equ	215	;# 
  4542   0000D8                     CLCnSEL0        equ	216	;# 
  4543   0000D9                     CLCnSEL1        equ	217	;# 
  4544   0000DA                     CLCnSEL2        equ	218	;# 
  4545   0000DB                     CLCnSEL3        equ	219	;# 
  4546   0000DC                     CLCnGLS0        equ	220	;# 
  4547   0000DD                     CLCnGLS1        equ	221	;# 
  4548   0000DE                     CLCnGLS2        equ	222	;# 
  4549   0000DF                     CLCnGLS3        equ	223	;# 
  4550   0000E8                     DMASELECT       equ	232	;# 
  4551   0000E9                     DMAnBUF         equ	233	;# 
  4552   0000EA                     DMAnDCNT        equ	234	;# 
  4553   0000EA                     DMAnDCNTL       equ	234	;# 
  4554   0000EB                     DMAnDCNTH       equ	235	;# 
  4555   0000EC                     DMAnDPTR        equ	236	;# 
  4556   0000EC                     DMAnDPTRL       equ	236	;# 
  4557   0000ED                     DMAnDPTRH       equ	237	;# 
  4558   0000EE                     DMAnDSZ         equ	238	;# 
  4559   0000EE                     DMAnDSZL        equ	238	;# 
  4560   0000EF                     DMAnDSZH        equ	239	;# 
  4561   0000F0                     DMAnDSA         equ	240	;# 
  4562   0000F0                     DMAnDSAL        equ	240	;# 
  4563   0000F1                     DMAnDSAH        equ	241	;# 
  4564   0000F2                     DMAnSCNT        equ	242	;# 
  4565   0000F2                     DMAnSCNTL       equ	242	;# 
  4566   0000F3                     DMAnSCNTH       equ	243	;# 
  4567   0000F4                     DMAnSPTR        equ	244	;# 
  4568   0000F4                     DMAnSPTRL       equ	244	;# 
  4569   0000F5                     DMAnSPTRH       equ	245	;# 
  4570   0000F6                     DMAnSPTRU       equ	246	;# 
  4571   0000F7                     DMAnSSZ         equ	247	;# 
  4572   0000F7                     DMAnSSZL        equ	247	;# 
  4573   0000F8                     DMAnSSZH        equ	248	;# 
  4574   0000F9                     DMAnSSA         equ	249	;# 
  4575   0000F9                     DMAnSSAL        equ	249	;# 
  4576   0000FA                     DMAnSSAH        equ	250	;# 
  4577   0000FB                     DMAnSSAU        equ	251	;# 
  4578   0000FC                     DMAnCON0        equ	252	;# 
  4579   0000FD                     DMAnCON1        equ	253	;# 
  4580   0000FE                     DMAnAIRQ        equ	254	;# 
  4581   0000FF                     DMAnSIRQ        equ	255	;# 
  4582   000200                     PPSLOCK         equ	512	;# 
  4583   000201                     RA0PPS          equ	513	;# 
  4584   000202                     RA1PPS          equ	514	;# 
  4585   000203                     RA2PPS          equ	515	;# 
  4586   000204                     RA3PPS          equ	516	;# 
  4587   000205                     RA4PPS          equ	517	;# 
  4588   000206                     RA5PPS          equ	518	;# 
  4589   000207                     RA6PPS          equ	519	;# 
  4590   000208                     RA7PPS          equ	520	;# 
  4591   000209                     RB0PPS          equ	521	;# 
  4592   00020A                     RB1PPS          equ	522	;# 
  4593   00020B                     RB2PPS          equ	523	;# 
  4594   00020C                     RB3PPS          equ	524	;# 
  4595   00020D                     RB4PPS          equ	525	;# 
  4596   00020E                     RB5PPS          equ	526	;# 
  4597   00020F                     RB6PPS          equ	527	;# 
  4598   000210                     RB7PPS          equ	528	;# 
  4599   000211                     RC0PPS          equ	529	;# 
  4600   000212                     RC1PPS          equ	530	;# 
  4601   000213                     RC2PPS          equ	531	;# 
  4602   000214                     RC3PPS          equ	532	;# 
  4603   000215                     RC4PPS          equ	533	;# 
  4604   000216                     RC5PPS          equ	534	;# 
  4605   000217                     RC6PPS          equ	535	;# 
  4606   000218                     RC7PPS          equ	536	;# 
  4607   000219                     RD0PPS          equ	537	;# 
  4608   00021A                     RD1PPS          equ	538	;# 
  4609   00021B                     RD2PPS          equ	539	;# 
  4610   00021C                     RD3PPS          equ	540	;# 
  4611   00021D                     RD4PPS          equ	541	;# 
  4612   00021E                     RD5PPS          equ	542	;# 
  4613   00021F                     RD6PPS          equ	543	;# 
  4614   000220                     RD7PPS          equ	544	;# 
  4615   000221                     RE0PPS          equ	545	;# 
  4616   000222                     RE1PPS          equ	546	;# 
  4617   000223                     RE2PPS          equ	547	;# 
  4618   000229                     RF0PPS          equ	553	;# 
  4619   00022A                     RF1PPS          equ	554	;# 
  4620   00022B                     RF2PPS          equ	555	;# 
  4621   00022C                     RF3PPS          equ	556	;# 
  4622   00022D                     RF4PPS          equ	557	;# 
  4623   00022E                     RF5PPS          equ	558	;# 
  4624   00022F                     RF6PPS          equ	559	;# 
  4625   000230                     RF7PPS          equ	560	;# 
  4626   00023E                     INT0PPS         equ	574	;# 
  4627   00023F                     INT1PPS         equ	575	;# 
  4628   000240                     INT2PPS         equ	576	;# 
  4629   000241                     T0CKIPPS        equ	577	;# 
  4630   000242                     T1CKIPPS        equ	578	;# 
  4631   000243                     T1GPPS          equ	579	;# 
  4632   000244                     T3CKIPPS        equ	580	;# 
  4633   000245                     T3GPPS          equ	581	;# 
  4634   000246                     T5CKIPPS        equ	582	;# 
  4635   000247                     T5GPPS          equ	583	;# 
  4636   000248                     T2INPPS         equ	584	;# 
  4637   000249                     T4INPPS         equ	585	;# 
  4638   00024A                     T6INPPS         equ	586	;# 
  4639   00024F                     CCP1PPS         equ	591	;# 
  4640   000250                     CCP2PPS         equ	592	;# 
  4641   000251                     CCP3PPS         equ	593	;# 
  4642   000253                     PWM1ERSPPS      equ	595	;# 
  4643   000254                     PWM2ERSPPS      equ	596	;# 
  4644   000255                     PWM3ERSPPS      equ	597	;# 
  4645   000257                     PWMIN0PPS       equ	599	;# 
  4646   000258                     PWMIN1PPS       equ	600	;# 
  4647   000259                     SMT1WINPPS      equ	601	;# 
  4648   00025A                     SMT1SIGPPS      equ	602	;# 
  4649   00025B                     CWG1PPS         equ	603	;# 
  4650   00025B                     CWG1INPPS       equ	603	;# 
  4651   00025C                     CWG2PPS         equ	604	;# 
  4652   00025C                     CWG2INPPS       equ	604	;# 
  4653   00025D                     CWG3PPS         equ	605	;# 
  4654   00025D                     CWG3INPPS       equ	605	;# 
  4655   00025E                     MD1CARLPPS      equ	606	;# 
  4656   00025E                     MDCARLPPS       equ	606	;# 
  4657   00025F                     MD1CARHPPS      equ	607	;# 
  4658   00025F                     MDCARHPPS       equ	607	;# 
  4659   000260                     MD1SRCPPS       equ	608	;# 
  4660   000260                     MDSRCPPS        equ	608	;# 
  4661   000261                     CLCIN0PPS       equ	609	;# 
  4662   000262                     CLCIN1PPS       equ	610	;# 
  4663   000263                     CLCIN2PPS       equ	611	;# 
  4664   000264                     CLCIN3PPS       equ	612	;# 
  4665   000265                     CLCIN4PPS       equ	613	;# 
  4666   000266                     CLCIN5PPS       equ	614	;# 
  4667   000267                     CLCIN6PPS       equ	615	;# 
  4668   000268                     CLCIN7PPS       equ	616	;# 
  4669   000269                     ADACTPPS        equ	617	;# 
  4670   00026A                     SPI1SCKPPS      equ	618	;# 
  4671   00026B                     SPI1SDIPPS      equ	619	;# 
  4672   00026C                     SPI1SSPPS       equ	620	;# 
  4673   00026D                     SPI2SCKPPS      equ	621	;# 
  4674   00026E                     SPI2SDIPPS      equ	622	;# 
  4675   00026F                     SPI2SSPPS       equ	623	;# 
  4676   000270                     I2C1SDAPPS      equ	624	;# 
  4677   000271                     I2C1SCLPPS      equ	625	;# 
  4678   000272                     U1RXPPS         equ	626	;# 
  4679   000273                     U1CTSPPS        equ	627	;# 
  4680   000274                     U2RXPPS         equ	628	;# 
  4681   000275                     U2CTSPPS        equ	629	;# 
  4682   000276                     U3RXPPS         equ	630	;# 
  4683   000277                     U3CTSPPS        equ	631	;# 
  4684   000278                     U4RXPPS         equ	632	;# 
  4685   000279                     U4CTSPPS        equ	633	;# 
  4686   00027A                     U5RXPPS         equ	634	;# 
  4687   00027B                     U5CTSPPS        equ	635	;# 
  4688   000286                     RC4I2C          equ	646	;# 
  4689   000287                     RC3I2C          equ	647	;# 
  4690   000288                     RB2I2C          equ	648	;# 
  4691   000289                     RB1I2C          equ	649	;# 
  4692   00028B                     I2C1RXB         equ	651	;# 
  4693   00028C                     I2C1TXB         equ	652	;# 
  4694   00028D                     I2C1CNT         equ	653	;# 
  4695   00028E                     I2C1ADB0        equ	654	;# 
  4696   00028F                     I2C1ADB1        equ	655	;# 
  4697   000290                     I2C1ADR0        equ	656	;# 
  4698   000291                     I2C1ADR1        equ	657	;# 
  4699   000292                     I2C1ADR2        equ	658	;# 
  4700   000293                     I2C1ADR3        equ	659	;# 
  4701   000294                     I2C1CON0        equ	660	;# 
  4702   000295                     I2C1CON1        equ	661	;# 
  4703   000296                     I2C1CON2        equ	662	;# 
  4704   000297                     I2C1ERR         equ	663	;# 
  4705   000298                     I2C1STAT0       equ	664	;# 
  4706   000299                     I2C1STAT1       equ	665	;# 
  4707   00029A                     I2C1PIR         equ	666	;# 
  4708   00029B                     I2C1PIE         equ	667	;# 
  4709   00029C                     I2C1CLK         equ	668	;# 
  4710   00029D                     I2C1BTO         equ	669	;# 
  4711   0002A1                     U1RXB           equ	673	;# 
  4712   0002A1                     U1RXBL          equ	673	;# 
  4713   0002A2                     U1RXCHK         equ	674	;# 
  4714   0002A3                     U1TXB           equ	675	;# 
  4715   0002A3                     U1TXBL          equ	675	;# 
  4716   0002A4                     U1TXCHK         equ	676	;# 
  4717   0002A5                     U1P1            equ	677	;# 
  4718   0002A5                     U1P1L           equ	677	;# 
  4719   0002A6                     U1P1H           equ	678	;# 
  4720   0002A7                     U1P2            equ	679	;# 
  4721   0002A7                     U1P2L           equ	679	;# 
  4722   0002A8                     U1P2H           equ	680	;# 
  4723   0002A9                     U1P3            equ	681	;# 
  4724   0002A9                     U1P3L           equ	681	;# 
  4725   0002AA                     U1P3H           equ	682	;# 
  4726   0002AB                     U1CON0          equ	683	;# 
  4727   0002AC                     U1CON1          equ	684	;# 
  4728   0002AD                     U1CON2          equ	685	;# 
  4729   0002AE                     U1BRG           equ	686	;# 
  4730   0002AE                     U1BRGL          equ	686	;# 
  4731   0002AF                     U1BRGH          equ	687	;# 
  4732   0002B0                     U1FIFO          equ	688	;# 
  4733   0002B1                     U1UIR           equ	689	;# 
  4734   0002B2                     U1ERRIR         equ	690	;# 
  4735   0002B3                     U1ERRIE         equ	691	;# 
  4736   0002B4                     U2RXB           equ	692	;# 
  4737   0002B4                     U2RXBL          equ	692	;# 
  4738   0002B6                     U2TXB           equ	694	;# 
  4739   0002B6                     U2TXBL          equ	694	;# 
  4740   0002B8                     U2P1            equ	696	;# 
  4741   0002B8                     U2P1L           equ	696	;# 
  4742   0002BA                     U2P2            equ	698	;# 
  4743   0002BA                     U2P2L           equ	698	;# 
  4744   0002BC                     U2P3            equ	700	;# 
  4745   0002BC                     U2P3L           equ	700	;# 
  4746   0002BE                     U2CON0          equ	702	;# 
  4747   0002BF                     U2CON1          equ	703	;# 
  4748   0002C0                     U2CON2          equ	704	;# 
  4749   0002C1                     U2BRG           equ	705	;# 
  4750   0002C1                     U2BRGL          equ	705	;# 
  4751   0002C2                     U2BRGH          equ	706	;# 
  4752   0002C3                     U2FIFO          equ	707	;# 
  4753   0002C4                     U2UIR           equ	708	;# 
  4754   0002C5                     U2ERRIR         equ	709	;# 
  4755   0002C6                     U2ERRIE         equ	710	;# 
  4756   0002C7                     U3RXB           equ	711	;# 
  4757   0002C7                     U3RXBL          equ	711	;# 
  4758   0002C9                     U3TXB           equ	713	;# 
  4759   0002C9                     U3TXBL          equ	713	;# 
  4760   0002CB                     U3P1            equ	715	;# 
  4761   0002CB                     U3P1L           equ	715	;# 
  4762   0002CD                     U3P2            equ	717	;# 
  4763   0002CD                     U3P2L           equ	717	;# 
  4764   0002CF                     U3P3            equ	719	;# 
  4765   0002CF                     U3P3L           equ	719	;# 
  4766   0002D1                     U3CON0          equ	721	;# 
  4767   0002D2                     U3CON1          equ	722	;# 
  4768   0002D3                     U3CON2          equ	723	;# 
  4769   0002D4                     U3BRG           equ	724	;# 
  4770   0002D4                     U3BRGL          equ	724	;# 
  4771   0002D5                     U3BRGH          equ	725	;# 
  4772   0002D6                     U3FIFO          equ	726	;# 
  4773   0002D7                     U3UIR           equ	727	;# 
  4774   0002D8                     U3ERRIR         equ	728	;# 
  4775   0002D9                     U3ERRIE         equ	729	;# 
  4776   0002DA                     U4RXB           equ	730	;# 
  4777   0002DA                     U4RXBL          equ	730	;# 
  4778   0002DC                     U4TXB           equ	732	;# 
  4779   0002DC                     U4TXBL          equ	732	;# 
  4780   0002DE                     U4P1            equ	734	;# 
  4781   0002DE                     U4P1L           equ	734	;# 
  4782   0002E0                     U4P2            equ	736	;# 
  4783   0002E0                     U4P2L           equ	736	;# 
  4784   0002E2                     U4P3            equ	738	;# 
  4785   0002E2                     U4P3L           equ	738	;# 
  4786   0002E4                     U4CON0          equ	740	;# 
  4787   0002E5                     U4CON1          equ	741	;# 
  4788   0002E6                     U4CON2          equ	742	;# 
  4789   0002E7                     U4BRG           equ	743	;# 
  4790   0002E7                     U4BRGL          equ	743	;# 
  4791   0002E8                     U4BRGH          equ	744	;# 
  4792   0002E9                     U4FIFO          equ	745	;# 
  4793   0002EA                     U4UIR           equ	746	;# 
  4794   0002EB                     U4ERRIR         equ	747	;# 
  4795   0002EC                     U4ERRIE         equ	748	;# 
  4796   0002ED                     U5RXB           equ	749	;# 
  4797   0002ED                     U5RXBL          equ	749	;# 
  4798   0002EF                     U5TXB           equ	751	;# 
  4799   0002EF                     U5TXBL          equ	751	;# 
  4800   0002F1                     U5P1            equ	753	;# 
  4801   0002F1                     U5P1L           equ	753	;# 
  4802   0002F3                     U5P2            equ	755	;# 
  4803   0002F3                     U5P2L           equ	755	;# 
  4804   0002F5                     U5P3            equ	757	;# 
  4805   0002F5                     U5P3L           equ	757	;# 
  4806   0002F7                     U5CON0          equ	759	;# 
  4807   0002F8                     U5CON1          equ	760	;# 
  4808   0002F9                     U5CON2          equ	761	;# 
  4809   0002FA                     U5BRG           equ	762	;# 
  4810   0002FA                     U5BRGL          equ	762	;# 
  4811   0002FB                     U5BRGH          equ	763	;# 
  4812   0002FC                     U5FIFO          equ	764	;# 
  4813   0002FD                     U5UIR           equ	765	;# 
  4814   0002FE                     U5ERRIR         equ	766	;# 
  4815   0002FF                     U5ERRIE         equ	767	;# 
  4816   000300                     SMT1TMR         equ	768	;# 
  4817   000300                     SMT1TMRL        equ	768	;# 
  4818   000301                     SMT1TMRH        equ	769	;# 
  4819   000302                     SMT1TMRU        equ	770	;# 
  4820   000303                     SMT1CPR         equ	771	;# 
  4821   000303                     SMT1CPRL        equ	771	;# 
  4822   000304                     SMT1CPRH        equ	772	;# 
  4823   000305                     SMT1CPRU        equ	773	;# 
  4824   000306                     SMT1CPW         equ	774	;# 
  4825   000306                     SMT1CPWL        equ	774	;# 
  4826   000307                     SMT1CPWH        equ	775	;# 
  4827   000308                     SMT1CPWU        equ	776	;# 
  4828   000309                     SMT1PR          equ	777	;# 
  4829   000309                     SMT1PRL         equ	777	;# 
  4830   00030A                     SMT1PRH         equ	778	;# 
  4831   00030B                     SMT1PRU         equ	779	;# 
  4832   00030C                     SMT1CON0        equ	780	;# 
  4833   00030D                     SMT1CON1        equ	781	;# 
  4834   00030E                     SMT1STAT        equ	782	;# 
  4835   00030F                     SMT1CLK         equ	783	;# 
  4836   000310                     SMT1SIG         equ	784	;# 
  4837   000311                     SMT1WIN         equ	785	;# 
  4838   000318                     TMR0L           equ	792	;# 
  4839   000318                     TMR0            equ	792	;# 
  4840   000319                     TMR0H           equ	793	;# 
  4841   000319                     PR0             equ	793	;# 
  4842   00031A                     T0CON0          equ	794	;# 
  4843   00031B                     T0CON1          equ	795	;# 
  4844   00031C                     TMR1            equ	796	;# 
  4845   00031C                     TMR1L           equ	796	;# 
  4846   00031D                     TMR1H           equ	797	;# 
  4847   00031E                     T1CON           equ	798	;# 
  4848   00031E                     TMR1CON         equ	798	;# 
  4849   00031F                     T1GCON          equ	799	;# 
  4850   00031F                     TMR1GCON        equ	799	;# 
  4851   000320                     T1GATE          equ	800	;# 
  4852   000320                     TMR1GATE        equ	800	;# 
  4853   000321                     T1CLK           equ	801	;# 
  4854   000321                     TMR1CLK         equ	801	;# 
  4855   000321                     PR1             equ	801	;# 
  4856   000322                     T2TMR           equ	802	;# 
  4857   000322                     TMR2            equ	802	;# 
  4858   000323                     T2PR            equ	803	;# 
  4859   000323                     PR2             equ	803	;# 
  4860   000324                     T2CON           equ	804	;# 
  4861   000325                     T2HLT           equ	805	;# 
  4862   000326                     T2CLKCON        equ	806	;# 
  4863   000326                     T2CLK           equ	806	;# 
  4864   000327                     T2RST           equ	807	;# 
  4865   000328                     TMR3            equ	808	;# 
  4866   000328                     TMR3L           equ	808	;# 
  4867   000329                     TMR3H           equ	809	;# 
  4868   00032A                     T3CON           equ	810	;# 
  4869   00032A                     TMR3CON         equ	810	;# 
  4870   00032B                     T3GCON          equ	811	;# 
  4871   00032B                     TMR3GCON        equ	811	;# 
  4872   00032C                     T3GATE          equ	812	;# 
  4873   00032C                     TMR3GATE        equ	812	;# 
  4874   00032D                     T3CLK           equ	813	;# 
  4875   00032D                     TMR3CLK         equ	813	;# 
  4876   00032D                     PR3             equ	813	;# 
  4877   00032E                     T4TMR           equ	814	;# 
  4878   00032E                     TMR4            equ	814	;# 
  4879   00032F                     T4PR            equ	815	;# 
  4880   00032F                     PR4             equ	815	;# 
  4881   000330                     T4CON           equ	816	;# 
  4882   000331                     T4HLT           equ	817	;# 
  4883   000332                     T4CLKCON        equ	818	;# 
  4884   000332                     T4CLK           equ	818	;# 
  4885   000333                     T4RST           equ	819	;# 
  4886   000334                     TMR5            equ	820	;# 
  4887   000334                     TMR5L           equ	820	;# 
  4888   000335                     TMR5H           equ	821	;# 
  4889   000336                     T5CON           equ	822	;# 
  4890   000336                     TMR5CON         equ	822	;# 
  4891   000337                     T5GCON          equ	823	;# 
  4892   000337                     TMR5GCON        equ	823	;# 
  4893   000338                     T5GATE          equ	824	;# 
  4894   000338                     TMR5GATE        equ	824	;# 
  4895   000339                     T5CLK           equ	825	;# 
  4896   000339                     TMR5CLK         equ	825	;# 
  4897   000339                     PR5             equ	825	;# 
  4898   00033A                     T6TMR           equ	826	;# 
  4899   00033A                     TMR6            equ	826	;# 
  4900   00033B                     T6PR            equ	827	;# 
  4901   00033B                     PR6             equ	827	;# 
  4902   00033C                     T6CON           equ	828	;# 
  4903   00033D                     T6HLT           equ	829	;# 
  4904   00033E                     T6CLKCON        equ	830	;# 
  4905   00033E                     T6CLK           equ	830	;# 
  4906   00033F                     T6RST           equ	831	;# 
  4907   000340                     CCPR1           equ	832	;# 
  4908   000340                     CCPR1L          equ	832	;# 
  4909   000341                     CCPR1H          equ	833	;# 
  4910   000342                     CCP1CON         equ	834	;# 
  4911   000343                     CCP1CAP         equ	835	;# 
  4912   000344                     CCPR2           equ	836	;# 
  4913   000344                     CCPR2L          equ	836	;# 
  4914   000345                     CCPR2H          equ	837	;# 
  4915   000346                     CCP2CON         equ	838	;# 
  4916   000347                     CCP2CAP         equ	839	;# 
  4917   000348                     CCPR3           equ	840	;# 
  4918   000348                     CCPR3L          equ	840	;# 
  4919   000349                     CCPR3H          equ	841	;# 
  4920   00034A                     CCP3CON         equ	842	;# 
  4921   00034B                     CCP3CAP         equ	843	;# 
  4922   00034C                     CCPTMRS0        equ	844	;# 
  4923   00034F                     CRCDATA         equ	847	;# 
  4924   00034F                     CRCDATL         equ	847	;# 
  4925   000350                     CRCDATH         equ	848	;# 
  4926   000351                     CRCACC          equ	849	;# 
  4927   000351                     CRCACCL         equ	849	;# 
  4928   000352                     CRCACCH         equ	850	;# 
  4929   000353                     CRCSHFT         equ	851	;# 
  4930   000353                     CRCSHIFTL       equ	851	;# 
  4931   000354                     CRCSHIFTH       equ	852	;# 
  4932   000355                     CRCXOR          equ	853	;# 
  4933   000355                     CRCXORL         equ	853	;# 
  4934   000356                     CRCXORH         equ	854	;# 
  4935   000357                     CRCCON0         equ	855	;# 
  4936   000358                     CRCCON1         equ	856	;# 
  4937   00035A                     SCANLADR        equ	858	;# 
  4938   00035A                     SCANLADRL       equ	858	;# 
  4939   00035B                     SCANLADRH       equ	859	;# 
  4940   00035C                     SCANLADRU       equ	860	;# 
  4941   00035D                     SCANHADR        equ	861	;# 
  4942   00035D                     SCANHADRL       equ	861	;# 
  4943   00035E                     SCANHADRH       equ	862	;# 
  4944   00035F                     SCANHADRU       equ	863	;# 
  4945   000360                     SCANCON0        equ	864	;# 
  4946   000361                     SCANTRIG        equ	865	;# 
  4947   000362                     IPR0            equ	866	;# 
  4948   000363                     IPR1            equ	867	;# 
  4949   000364                     IPR2            equ	868	;# 
  4950   000365                     IPR3            equ	869	;# 
  4951   000366                     IPR4            equ	870	;# 
  4952   000367                     IPR5            equ	871	;# 
  4953   000368                     IPR6            equ	872	;# 
  4954   000369                     IPR7            equ	873	;# 
  4955   00036A                     IPR8            equ	874	;# 
  4956   00036B                     IPR9            equ	875	;# 
  4957   00036C                     IPR10           equ	876	;# 
  4958   00036D                     IPR11           equ	877	;# 
  4959   00036E                     IPR12           equ	878	;# 
  4960   00036F                     IPR13           equ	879	;# 
  4961   000370                     IPR14           equ	880	;# 
  4962   000371                     IPR15           equ	881	;# 
  4963   000373                     STATUS_CSHAD    equ	883	;# 
  4964   000374                     WREG_CSHAD      equ	884	;# 
  4965   000375                     BSR_CSHAD       equ	885	;# 
  4966   000376                     SHADCON         equ	886	;# 
  4967   000377                     STATUS_SHAD     equ	887	;# 
  4968   000378                     WREG_SHAD       equ	888	;# 
  4969   000379                     BSR_SHAD        equ	889	;# 
  4970   00037A                     PCLATH_SHAD     equ	890	;# 
  4971   00037B                     PCLATU_SHAD     equ	891	;# 
  4972   00037C                     FSR0SH          equ	892	;# 
  4973   00037C                     FSR0L_SHAD      equ	892	;# 
  4974   00037D                     FSR0H_SHAD      equ	893	;# 
  4975   00037E                     FSR1SH          equ	894	;# 
  4976   00037E                     FSR1L_SHAD      equ	894	;# 
  4977   00037F                     FSR1H_SHAD      equ	895	;# 
  4978   000380                     FSR2SH          equ	896	;# 
  4979   000380                     FSR2L_SHAD      equ	896	;# 
  4980   000381                     FSR2H_SHAD      equ	897	;# 
  4981   000382                     PRODSH          equ	898	;# 
  4982   000382                     PRODL_SHAD      equ	898	;# 
  4983   000383                     PRODH_SHAD      equ	899	;# 
  4984   0003BC                     CWG1CLK         equ	956	;# 
  4985   0003BC                     CWG1CLKCON      equ	956	;# 
  4986   0003BD                     CWG1ISM         equ	957	;# 
  4987   0003BD                     CWG1DAT         equ	957	;# 
  4988   0003BE                     CWG1DBR         equ	958	;# 
  4989   0003BF                     CWG1DBF         equ	959	;# 
  4990   0003C0                     CWG1CON0        equ	960	;# 
  4991   0003C1                     CWG1CON1        equ	961	;# 
  4992   0003C2                     CWG1AS0         equ	962	;# 
  4993   0003C3                     CWG1AS1         equ	963	;# 
  4994   0003C4                     CWG1STR         equ	964	;# 
  4995   0003C5                     CWG2CLK         equ	965	;# 
  4996   0003C5                     CWG2CLKCON      equ	965	;# 
  4997   0003C6                     CWG2ISM         equ	966	;# 
  4998   0003C6                     CWG2DAT         equ	966	;# 
  4999   0003C7                     CWG2DBR         equ	967	;# 
  5000   0003C8                     CWG2DBF         equ	968	;# 
  5001   0003C9                     CWG2CON0        equ	969	;# 
  5002   0003CA                     CWG2CON1        equ	970	;# 
  5003   0003CB                     CWG2AS0         equ	971	;# 
  5004   0003CC                     CWG2AS1         equ	972	;# 
  5005   0003CD                     CWG2STR         equ	973	;# 
  5006   0003CE                     CWG3CLK         equ	974	;# 
  5007   0003CE                     CWG3CLKCON      equ	974	;# 
  5008   0003CF                     CWG3ISM         equ	975	;# 
  5009   0003CF                     CWG3DAT         equ	975	;# 
  5010   0003D0                     CWG3DBR         equ	976	;# 
  5011   0003D1                     CWG3DBF         equ	977	;# 
  5012   0003D2                     CWG3CON0        equ	978	;# 
  5013   0003D3                     CWG3CON1        equ	979	;# 
  5014   0003D4                     CWG3AS0         equ	980	;# 
  5015   0003D5                     CWG3AS1         equ	981	;# 
  5016   0003D6                     CWG3STR         equ	982	;# 
  5017   0003D7                     FVRCON          equ	983	;# 
  5018   0003D8                     ADCPCON         equ	984	;# 
  5019   0003D8                     ADCP            equ	984	;# 
  5020   0003D9                     ADLTH           equ	985	;# 
  5021   0003D9                     ADLTHL          equ	985	;# 
  5022   0003DA                     ADLTHH          equ	986	;# 
  5023   0003DB                     ADUTH           equ	987	;# 
  5024   0003DB                     ADUTHL          equ	987	;# 
  5025   0003DC                     ADUTHH          equ	988	;# 
  5026   0003DD                     ADERR           equ	989	;# 
  5027   0003DD                     ADERRL          equ	989	;# 
  5028   0003DE                     ADERRH          equ	990	;# 
  5029   0003DF                     ADSTPT          equ	991	;# 
  5030   0003DF                     ADSTPTL         equ	991	;# 
  5031   0003E0                     ADSTPTH         equ	992	;# 
  5032   0003E1                     ADFLTR          equ	993	;# 
  5033   0003E1                     ADFLTRL         equ	993	;# 
  5034   0003E2                     ADFLTRH         equ	994	;# 
  5035   0003E3                     ADACC           equ	995	;# 
  5036   0003E3                     ADACCL          equ	995	;# 
  5037   0003E4                     ADACCH          equ	996	;# 
  5038   0003E5                     ADACCU          equ	997	;# 
  5039   0003E6                     ADCNT           equ	998	;# 
  5040   0003E7                     ADRPT           equ	999	;# 
  5041   0003E8                     ADPREV          equ	1000	;# 
  5042   0003E8                     ADPREVL         equ	1000	;# 
  5043   0003E9                     ADPREVH         equ	1001	;# 
  5044   0003EA                     ADRES           equ	1002	;# 
  5045   0003EA                     ADRESL          equ	1002	;# 
  5046   0003EB                     ADRESH          equ	1003	;# 
  5047   0003EC                     ADPCH           equ	1004	;# 
  5048   0003EE                     ADACQ           equ	1006	;# 
  5049   0003EE                     ADACQL          equ	1006	;# 
  5050   0003EF                     ADACQH          equ	1007	;# 
  5051   0003F0                     ADCAP           equ	1008	;# 
  5052   0003F1                     ADPRE           equ	1009	;# 
  5053   0003F1                     ADPREL          equ	1009	;# 
  5054   0003F2                     ADPREH          equ	1010	;# 
  5055   0003F3                     ADCON0          equ	1011	;# 
  5056   0003F4                     ADCON1          equ	1012	;# 
  5057   0003F5                     ADCON2          equ	1013	;# 
  5058   0003F6                     ADCON3          equ	1014	;# 
  5059   0003F7                     ADSTAT          equ	1015	;# 
  5060   0003F8                     ADREF           equ	1016	;# 
  5061   0003F9                     ADACT           equ	1017	;# 
  5062   0003FA                     ADCLK           equ	1018	;# 
  5063   000400                     ANSELA          equ	1024	;# 
  5064   000401                     WPUA            equ	1025	;# 
  5065   000402                     ODCONA          equ	1026	;# 
  5066   000403                     SLRCONA         equ	1027	;# 
  5067   000404                     INLVLA          equ	1028	;# 
  5068   000405                     IOCAP           equ	1029	;# 
  5069   000406                     IOCAN           equ	1030	;# 
  5070   000407                     IOCAF           equ	1031	;# 
  5071   000408                     ANSELB          equ	1032	;# 
  5072   000409                     WPUB            equ	1033	;# 
  5073   00040A                     ODCONB          equ	1034	;# 
  5074   00040B                     SLRCONB         equ	1035	;# 
  5075   00040C                     INLVLB          equ	1036	;# 
  5076   00040D                     IOCBP           equ	1037	;# 
  5077   00040E                     IOCBN           equ	1038	;# 
  5078   00040F                     IOCBF           equ	1039	;# 
  5079   000410                     ANSELC          equ	1040	;# 
  5080   000411                     WPUC            equ	1041	;# 
  5081   000412                     ODCONC          equ	1042	;# 
  5082   000413                     SLRCONC         equ	1043	;# 
  5083   000414                     INLVLC          equ	1044	;# 
  5084   000415                     IOCCP           equ	1045	;# 
  5085   000416                     IOCCN           equ	1046	;# 
  5086   000417                     IOCCF           equ	1047	;# 
  5087   000418                     ANSELD          equ	1048	;# 
  5088   000419                     WPUD            equ	1049	;# 
  5089   00041A                     ODCOND          equ	1050	;# 
  5090   00041B                     SLRCOND         equ	1051	;# 
  5091   00041C                     INLVLD          equ	1052	;# 
  5092   000420                     ANSELE          equ	1056	;# 
  5093   000421                     WPUE            equ	1057	;# 
  5094   000422                     ODCONE          equ	1058	;# 
  5095   000423                     SLRCONE         equ	1059	;# 
  5096   000424                     INLVLE          equ	1060	;# 
  5097   000425                     IOCEP           equ	1061	;# 
  5098   000426                     IOCEN           equ	1062	;# 
  5099   000427                     IOCEF           equ	1063	;# 
  5100   000428                     ANSELF          equ	1064	;# 
  5101   000429                     WPUF            equ	1065	;# 
  5102   00042A                     ODCONF          equ	1066	;# 
  5103   00042B                     SLRCONF         equ	1067	;# 
  5104   00042C                     INLVLF          equ	1068	;# 
  5105   000440                     NCO1ACC         equ	1088	;# 
  5106   000440                     NCO1ACCL        equ	1088	;# 
  5107   000441                     NCO1ACCH        equ	1089	;# 
  5108   000442                     NCO1ACCU        equ	1090	;# 
  5109   000443                     NCO1INC         equ	1091	;# 
  5110   000443                     NCO1INCL        equ	1091	;# 
  5111   000444                     NCO1INCH        equ	1092	;# 
  5112   000445                     NCO1INCU        equ	1093	;# 
  5113   000446                     NCO1CON         equ	1094	;# 
  5114   000447                     NCO1CLK         equ	1095	;# 
  5115   000448                     NCO2ACC         equ	1096	;# 
  5116   000448                     NCO2ACCL        equ	1096	;# 
  5117   000449                     NCO2ACCH        equ	1097	;# 
  5118   00044A                     NCO2ACCU        equ	1098	;# 
  5119   00044B                     NCO2INC         equ	1099	;# 
  5120   00044B                     NCO2INCL        equ	1099	;# 
  5121   00044C                     NCO2INCH        equ	1100	;# 
  5122   00044D                     NCO2INCU        equ	1101	;# 
  5123   00044E                     NCO2CON         equ	1102	;# 
  5124   00044F                     NCO2CLK         equ	1103	;# 
  5125   000450                     NCO3ACC         equ	1104	;# 
  5126   000450                     NCO3ACCL        equ	1104	;# 
  5127   000451                     NCO3ACCH        equ	1105	;# 
  5128   000452                     NCO3ACCU        equ	1106	;# 
  5129   000453                     NCO3INC         equ	1107	;# 
  5130   000453                     NCO3INCL        equ	1107	;# 
  5131   000454                     NCO3INCH        equ	1108	;# 
  5132   000455                     NCO3INCU        equ	1109	;# 
  5133   000456                     NCO3CON         equ	1110	;# 
  5134   000457                     NCO3CLK         equ	1111	;# 
  5135   000459                     IVTLOCK         equ	1113	;# 
  5136   00045A                     IVTAD           equ	1114	;# 
  5137   00045A                     IVTADL          equ	1114	;# 
  5138   00045B                     IVTADH          equ	1115	;# 
  5139   00045C                     IVTADU          equ	1116	;# 
  5140   00045D                     IVTBASE         equ	1117	;# 
  5141   00045D                     IVTBASEL        equ	1117	;# 
  5142   00045E                     IVTBASEH        equ	1118	;# 
  5143   00045F                     IVTBASEU        equ	1119	;# 
  5144   000460                     PWM1ERS         equ	1120	;# 
  5145   000461                     PWM1CLK         equ	1121	;# 
  5146   000462                     PWM1LDS         equ	1122	;# 
  5147   000463                     PWM1PR          equ	1123	;# 
  5148   000463                     PWM1PRL         equ	1123	;# 
  5149   000464                     PWM1PRH         equ	1124	;# 
  5150   000465                     PWM1CPRE        equ	1125	;# 
  5151   000466                     PWM1PIPOS       equ	1126	;# 
  5152   000467                     PWM1GIR         equ	1127	;# 
  5153   000468                     PWM1GIE         equ	1128	;# 
  5154   000469                     PWM1CON         equ	1129	;# 
  5155   00046A                     PWM1S1CFG       equ	1130	;# 
  5156   00046B                     PWM1S1P1        equ	1131	;# 
  5157   00046B                     PWM1S1P1L       equ	1131	;# 
  5158   00046C                     PWM1S1P1H       equ	1132	;# 
  5159   00046D                     PWM1S1P2        equ	1133	;# 
  5160   00046D                     PWM1S1P2L       equ	1133	;# 
  5161   00046E                     PWM1S1P2H       equ	1134	;# 
  5162   00046F                     PWM2ERS         equ	1135	;# 
  5163   000470                     PWM2CLK         equ	1136	;# 
  5164   000471                     PWM2LDS         equ	1137	;# 
  5165   000472                     PWM2PR          equ	1138	;# 
  5166   000472                     PWM2PRL         equ	1138	;# 
  5167   000473                     PWM2PRH         equ	1139	;# 
  5168   000474                     PWM2CPRE        equ	1140	;# 
  5169   000475                     PWM2PIPOS       equ	1141	;# 
  5170   000476                     PWM2GIR         equ	1142	;# 
  5171   000477                     PWM2GIE         equ	1143	;# 
  5172   000478                     PWM2CON         equ	1144	;# 
  5173   000479                     PWM2S1CFG       equ	1145	;# 
  5174   00047A                     PWM2S1P1        equ	1146	;# 
  5175   00047A                     PWM2S1P1L       equ	1146	;# 
  5176   00047B                     PWM2S1P1H       equ	1147	;# 
  5177   00047C                     PWM2S1P2        equ	1148	;# 
  5178   00047C                     PWM2S1P2L       equ	1148	;# 
  5179   00047D                     PWM2S1P2H       equ	1149	;# 
  5180   00047E                     PWM3ERS         equ	1150	;# 
  5181   00047F                     PWM3CLK         equ	1151	;# 
  5182   000480                     PWM3LDS         equ	1152	;# 
  5183   000481                     PWM3PR          equ	1153	;# 
  5184   000481                     PWM3PRL         equ	1153	;# 
  5185   000482                     PWM3PRH         equ	1154	;# 
  5186   000483                     PWM3CPRE        equ	1155	;# 
  5187   000484                     PWM3PIPOS       equ	1156	;# 
  5188   000485                     PWM3GIR         equ	1157	;# 
  5189   000486                     PWM3GIE         equ	1158	;# 
  5190   000487                     PWM3CON         equ	1159	;# 
  5191   000488                     PWM3S1CFG       equ	1160	;# 
  5192   000489                     PWM3S1P1        equ	1161	;# 
  5193   000489                     PWM3S1P1L       equ	1161	;# 
  5194   00048A                     PWM3S1P1H       equ	1162	;# 
  5195   00048B                     PWM3S1P2        equ	1163	;# 
  5196   00048B                     PWM3S1P2L       equ	1163	;# 
  5197   00048C                     PWM3S1P2H       equ	1164	;# 
  5198   00049C                     PWMLOAD         equ	1180	;# 
  5199   00049D                     PWMEN           equ	1181	;# 
  5200   00049E                     PIE0            equ	1182	;# 
  5201   00049F                     PIE1            equ	1183	;# 
  5202   0004A0                     PIE2            equ	1184	;# 
  5203   0004A1                     PIE3            equ	1185	;# 
  5204   0004A2                     PIE4            equ	1186	;# 
  5205   0004A3                     PIE5            equ	1187	;# 
  5206   0004A4                     PIE6            equ	1188	;# 
  5207   0004A5                     PIE7            equ	1189	;# 
  5208   0004A6                     PIE8            equ	1190	;# 
  5209   0004A7                     PIE9            equ	1191	;# 
  5210   0004A8                     PIE10           equ	1192	;# 
  5211   0004A9                     PIE11           equ	1193	;# 
  5212   0004AA                     PIE12           equ	1194	;# 
  5213   0004AB                     PIE13           equ	1195	;# 
  5214   0004AC                     PIE14           equ	1196	;# 
  5215   0004AD                     PIE15           equ	1197	;# 
  5216   0004AE                     PIR0            equ	1198	;# 
  5217   0004AF                     PIR1            equ	1199	;# 
  5218   0004B0                     PIR2            equ	1200	;# 
  5219   0004B1                     PIR3            equ	1201	;# 
  5220   0004B2                     PIR4            equ	1202	;# 
  5221   0004B3                     PIR5            equ	1203	;# 
  5222   0004B4                     PIR6            equ	1204	;# 
  5223   0004B5                     PIR7            equ	1205	;# 
  5224   0004B6                     PIR8            equ	1206	;# 
  5225   0004B7                     PIR9            equ	1207	;# 
  5226   0004B8                     PIR10           equ	1208	;# 
  5227   0004B9                     PIR11           equ	1209	;# 
  5228   0004BA                     PIR12           equ	1210	;# 
  5229   0004BB                     PIR13           equ	1211	;# 
  5230   0004BC                     PIR14           equ	1212	;# 
  5231   0004BD                     PIR15           equ	1213	;# 
  5232   0004BE                     LATA            equ	1214	;# 
  5233   0004BF                     LATB            equ	1215	;# 
  5234   0004C0                     LATC            equ	1216	;# 
  5235   0004C1                     LATD            equ	1217	;# 
  5236   0004C2                     LATE            equ	1218	;# 
  5237   0004C3                     LATF            equ	1219	;# 
  5238   0004C6                     TRISA           equ	1222	;# 
  5239   0004C7                     TRISB           equ	1223	;# 
  5240   0004C8                     TRISC           equ	1224	;# 
  5241   0004C9                     TRISD           equ	1225	;# 
  5242   0004CA                     TRISE           equ	1226	;# 
  5243   0004CB                     TRISF           equ	1227	;# 
  5244   0004CE                     PORTA           equ	1230	;# 
  5245   0004CF                     PORTB           equ	1231	;# 
  5246   0004D0                     PORTC           equ	1232	;# 
  5247   0004D1                     PORTD           equ	1233	;# 
  5248   0004D2                     PORTE           equ	1234	;# 
  5249   0004D3                     PORTF           equ	1235	;# 
  5250   0004D6                     INTCON0         equ	1238	;# 
  5251   0004D7                     INTCON1         equ	1239	;# 
  5252   0004D8                     STATUS          equ	1240	;# 
  5253   0004D9                     FSR2            equ	1241	;# 
  5254   0004D9                     FSR2L           equ	1241	;# 
  5255   0004DA                     FSR2H           equ	1242	;# 
  5256   0004DB                     PLUSW2          equ	1243	;# 
  5257   0004DC                     PREINC2         equ	1244	;# 
  5258   0004DD                     POSTDEC2        equ	1245	;# 
  5259   0004DE                     POSTINC2        equ	1246	;# 
  5260   0004DF                     INDF2           equ	1247	;# 
  5261   0004E0                     BSR             equ	1248	;# 
  5262   0004E1                     FSR1            equ	1249	;# 
  5263   0004E1                     FSR1L           equ	1249	;# 
  5264   0004E2                     FSR1H           equ	1250	;# 
  5265   0004E3                     PLUSW1          equ	1251	;# 
  5266   0004E4                     PREINC1         equ	1252	;# 
  5267   0004E5                     POSTDEC1        equ	1253	;# 
  5268   0004E6                     POSTINC1        equ	1254	;# 
  5269   0004E7                     INDF1           equ	1255	;# 
  5270   0004E8                     WREG            equ	1256	;# 
  5271   0004E9                     FSR0            equ	1257	;# 
  5272   0004E9                     FSR0L           equ	1257	;# 
  5273   0004EA                     FSR0H           equ	1258	;# 
  5274   0004EB                     PLUSW0          equ	1259	;# 
  5275   0004EC                     PREINC0         equ	1260	;# 
  5276   0004ED                     POSTDEC0        equ	1261	;# 
  5277   0004EE                     POSTINC0        equ	1262	;# 
  5278   0004EF                     INDF0           equ	1263	;# 
  5279   0004F0                     PCON0           equ	1264	;# 
  5280   0004F1                     PCON1           equ	1265	;# 
  5281   0004F2                     CPUDOZE         equ	1266	;# 
  5282   0004F3                     PROD            equ	1267	;# 
  5283   0004F3                     PRODL           equ	1267	;# 
  5284   0004F4                     PRODH           equ	1268	;# 
  5285   0004F5                     TABLAT          equ	1269	;# 
  5286   0004F6                     TBLPTR          equ	1270	;# 
  5287   0004F6                     TBLPTRL         equ	1270	;# 
  5288   0004F7                     TBLPTRH         equ	1271	;# 
  5289   0004F8                     TBLPTRU         equ	1272	;# 
  5290   0004F9                     PCLAT           equ	1273	;# 
  5291   0004F9                     PCL             equ	1273	;# 
  5292   0004FA                     PCLATH          equ	1274	;# 
  5293   0004FB                     PCLATU          equ	1275	;# 
  5294   0004FC                     STKPTR          equ	1276	;# 
  5295   0004FD                     TOS             equ	1277	;# 
  5296   0004FD                     TOSL            equ	1277	;# 
  5297   0004FE                     TOSH            equ	1278	;# 
  5298   0004FF                     TOSU            equ	1279	;# 
  5299   000039                     CLKRCON         equ	57	;# 
  5300   00003A                     CLKRCLK         equ	58	;# 
  5301   000040                     NVMCON0         equ	64	;# 
  5302   000041                     NVMCON1         equ	65	;# 
  5303   000042                     NVMLOCK         equ	66	;# 
  5304   000043                     NVMADR          equ	67	;# 
  5305   000043                     NVMADRL         equ	67	;# 
  5306   000044                     NVMADRH         equ	68	;# 
  5307   000045                     NVMADRU         equ	69	;# 
  5308   000046                     NVMDAT          equ	70	;# 
  5309   000046                     NVMDATL         equ	70	;# 
  5310   000047                     NVMDATH         equ	71	;# 
  5311   000048                     VREGCON         equ	72	;# 
  5312   000049                     BORCON          equ	73	;# 
  5313   00004A                     HLVDCON0        equ	74	;# 
  5314   00004B                     HLVDCON1        equ	75	;# 
  5315   00004C                     ZCDCON          equ	76	;# 
  5316   000060                     PMD0            equ	96	;# 
  5317   000061                     PMD1            equ	97	;# 
  5318   000063                     PMD3            equ	99	;# 
  5319   000064                     PMD4            equ	100	;# 
  5320   000065                     PMD5            equ	101	;# 
  5321   000066                     PMD6            equ	102	;# 
  5322   000067                     PMD7            equ	103	;# 
  5323   000068                     PMD8            equ	104	;# 
  5324   00006A                     MD1CON0         equ	106	;# 
  5325   00006B                     MD1CON1         equ	107	;# 
  5326   00006C                     MD1SRC          equ	108	;# 
  5327   00006D                     MD1CARL         equ	109	;# 
  5328   00006E                     MD1CARH         equ	110	;# 
  5329   00006F                     CMOUT           equ	111	;# 
  5330   000070                     CM1CON0         equ	112	;# 
  5331   000071                     CM1CON1         equ	113	;# 
  5332   000072                     CM1NCH          equ	114	;# 
  5333   000073                     CM1PCH          equ	115	;# 
  5334   000074                     CM2CON0         equ	116	;# 
  5335   000075                     CM2CON1         equ	117	;# 
  5336   000076                     CM2NCH          equ	118	;# 
  5337   000077                     CM2PCH          equ	119	;# 
  5338   000078                     WDTCON0         equ	120	;# 
  5339   000079                     WDTCON1         equ	121	;# 
  5340   00007A                     WDTPS           equ	122	;# 
  5341   00007A                     WDTPSL          equ	122	;# 
  5342   00007B                     WDTPSH          equ	123	;# 
  5343   00007C                     WDTTMR          equ	124	;# 
  5344   00007D                     DAC1DAT         equ	125	;# 
  5345   00007D                     DAC1DATL        equ	125	;# 
  5346   00007F                     DAC1CON         equ	127	;# 
  5347   000080                     SPI1RXB         equ	128	;# 
  5348   000081                     SPI1TXB         equ	129	;# 
  5349   000082                     SPI1TCNT        equ	130	;# 
  5350   000082                     SPI1TCNTL       equ	130	;# 
  5351   000083                     SPI1TCNTH       equ	131	;# 
  5352   000084                     SPI1CON0        equ	132	;# 
  5353   000085                     SPI1CON1        equ	133	;# 
  5354   000086                     SPI1CON2        equ	134	;# 
  5355   000087                     SPI1STATUS      equ	135	;# 
  5356   000088                     SPI1TWIDTH      equ	136	;# 
  5357   000089                     SPI1BAUD        equ	137	;# 
  5358   00008A                     SPI1INTF        equ	138	;# 
  5359   00008B                     SPI1INTE        equ	139	;# 
  5360   00008C                     SPI1CLK         equ	140	;# 
  5361   00008D                     SPI2RXB         equ	141	;# 
  5362   00008E                     SPI2TXB         equ	142	;# 
  5363   00008F                     SPI2TCNT        equ	143	;# 
  5364   00008F                     SPI2TCNTL       equ	143	;# 
  5365   000090                     SPI2TCNTH       equ	144	;# 
  5366   000091                     SPI2CON0        equ	145	;# 
  5367   000092                     SPI2CON1        equ	146	;# 
  5368   000093                     SPI2CON2        equ	147	;# 
  5369   000094                     SPI2STATUS      equ	148	;# 
  5370   000095                     SPI2TWIDTH      equ	149	;# 
  5371   000096                     SPI2BAUD        equ	150	;# 
  5372   000097                     SPI2INTF        equ	151	;# 
  5373   000098                     SPI2INTE        equ	152	;# 
  5374   000099                     SPI2CLK         equ	153	;# 
  5375   0000AC                     ACTCON          equ	172	;# 
  5376   0000AD                     OSCCON1         equ	173	;# 
  5377   0000AE                     OSCCON2         equ	174	;# 
  5378   0000AF                     OSCCON3         equ	175	;# 
  5379   0000B0                     OSCTUNE         equ	176	;# 
  5380   0000B1                     OSCFRQ          equ	177	;# 
  5381   0000B1                     OSCFREQ         equ	177	;# 
  5382   0000B2                     OSCSTAT         equ	178	;# 
  5383   0000B2                     OSCSTAT1        equ	178	;# 
  5384   0000B3                     OSCEN           equ	179	;# 
  5385   0000B4                     PRLOCK          equ	180	;# 
  5386   0000B5                     SCANPR          equ	181	;# 
  5387   0000B6                     DMA1PR          equ	182	;# 
  5388   0000B7                     DMA2PR          equ	183	;# 
  5389   0000B8                     DMA3PR          equ	184	;# 
  5390   0000B9                     DMA4PR          equ	185	;# 
  5391   0000BA                     DMA5PR          equ	186	;# 
  5392   0000BB                     DMA6PR          equ	187	;# 
  5393   0000BE                     MAINPR          equ	190	;# 
  5394   0000BF                     ISRPR           equ	191	;# 
  5395   0000D4                     CLCDATA         equ	212	;# 
  5396   0000D5                     CLCSELECT       equ	213	;# 
  5397   0000D6                     CLCnCON         equ	214	;# 
  5398   0000D7                     CLCnPOL         equ	215	;# 
  5399   0000D8                     CLCnSEL0        equ	216	;# 
  5400   0000D9                     CLCnSEL1        equ	217	;# 
  5401   0000DA                     CLCnSEL2        equ	218	;# 
  5402   0000DB                     CLCnSEL3        equ	219	;# 
  5403   0000DC                     CLCnGLS0        equ	220	;# 
  5404   0000DD                     CLCnGLS1        equ	221	;# 
  5405   0000DE                     CLCnGLS2        equ	222	;# 
  5406   0000DF                     CLCnGLS3        equ	223	;# 
  5407   0000E8                     DMASELECT       equ	232	;# 
  5408   0000E9                     DMAnBUF         equ	233	;# 
  5409   0000EA                     DMAnDCNT        equ	234	;# 
  5410   0000EA                     DMAnDCNTL       equ	234	;# 
  5411   0000EB                     DMAnDCNTH       equ	235	;# 
  5412   0000EC                     DMAnDPTR        equ	236	;# 
  5413   0000EC                     DMAnDPTRL       equ	236	;# 
  5414   0000ED                     DMAnDPTRH       equ	237	;# 
  5415   0000EE                     DMAnDSZ         equ	238	;# 
  5416   0000EE                     DMAnDSZL        equ	238	;# 
  5417   0000EF                     DMAnDSZH        equ	239	;# 
  5418   0000F0                     DMAnDSA         equ	240	;# 
  5419   0000F0                     DMAnDSAL        equ	240	;# 
  5420   0000F1                     DMAnDSAH        equ	241	;# 
  5421   0000F2                     DMAnSCNT        equ	242	;# 
  5422   0000F2                     DMAnSCNTL       equ	242	;# 
  5423   0000F3                     DMAnSCNTH       equ	243	;# 
  5424   0000F4                     DMAnSPTR        equ	244	;# 
  5425   0000F4                     DMAnSPTRL       equ	244	;# 
  5426   0000F5                     DMAnSPTRH       equ	245	;# 
  5427   0000F6                     DMAnSPTRU       equ	246	;# 
  5428   0000F7                     DMAnSSZ         equ	247	;# 
  5429   0000F7                     DMAnSSZL        equ	247	;# 
  5430   0000F8                     DMAnSSZH        equ	248	;# 
  5431   0000F9                     DMAnSSA         equ	249	;# 
  5432   0000F9                     DMAnSSAL        equ	249	;# 
  5433   0000FA                     DMAnSSAH        equ	250	;# 
  5434   0000FB                     DMAnSSAU        equ	251	;# 
  5435   0000FC                     DMAnCON0        equ	252	;# 
  5436   0000FD                     DMAnCON1        equ	253	;# 
  5437   0000FE                     DMAnAIRQ        equ	254	;# 
  5438   0000FF                     DMAnSIRQ        equ	255	;# 
  5439   000200                     PPSLOCK         equ	512	;# 
  5440   000201                     RA0PPS          equ	513	;# 
  5441   000202                     RA1PPS          equ	514	;# 
  5442   000203                     RA2PPS          equ	515	;# 
  5443   000204                     RA3PPS          equ	516	;# 
  5444   000205                     RA4PPS          equ	517	;# 
  5445   000206                     RA5PPS          equ	518	;# 
  5446   000207                     RA6PPS          equ	519	;# 
  5447   000208                     RA7PPS          equ	520	;# 
  5448   000209                     RB0PPS          equ	521	;# 
  5449   00020A                     RB1PPS          equ	522	;# 
  5450   00020B                     RB2PPS          equ	523	;# 
  5451   00020C                     RB3PPS          equ	524	;# 
  5452   00020D                     RB4PPS          equ	525	;# 
  5453   00020E                     RB5PPS          equ	526	;# 
  5454   00020F                     RB6PPS          equ	527	;# 
  5455   000210                     RB7PPS          equ	528	;# 
  5456   000211                     RC0PPS          equ	529	;# 
  5457   000212                     RC1PPS          equ	530	;# 
  5458   000213                     RC2PPS          equ	531	;# 
  5459   000214                     RC3PPS          equ	532	;# 
  5460   000215                     RC4PPS          equ	533	;# 
  5461   000216                     RC5PPS          equ	534	;# 
  5462   000217                     RC6PPS          equ	535	;# 
  5463   000218                     RC7PPS          equ	536	;# 
  5464   000219                     RD0PPS          equ	537	;# 
  5465   00021A                     RD1PPS          equ	538	;# 
  5466   00021B                     RD2PPS          equ	539	;# 
  5467   00021C                     RD3PPS          equ	540	;# 
  5468   00021D                     RD4PPS          equ	541	;# 
  5469   00021E                     RD5PPS          equ	542	;# 
  5470   00021F                     RD6PPS          equ	543	;# 
  5471   000220                     RD7PPS          equ	544	;# 
  5472   000221                     RE0PPS          equ	545	;# 
  5473   000222                     RE1PPS          equ	546	;# 
  5474   000223                     RE2PPS          equ	547	;# 
  5475   000229                     RF0PPS          equ	553	;# 
  5476   00022A                     RF1PPS          equ	554	;# 
  5477   00022B                     RF2PPS          equ	555	;# 
  5478   00022C                     RF3PPS          equ	556	;# 
  5479   00022D                     RF4PPS          equ	557	;# 
  5480   00022E                     RF5PPS          equ	558	;# 
  5481   00022F                     RF6PPS          equ	559	;# 
  5482   000230                     RF7PPS          equ	560	;# 
  5483   00023E                     INT0PPS         equ	574	;# 
  5484   00023F                     INT1PPS         equ	575	;# 
  5485   000240                     INT2PPS         equ	576	;# 
  5486   000241                     T0CKIPPS        equ	577	;# 
  5487   000242                     T1CKIPPS        equ	578	;# 
  5488   000243                     T1GPPS          equ	579	;# 
  5489   000244                     T3CKIPPS        equ	580	;# 
  5490   000245                     T3GPPS          equ	581	;# 
  5491   000246                     T5CKIPPS        equ	582	;# 
  5492   000247                     T5GPPS          equ	583	;# 
  5493   000248                     T2INPPS         equ	584	;# 
  5494   000249                     T4INPPS         equ	585	;# 
  5495   00024A                     T6INPPS         equ	586	;# 
  5496   00024F                     CCP1PPS         equ	591	;# 
  5497   000250                     CCP2PPS         equ	592	;# 
  5498   000251                     CCP3PPS         equ	593	;# 
  5499   000253                     PWM1ERSPPS      equ	595	;# 
  5500   000254                     PWM2ERSPPS      equ	596	;# 
  5501   000255                     PWM3ERSPPS      equ	597	;# 
  5502   000257                     PWMIN0PPS       equ	599	;# 
  5503   000258                     PWMIN1PPS       equ	600	;# 
  5504   000259                     SMT1WINPPS      equ	601	;# 
  5505   00025A                     SMT1SIGPPS      equ	602	;# 
  5506   00025B                     CWG1PPS         equ	603	;# 
  5507   00025B                     CWG1INPPS       equ	603	;# 
  5508   00025C                     CWG2PPS         equ	604	;# 
  5509   00025C                     CWG2INPPS       equ	604	;# 
  5510   00025D                     CWG3PPS         equ	605	;# 
  5511   00025D                     CWG3INPPS       equ	605	;# 
  5512   00025E                     MD1CARLPPS      equ	606	;# 
  5513   00025E                     MDCARLPPS       equ	606	;# 
  5514   00025F                     MD1CARHPPS      equ	607	;# 
  5515   00025F                     MDCARHPPS       equ	607	;# 
  5516   000260                     MD1SRCPPS       equ	608	;# 
  5517   000260                     MDSRCPPS        equ	608	;# 
  5518   000261                     CLCIN0PPS       equ	609	;# 
  5519   000262                     CLCIN1PPS       equ	610	;# 
  5520   000263                     CLCIN2PPS       equ	611	;# 
  5521   000264                     CLCIN3PPS       equ	612	;# 
  5522   000265                     CLCIN4PPS       equ	613	;# 
  5523   000266                     CLCIN5PPS       equ	614	;# 
  5524   000267                     CLCIN6PPS       equ	615	;# 
  5525   000268                     CLCIN7PPS       equ	616	;# 
  5526   000269                     ADACTPPS        equ	617	;# 
  5527   00026A                     SPI1SCKPPS      equ	618	;# 
  5528   00026B                     SPI1SDIPPS      equ	619	;# 
  5529   00026C                     SPI1SSPPS       equ	620	;# 
  5530   00026D                     SPI2SCKPPS      equ	621	;# 
  5531   00026E                     SPI2SDIPPS      equ	622	;# 
  5532   00026F                     SPI2SSPPS       equ	623	;# 
  5533   000270                     I2C1SDAPPS      equ	624	;# 
  5534   000271                     I2C1SCLPPS      equ	625	;# 
  5535   000272                     U1RXPPS         equ	626	;# 
  5536   000273                     U1CTSPPS        equ	627	;# 
  5537   000274                     U2RXPPS         equ	628	;# 
  5538   000275                     U2CTSPPS        equ	629	;# 
  5539   000276                     U3RXPPS         equ	630	;# 
  5540   000277                     U3CTSPPS        equ	631	;# 
  5541   000278                     U4RXPPS         equ	632	;# 
  5542   000279                     U4CTSPPS        equ	633	;# 
  5543   00027A                     U5RXPPS         equ	634	;# 
  5544   00027B                     U5CTSPPS        equ	635	;# 
  5545   000286                     RC4I2C          equ	646	;# 
  5546   000287                     RC3I2C          equ	647	;# 
  5547   000288                     RB2I2C          equ	648	;# 
  5548   000289                     RB1I2C          equ	649	;# 
  5549   00028B                     I2C1RXB         equ	651	;# 
  5550   00028C                     I2C1TXB         equ	652	;# 
  5551   00028D                     I2C1CNT         equ	653	;# 
  5552   00028E                     I2C1ADB0        equ	654	;# 
  5553   00028F                     I2C1ADB1        equ	655	;# 
  5554   000290                     I2C1ADR0        equ	656	;# 
  5555   000291                     I2C1ADR1        equ	657	;# 
  5556   000292                     I2C1ADR2        equ	658	;# 
  5557   000293                     I2C1ADR3        equ	659	;# 
  5558   000294                     I2C1CON0        equ	660	;# 
  5559   000295                     I2C1CON1        equ	661	;# 
  5560   000296                     I2C1CON2        equ	662	;# 
  5561   000297                     I2C1ERR         equ	663	;# 
  5562   000298                     I2C1STAT0       equ	664	;# 
  5563   000299                     I2C1STAT1       equ	665	;# 
  5564   00029A                     I2C1PIR         equ	666	;# 
  5565   00029B                     I2C1PIE         equ	667	;# 
  5566   00029C                     I2C1CLK         equ	668	;# 
  5567   00029D                     I2C1BTO         equ	669	;# 
  5568   0002A1                     U1RXB           equ	673	;# 
  5569   0002A1                     U1RXBL          equ	673	;# 
  5570   0002A2                     U1RXCHK         equ	674	;# 
  5571   0002A3                     U1TXB           equ	675	;# 
  5572   0002A3                     U1TXBL          equ	675	;# 
  5573   0002A4                     U1TXCHK         equ	676	;# 
  5574   0002A5                     U1P1            equ	677	;# 
  5575   0002A5                     U1P1L           equ	677	;# 
  5576   0002A6                     U1P1H           equ	678	;# 
  5577   0002A7                     U1P2            equ	679	;# 
  5578   0002A7                     U1P2L           equ	679	;# 
  5579   0002A8                     U1P2H           equ	680	;# 
  5580   0002A9                     U1P3            equ	681	;# 
  5581   0002A9                     U1P3L           equ	681	;# 
  5582   0002AA                     U1P3H           equ	682	;# 
  5583   0002AB                     U1CON0          equ	683	;# 
  5584   0002AC                     U1CON1          equ	684	;# 
  5585   0002AD                     U1CON2          equ	685	;# 
  5586   0002AE                     U1BRG           equ	686	;# 
  5587   0002AE                     U1BRGL          equ	686	;# 
  5588   0002AF                     U1BRGH          equ	687	;# 
  5589   0002B0                     U1FIFO          equ	688	;# 
  5590   0002B1                     U1UIR           equ	689	;# 
  5591   0002B2                     U1ERRIR         equ	690	;# 
  5592   0002B3                     U1ERRIE         equ	691	;# 
  5593   0002B4                     U2RXB           equ	692	;# 
  5594   0002B4                     U2RXBL          equ	692	;# 
  5595   0002B6                     U2TXB           equ	694	;# 
  5596   0002B6                     U2TXBL          equ	694	;# 
  5597   0002B8                     U2P1            equ	696	;# 
  5598   0002B8                     U2P1L           equ	696	;# 
  5599   0002BA                     U2P2            equ	698	;# 
  5600   0002BA                     U2P2L           equ	698	;# 
  5601   0002BC                     U2P3            equ	700	;# 
  5602   0002BC                     U2P3L           equ	700	;# 
  5603   0002BE                     U2CON0          equ	702	;# 
  5604   0002BF                     U2CON1          equ	703	;# 
  5605   0002C0                     U2CON2          equ	704	;# 
  5606   0002C1                     U2BRG           equ	705	;# 
  5607   0002C1                     U2BRGL          equ	705	;# 
  5608   0002C2                     U2BRGH          equ	706	;# 
  5609   0002C3                     U2FIFO          equ	707	;# 
  5610   0002C4                     U2UIR           equ	708	;# 
  5611   0002C5                     U2ERRIR         equ	709	;# 
  5612   0002C6                     U2ERRIE         equ	710	;# 
  5613   0002C7                     U3RXB           equ	711	;# 
  5614   0002C7                     U3RXBL          equ	711	;# 
  5615   0002C9                     U3TXB           equ	713	;# 
  5616   0002C9                     U3TXBL          equ	713	;# 
  5617   0002CB                     U3P1            equ	715	;# 
  5618   0002CB                     U3P1L           equ	715	;# 
  5619   0002CD                     U3P2            equ	717	;# 
  5620   0002CD                     U3P2L           equ	717	;# 
  5621   0002CF                     U3P3            equ	719	;# 
  5622   0002CF                     U3P3L           equ	719	;# 
  5623   0002D1                     U3CON0          equ	721	;# 
  5624   0002D2                     U3CON1          equ	722	;# 
  5625   0002D3                     U3CON2          equ	723	;# 
  5626   0002D4                     U3BRG           equ	724	;# 
  5627   0002D4                     U3BRGL          equ	724	;# 
  5628   0002D5                     U3BRGH          equ	725	;# 
  5629   0002D6                     U3FIFO          equ	726	;# 
  5630   0002D7                     U3UIR           equ	727	;# 
  5631   0002D8                     U3ERRIR         equ	728	;# 
  5632   0002D9                     U3ERRIE         equ	729	;# 
  5633   0002DA                     U4RXB           equ	730	;# 
  5634   0002DA                     U4RXBL          equ	730	;# 
  5635   0002DC                     U4TXB           equ	732	;# 
  5636   0002DC                     U4TXBL          equ	732	;# 
  5637   0002DE                     U4P1            equ	734	;# 
  5638   0002DE                     U4P1L           equ	734	;# 
  5639   0002E0                     U4P2            equ	736	;# 
  5640   0002E0                     U4P2L           equ	736	;# 
  5641   0002E2                     U4P3            equ	738	;# 
  5642   0002E2                     U4P3L           equ	738	;# 
  5643   0002E4                     U4CON0          equ	740	;# 
  5644   0002E5                     U4CON1          equ	741	;# 
  5645   0002E6                     U4CON2          equ	742	;# 
  5646   0002E7                     U4BRG           equ	743	;# 
  5647   0002E7                     U4BRGL          equ	743	;# 
  5648   0002E8                     U4BRGH          equ	744	;# 
  5649   0002E9                     U4FIFO          equ	745	;# 
  5650   0002EA                     U4UIR           equ	746	;# 
  5651   0002EB                     U4ERRIR         equ	747	;# 
  5652   0002EC                     U4ERRIE         equ	748	;# 
  5653   0002ED                     U5RXB           equ	749	;# 
  5654   0002ED                     U5RXBL          equ	749	;# 
  5655   0002EF                     U5TXB           equ	751	;# 
  5656   0002EF                     U5TXBL          equ	751	;# 
  5657   0002F1                     U5P1            equ	753	;# 
  5658   0002F1                     U5P1L           equ	753	;# 
  5659   0002F3                     U5P2            equ	755	;# 
  5660   0002F3                     U5P2L           equ	755	;# 
  5661   0002F5                     U5P3            equ	757	;# 
  5662   0002F5                     U5P3L           equ	757	;# 
  5663   0002F7                     U5CON0          equ	759	;# 
  5664   0002F8                     U5CON1          equ	760	;# 
  5665   0002F9                     U5CON2          equ	761	;# 
  5666   0002FA                     U5BRG           equ	762	;# 
  5667   0002FA                     U5BRGL          equ	762	;# 
  5668   0002FB                     U5BRGH          equ	763	;# 
  5669   0002FC                     U5FIFO          equ	764	;# 
  5670   0002FD                     U5UIR           equ	765	;# 
  5671   0002FE                     U5ERRIR         equ	766	;# 
  5672   0002FF                     U5ERRIE         equ	767	;# 
  5673   000300                     SMT1TMR         equ	768	;# 
  5674   000300                     SMT1TMRL        equ	768	;# 
  5675   000301                     SMT1TMRH        equ	769	;# 
  5676   000302                     SMT1TMRU        equ	770	;# 
  5677   000303                     SMT1CPR         equ	771	;# 
  5678   000303                     SMT1CPRL        equ	771	;# 
  5679   000304                     SMT1CPRH        equ	772	;# 
  5680   000305                     SMT1CPRU        equ	773	;# 
  5681   000306                     SMT1CPW         equ	774	;# 
  5682   000306                     SMT1CPWL        equ	774	;# 
  5683   000307                     SMT1CPWH        equ	775	;# 
  5684   000308                     SMT1CPWU        equ	776	;# 
  5685   000309                     SMT1PR          equ	777	;# 
  5686   000309                     SMT1PRL         equ	777	;# 
  5687   00030A                     SMT1PRH         equ	778	;# 
  5688   00030B                     SMT1PRU         equ	779	;# 
  5689   00030C                     SMT1CON0        equ	780	;# 
  5690   00030D                     SMT1CON1        equ	781	;# 
  5691   00030E                     SMT1STAT        equ	782	;# 
  5692   00030F                     SMT1CLK         equ	783	;# 
  5693   000310                     SMT1SIG         equ	784	;# 
  5694   000311                     SMT1WIN         equ	785	;# 
  5695   000318                     TMR0L           equ	792	;# 
  5696   000318                     TMR0            equ	792	;# 
  5697   000319                     TMR0H           equ	793	;# 
  5698   000319                     PR0             equ	793	;# 
  5699   00031A                     T0CON0          equ	794	;# 
  5700   00031B                     T0CON1          equ	795	;# 
  5701   00031C                     TMR1            equ	796	;# 
  5702   00031C                     TMR1L           equ	796	;# 
  5703   00031D                     TMR1H           equ	797	;# 
  5704   00031E                     T1CON           equ	798	;# 
  5705   00031E                     TMR1CON         equ	798	;# 
  5706   00031F                     T1GCON          equ	799	;# 
  5707   00031F                     TMR1GCON        equ	799	;# 
  5708   000320                     T1GATE          equ	800	;# 
  5709   000320                     TMR1GATE        equ	800	;# 
  5710   000321                     T1CLK           equ	801	;# 
  5711   000321                     TMR1CLK         equ	801	;# 
  5712   000321                     PR1             equ	801	;# 
  5713   000322                     T2TMR           equ	802	;# 
  5714   000322                     TMR2            equ	802	;# 
  5715   000323                     T2PR            equ	803	;# 
  5716   000323                     PR2             equ	803	;# 
  5717   000324                     T2CON           equ	804	;# 
  5718   000325                     T2HLT           equ	805	;# 
  5719   000326                     T2CLKCON        equ	806	;# 
  5720   000326                     T2CLK           equ	806	;# 
  5721   000327                     T2RST           equ	807	;# 
  5722   000328                     TMR3            equ	808	;# 
  5723   000328                     TMR3L           equ	808	;# 
  5724   000329                     TMR3H           equ	809	;# 
  5725   00032A                     T3CON           equ	810	;# 
  5726   00032A                     TMR3CON         equ	810	;# 
  5727   00032B                     T3GCON          equ	811	;# 
  5728   00032B                     TMR3GCON        equ	811	;# 
  5729   00032C                     T3GATE          equ	812	;# 
  5730   00032C                     TMR3GATE        equ	812	;# 
  5731   00032D                     T3CLK           equ	813	;# 
  5732   00032D                     TMR3CLK         equ	813	;# 
  5733   00032D                     PR3             equ	813	;# 
  5734   00032E                     T4TMR           equ	814	;# 
  5735   00032E                     TMR4            equ	814	;# 
  5736   00032F                     T4PR            equ	815	;# 
  5737   00032F                     PR4             equ	815	;# 
  5738   000330                     T4CON           equ	816	;# 
  5739   000331                     T4HLT           equ	817	;# 
  5740   000332                     T4CLKCON        equ	818	;# 
  5741   000332                     T4CLK           equ	818	;# 
  5742   000333                     T4RST           equ	819	;# 
  5743   000334                     TMR5            equ	820	;# 
  5744   000334                     TMR5L           equ	820	;# 
  5745   000335                     TMR5H           equ	821	;# 
  5746   000336                     T5CON           equ	822	;# 
  5747   000336                     TMR5CON         equ	822	;# 
  5748   000337                     T5GCON          equ	823	;# 
  5749   000337                     TMR5GCON        equ	823	;# 
  5750   000338                     T5GATE          equ	824	;# 
  5751   000338                     TMR5GATE        equ	824	;# 
  5752   000339                     T5CLK           equ	825	;# 
  5753   000339                     TMR5CLK         equ	825	;# 
  5754   000339                     PR5             equ	825	;# 
  5755   00033A                     T6TMR           equ	826	;# 
  5756   00033A                     TMR6            equ	826	;# 
  5757   00033B                     T6PR            equ	827	;# 
  5758   00033B                     PR6             equ	827	;# 
  5759   00033C                     T6CON           equ	828	;# 
  5760   00033D                     T6HLT           equ	829	;# 
  5761   00033E                     T6CLKCON        equ	830	;# 
  5762   00033E                     T6CLK           equ	830	;# 
  5763   00033F                     T6RST           equ	831	;# 
  5764   000340                     CCPR1           equ	832	;# 
  5765   000340                     CCPR1L          equ	832	;# 
  5766   000341                     CCPR1H          equ	833	;# 
  5767   000342                     CCP1CON         equ	834	;# 
  5768   000343                     CCP1CAP         equ	835	;# 
  5769   000344                     CCPR2           equ	836	;# 
  5770   000344                     CCPR2L          equ	836	;# 
  5771   000345                     CCPR2H          equ	837	;# 
  5772   000346                     CCP2CON         equ	838	;# 
  5773   000347                     CCP2CAP         equ	839	;# 
  5774   000348                     CCPR3           equ	840	;# 
  5775   000348                     CCPR3L          equ	840	;# 
  5776   000349                     CCPR3H          equ	841	;# 
  5777   00034A                     CCP3CON         equ	842	;# 
  5778   00034B                     CCP3CAP         equ	843	;# 
  5779   00034C                     CCPTMRS0        equ	844	;# 
  5780   00034F                     CRCDATA         equ	847	;# 
  5781   00034F                     CRCDATL         equ	847	;# 
  5782   000350                     CRCDATH         equ	848	;# 
  5783   000351                     CRCACC          equ	849	;# 
  5784   000351                     CRCACCL         equ	849	;# 
  5785   000352                     CRCACCH         equ	850	;# 
  5786   000353                     CRCSHFT         equ	851	;# 
  5787   000353                     CRCSHIFTL       equ	851	;# 
  5788   000354                     CRCSHIFTH       equ	852	;# 
  5789   000355                     CRCXOR          equ	853	;# 
  5790   000355                     CRCXORL         equ	853	;# 
  5791   000356                     CRCXORH         equ	854	;# 
  5792   000357                     CRCCON0         equ	855	;# 
  5793   000358                     CRCCON1         equ	856	;# 
  5794   00035A                     SCANLADR        equ	858	;# 
  5795   00035A                     SCANLADRL       equ	858	;# 
  5796   00035B                     SCANLADRH       equ	859	;# 
  5797   00035C                     SCANLADRU       equ	860	;# 
  5798   00035D                     SCANHADR        equ	861	;# 
  5799   00035D                     SCANHADRL       equ	861	;# 
  5800   00035E                     SCANHADRH       equ	862	;# 
  5801   00035F                     SCANHADRU       equ	863	;# 
  5802   000360                     SCANCON0        equ	864	;# 
  5803   000361                     SCANTRIG        equ	865	;# 
  5804   000362                     IPR0            equ	866	;# 
  5805   000363                     IPR1            equ	867	;# 
  5806   000364                     IPR2            equ	868	;# 
  5807   000365                     IPR3            equ	869	;# 
  5808   000366                     IPR4            equ	870	;# 
  5809   000367                     IPR5            equ	871	;# 
  5810   000368                     IPR6            equ	872	;# 
  5811   000369                     IPR7            equ	873	;# 
  5812   00036A                     IPR8            equ	874	;# 
  5813   00036B                     IPR9            equ	875	;# 
  5814   00036C                     IPR10           equ	876	;# 
  5815   00036D                     IPR11           equ	877	;# 
  5816   00036E                     IPR12           equ	878	;# 
  5817   00036F                     IPR13           equ	879	;# 
  5818   000370                     IPR14           equ	880	;# 
  5819   000371                     IPR15           equ	881	;# 
  5820   000373                     STATUS_CSHAD    equ	883	;# 
  5821   000374                     WREG_CSHAD      equ	884	;# 
  5822   000375                     BSR_CSHAD       equ	885	;# 
  5823   000376                     SHADCON         equ	886	;# 
  5824   000377                     STATUS_SHAD     equ	887	;# 
  5825   000378                     WREG_SHAD       equ	888	;# 
  5826   000379                     BSR_SHAD        equ	889	;# 
  5827   00037A                     PCLATH_SHAD     equ	890	;# 
  5828   00037B                     PCLATU_SHAD     equ	891	;# 
  5829   00037C                     FSR0SH          equ	892	;# 
  5830   00037C                     FSR0L_SHAD      equ	892	;# 
  5831   00037D                     FSR0H_SHAD      equ	893	;# 
  5832   00037E                     FSR1SH          equ	894	;# 
  5833   00037E                     FSR1L_SHAD      equ	894	;# 
  5834   00037F                     FSR1H_SHAD      equ	895	;# 
  5835   000380                     FSR2SH          equ	896	;# 
  5836   000380                     FSR2L_SHAD      equ	896	;# 
  5837   000381                     FSR2H_SHAD      equ	897	;# 
  5838   000382                     PRODSH          equ	898	;# 
  5839   000382                     PRODL_SHAD      equ	898	;# 
  5840   000383                     PRODH_SHAD      equ	899	;# 
  5841   0003BC                     CWG1CLK         equ	956	;# 
  5842   0003BC                     CWG1CLKCON      equ	956	;# 
  5843   0003BD                     CWG1ISM         equ	957	;# 
  5844   0003BD                     CWG1DAT         equ	957	;# 
  5845   0003BE                     CWG1DBR         equ	958	;# 
  5846   0003BF                     CWG1DBF         equ	959	;# 
  5847   0003C0                     CWG1CON0        equ	960	;# 
  5848   0003C1                     CWG1CON1        equ	961	;# 
  5849   0003C2                     CWG1AS0         equ	962	;# 
  5850   0003C3                     CWG1AS1         equ	963	;# 
  5851   0003C4                     CWG1STR         equ	964	;# 
  5852   0003C5                     CWG2CLK         equ	965	;# 
  5853   0003C5                     CWG2CLKCON      equ	965	;# 
  5854   0003C6                     CWG2ISM         equ	966	;# 
  5855   0003C6                     CWG2DAT         equ	966	;# 
  5856   0003C7                     CWG2DBR         equ	967	;# 
  5857   0003C8                     CWG2DBF         equ	968	;# 
  5858   0003C9                     CWG2CON0        equ	969	;# 
  5859   0003CA                     CWG2CON1        equ	970	;# 
  5860   0003CB                     CWG2AS0         equ	971	;# 
  5861   0003CC                     CWG2AS1         equ	972	;# 
  5862   0003CD                     CWG2STR         equ	973	;# 
  5863   0003CE                     CWG3CLK         equ	974	;# 
  5864   0003CE                     CWG3CLKCON      equ	974	;# 
  5865   0003CF                     CWG3ISM         equ	975	;# 
  5866   0003CF                     CWG3DAT         equ	975	;# 
  5867   0003D0                     CWG3DBR         equ	976	;# 
  5868   0003D1                     CWG3DBF         equ	977	;# 
  5869   0003D2                     CWG3CON0        equ	978	;# 
  5870   0003D3                     CWG3CON1        equ	979	;# 
  5871   0003D4                     CWG3AS0         equ	980	;# 
  5872   0003D5                     CWG3AS1         equ	981	;# 
  5873   0003D6                     CWG3STR         equ	982	;# 
  5874   0003D7                     FVRCON          equ	983	;# 
  5875   0003D8                     ADCPCON         equ	984	;# 
  5876   0003D8                     ADCP            equ	984	;# 
  5877   0003D9                     ADLTH           equ	985	;# 
  5878   0003D9                     ADLTHL          equ	985	;# 
  5879   0003DA                     ADLTHH          equ	986	;# 
  5880   0003DB                     ADUTH           equ	987	;# 
  5881   0003DB                     ADUTHL          equ	987	;# 
  5882   0003DC                     ADUTHH          equ	988	;# 
  5883   0003DD                     ADERR           equ	989	;# 
  5884   0003DD                     ADERRL          equ	989	;# 
  5885   0003DE                     ADERRH          equ	990	;# 
  5886   0003DF                     ADSTPT          equ	991	;# 
  5887   0003DF                     ADSTPTL         equ	991	;# 
  5888   0003E0                     ADSTPTH         equ	992	;# 
  5889   0003E1                     ADFLTR          equ	993	;# 
  5890   0003E1                     ADFLTRL         equ	993	;# 
  5891   0003E2                     ADFLTRH         equ	994	;# 
  5892   0003E3                     ADACC           equ	995	;# 
  5893   0003E3                     ADACCL          equ	995	;# 
  5894   0003E4                     ADACCH          equ	996	;# 
  5895   0003E5                     ADACCU          equ	997	;# 
  5896   0003E6                     ADCNT           equ	998	;# 
  5897   0003E7                     ADRPT           equ	999	;# 
  5898   0003E8                     ADPREV          equ	1000	;# 
  5899   0003E8                     ADPREVL         equ	1000	;# 
  5900   0003E9                     ADPREVH         equ	1001	;# 
  5901   0003EA                     ADRES           equ	1002	;# 
  5902   0003EA                     ADRESL          equ	1002	;# 
  5903   0003EB                     ADRESH          equ	1003	;# 
  5904   0003EC                     ADPCH           equ	1004	;# 
  5905   0003EE                     ADACQ           equ	1006	;# 
  5906   0003EE                     ADACQL          equ	1006	;# 
  5907   0003EF                     ADACQH          equ	1007	;# 
  5908   0003F0                     ADCAP           equ	1008	;# 
  5909   0003F1                     ADPRE           equ	1009	;# 
  5910   0003F1                     ADPREL          equ	1009	;# 
  5911   0003F2                     ADPREH          equ	1010	;# 
  5912   0003F3                     ADCON0          equ	1011	;# 
  5913   0003F4                     ADCON1          equ	1012	;# 
  5914   0003F5                     ADCON2          equ	1013	;# 
  5915   0003F6                     ADCON3          equ	1014	;# 
  5916   0003F7                     ADSTAT          equ	1015	;# 
  5917   0003F8                     ADREF           equ	1016	;# 
  5918   0003F9                     ADACT           equ	1017	;# 
  5919   0003FA                     ADCLK           equ	1018	;# 
  5920   000400                     ANSELA          equ	1024	;# 
  5921   000401                     WPUA            equ	1025	;# 
  5922   000402                     ODCONA          equ	1026	;# 
  5923   000403                     SLRCONA         equ	1027	;# 
  5924   000404                     INLVLA          equ	1028	;# 
  5925   000405                     IOCAP           equ	1029	;# 
  5926   000406                     IOCAN           equ	1030	;# 
  5927   000407                     IOCAF           equ	1031	;# 
  5928   000408                     ANSELB          equ	1032	;# 
  5929   000409                     WPUB            equ	1033	;# 
  5930   00040A                     ODCONB          equ	1034	;# 
  5931   00040B                     SLRCONB         equ	1035	;# 
  5932   00040C                     INLVLB          equ	1036	;# 
  5933   00040D                     IOCBP           equ	1037	;# 
  5934   00040E                     IOCBN           equ	1038	;# 
  5935   00040F                     IOCBF           equ	1039	;# 
  5936   000410                     ANSELC          equ	1040	;# 
  5937   000411                     WPUC            equ	1041	;# 
  5938   000412                     ODCONC          equ	1042	;# 
  5939   000413                     SLRCONC         equ	1043	;# 
  5940   000414                     INLVLC          equ	1044	;# 
  5941   000415                     IOCCP           equ	1045	;# 
  5942   000416                     IOCCN           equ	1046	;# 
  5943   000417                     IOCCF           equ	1047	;# 
  5944   000418                     ANSELD          equ	1048	;# 
  5945   000419                     WPUD            equ	1049	;# 
  5946   00041A                     ODCOND          equ	1050	;# 
  5947   00041B                     SLRCOND         equ	1051	;# 
  5948   00041C                     INLVLD          equ	1052	;# 
  5949   000420                     ANSELE          equ	1056	;# 
  5950   000421                     WPUE            equ	1057	;# 
  5951   000422                     ODCONE          equ	1058	;# 
  5952   000423                     SLRCONE         equ	1059	;# 
  5953   000424                     INLVLE          equ	1060	;# 
  5954   000425                     IOCEP           equ	1061	;# 
  5955   000426                     IOCEN           equ	1062	;# 
  5956   000427                     IOCEF           equ	1063	;# 
  5957   000428                     ANSELF          equ	1064	;# 
  5958   000429                     WPUF            equ	1065	;# 
  5959   00042A                     ODCONF          equ	1066	;# 
  5960   00042B                     SLRCONF         equ	1067	;# 
  5961   00042C                     INLVLF          equ	1068	;# 
  5962   000440                     NCO1ACC         equ	1088	;# 
  5963   000440                     NCO1ACCL        equ	1088	;# 
  5964   000441                     NCO1ACCH        equ	1089	;# 
  5965   000442                     NCO1ACCU        equ	1090	;# 
  5966   000443                     NCO1INC         equ	1091	;# 
  5967   000443                     NCO1INCL        equ	1091	;# 
  5968   000444                     NCO1INCH        equ	1092	;# 
  5969   000445                     NCO1INCU        equ	1093	;# 
  5970   000446                     NCO1CON         equ	1094	;# 
  5971   000447                     NCO1CLK         equ	1095	;# 
  5972   000448                     NCO2ACC         equ	1096	;# 
  5973   000448                     NCO2ACCL        equ	1096	;# 
  5974   000449                     NCO2ACCH        equ	1097	;# 
  5975   00044A                     NCO2ACCU        equ	1098	;# 
  5976   00044B                     NCO2INC         equ	1099	;# 
  5977   00044B                     NCO2INCL        equ	1099	;# 
  5978   00044C                     NCO2INCH        equ	1100	;# 
  5979   00044D                     NCO2INCU        equ	1101	;# 
  5980   00044E                     NCO2CON         equ	1102	;# 
  5981   00044F                     NCO2CLK         equ	1103	;# 
  5982   000450                     NCO3ACC         equ	1104	;# 
  5983   000450                     NCO3ACCL        equ	1104	;# 
  5984   000451                     NCO3ACCH        equ	1105	;# 
  5985   000452                     NCO3ACCU        equ	1106	;# 
  5986   000453                     NCO3INC         equ	1107	;# 
  5987   000453                     NCO3INCL        equ	1107	;# 
  5988   000454                     NCO3INCH        equ	1108	;# 
  5989   000455                     NCO3INCU        equ	1109	;# 
  5990   000456                     NCO3CON         equ	1110	;# 
  5991   000457                     NCO3CLK         equ	1111	;# 
  5992   000459                     IVTLOCK         equ	1113	;# 
  5993   00045A                     IVTAD           equ	1114	;# 
  5994   00045A                     IVTADL          equ	1114	;# 
  5995   00045B                     IVTADH          equ	1115	;# 
  5996   00045C                     IVTADU          equ	1116	;# 
  5997   00045D                     IVTBASE         equ	1117	;# 
  5998   00045D                     IVTBASEL        equ	1117	;# 
  5999   00045E                     IVTBASEH        equ	1118	;# 
  6000   00045F                     IVTBASEU        equ	1119	;# 
  6001   000460                     PWM1ERS         equ	1120	;# 
  6002   000461                     PWM1CLK         equ	1121	;# 
  6003   000462                     PWM1LDS         equ	1122	;# 
  6004   000463                     PWM1PR          equ	1123	;# 
  6005   000463                     PWM1PRL         equ	1123	;# 
  6006   000464                     PWM1PRH         equ	1124	;# 
  6007   000465                     PWM1CPRE        equ	1125	;# 
  6008   000466                     PWM1PIPOS       equ	1126	;# 
  6009   000467                     PWM1GIR         equ	1127	;# 
  6010   000468                     PWM1GIE         equ	1128	;# 
  6011   000469                     PWM1CON         equ	1129	;# 
  6012   00046A                     PWM1S1CFG       equ	1130	;# 
  6013   00046B                     PWM1S1P1        equ	1131	;# 
  6014   00046B                     PWM1S1P1L       equ	1131	;# 
  6015   00046C                     PWM1S1P1H       equ	1132	;# 
  6016   00046D                     PWM1S1P2        equ	1133	;# 
  6017   00046D                     PWM1S1P2L       equ	1133	;# 
  6018   00046E                     PWM1S1P2H       equ	1134	;# 
  6019   00046F                     PWM2ERS         equ	1135	;# 
  6020   000470                     PWM2CLK         equ	1136	;# 
  6021   000471                     PWM2LDS         equ	1137	;# 
  6022   000472                     PWM2PR          equ	1138	;# 
  6023   000472                     PWM2PRL         equ	1138	;# 
  6024   000473                     PWM2PRH         equ	1139	;# 
  6025   000474                     PWM2CPRE        equ	1140	;# 
  6026   000475                     PWM2PIPOS       equ	1141	;# 
  6027   000476                     PWM2GIR         equ	1142	;# 
  6028   000477                     PWM2GIE         equ	1143	;# 
  6029   000478                     PWM2CON         equ	1144	;# 
  6030   000479                     PWM2S1CFG       equ	1145	;# 
  6031   00047A                     PWM2S1P1        equ	1146	;# 
  6032   00047A                     PWM2S1P1L       equ	1146	;# 
  6033   00047B                     PWM2S1P1H       equ	1147	;# 
  6034   00047C                     PWM2S1P2        equ	1148	;# 
  6035   00047C                     PWM2S1P2L       equ	1148	;# 
  6036   00047D                     PWM2S1P2H       equ	1149	;# 
  6037   00047E                     PWM3ERS         equ	1150	;# 
  6038   00047F                     PWM3CLK         equ	1151	;# 
  6039   000480                     PWM3LDS         equ	1152	;# 
  6040   000481                     PWM3PR          equ	1153	;# 
  6041   000481                     PWM3PRL         equ	1153	;# 
  6042   000482                     PWM3PRH         equ	1154	;# 
  6043   000483                     PWM3CPRE        equ	1155	;# 
  6044   000484                     PWM3PIPOS       equ	1156	;# 
  6045   000485                     PWM3GIR         equ	1157	;# 
  6046   000486                     PWM3GIE         equ	1158	;# 
  6047   000487                     PWM3CON         equ	1159	;# 
  6048   000488                     PWM3S1CFG       equ	1160	;# 
  6049   000489                     PWM3S1P1        equ	1161	;# 
  6050   000489                     PWM3S1P1L       equ	1161	;# 
  6051   00048A                     PWM3S1P1H       equ	1162	;# 
  6052   00048B                     PWM3S1P2        equ	1163	;# 
  6053   00048B                     PWM3S1P2L       equ	1163	;# 
  6054   00048C                     PWM3S1P2H       equ	1164	;# 
  6055   00049C                     PWMLOAD         equ	1180	;# 
  6056   00049D                     PWMEN           equ	1181	;# 
  6057   00049E                     PIE0            equ	1182	;# 
  6058   00049F                     PIE1            equ	1183	;# 
  6059   0004A0                     PIE2            equ	1184	;# 
  6060   0004A1                     PIE3            equ	1185	;# 
  6061   0004A2                     PIE4            equ	1186	;# 
  6062   0004A3                     PIE5            equ	1187	;# 
  6063   0004A4                     PIE6            equ	1188	;# 
  6064   0004A5                     PIE7            equ	1189	;# 
  6065   0004A6                     PIE8            equ	1190	;# 
  6066   0004A7                     PIE9            equ	1191	;# 
  6067   0004A8                     PIE10           equ	1192	;# 
  6068   0004A9                     PIE11           equ	1193	;# 
  6069   0004AA                     PIE12           equ	1194	;# 
  6070   0004AB                     PIE13           equ	1195	;# 
  6071   0004AC                     PIE14           equ	1196	;# 
  6072   0004AD                     PIE15           equ	1197	;# 
  6073   0004AE                     PIR0            equ	1198	;# 
  6074   0004AF                     PIR1            equ	1199	;# 
  6075   0004B0                     PIR2            equ	1200	;# 
  6076   0004B1                     PIR3            equ	1201	;# 
  6077   0004B2                     PIR4            equ	1202	;# 
  6078   0004B3                     PIR5            equ	1203	;# 
  6079   0004B4                     PIR6            equ	1204	;# 
  6080   0004B5                     PIR7            equ	1205	;# 
  6081   0004B6                     PIR8            equ	1206	;# 
  6082   0004B7                     PIR9            equ	1207	;# 
  6083   0004B8                     PIR10           equ	1208	;# 
  6084   0004B9                     PIR11           equ	1209	;# 
  6085   0004BA                     PIR12           equ	1210	;# 
  6086   0004BB                     PIR13           equ	1211	;# 
  6087   0004BC                     PIR14           equ	1212	;# 
  6088   0004BD                     PIR15           equ	1213	;# 
  6089   0004BE                     LATA            equ	1214	;# 
  6090   0004BF                     LATB            equ	1215	;# 
  6091   0004C0                     LATC            equ	1216	;# 
  6092   0004C1                     LATD            equ	1217	;# 
  6093   0004C2                     LATE            equ	1218	;# 
  6094   0004C3                     LATF            equ	1219	;# 
  6095   0004C6                     TRISA           equ	1222	;# 
  6096   0004C7                     TRISB           equ	1223	;# 
  6097   0004C8                     TRISC           equ	1224	;# 
  6098   0004C9                     TRISD           equ	1225	;# 
  6099   0004CA                     TRISE           equ	1226	;# 
  6100   0004CB                     TRISF           equ	1227	;# 
  6101   0004CE                     PORTA           equ	1230	;# 
  6102   0004CF                     PORTB           equ	1231	;# 
  6103   0004D0                     PORTC           equ	1232	;# 
  6104   0004D1                     PORTD           equ	1233	;# 
  6105   0004D2                     PORTE           equ	1234	;# 
  6106   0004D3                     PORTF           equ	1235	;# 
  6107   0004D6                     INTCON0         equ	1238	;# 
  6108   0004D7                     INTCON1         equ	1239	;# 
  6109   0004D8                     STATUS          equ	1240	;# 
  6110   0004D9                     FSR2            equ	1241	;# 
  6111   0004D9                     FSR2L           equ	1241	;# 
  6112   0004DA                     FSR2H           equ	1242	;# 
  6113   0004DB                     PLUSW2          equ	1243	;# 
  6114   0004DC                     PREINC2         equ	1244	;# 
  6115   0004DD                     POSTDEC2        equ	1245	;# 
  6116   0004DE                     POSTINC2        equ	1246	;# 
  6117   0004DF                     INDF2           equ	1247	;# 
  6118   0004E0                     BSR             equ	1248	;# 
  6119   0004E1                     FSR1            equ	1249	;# 
  6120   0004E1                     FSR1L           equ	1249	;# 
  6121   0004E2                     FSR1H           equ	1250	;# 
  6122   0004E3                     PLUSW1          equ	1251	;# 
  6123   0004E4                     PREINC1         equ	1252	;# 
  6124   0004E5                     POSTDEC1        equ	1253	;# 
  6125   0004E6                     POSTINC1        equ	1254	;# 
  6126   0004E7                     INDF1           equ	1255	;# 
  6127   0004E8                     WREG            equ	1256	;# 
  6128   0004E9                     FSR0            equ	1257	;# 
  6129   0004E9                     FSR0L           equ	1257	;# 
  6130   0004EA                     FSR0H           equ	1258	;# 
  6131   0004EB                     PLUSW0          equ	1259	;# 
  6132   0004EC                     PREINC0         equ	1260	;# 
  6133   0004ED                     POSTDEC0        equ	1261	;# 
  6134   0004EE                     POSTINC0        equ	1262	;# 
  6135   0004EF                     INDF0           equ	1263	;# 
  6136   0004F0                     PCON0           equ	1264	;# 
  6137   0004F1                     PCON1           equ	1265	;# 
  6138   0004F2                     CPUDOZE         equ	1266	;# 
  6139   0004F3                     PROD            equ	1267	;# 
  6140   0004F3                     PRODL           equ	1267	;# 
  6141   0004F4                     PRODH           equ	1268	;# 
  6142   0004F5                     TABLAT          equ	1269	;# 
  6143   0004F6                     TBLPTR          equ	1270	;# 
  6144   0004F6                     TBLPTRL         equ	1270	;# 
  6145   0004F7                     TBLPTRH         equ	1271	;# 
  6146   0004F8                     TBLPTRU         equ	1272	;# 
  6147   0004F9                     PCLAT           equ	1273	;# 
  6148   0004F9                     PCL             equ	1273	;# 
  6149   0004FA                     PCLATH          equ	1274	;# 
  6150   0004FB                     PCLATU          equ	1275	;# 
  6151   0004FC                     STKPTR          equ	1276	;# 
  6152   0004FD                     TOS             equ	1277	;# 
  6153   0004FD                     TOSL            equ	1277	;# 
  6154   0004FE                     TOSH            equ	1278	;# 
  6155   0004FF                     TOSU            equ	1279	;# 
  6156   000039                     CLKRCON         equ	57	;# 
  6157   00003A                     CLKRCLK         equ	58	;# 
  6158   000040                     NVMCON0         equ	64	;# 
  6159   000041                     NVMCON1         equ	65	;# 
  6160   000042                     NVMLOCK         equ	66	;# 
  6161   000043                     NVMADR          equ	67	;# 
  6162   000043                     NVMADRL         equ	67	;# 
  6163   000044                     NVMADRH         equ	68	;# 
  6164   000045                     NVMADRU         equ	69	;# 
  6165   000046                     NVMDAT          equ	70	;# 
  6166   000046                     NVMDATL         equ	70	;# 
  6167   000047                     NVMDATH         equ	71	;# 
  6168   000048                     VREGCON         equ	72	;# 
  6169   000049                     BORCON          equ	73	;# 
  6170   00004A                     HLVDCON0        equ	74	;# 
  6171   00004B                     HLVDCON1        equ	75	;# 
  6172   00004C                     ZCDCON          equ	76	;# 
  6173   000060                     PMD0            equ	96	;# 
  6174   000061                     PMD1            equ	97	;# 
  6175   000063                     PMD3            equ	99	;# 
  6176   000064                     PMD4            equ	100	;# 
  6177   000065                     PMD5            equ	101	;# 
  6178   000066                     PMD6            equ	102	;# 
  6179   000067                     PMD7            equ	103	;# 
  6180   000068                     PMD8            equ	104	;# 
  6181   00006A                     MD1CON0         equ	106	;# 
  6182   00006B                     MD1CON1         equ	107	;# 
  6183   00006C                     MD1SRC          equ	108	;# 
  6184   00006D                     MD1CARL         equ	109	;# 
  6185   00006E                     MD1CARH         equ	110	;# 
  6186   00006F                     CMOUT           equ	111	;# 
  6187   000070                     CM1CON0         equ	112	;# 
  6188   000071                     CM1CON1         equ	113	;# 
  6189   000072                     CM1NCH          equ	114	;# 
  6190   000073                     CM1PCH          equ	115	;# 
  6191   000074                     CM2CON0         equ	116	;# 
  6192   000075                     CM2CON1         equ	117	;# 
  6193   000076                     CM2NCH          equ	118	;# 
  6194   000077                     CM2PCH          equ	119	;# 
  6195   000078                     WDTCON0         equ	120	;# 
  6196   000079                     WDTCON1         equ	121	;# 
  6197   00007A                     WDTPS           equ	122	;# 
  6198   00007A                     WDTPSL          equ	122	;# 
  6199   00007B                     WDTPSH          equ	123	;# 
  6200   00007C                     WDTTMR          equ	124	;# 
  6201   00007D                     DAC1DAT         equ	125	;# 
  6202   00007D                     DAC1DATL        equ	125	;# 
  6203   00007F                     DAC1CON         equ	127	;# 
  6204   000080                     SPI1RXB         equ	128	;# 
  6205   000081                     SPI1TXB         equ	129	;# 
  6206   000082                     SPI1TCNT        equ	130	;# 
  6207   000082                     SPI1TCNTL       equ	130	;# 
  6208   000083                     SPI1TCNTH       equ	131	;# 
  6209   000084                     SPI1CON0        equ	132	;# 
  6210   000085                     SPI1CON1        equ	133	;# 
  6211   000086                     SPI1CON2        equ	134	;# 
  6212   000087                     SPI1STATUS      equ	135	;# 
  6213   000088                     SPI1TWIDTH      equ	136	;# 
  6214   000089                     SPI1BAUD        equ	137	;# 
  6215   00008A                     SPI1INTF        equ	138	;# 
  6216   00008B                     SPI1INTE        equ	139	;# 
  6217   00008C                     SPI1CLK         equ	140	;# 
  6218   00008D                     SPI2RXB         equ	141	;# 
  6219   00008E                     SPI2TXB         equ	142	;# 
  6220   00008F                     SPI2TCNT        equ	143	;# 
  6221   00008F                     SPI2TCNTL       equ	143	;# 
  6222   000090                     SPI2TCNTH       equ	144	;# 
  6223   000091                     SPI2CON0        equ	145	;# 
  6224   000092                     SPI2CON1        equ	146	;# 
  6225   000093                     SPI2CON2        equ	147	;# 
  6226   000094                     SPI2STATUS      equ	148	;# 
  6227   000095                     SPI2TWIDTH      equ	149	;# 
  6228   000096                     SPI2BAUD        equ	150	;# 
  6229   000097                     SPI2INTF        equ	151	;# 
  6230   000098                     SPI2INTE        equ	152	;# 
  6231   000099                     SPI2CLK         equ	153	;# 
  6232   0000AC                     ACTCON          equ	172	;# 
  6233   0000AD                     OSCCON1         equ	173	;# 
  6234   0000AE                     OSCCON2         equ	174	;# 
  6235   0000AF                     OSCCON3         equ	175	;# 
  6236   0000B0                     OSCTUNE         equ	176	;# 
  6237   0000B1                     OSCFRQ          equ	177	;# 
  6238   0000B1                     OSCFREQ         equ	177	;# 
  6239   0000B2                     OSCSTAT         equ	178	;# 
  6240   0000B2                     OSCSTAT1        equ	178	;# 
  6241   0000B3                     OSCEN           equ	179	;# 
  6242   0000B4                     PRLOCK          equ	180	;# 
  6243   0000B5                     SCANPR          equ	181	;# 
  6244   0000B6                     DMA1PR          equ	182	;# 
  6245   0000B7                     DMA2PR          equ	183	;# 
  6246   0000B8                     DMA3PR          equ	184	;# 
  6247   0000B9                     DMA4PR          equ	185	;# 
  6248   0000BA                     DMA5PR          equ	186	;# 
  6249   0000BB                     DMA6PR          equ	187	;# 
  6250   0000BE                     MAINPR          equ	190	;# 
  6251   0000BF                     ISRPR           equ	191	;# 
  6252   0000D4                     CLCDATA         equ	212	;# 
  6253   0000D5                     CLCSELECT       equ	213	;# 
  6254   0000D6                     CLCnCON         equ	214	;# 
  6255   0000D7                     CLCnPOL         equ	215	;# 
  6256   0000D8                     CLCnSEL0        equ	216	;# 
  6257   0000D9                     CLCnSEL1        equ	217	;# 
  6258   0000DA                     CLCnSEL2        equ	218	;# 
  6259   0000DB                     CLCnSEL3        equ	219	;# 
  6260   0000DC                     CLCnGLS0        equ	220	;# 
  6261   0000DD                     CLCnGLS1        equ	221	;# 
  6262   0000DE                     CLCnGLS2        equ	222	;# 
  6263   0000DF                     CLCnGLS3        equ	223	;# 
  6264   0000E8                     DMASELECT       equ	232	;# 
  6265   0000E9                     DMAnBUF         equ	233	;# 
  6266   0000EA                     DMAnDCNT        equ	234	;# 
  6267   0000EA                     DMAnDCNTL       equ	234	;# 
  6268   0000EB                     DMAnDCNTH       equ	235	;# 
  6269   0000EC                     DMAnDPTR        equ	236	;# 
  6270   0000EC                     DMAnDPTRL       equ	236	;# 
  6271   0000ED                     DMAnDPTRH       equ	237	;# 
  6272   0000EE                     DMAnDSZ         equ	238	;# 
  6273   0000EE                     DMAnDSZL        equ	238	;# 
  6274   0000EF                     DMAnDSZH        equ	239	;# 
  6275   0000F0                     DMAnDSA         equ	240	;# 
  6276   0000F0                     DMAnDSAL        equ	240	;# 
  6277   0000F1                     DMAnDSAH        equ	241	;# 
  6278   0000F2                     DMAnSCNT        equ	242	;# 
  6279   0000F2                     DMAnSCNTL       equ	242	;# 
  6280   0000F3                     DMAnSCNTH       equ	243	;# 
  6281   0000F4                     DMAnSPTR        equ	244	;# 
  6282   0000F4                     DMAnSPTRL       equ	244	;# 
  6283   0000F5                     DMAnSPTRH       equ	245	;# 
  6284   0000F6                     DMAnSPTRU       equ	246	;# 
  6285   0000F7                     DMAnSSZ         equ	247	;# 
  6286   0000F7                     DMAnSSZL        equ	247	;# 
  6287   0000F8                     DMAnSSZH        equ	248	;# 
  6288   0000F9                     DMAnSSA         equ	249	;# 
  6289   0000F9                     DMAnSSAL        equ	249	;# 
  6290   0000FA                     DMAnSSAH        equ	250	;# 
  6291   0000FB                     DMAnSSAU        equ	251	;# 
  6292   0000FC                     DMAnCON0        equ	252	;# 
  6293   0000FD                     DMAnCON1        equ	253	;# 
  6294   0000FE                     DMAnAIRQ        equ	254	;# 
  6295   0000FF                     DMAnSIRQ        equ	255	;# 
  6296   000200                     PPSLOCK         equ	512	;# 
  6297   000201                     RA0PPS          equ	513	;# 
  6298   000202                     RA1PPS          equ	514	;# 
  6299   000203                     RA2PPS          equ	515	;# 
  6300   000204                     RA3PPS          equ	516	;# 
  6301   000205                     RA4PPS          equ	517	;# 
  6302   000206                     RA5PPS          equ	518	;# 
  6303   000207                     RA6PPS          equ	519	;# 
  6304   000208                     RA7PPS          equ	520	;# 
  6305   000209                     RB0PPS          equ	521	;# 
  6306   00020A                     RB1PPS          equ	522	;# 
  6307   00020B                     RB2PPS          equ	523	;# 
  6308   00020C                     RB3PPS          equ	524	;# 
  6309   00020D                     RB4PPS          equ	525	;# 
  6310   00020E                     RB5PPS          equ	526	;# 
  6311   00020F                     RB6PPS          equ	527	;# 
  6312   000210                     RB7PPS          equ	528	;# 
  6313   000211                     RC0PPS          equ	529	;# 
  6314   000212                     RC1PPS          equ	530	;# 
  6315   000213                     RC2PPS          equ	531	;# 
  6316   000214                     RC3PPS          equ	532	;# 
  6317   000215                     RC4PPS          equ	533	;# 
  6318   000216                     RC5PPS          equ	534	;# 
  6319   000217                     RC6PPS          equ	535	;# 
  6320   000218                     RC7PPS          equ	536	;# 
  6321   000219                     RD0PPS          equ	537	;# 
  6322   00021A                     RD1PPS          equ	538	;# 
  6323   00021B                     RD2PPS          equ	539	;# 
  6324   00021C                     RD3PPS          equ	540	;# 
  6325   00021D                     RD4PPS          equ	541	;# 
  6326   00021E                     RD5PPS          equ	542	;# 
  6327   00021F                     RD6PPS          equ	543	;# 
  6328   000220                     RD7PPS          equ	544	;# 
  6329   000221                     RE0PPS          equ	545	;# 
  6330   000222                     RE1PPS          equ	546	;# 
  6331   000223                     RE2PPS          equ	547	;# 
  6332   000229                     RF0PPS          equ	553	;# 
  6333   00022A                     RF1PPS          equ	554	;# 
  6334   00022B                     RF2PPS          equ	555	;# 
  6335   00022C                     RF3PPS          equ	556	;# 
  6336   00022D                     RF4PPS          equ	557	;# 
  6337   00022E                     RF5PPS          equ	558	;# 
  6338   00022F                     RF6PPS          equ	559	;# 
  6339   000230                     RF7PPS          equ	560	;# 
  6340   00023E                     INT0PPS         equ	574	;# 
  6341   00023F                     INT1PPS         equ	575	;# 
  6342   000240                     INT2PPS         equ	576	;# 
  6343   000241                     T0CKIPPS        equ	577	;# 
  6344   000242                     T1CKIPPS        equ	578	;# 
  6345   000243                     T1GPPS          equ	579	;# 
  6346   000244                     T3CKIPPS        equ	580	;# 
  6347   000245                     T3GPPS          equ	581	;# 
  6348   000246                     T5CKIPPS        equ	582	;# 
  6349   000247                     T5GPPS          equ	583	;# 
  6350   000248                     T2INPPS         equ	584	;# 
  6351   000249                     T4INPPS         equ	585	;# 
  6352   00024A                     T6INPPS         equ	586	;# 
  6353   00024F                     CCP1PPS         equ	591	;# 
  6354   000250                     CCP2PPS         equ	592	;# 
  6355   000251                     CCP3PPS         equ	593	;# 
  6356   000253                     PWM1ERSPPS      equ	595	;# 
  6357   000254                     PWM2ERSPPS      equ	596	;# 
  6358   000255                     PWM3ERSPPS      equ	597	;# 
  6359   000257                     PWMIN0PPS       equ	599	;# 
  6360   000258                     PWMIN1PPS       equ	600	;# 
  6361   000259                     SMT1WINPPS      equ	601	;# 
  6362   00025A                     SMT1SIGPPS      equ	602	;# 
  6363   00025B                     CWG1PPS         equ	603	;# 
  6364   00025B                     CWG1INPPS       equ	603	;# 
  6365   00025C                     CWG2PPS         equ	604	;# 
  6366   00025C                     CWG2INPPS       equ	604	;# 
  6367   00025D                     CWG3PPS         equ	605	;# 
  6368   00025D                     CWG3INPPS       equ	605	;# 
  6369   00025E                     MD1CARLPPS      equ	606	;# 
  6370   00025E                     MDCARLPPS       equ	606	;# 
  6371   00025F                     MD1CARHPPS      equ	607	;# 
  6372   00025F                     MDCARHPPS       equ	607	;# 
  6373   000260                     MD1SRCPPS       equ	608	;# 
  6374   000260                     MDSRCPPS        equ	608	;# 
  6375   000261                     CLCIN0PPS       equ	609	;# 
  6376   000262                     CLCIN1PPS       equ	610	;# 
  6377   000263                     CLCIN2PPS       equ	611	;# 
  6378   000264                     CLCIN3PPS       equ	612	;# 
  6379   000265                     CLCIN4PPS       equ	613	;# 
  6380   000266                     CLCIN5PPS       equ	614	;# 
  6381   000267                     CLCIN6PPS       equ	615	;# 
  6382   000268                     CLCIN7PPS       equ	616	;# 
  6383   000269                     ADACTPPS        equ	617	;# 
  6384   00026A                     SPI1SCKPPS      equ	618	;# 
  6385   00026B                     SPI1SDIPPS      equ	619	;# 
  6386   00026C                     SPI1SSPPS       equ	620	;# 
  6387   00026D                     SPI2SCKPPS      equ	621	;# 
  6388   00026E                     SPI2SDIPPS      equ	622	;# 
  6389   00026F                     SPI2SSPPS       equ	623	;# 
  6390   000270                     I2C1SDAPPS      equ	624	;# 
  6391   000271                     I2C1SCLPPS      equ	625	;# 
  6392   000272                     U1RXPPS         equ	626	;# 
  6393   000273                     U1CTSPPS        equ	627	;# 
  6394   000274                     U2RXPPS         equ	628	;# 
  6395   000275                     U2CTSPPS        equ	629	;# 
  6396   000276                     U3RXPPS         equ	630	;# 
  6397   000277                     U3CTSPPS        equ	631	;# 
  6398   000278                     U4RXPPS         equ	632	;# 
  6399   000279                     U4CTSPPS        equ	633	;# 
  6400   00027A                     U5RXPPS         equ	634	;# 
  6401   00027B                     U5CTSPPS        equ	635	;# 
  6402   000286                     RC4I2C          equ	646	;# 
  6403   000287                     RC3I2C          equ	647	;# 
  6404   000288                     RB2I2C          equ	648	;# 
  6405   000289                     RB1I2C          equ	649	;# 
  6406   00028B                     I2C1RXB         equ	651	;# 
  6407   00028C                     I2C1TXB         equ	652	;# 
  6408   00028D                     I2C1CNT         equ	653	;# 
  6409   00028E                     I2C1ADB0        equ	654	;# 
  6410   00028F                     I2C1ADB1        equ	655	;# 
  6411   000290                     I2C1ADR0        equ	656	;# 
  6412   000291                     I2C1ADR1        equ	657	;# 
  6413   000292                     I2C1ADR2        equ	658	;# 
  6414   000293                     I2C1ADR3        equ	659	;# 
  6415   000294                     I2C1CON0        equ	660	;# 
  6416   000295                     I2C1CON1        equ	661	;# 
  6417   000296                     I2C1CON2        equ	662	;# 
  6418   000297                     I2C1ERR         equ	663	;# 
  6419   000298                     I2C1STAT0       equ	664	;# 
  6420   000299                     I2C1STAT1       equ	665	;# 
  6421   00029A                     I2C1PIR         equ	666	;# 
  6422   00029B                     I2C1PIE         equ	667	;# 
  6423   00029C                     I2C1CLK         equ	668	;# 
  6424   00029D                     I2C1BTO         equ	669	;# 
  6425   0002A1                     U1RXB           equ	673	;# 
  6426   0002A1                     U1RXBL          equ	673	;# 
  6427   0002A2                     U1RXCHK         equ	674	;# 
  6428   0002A3                     U1TXB           equ	675	;# 
  6429   0002A3                     U1TXBL          equ	675	;# 
  6430   0002A4                     U1TXCHK         equ	676	;# 
  6431   0002A5                     U1P1            equ	677	;# 
  6432   0002A5                     U1P1L           equ	677	;# 
  6433   0002A6                     U1P1H           equ	678	;# 
  6434   0002A7                     U1P2            equ	679	;# 
  6435   0002A7                     U1P2L           equ	679	;# 
  6436   0002A8                     U1P2H           equ	680	;# 
  6437   0002A9                     U1P3            equ	681	;# 
  6438   0002A9                     U1P3L           equ	681	;# 
  6439   0002AA                     U1P3H           equ	682	;# 
  6440   0002AB                     U1CON0          equ	683	;# 
  6441   0002AC                     U1CON1          equ	684	;# 
  6442   0002AD                     U1CON2          equ	685	;# 
  6443   0002AE                     U1BRG           equ	686	;# 
  6444   0002AE                     U1BRGL          equ	686	;# 
  6445   0002AF                     U1BRGH          equ	687	;# 
  6446   0002B0                     U1FIFO          equ	688	;# 
  6447   0002B1                     U1UIR           equ	689	;# 
  6448   0002B2                     U1ERRIR         equ	690	;# 
  6449   0002B3                     U1ERRIE         equ	691	;# 
  6450   0002B4                     U2RXB           equ	692	;# 
  6451   0002B4                     U2RXBL          equ	692	;# 
  6452   0002B6                     U2TXB           equ	694	;# 
  6453   0002B6                     U2TXBL          equ	694	;# 
  6454   0002B8                     U2P1            equ	696	;# 
  6455   0002B8                     U2P1L           equ	696	;# 
  6456   0002BA                     U2P2            equ	698	;# 
  6457   0002BA                     U2P2L           equ	698	;# 
  6458   0002BC                     U2P3            equ	700	;# 
  6459   0002BC                     U2P3L           equ	700	;# 
  6460   0002BE                     U2CON0          equ	702	;# 
  6461   0002BF                     U2CON1          equ	703	;# 
  6462   0002C0                     U2CON2          equ	704	;# 
  6463   0002C1                     U2BRG           equ	705	;# 
  6464   0002C1                     U2BRGL          equ	705	;# 
  6465   0002C2                     U2BRGH          equ	706	;# 
  6466   0002C3                     U2FIFO          equ	707	;# 
  6467   0002C4                     U2UIR           equ	708	;# 
  6468   0002C5                     U2ERRIR         equ	709	;# 
  6469   0002C6                     U2ERRIE         equ	710	;# 
  6470   0002C7                     U3RXB           equ	711	;# 
  6471   0002C7                     U3RXBL          equ	711	;# 
  6472   0002C9                     U3TXB           equ	713	;# 
  6473   0002C9                     U3TXBL          equ	713	;# 
  6474   0002CB                     U3P1            equ	715	;# 
  6475   0002CB                     U3P1L           equ	715	;# 
  6476   0002CD                     U3P2            equ	717	;# 
  6477   0002CD                     U3P2L           equ	717	;# 
  6478   0002CF                     U3P3            equ	719	;# 
  6479   0002CF                     U3P3L           equ	719	;# 
  6480   0002D1                     U3CON0          equ	721	;# 
  6481   0002D2                     U3CON1          equ	722	;# 
  6482   0002D3                     U3CON2          equ	723	;# 
  6483   0002D4                     U3BRG           equ	724	;# 
  6484   0002D4                     U3BRGL          equ	724	;# 
  6485   0002D5                     U3BRGH          equ	725	;# 
  6486   0002D6                     U3FIFO          equ	726	;# 
  6487   0002D7                     U3UIR           equ	727	;# 
  6488   0002D8                     U3ERRIR         equ	728	;# 
  6489   0002D9                     U3ERRIE         equ	729	;# 
  6490   0002DA                     U4RXB           equ	730	;# 
  6491   0002DA                     U4RXBL          equ	730	;# 
  6492   0002DC                     U4TXB           equ	732	;# 
  6493   0002DC                     U4TXBL          equ	732	;# 
  6494   0002DE                     U4P1            equ	734	;# 
  6495   0002DE                     U4P1L           equ	734	;# 
  6496   0002E0                     U4P2            equ	736	;# 
  6497   0002E0                     U4P2L           equ	736	;# 
  6498   0002E2                     U4P3            equ	738	;# 
  6499   0002E2                     U4P3L           equ	738	;# 
  6500   0002E4                     U4CON0          equ	740	;# 
  6501   0002E5                     U4CON1          equ	741	;# 
  6502   0002E6                     U4CON2          equ	742	;# 
  6503   0002E7                     U4BRG           equ	743	;# 
  6504   0002E7                     U4BRGL          equ	743	;# 
  6505   0002E8                     U4BRGH          equ	744	;# 
  6506   0002E9                     U4FIFO          equ	745	;# 
  6507   0002EA                     U4UIR           equ	746	;# 
  6508   0002EB                     U4ERRIR         equ	747	;# 
  6509   0002EC                     U4ERRIE         equ	748	;# 
  6510   0002ED                     U5RXB           equ	749	;# 
  6511   0002ED                     U5RXBL          equ	749	;# 
  6512   0002EF                     U5TXB           equ	751	;# 
  6513   0002EF                     U5TXBL          equ	751	;# 
  6514   0002F1                     U5P1            equ	753	;# 
  6515   0002F1                     U5P1L           equ	753	;# 
  6516   0002F3                     U5P2            equ	755	;# 
  6517   0002F3                     U5P2L           equ	755	;# 
  6518   0002F5                     U5P3            equ	757	;# 
  6519   0002F5                     U5P3L           equ	757	;# 
  6520   0002F7                     U5CON0          equ	759	;# 
  6521   0002F8                     U5CON1          equ	760	;# 
  6522   0002F9                     U5CON2          equ	761	;# 
  6523   0002FA                     U5BRG           equ	762	;# 
  6524   0002FA                     U5BRGL          equ	762	;# 
  6525   0002FB                     U5BRGH          equ	763	;# 
  6526   0002FC                     U5FIFO          equ	764	;# 
  6527   0002FD                     U5UIR           equ	765	;# 
  6528   0002FE                     U5ERRIR         equ	766	;# 
  6529   0002FF                     U5ERRIE         equ	767	;# 
  6530   000300                     SMT1TMR         equ	768	;# 
  6531   000300                     SMT1TMRL        equ	768	;# 
  6532   000301                     SMT1TMRH        equ	769	;# 
  6533   000302                     SMT1TMRU        equ	770	;# 
  6534   000303                     SMT1CPR         equ	771	;# 
  6535   000303                     SMT1CPRL        equ	771	;# 
  6536   000304                     SMT1CPRH        equ	772	;# 
  6537   000305                     SMT1CPRU        equ	773	;# 
  6538   000306                     SMT1CPW         equ	774	;# 
  6539   000306                     SMT1CPWL        equ	774	;# 
  6540   000307                     SMT1CPWH        equ	775	;# 
  6541   000308                     SMT1CPWU        equ	776	;# 
  6542   000309                     SMT1PR          equ	777	;# 
  6543   000309                     SMT1PRL         equ	777	;# 
  6544   00030A                     SMT1PRH         equ	778	;# 
  6545   00030B                     SMT1PRU         equ	779	;# 
  6546   00030C                     SMT1CON0        equ	780	;# 
  6547   00030D                     SMT1CON1        equ	781	;# 
  6548   00030E                     SMT1STAT        equ	782	;# 
  6549   00030F                     SMT1CLK         equ	783	;# 
  6550   000310                     SMT1SIG         equ	784	;# 
  6551   000311                     SMT1WIN         equ	785	;# 
  6552   000318                     TMR0L           equ	792	;# 
  6553   000318                     TMR0            equ	792	;# 
  6554   000319                     TMR0H           equ	793	;# 
  6555   000319                     PR0             equ	793	;# 
  6556   00031A                     T0CON0          equ	794	;# 
  6557   00031B                     T0CON1          equ	795	;# 
  6558   00031C                     TMR1            equ	796	;# 
  6559   00031C                     TMR1L           equ	796	;# 
  6560   00031D                     TMR1H           equ	797	;# 
  6561   00031E                     T1CON           equ	798	;# 
  6562   00031E                     TMR1CON         equ	798	;# 
  6563   00031F                     T1GCON          equ	799	;# 
  6564   00031F                     TMR1GCON        equ	799	;# 
  6565   000320                     T1GATE          equ	800	;# 
  6566   000320                     TMR1GATE        equ	800	;# 
  6567   000321                     T1CLK           equ	801	;# 
  6568   000321                     TMR1CLK         equ	801	;# 
  6569   000321                     PR1             equ	801	;# 
  6570   000322                     T2TMR           equ	802	;# 
  6571   000322                     TMR2            equ	802	;# 
  6572   000323                     T2PR            equ	803	;# 
  6573   000323                     PR2             equ	803	;# 
  6574   000324                     T2CON           equ	804	;# 
  6575   000325                     T2HLT           equ	805	;# 
  6576   000326                     T2CLKCON        equ	806	;# 
  6577   000326                     T2CLK           equ	806	;# 
  6578   000327                     T2RST           equ	807	;# 
  6579   000328                     TMR3            equ	808	;# 
  6580   000328                     TMR3L           equ	808	;# 
  6581   000329                     TMR3H           equ	809	;# 
  6582   00032A                     T3CON           equ	810	;# 
  6583   00032A                     TMR3CON         equ	810	;# 
  6584   00032B                     T3GCON          equ	811	;# 
  6585   00032B                     TMR3GCON        equ	811	;# 
  6586   00032C                     T3GATE          equ	812	;# 
  6587   00032C                     TMR3GATE        equ	812	;# 
  6588   00032D                     T3CLK           equ	813	;# 
  6589   00032D                     TMR3CLK         equ	813	;# 
  6590   00032D                     PR3             equ	813	;# 
  6591   00032E                     T4TMR           equ	814	;# 
  6592   00032E                     TMR4            equ	814	;# 
  6593   00032F                     T4PR            equ	815	;# 
  6594   00032F                     PR4             equ	815	;# 
  6595   000330                     T4CON           equ	816	;# 
  6596   000331                     T4HLT           equ	817	;# 
  6597   000332                     T4CLKCON        equ	818	;# 
  6598   000332                     T4CLK           equ	818	;# 
  6599   000333                     T4RST           equ	819	;# 
  6600   000334                     TMR5            equ	820	;# 
  6601   000334                     TMR5L           equ	820	;# 
  6602   000335                     TMR5H           equ	821	;# 
  6603   000336                     T5CON           equ	822	;# 
  6604   000336                     TMR5CON         equ	822	;# 
  6605   000337                     T5GCON          equ	823	;# 
  6606   000337                     TMR5GCON        equ	823	;# 
  6607   000338                     T5GATE          equ	824	;# 
  6608   000338                     TMR5GATE        equ	824	;# 
  6609   000339                     T5CLK           equ	825	;# 
  6610   000339                     TMR5CLK         equ	825	;# 
  6611   000339                     PR5             equ	825	;# 
  6612   00033A                     T6TMR           equ	826	;# 
  6613   00033A                     TMR6            equ	826	;# 
  6614   00033B                     T6PR            equ	827	;# 
  6615   00033B                     PR6             equ	827	;# 
  6616   00033C                     T6CON           equ	828	;# 
  6617   00033D                     T6HLT           equ	829	;# 
  6618   00033E                     T6CLKCON        equ	830	;# 
  6619   00033E                     T6CLK           equ	830	;# 
  6620   00033F                     T6RST           equ	831	;# 
  6621   000340                     CCPR1           equ	832	;# 
  6622   000340                     CCPR1L          equ	832	;# 
  6623   000341                     CCPR1H          equ	833	;# 
  6624   000342                     CCP1CON         equ	834	;# 
  6625   000343                     CCP1CAP         equ	835	;# 
  6626   000344                     CCPR2           equ	836	;# 
  6627   000344                     CCPR2L          equ	836	;# 
  6628   000345                     CCPR2H          equ	837	;# 
  6629   000346                     CCP2CON         equ	838	;# 
  6630   000347                     CCP2CAP         equ	839	;# 
  6631   000348                     CCPR3           equ	840	;# 
  6632   000348                     CCPR3L          equ	840	;# 
  6633   000349                     CCPR3H          equ	841	;# 
  6634   00034A                     CCP3CON         equ	842	;# 
  6635   00034B                     CCP3CAP         equ	843	;# 
  6636   00034C                     CCPTMRS0        equ	844	;# 
  6637   00034F                     CRCDATA         equ	847	;# 
  6638   00034F                     CRCDATL         equ	847	;# 
  6639   000350                     CRCDATH         equ	848	;# 
  6640   000351                     CRCACC          equ	849	;# 
  6641   000351                     CRCACCL         equ	849	;# 
  6642   000352                     CRCACCH         equ	850	;# 
  6643   000353                     CRCSHFT         equ	851	;# 
  6644   000353                     CRCSHIFTL       equ	851	;# 
  6645   000354                     CRCSHIFTH       equ	852	;# 
  6646   000355                     CRCXOR          equ	853	;# 
  6647   000355                     CRCXORL         equ	853	;# 
  6648   000356                     CRCXORH         equ	854	;# 
  6649   000357                     CRCCON0         equ	855	;# 
  6650   000358                     CRCCON1         equ	856	;# 
  6651   00035A                     SCANLADR        equ	858	;# 
  6652   00035A                     SCANLADRL       equ	858	;# 
  6653   00035B                     SCANLADRH       equ	859	;# 
  6654   00035C                     SCANLADRU       equ	860	;# 
  6655   00035D                     SCANHADR        equ	861	;# 
  6656   00035D                     SCANHADRL       equ	861	;# 
  6657   00035E                     SCANHADRH       equ	862	;# 
  6658   00035F                     SCANHADRU       equ	863	;# 
  6659   000360                     SCANCON0        equ	864	;# 
  6660   000361                     SCANTRIG        equ	865	;# 
  6661   000362                     IPR0            equ	866	;# 
  6662   000363                     IPR1            equ	867	;# 
  6663   000364                     IPR2            equ	868	;# 
  6664   000365                     IPR3            equ	869	;# 
  6665   000366                     IPR4            equ	870	;# 
  6666   000367                     IPR5            equ	871	;# 
  6667   000368                     IPR6            equ	872	;# 
  6668   000369                     IPR7            equ	873	;# 
  6669   00036A                     IPR8            equ	874	;# 
  6670   00036B                     IPR9            equ	875	;# 
  6671   00036C                     IPR10           equ	876	;# 
  6672   00036D                     IPR11           equ	877	;# 
  6673   00036E                     IPR12           equ	878	;# 
  6674   00036F                     IPR13           equ	879	;# 
  6675   000370                     IPR14           equ	880	;# 
  6676   000371                     IPR15           equ	881	;# 
  6677   000373                     STATUS_CSHAD    equ	883	;# 
  6678   000374                     WREG_CSHAD      equ	884	;# 
  6679   000375                     BSR_CSHAD       equ	885	;# 
  6680   000376                     SHADCON         equ	886	;# 
  6681   000377                     STATUS_SHAD     equ	887	;# 
  6682   000378                     WREG_SHAD       equ	888	;# 
  6683   000379                     BSR_SHAD        equ	889	;# 
  6684   00037A                     PCLATH_SHAD     equ	890	;# 
  6685   00037B                     PCLATU_SHAD     equ	891	;# 
  6686   00037C                     FSR0SH          equ	892	;# 
  6687   00037C                     FSR0L_SHAD      equ	892	;# 
  6688   00037D                     FSR0H_SHAD      equ	893	;# 
  6689   00037E                     FSR1SH          equ	894	;# 
  6690   00037E                     FSR1L_SHAD      equ	894	;# 
  6691   00037F                     FSR1H_SHAD      equ	895	;# 
  6692   000380                     FSR2SH          equ	896	;# 
  6693   000380                     FSR2L_SHAD      equ	896	;# 
  6694   000381                     FSR2H_SHAD      equ	897	;# 
  6695   000382                     PRODSH          equ	898	;# 
  6696   000382                     PRODL_SHAD      equ	898	;# 
  6697   000383                     PRODH_SHAD      equ	899	;# 
  6698   0003BC                     CWG1CLK         equ	956	;# 
  6699   0003BC                     CWG1CLKCON      equ	956	;# 
  6700   0003BD                     CWG1ISM         equ	957	;# 
  6701   0003BD                     CWG1DAT         equ	957	;# 
  6702   0003BE                     CWG1DBR         equ	958	;# 
  6703   0003BF                     CWG1DBF         equ	959	;# 
  6704   0003C0                     CWG1CON0        equ	960	;# 
  6705   0003C1                     CWG1CON1        equ	961	;# 
  6706   0003C2                     CWG1AS0         equ	962	;# 
  6707   0003C3                     CWG1AS1         equ	963	;# 
  6708   0003C4                     CWG1STR         equ	964	;# 
  6709   0003C5                     CWG2CLK         equ	965	;# 
  6710   0003C5                     CWG2CLKCON      equ	965	;# 
  6711   0003C6                     CWG2ISM         equ	966	;# 
  6712   0003C6                     CWG2DAT         equ	966	;# 
  6713   0003C7                     CWG2DBR         equ	967	;# 
  6714   0003C8                     CWG2DBF         equ	968	;# 
  6715   0003C9                     CWG2CON0        equ	969	;# 
  6716   0003CA                     CWG2CON1        equ	970	;# 
  6717   0003CB                     CWG2AS0         equ	971	;# 
  6718   0003CC                     CWG2AS1         equ	972	;# 
  6719   0003CD                     CWG2STR         equ	973	;# 
  6720   0003CE                     CWG3CLK         equ	974	;# 
  6721   0003CE                     CWG3CLKCON      equ	974	;# 
  6722   0003CF                     CWG3ISM         equ	975	;# 
  6723   0003CF                     CWG3DAT         equ	975	;# 
  6724   0003D0                     CWG3DBR         equ	976	;# 
  6725   0003D1                     CWG3DBF         equ	977	;# 
  6726   0003D2                     CWG3CON0        equ	978	;# 
  6727   0003D3                     CWG3CON1        equ	979	;# 
  6728   0003D4                     CWG3AS0         equ	980	;# 
  6729   0003D5                     CWG3AS1         equ	981	;# 
  6730   0003D6                     CWG3STR         equ	982	;# 
  6731   0003D7                     FVRCON          equ	983	;# 
  6732   0003D8                     ADCPCON         equ	984	;# 
  6733   0003D8                     ADCP            equ	984	;# 
  6734   0003D9                     ADLTH           equ	985	;# 
  6735   0003D9                     ADLTHL          equ	985	;# 
  6736   0003DA                     ADLTHH          equ	986	;# 
  6737   0003DB                     ADUTH           equ	987	;# 
  6738   0003DB                     ADUTHL          equ	987	;# 
  6739   0003DC                     ADUTHH          equ	988	;# 
  6740   0003DD                     ADERR           equ	989	;# 
  6741   0003DD                     ADERRL          equ	989	;# 
  6742   0003DE                     ADERRH          equ	990	;# 
  6743   0003DF                     ADSTPT          equ	991	;# 
  6744   0003DF                     ADSTPTL         equ	991	;# 
  6745   0003E0                     ADSTPTH         equ	992	;# 
  6746   0003E1                     ADFLTR          equ	993	;# 
  6747   0003E1                     ADFLTRL         equ	993	;# 
  6748   0003E2                     ADFLTRH         equ	994	;# 
  6749   0003E3                     ADACC           equ	995	;# 
  6750   0003E3                     ADACCL          equ	995	;# 
  6751   0003E4                     ADACCH          equ	996	;# 
  6752   0003E5                     ADACCU          equ	997	;# 
  6753   0003E6                     ADCNT           equ	998	;# 
  6754   0003E7                     ADRPT           equ	999	;# 
  6755   0003E8                     ADPREV          equ	1000	;# 
  6756   0003E8                     ADPREVL         equ	1000	;# 
  6757   0003E9                     ADPREVH         equ	1001	;# 
  6758   0003EA                     ADRES           equ	1002	;# 
  6759   0003EA                     ADRESL          equ	1002	;# 
  6760   0003EB                     ADRESH          equ	1003	;# 
  6761   0003EC                     ADPCH           equ	1004	;# 
  6762   0003EE                     ADACQ           equ	1006	;# 
  6763   0003EE                     ADACQL          equ	1006	;# 
  6764   0003EF                     ADACQH          equ	1007	;# 
  6765   0003F0                     ADCAP           equ	1008	;# 
  6766   0003F1                     ADPRE           equ	1009	;# 
  6767   0003F1                     ADPREL          equ	1009	;# 
  6768   0003F2                     ADPREH          equ	1010	;# 
  6769   0003F3                     ADCON0          equ	1011	;# 
  6770   0003F4                     ADCON1          equ	1012	;# 
  6771   0003F5                     ADCON2          equ	1013	;# 
  6772   0003F6                     ADCON3          equ	1014	;# 
  6773   0003F7                     ADSTAT          equ	1015	;# 
  6774   0003F8                     ADREF           equ	1016	;# 
  6775   0003F9                     ADACT           equ	1017	;# 
  6776   0003FA                     ADCLK           equ	1018	;# 
  6777   000400                     ANSELA          equ	1024	;# 
  6778   000401                     WPUA            equ	1025	;# 
  6779   000402                     ODCONA          equ	1026	;# 
  6780   000403                     SLRCONA         equ	1027	;# 
  6781   000404                     INLVLA          equ	1028	;# 
  6782   000405                     IOCAP           equ	1029	;# 
  6783   000406                     IOCAN           equ	1030	;# 
  6784   000407                     IOCAF           equ	1031	;# 
  6785   000408                     ANSELB          equ	1032	;# 
  6786   000409                     WPUB            equ	1033	;# 
  6787   00040A                     ODCONB          equ	1034	;# 
  6788   00040B                     SLRCONB         equ	1035	;# 
  6789   00040C                     INLVLB          equ	1036	;# 
  6790   00040D                     IOCBP           equ	1037	;# 
  6791   00040E                     IOCBN           equ	1038	;# 
  6792   00040F                     IOCBF           equ	1039	;# 
  6793   000410                     ANSELC          equ	1040	;# 
  6794   000411                     WPUC            equ	1041	;# 
  6795   000412                     ODCONC          equ	1042	;# 
  6796   000413                     SLRCONC         equ	1043	;# 
  6797   000414                     INLVLC          equ	1044	;# 
  6798   000415                     IOCCP           equ	1045	;# 
  6799   000416                     IOCCN           equ	1046	;# 
  6800   000417                     IOCCF           equ	1047	;# 
  6801   000418                     ANSELD          equ	1048	;# 
  6802   000419                     WPUD            equ	1049	;# 
  6803   00041A                     ODCOND          equ	1050	;# 
  6804   00041B                     SLRCOND         equ	1051	;# 
  6805   00041C                     INLVLD          equ	1052	;# 
  6806   000420                     ANSELE          equ	1056	;# 
  6807   000421                     WPUE            equ	1057	;# 
  6808   000422                     ODCONE          equ	1058	;# 
  6809   000423                     SLRCONE         equ	1059	;# 
  6810   000424                     INLVLE          equ	1060	;# 
  6811   000425                     IOCEP           equ	1061	;# 
  6812   000426                     IOCEN           equ	1062	;# 
  6813   000427                     IOCEF           equ	1063	;# 
  6814   000428                     ANSELF          equ	1064	;# 
  6815   000429                     WPUF            equ	1065	;# 
  6816   00042A                     ODCONF          equ	1066	;# 
  6817   00042B                     SLRCONF         equ	1067	;# 
  6818   00042C                     INLVLF          equ	1068	;# 
  6819   000440                     NCO1ACC         equ	1088	;# 
  6820   000440                     NCO1ACCL        equ	1088	;# 
  6821   000441                     NCO1ACCH        equ	1089	;# 
  6822   000442                     NCO1ACCU        equ	1090	;# 
  6823   000443                     NCO1INC         equ	1091	;# 
  6824   000443                     NCO1INCL        equ	1091	;# 
  6825   000444                     NCO1INCH        equ	1092	;# 
  6826   000445                     NCO1INCU        equ	1093	;# 
  6827   000446                     NCO1CON         equ	1094	;# 
  6828   000447                     NCO1CLK         equ	1095	;# 
  6829   000448                     NCO2ACC         equ	1096	;# 
  6830   000448                     NCO2ACCL        equ	1096	;# 
  6831   000449                     NCO2ACCH        equ	1097	;# 
  6832   00044A                     NCO2ACCU        equ	1098	;# 
  6833   00044B                     NCO2INC         equ	1099	;# 
  6834   00044B                     NCO2INCL        equ	1099	;# 
  6835   00044C                     NCO2INCH        equ	1100	;# 
  6836   00044D                     NCO2INCU        equ	1101	;# 
  6837   00044E                     NCO2CON         equ	1102	;# 
  6838   00044F                     NCO2CLK         equ	1103	;# 
  6839   000450                     NCO3ACC         equ	1104	;# 
  6840   000450                     NCO3ACCL        equ	1104	;# 
  6841   000451                     NCO3ACCH        equ	1105	;# 
  6842   000452                     NCO3ACCU        equ	1106	;# 
  6843   000453                     NCO3INC         equ	1107	;# 
  6844   000453                     NCO3INCL        equ	1107	;# 
  6845   000454                     NCO3INCH        equ	1108	;# 
  6846   000455                     NCO3INCU        equ	1109	;# 
  6847   000456                     NCO3CON         equ	1110	;# 
  6848   000457                     NCO3CLK         equ	1111	;# 
  6849   000459                     IVTLOCK         equ	1113	;# 
  6850   00045A                     IVTAD           equ	1114	;# 
  6851   00045A                     IVTADL          equ	1114	;# 
  6852   00045B                     IVTADH          equ	1115	;# 
  6853   00045C                     IVTADU          equ	1116	;# 
  6854   00045D                     IVTBASE         equ	1117	;# 
  6855   00045D                     IVTBASEL        equ	1117	;# 
  6856   00045E                     IVTBASEH        equ	1118	;# 
  6857   00045F                     IVTBASEU        equ	1119	;# 
  6858   000460                     PWM1ERS         equ	1120	;# 
  6859   000461                     PWM1CLK         equ	1121	;# 
  6860   000462                     PWM1LDS         equ	1122	;# 
  6861   000463                     PWM1PR          equ	1123	;# 
  6862   000463                     PWM1PRL         equ	1123	;# 
  6863   000464                     PWM1PRH         equ	1124	;# 
  6864   000465                     PWM1CPRE        equ	1125	;# 
  6865   000466                     PWM1PIPOS       equ	1126	;# 
  6866   000467                     PWM1GIR         equ	1127	;# 
  6867   000468                     PWM1GIE         equ	1128	;# 
  6868   000469                     PWM1CON         equ	1129	;# 
  6869   00046A                     PWM1S1CFG       equ	1130	;# 
  6870   00046B                     PWM1S1P1        equ	1131	;# 
  6871   00046B                     PWM1S1P1L       equ	1131	;# 
  6872   00046C                     PWM1S1P1H       equ	1132	;# 
  6873   00046D                     PWM1S1P2        equ	1133	;# 
  6874   00046D                     PWM1S1P2L       equ	1133	;# 
  6875   00046E                     PWM1S1P2H       equ	1134	;# 
  6876   00046F                     PWM2ERS         equ	1135	;# 
  6877   000470                     PWM2CLK         equ	1136	;# 
  6878   000471                     PWM2LDS         equ	1137	;# 
  6879   000472                     PWM2PR          equ	1138	;# 
  6880   000472                     PWM2PRL         equ	1138	;# 
  6881   000473                     PWM2PRH         equ	1139	;# 
  6882   000474                     PWM2CPRE        equ	1140	;# 
  6883   000475                     PWM2PIPOS       equ	1141	;# 
  6884   000476                     PWM2GIR         equ	1142	;# 
  6885   000477                     PWM2GIE         equ	1143	;# 
  6886   000478                     PWM2CON         equ	1144	;# 
  6887   000479                     PWM2S1CFG       equ	1145	;# 
  6888   00047A                     PWM2S1P1        equ	1146	;# 
  6889   00047A                     PWM2S1P1L       equ	1146	;# 
  6890   00047B                     PWM2S1P1H       equ	1147	;# 
  6891   00047C                     PWM2S1P2        equ	1148	;# 
  6892   00047C                     PWM2S1P2L       equ	1148	;# 
  6893   00047D                     PWM2S1P2H       equ	1149	;# 
  6894   00047E                     PWM3ERS         equ	1150	;# 
  6895   00047F                     PWM3CLK         equ	1151	;# 
  6896   000480                     PWM3LDS         equ	1152	;# 
  6897   000481                     PWM3PR          equ	1153	;# 
  6898   000481                     PWM3PRL         equ	1153	;# 
  6899   000482                     PWM3PRH         equ	1154	;# 
  6900   000483                     PWM3CPRE        equ	1155	;# 
  6901   000484                     PWM3PIPOS       equ	1156	;# 
  6902   000485                     PWM3GIR         equ	1157	;# 
  6903   000486                     PWM3GIE         equ	1158	;# 
  6904   000487                     PWM3CON         equ	1159	;# 
  6905   000488                     PWM3S1CFG       equ	1160	;# 
  6906   000489                     PWM3S1P1        equ	1161	;# 
  6907   000489                     PWM3S1P1L       equ	1161	;# 
  6908   00048A                     PWM3S1P1H       equ	1162	;# 
  6909   00048B                     PWM3S1P2        equ	1163	;# 
  6910   00048B                     PWM3S1P2L       equ	1163	;# 
  6911   00048C                     PWM3S1P2H       equ	1164	;# 
  6912   00049C                     PWMLOAD         equ	1180	;# 
  6913   00049D                     PWMEN           equ	1181	;# 
  6914   00049E                     PIE0            equ	1182	;# 
  6915   00049F                     PIE1            equ	1183	;# 
  6916   0004A0                     PIE2            equ	1184	;# 
  6917   0004A1                     PIE3            equ	1185	;# 
  6918   0004A2                     PIE4            equ	1186	;# 
  6919   0004A3                     PIE5            equ	1187	;# 
  6920   0004A4                     PIE6            equ	1188	;# 
  6921   0004A5                     PIE7            equ	1189	;# 
  6922   0004A6                     PIE8            equ	1190	;# 
  6923   0004A7                     PIE9            equ	1191	;# 
  6924   0004A8                     PIE10           equ	1192	;# 
  6925   0004A9                     PIE11           equ	1193	;# 
  6926   0004AA                     PIE12           equ	1194	;# 
  6927   0004AB                     PIE13           equ	1195	;# 
  6928   0004AC                     PIE14           equ	1196	;# 
  6929   0004AD                     PIE15           equ	1197	;# 
  6930   0004AE                     PIR0            equ	1198	;# 
  6931   0004AF                     PIR1            equ	1199	;# 
  6932   0004B0                     PIR2            equ	1200	;# 
  6933   0004B1                     PIR3            equ	1201	;# 
  6934   0004B2                     PIR4            equ	1202	;# 
  6935   0004B3                     PIR5            equ	1203	;# 
  6936   0004B4                     PIR6            equ	1204	;# 
  6937   0004B5                     PIR7            equ	1205	;# 
  6938   0004B6                     PIR8            equ	1206	;# 
  6939   0004B7                     PIR9            equ	1207	;# 
  6940   0004B8                     PIR10           equ	1208	;# 
  6941   0004B9                     PIR11           equ	1209	;# 
  6942   0004BA                     PIR12           equ	1210	;# 
  6943   0004BB                     PIR13           equ	1211	;# 
  6944   0004BC                     PIR14           equ	1212	;# 
  6945   0004BD                     PIR15           equ	1213	;# 
  6946   0004BE                     LATA            equ	1214	;# 
  6947   0004BF                     LATB            equ	1215	;# 
  6948   0004C0                     LATC            equ	1216	;# 
  6949   0004C1                     LATD            equ	1217	;# 
  6950   0004C2                     LATE            equ	1218	;# 
  6951   0004C3                     LATF            equ	1219	;# 
  6952   0004C6                     TRISA           equ	1222	;# 
  6953   0004C7                     TRISB           equ	1223	;# 
  6954   0004C8                     TRISC           equ	1224	;# 
  6955   0004C9                     TRISD           equ	1225	;# 
  6956   0004CA                     TRISE           equ	1226	;# 
  6957   0004CB                     TRISF           equ	1227	;# 
  6958   0004CE                     PORTA           equ	1230	;# 
  6959   0004CF                     PORTB           equ	1231	;# 
  6960   0004D0                     PORTC           equ	1232	;# 
  6961   0004D1                     PORTD           equ	1233	;# 
  6962   0004D2                     PORTE           equ	1234	;# 
  6963   0004D3                     PORTF           equ	1235	;# 
  6964   0004D6                     INTCON0         equ	1238	;# 
  6965   0004D7                     INTCON1         equ	1239	;# 
  6966   0004D8                     STATUS          equ	1240	;# 
  6967   0004D9                     FSR2            equ	1241	;# 
  6968   0004D9                     FSR2L           equ	1241	;# 
  6969   0004DA                     FSR2H           equ	1242	;# 
  6970   0004DB                     PLUSW2          equ	1243	;# 
  6971   0004DC                     PREINC2         equ	1244	;# 
  6972   0004DD                     POSTDEC2        equ	1245	;# 
  6973   0004DE                     POSTINC2        equ	1246	;# 
  6974   0004DF                     INDF2           equ	1247	;# 
  6975   0004E0                     BSR             equ	1248	;# 
  6976   0004E1                     FSR1            equ	1249	;# 
  6977   0004E1                     FSR1L           equ	1249	;# 
  6978   0004E2                     FSR1H           equ	1250	;# 
  6979   0004E3                     PLUSW1          equ	1251	;# 
  6980   0004E4                     PREINC1         equ	1252	;# 
  6981   0004E5                     POSTDEC1        equ	1253	;# 
  6982   0004E6                     POSTINC1        equ	1254	;# 
  6983   0004E7                     INDF1           equ	1255	;# 
  6984   0004E8                     WREG            equ	1256	;# 
  6985   0004E9                     FSR0            equ	1257	;# 
  6986   0004E9                     FSR0L           equ	1257	;# 
  6987   0004EA                     FSR0H           equ	1258	;# 
  6988   0004EB                     PLUSW0          equ	1259	;# 
  6989   0004EC                     PREINC0         equ	1260	;# 
  6990   0004ED                     POSTDEC0        equ	1261	;# 
  6991   0004EE                     POSTINC0        equ	1262	;# 
  6992   0004EF                     INDF0           equ	1263	;# 
  6993   0004F0                     PCON0           equ	1264	;# 
  6994   0004F1                     PCON1           equ	1265	;# 
  6995   0004F2                     CPUDOZE         equ	1266	;# 
  6996   0004F3                     PROD            equ	1267	;# 
  6997   0004F3                     PRODL           equ	1267	;# 
  6998   0004F4                     PRODH           equ	1268	;# 
  6999   0004F5                     TABLAT          equ	1269	;# 
  7000   0004F6                     TBLPTR          equ	1270	;# 
  7001   0004F6                     TBLPTRL         equ	1270	;# 
  7002   0004F7                     TBLPTRH         equ	1271	;# 
  7003   0004F8                     TBLPTRU         equ	1272	;# 
  7004   0004F9                     PCLAT           equ	1273	;# 
  7005   0004F9                     PCL             equ	1273	;# 
  7006   0004FA                     PCLATH          equ	1274	;# 
  7007   0004FB                     PCLATU          equ	1275	;# 
  7008   0004FC                     STKPTR          equ	1276	;# 
  7009   0004FD                     TOS             equ	1277	;# 
  7010   0004FD                     TOSL            equ	1277	;# 
  7011   0004FE                     TOSH            equ	1278	;# 
  7012   0004FF                     TOSU            equ	1279	;# 
  7013   000039                     CLKRCON         equ	57	;# 
  7014   00003A                     CLKRCLK         equ	58	;# 
  7015   000040                     NVMCON0         equ	64	;# 
  7016   000041                     NVMCON1         equ	65	;# 
  7017   000042                     NVMLOCK         equ	66	;# 
  7018   000043                     NVMADR          equ	67	;# 
  7019   000043                     NVMADRL         equ	67	;# 
  7020   000044                     NVMADRH         equ	68	;# 
  7021   000045                     NVMADRU         equ	69	;# 
  7022   000046                     NVMDAT          equ	70	;# 
  7023   000046                     NVMDATL         equ	70	;# 
  7024   000047                     NVMDATH         equ	71	;# 
  7025   000048                     VREGCON         equ	72	;# 
  7026   000049                     BORCON          equ	73	;# 
  7027   00004A                     HLVDCON0        equ	74	;# 
  7028   00004B                     HLVDCON1        equ	75	;# 
  7029   00004C                     ZCDCON          equ	76	;# 
  7030   000060                     PMD0            equ	96	;# 
  7031   000061                     PMD1            equ	97	;# 
  7032   000063                     PMD3            equ	99	;# 
  7033   000064                     PMD4            equ	100	;# 
  7034   000065                     PMD5            equ	101	;# 
  7035   000066                     PMD6            equ	102	;# 
  7036   000067                     PMD7            equ	103	;# 
  7037   000068                     PMD8            equ	104	;# 
  7038   00006A                     MD1CON0         equ	106	;# 
  7039   00006B                     MD1CON1         equ	107	;# 
  7040   00006C                     MD1SRC          equ	108	;# 
  7041   00006D                     MD1CARL         equ	109	;# 
  7042   00006E                     MD1CARH         equ	110	;# 
  7043   00006F                     CMOUT           equ	111	;# 
  7044   000070                     CM1CON0         equ	112	;# 
  7045   000071                     CM1CON1         equ	113	;# 
  7046   000072                     CM1NCH          equ	114	;# 
  7047   000073                     CM1PCH          equ	115	;# 
  7048   000074                     CM2CON0         equ	116	;# 
  7049   000075                     CM2CON1         equ	117	;# 
  7050   000076                     CM2NCH          equ	118	;# 
  7051   000077                     CM2PCH          equ	119	;# 
  7052   000078                     WDTCON0         equ	120	;# 
  7053   000079                     WDTCON1         equ	121	;# 
  7054   00007A                     WDTPS           equ	122	;# 
  7055   00007A                     WDTPSL          equ	122	;# 
  7056   00007B                     WDTPSH          equ	123	;# 
  7057   00007C                     WDTTMR          equ	124	;# 
  7058   00007D                     DAC1DAT         equ	125	;# 
  7059   00007D                     DAC1DATL        equ	125	;# 
  7060   00007F                     DAC1CON         equ	127	;# 
  7061   000080                     SPI1RXB         equ	128	;# 
  7062   000081                     SPI1TXB         equ	129	;# 
  7063   000082                     SPI1TCNT        equ	130	;# 
  7064   000082                     SPI1TCNTL       equ	130	;# 
  7065   000083                     SPI1TCNTH       equ	131	;# 
  7066   000084                     SPI1CON0        equ	132	;# 
  7067   000085                     SPI1CON1        equ	133	;# 
  7068   000086                     SPI1CON2        equ	134	;# 
  7069   000087                     SPI1STATUS      equ	135	;# 
  7070   000088                     SPI1TWIDTH      equ	136	;# 
  7071   000089                     SPI1BAUD        equ	137	;# 
  7072   00008A                     SPI1INTF        equ	138	;# 
  7073   00008B                     SPI1INTE        equ	139	;# 
  7074   00008C                     SPI1CLK         equ	140	;# 
  7075   00008D                     SPI2RXB         equ	141	;# 
  7076   00008E                     SPI2TXB         equ	142	;# 
  7077   00008F                     SPI2TCNT        equ	143	;# 
  7078   00008F                     SPI2TCNTL       equ	143	;# 
  7079   000090                     SPI2TCNTH       equ	144	;# 
  7080   000091                     SPI2CON0        equ	145	;# 
  7081   000092                     SPI2CON1        equ	146	;# 
  7082   000093                     SPI2CON2        equ	147	;# 
  7083   000094                     SPI2STATUS      equ	148	;# 
  7084   000095                     SPI2TWIDTH      equ	149	;# 
  7085   000096                     SPI2BAUD        equ	150	;# 
  7086   000097                     SPI2INTF        equ	151	;# 
  7087   000098                     SPI2INTE        equ	152	;# 
  7088   000099                     SPI2CLK         equ	153	;# 
  7089   0000AC                     ACTCON          equ	172	;# 
  7090   0000AD                     OSCCON1         equ	173	;# 
  7091   0000AE                     OSCCON2         equ	174	;# 
  7092   0000AF                     OSCCON3         equ	175	;# 
  7093   0000B0                     OSCTUNE         equ	176	;# 
  7094   0000B1                     OSCFRQ          equ	177	;# 
  7095   0000B1                     OSCFREQ         equ	177	;# 
  7096   0000B2                     OSCSTAT         equ	178	;# 
  7097   0000B2                     OSCSTAT1        equ	178	;# 
  7098   0000B3                     OSCEN           equ	179	;# 
  7099   0000B4                     PRLOCK          equ	180	;# 
  7100   0000B5                     SCANPR          equ	181	;# 
  7101   0000B6                     DMA1PR          equ	182	;# 
  7102   0000B7                     DMA2PR          equ	183	;# 
  7103   0000B8                     DMA3PR          equ	184	;# 
  7104   0000B9                     DMA4PR          equ	185	;# 
  7105   0000BA                     DMA5PR          equ	186	;# 
  7106   0000BB                     DMA6PR          equ	187	;# 
  7107   0000BE                     MAINPR          equ	190	;# 
  7108   0000BF                     ISRPR           equ	191	;# 
  7109   0000D4                     CLCDATA         equ	212	;# 
  7110   0000D5                     CLCSELECT       equ	213	;# 
  7111   0000D6                     CLCnCON         equ	214	;# 
  7112   0000D7                     CLCnPOL         equ	215	;# 
  7113   0000D8                     CLCnSEL0        equ	216	;# 
  7114   0000D9                     CLCnSEL1        equ	217	;# 
  7115   0000DA                     CLCnSEL2        equ	218	;# 
  7116   0000DB                     CLCnSEL3        equ	219	;# 
  7117   0000DC                     CLCnGLS0        equ	220	;# 
  7118   0000DD                     CLCnGLS1        equ	221	;# 
  7119   0000DE                     CLCnGLS2        equ	222	;# 
  7120   0000DF                     CLCnGLS3        equ	223	;# 
  7121   0000E8                     DMASELECT       equ	232	;# 
  7122   0000E9                     DMAnBUF         equ	233	;# 
  7123   0000EA                     DMAnDCNT        equ	234	;# 
  7124   0000EA                     DMAnDCNTL       equ	234	;# 
  7125   0000EB                     DMAnDCNTH       equ	235	;# 
  7126   0000EC                     DMAnDPTR        equ	236	;# 
  7127   0000EC                     DMAnDPTRL       equ	236	;# 
  7128   0000ED                     DMAnDPTRH       equ	237	;# 
  7129   0000EE                     DMAnDSZ         equ	238	;# 
  7130   0000EE                     DMAnDSZL        equ	238	;# 
  7131   0000EF                     DMAnDSZH        equ	239	;# 
  7132   0000F0                     DMAnDSA         equ	240	;# 
  7133   0000F0                     DMAnDSAL        equ	240	;# 
  7134   0000F1                     DMAnDSAH        equ	241	;# 
  7135   0000F2                     DMAnSCNT        equ	242	;# 
  7136   0000F2                     DMAnSCNTL       equ	242	;# 
  7137   0000F3                     DMAnSCNTH       equ	243	;# 
  7138   0000F4                     DMAnSPTR        equ	244	;# 
  7139   0000F4                     DMAnSPTRL       equ	244	;# 
  7140   0000F5                     DMAnSPTRH       equ	245	;# 
  7141   0000F6                     DMAnSPTRU       equ	246	;# 
  7142   0000F7                     DMAnSSZ         equ	247	;# 
  7143   0000F7                     DMAnSSZL        equ	247	;# 
  7144   0000F8                     DMAnSSZH        equ	248	;# 
  7145   0000F9                     DMAnSSA         equ	249	;# 
  7146   0000F9                     DMAnSSAL        equ	249	;# 
  7147   0000FA                     DMAnSSAH        equ	250	;# 
  7148   0000FB                     DMAnSSAU        equ	251	;# 
  7149   0000FC                     DMAnCON0        equ	252	;# 
  7150   0000FD                     DMAnCON1        equ	253	;# 
  7151   0000FE                     DMAnAIRQ        equ	254	;# 
  7152   0000FF                     DMAnSIRQ        equ	255	;# 
  7153   000200                     PPSLOCK         equ	512	;# 
  7154   000201                     RA0PPS          equ	513	;# 
  7155   000202                     RA1PPS          equ	514	;# 
  7156   000203                     RA2PPS          equ	515	;# 
  7157   000204                     RA3PPS          equ	516	;# 
  7158   000205                     RA4PPS          equ	517	;# 
  7159   000206                     RA5PPS          equ	518	;# 
  7160   000207                     RA6PPS          equ	519	;# 
  7161   000208                     RA7PPS          equ	520	;# 
  7162   000209                     RB0PPS          equ	521	;# 
  7163   00020A                     RB1PPS          equ	522	;# 
  7164   00020B                     RB2PPS          equ	523	;# 
  7165   00020C                     RB3PPS          equ	524	;# 
  7166   00020D                     RB4PPS          equ	525	;# 
  7167   00020E                     RB5PPS          equ	526	;# 
  7168   00020F                     RB6PPS          equ	527	;# 
  7169   000210                     RB7PPS          equ	528	;# 
  7170   000211                     RC0PPS          equ	529	;# 
  7171   000212                     RC1PPS          equ	530	;# 
  7172   000213                     RC2PPS          equ	531	;# 
  7173   000214                     RC3PPS          equ	532	;# 
  7174   000215                     RC4PPS          equ	533	;# 
  7175   000216                     RC5PPS          equ	534	;# 
  7176   000217                     RC6PPS          equ	535	;# 
  7177   000218                     RC7PPS          equ	536	;# 
  7178   000219                     RD0PPS          equ	537	;# 
  7179   00021A                     RD1PPS          equ	538	;# 
  7180   00021B                     RD2PPS          equ	539	;# 
  7181   00021C                     RD3PPS          equ	540	;# 
  7182   00021D                     RD4PPS          equ	541	;# 
  7183   00021E                     RD5PPS          equ	542	;# 
  7184   00021F                     RD6PPS          equ	543	;# 
  7185   000220                     RD7PPS          equ	544	;# 
  7186   000221                     RE0PPS          equ	545	;# 
  7187   000222                     RE1PPS          equ	546	;# 
  7188   000223                     RE2PPS          equ	547	;# 
  7189   000229                     RF0PPS          equ	553	;# 
  7190   00022A                     RF1PPS          equ	554	;# 
  7191   00022B                     RF2PPS          equ	555	;# 
  7192   00022C                     RF3PPS          equ	556	;# 
  7193   00022D                     RF4PPS          equ	557	;# 
  7194   00022E                     RF5PPS          equ	558	;# 
  7195   00022F                     RF6PPS          equ	559	;# 
  7196   000230                     RF7PPS          equ	560	;# 
  7197   00023E                     INT0PPS         equ	574	;# 
  7198   00023F                     INT1PPS         equ	575	;# 
  7199   000240                     INT2PPS         equ	576	;# 
  7200   000241                     T0CKIPPS        equ	577	;# 
  7201   000242                     T1CKIPPS        equ	578	;# 
  7202   000243                     T1GPPS          equ	579	;# 
  7203   000244                     T3CKIPPS        equ	580	;# 
  7204   000245                     T3GPPS          equ	581	;# 
  7205   000246                     T5CKIPPS        equ	582	;# 
  7206   000247                     T5GPPS          equ	583	;# 
  7207   000248                     T2INPPS         equ	584	;# 
  7208   000249                     T4INPPS         equ	585	;# 
  7209   00024A                     T6INPPS         equ	586	;# 
  7210   00024F                     CCP1PPS         equ	591	;# 
  7211   000250                     CCP2PPS         equ	592	;# 
  7212   000251                     CCP3PPS         equ	593	;# 
  7213   000253                     PWM1ERSPPS      equ	595	;# 
  7214   000254                     PWM2ERSPPS      equ	596	;# 
  7215   000255                     PWM3ERSPPS      equ	597	;# 
  7216   000257                     PWMIN0PPS       equ	599	;# 
  7217   000258                     PWMIN1PPS       equ	600	;# 
  7218   000259                     SMT1WINPPS      equ	601	;# 
  7219   00025A                     SMT1SIGPPS      equ	602	;# 
  7220   00025B                     CWG1PPS         equ	603	;# 
  7221   00025B                     CWG1INPPS       equ	603	;# 
  7222   00025C                     CWG2PPS         equ	604	;# 
  7223   00025C                     CWG2INPPS       equ	604	;# 
  7224   00025D                     CWG3PPS         equ	605	;# 
  7225   00025D                     CWG3INPPS       equ	605	;# 
  7226   00025E                     MD1CARLPPS      equ	606	;# 
  7227   00025E                     MDCARLPPS       equ	606	;# 
  7228   00025F                     MD1CARHPPS      equ	607	;# 
  7229   00025F                     MDCARHPPS       equ	607	;# 
  7230   000260                     MD1SRCPPS       equ	608	;# 
  7231   000260                     MDSRCPPS        equ	608	;# 
  7232   000261                     CLCIN0PPS       equ	609	;# 
  7233   000262                     CLCIN1PPS       equ	610	;# 
  7234   000263                     CLCIN2PPS       equ	611	;# 
  7235   000264                     CLCIN3PPS       equ	612	;# 
  7236   000265                     CLCIN4PPS       equ	613	;# 
  7237   000266                     CLCIN5PPS       equ	614	;# 
  7238   000267                     CLCIN6PPS       equ	615	;# 
  7239   000268                     CLCIN7PPS       equ	616	;# 
  7240   000269                     ADACTPPS        equ	617	;# 
  7241   00026A                     SPI1SCKPPS      equ	618	;# 
  7242   00026B                     SPI1SDIPPS      equ	619	;# 
  7243   00026C                     SPI1SSPPS       equ	620	;# 
  7244   00026D                     SPI2SCKPPS      equ	621	;# 
  7245   00026E                     SPI2SDIPPS      equ	622	;# 
  7246   00026F                     SPI2SSPPS       equ	623	;# 
  7247   000270                     I2C1SDAPPS      equ	624	;# 
  7248   000271                     I2C1SCLPPS      equ	625	;# 
  7249   000272                     U1RXPPS         equ	626	;# 
  7250   000273                     U1CTSPPS        equ	627	;# 
  7251   000274                     U2RXPPS         equ	628	;# 
  7252   000275                     U2CTSPPS        equ	629	;# 
  7253   000276                     U3RXPPS         equ	630	;# 
  7254   000277                     U3CTSPPS        equ	631	;# 
  7255   000278                     U4RXPPS         equ	632	;# 
  7256   000279                     U4CTSPPS        equ	633	;# 
  7257   00027A                     U5RXPPS         equ	634	;# 
  7258   00027B                     U5CTSPPS        equ	635	;# 
  7259   000286                     RC4I2C          equ	646	;# 
  7260   000287                     RC3I2C          equ	647	;# 
  7261   000288                     RB2I2C          equ	648	;# 
  7262   000289                     RB1I2C          equ	649	;# 
  7263   00028B                     I2C1RXB         equ	651	;# 
  7264   00028C                     I2C1TXB         equ	652	;# 
  7265   00028D                     I2C1CNT         equ	653	;# 
  7266   00028E                     I2C1ADB0        equ	654	;# 
  7267   00028F                     I2C1ADB1        equ	655	;# 
  7268   000290                     I2C1ADR0        equ	656	;# 
  7269   000291                     I2C1ADR1        equ	657	;# 
  7270   000292                     I2C1ADR2        equ	658	;# 
  7271   000293                     I2C1ADR3        equ	659	;# 
  7272   000294                     I2C1CON0        equ	660	;# 
  7273   000295                     I2C1CON1        equ	661	;# 
  7274   000296                     I2C1CON2        equ	662	;# 
  7275   000297                     I2C1ERR         equ	663	;# 
  7276   000298                     I2C1STAT0       equ	664	;# 
  7277   000299                     I2C1STAT1       equ	665	;# 
  7278   00029A                     I2C1PIR         equ	666	;# 
  7279   00029B                     I2C1PIE         equ	667	;# 
  7280   00029C                     I2C1CLK         equ	668	;# 
  7281   00029D                     I2C1BTO         equ	669	;# 
  7282   0002A1                     U1RXB           equ	673	;# 
  7283   0002A1                     U1RXBL          equ	673	;# 
  7284   0002A2                     U1RXCHK         equ	674	;# 
  7285   0002A3                     U1TXB           equ	675	;# 
  7286   0002A3                     U1TXBL          equ	675	;# 
  7287   0002A4                     U1TXCHK         equ	676	;# 
  7288   0002A5                     U1P1            equ	677	;# 
  7289   0002A5                     U1P1L           equ	677	;# 
  7290   0002A6                     U1P1H           equ	678	;# 
  7291   0002A7                     U1P2            equ	679	;# 
  7292   0002A7                     U1P2L           equ	679	;# 
  7293   0002A8                     U1P2H           equ	680	;# 
  7294   0002A9                     U1P3            equ	681	;# 
  7295   0002A9                     U1P3L           equ	681	;# 
  7296   0002AA                     U1P3H           equ	682	;# 
  7297   0002AB                     U1CON0          equ	683	;# 
  7298   0002AC                     U1CON1          equ	684	;# 
  7299   0002AD                     U1CON2          equ	685	;# 
  7300   0002AE                     U1BRG           equ	686	;# 
  7301   0002AE                     U1BRGL          equ	686	;# 
  7302   0002AF                     U1BRGH          equ	687	;# 
  7303   0002B0                     U1FIFO          equ	688	;# 
  7304   0002B1                     U1UIR           equ	689	;# 
  7305   0002B2                     U1ERRIR         equ	690	;# 
  7306   0002B3                     U1ERRIE         equ	691	;# 
  7307   0002B4                     U2RXB           equ	692	;# 
  7308   0002B4                     U2RXBL          equ	692	;# 
  7309   0002B6                     U2TXB           equ	694	;# 
  7310   0002B6                     U2TXBL          equ	694	;# 
  7311   0002B8                     U2P1            equ	696	;# 
  7312   0002B8                     U2P1L           equ	696	;# 
  7313   0002BA                     U2P2            equ	698	;# 
  7314   0002BA                     U2P2L           equ	698	;# 
  7315   0002BC                     U2P3            equ	700	;# 
  7316   0002BC                     U2P3L           equ	700	;# 
  7317   0002BE                     U2CON0          equ	702	;# 
  7318   0002BF                     U2CON1          equ	703	;# 
  7319   0002C0                     U2CON2          equ	704	;# 
  7320   0002C1                     U2BRG           equ	705	;# 
  7321   0002C1                     U2BRGL          equ	705	;# 
  7322   0002C2                     U2BRGH          equ	706	;# 
  7323   0002C3                     U2FIFO          equ	707	;# 
  7324   0002C4                     U2UIR           equ	708	;# 
  7325   0002C5                     U2ERRIR         equ	709	;# 
  7326   0002C6                     U2ERRIE         equ	710	;# 
  7327   0002C7                     U3RXB           equ	711	;# 
  7328   0002C7                     U3RXBL          equ	711	;# 
  7329   0002C9                     U3TXB           equ	713	;# 
  7330   0002C9                     U3TXBL          equ	713	;# 
  7331   0002CB                     U3P1            equ	715	;# 
  7332   0002CB                     U3P1L           equ	715	;# 
  7333   0002CD                     U3P2            equ	717	;# 
  7334   0002CD                     U3P2L           equ	717	;# 
  7335   0002CF                     U3P3            equ	719	;# 
  7336   0002CF                     U3P3L           equ	719	;# 
  7337   0002D1                     U3CON0          equ	721	;# 
  7338   0002D2                     U3CON1          equ	722	;# 
  7339   0002D3                     U3CON2          equ	723	;# 
  7340   0002D4                     U3BRG           equ	724	;# 
  7341   0002D4                     U3BRGL          equ	724	;# 
  7342   0002D5                     U3BRGH          equ	725	;# 
  7343   0002D6                     U3FIFO          equ	726	;# 
  7344   0002D7                     U3UIR           equ	727	;# 
  7345   0002D8                     U3ERRIR         equ	728	;# 
  7346   0002D9                     U3ERRIE         equ	729	;# 
  7347   0002DA                     U4RXB           equ	730	;# 
  7348   0002DA                     U4RXBL          equ	730	;# 
  7349   0002DC                     U4TXB           equ	732	;# 
  7350   0002DC                     U4TXBL          equ	732	;# 
  7351   0002DE                     U4P1            equ	734	;# 
  7352   0002DE                     U4P1L           equ	734	;# 
  7353   0002E0                     U4P2            equ	736	;# 
  7354   0002E0                     U4P2L           equ	736	;# 
  7355   0002E2                     U4P3            equ	738	;# 
  7356   0002E2                     U4P3L           equ	738	;# 
  7357   0002E4                     U4CON0          equ	740	;# 
  7358   0002E5                     U4CON1          equ	741	;# 
  7359   0002E6                     U4CON2          equ	742	;# 
  7360   0002E7                     U4BRG           equ	743	;# 
  7361   0002E7                     U4BRGL          equ	743	;# 
  7362   0002E8                     U4BRGH          equ	744	;# 
  7363   0002E9                     U4FIFO          equ	745	;# 
  7364   0002EA                     U4UIR           equ	746	;# 
  7365   0002EB                     U4ERRIR         equ	747	;# 
  7366   0002EC                     U4ERRIE         equ	748	;# 
  7367   0002ED                     U5RXB           equ	749	;# 
  7368   0002ED                     U5RXBL          equ	749	;# 
  7369   0002EF                     U5TXB           equ	751	;# 
  7370   0002EF                     U5TXBL          equ	751	;# 
  7371   0002F1                     U5P1            equ	753	;# 
  7372   0002F1                     U5P1L           equ	753	;# 
  7373   0002F3                     U5P2            equ	755	;# 
  7374   0002F3                     U5P2L           equ	755	;# 
  7375   0002F5                     U5P3            equ	757	;# 
  7376   0002F5                     U5P3L           equ	757	;# 
  7377   0002F7                     U5CON0          equ	759	;# 
  7378   0002F8                     U5CON1          equ	760	;# 
  7379   0002F9                     U5CON2          equ	761	;# 
  7380   0002FA                     U5BRG           equ	762	;# 
  7381   0002FA                     U5BRGL          equ	762	;# 
  7382   0002FB                     U5BRGH          equ	763	;# 
  7383   0002FC                     U5FIFO          equ	764	;# 
  7384   0002FD                     U5UIR           equ	765	;# 
  7385   0002FE                     U5ERRIR         equ	766	;# 
  7386   0002FF                     U5ERRIE         equ	767	;# 
  7387   000300                     SMT1TMR         equ	768	;# 
  7388   000300                     SMT1TMRL        equ	768	;# 
  7389   000301                     SMT1TMRH        equ	769	;# 
  7390   000302                     SMT1TMRU        equ	770	;# 
  7391   000303                     SMT1CPR         equ	771	;# 
  7392   000303                     SMT1CPRL        equ	771	;# 
  7393   000304                     SMT1CPRH        equ	772	;# 
  7394   000305                     SMT1CPRU        equ	773	;# 
  7395   000306                     SMT1CPW         equ	774	;# 
  7396   000306                     SMT1CPWL        equ	774	;# 
  7397   000307                     SMT1CPWH        equ	775	;# 
  7398   000308                     SMT1CPWU        equ	776	;# 
  7399   000309                     SMT1PR          equ	777	;# 
  7400   000309                     SMT1PRL         equ	777	;# 
  7401   00030A                     SMT1PRH         equ	778	;# 
  7402   00030B                     SMT1PRU         equ	779	;# 
  7403   00030C                     SMT1CON0        equ	780	;# 
  7404   00030D                     SMT1CON1        equ	781	;# 
  7405   00030E                     SMT1STAT        equ	782	;# 
  7406   00030F                     SMT1CLK         equ	783	;# 
  7407   000310                     SMT1SIG         equ	784	;# 
  7408   000311                     SMT1WIN         equ	785	;# 
  7409   000318                     TMR0L           equ	792	;# 
  7410   000318                     TMR0            equ	792	;# 
  7411   000319                     TMR0H           equ	793	;# 
  7412   000319                     PR0             equ	793	;# 
  7413   00031A                     T0CON0          equ	794	;# 
  7414   00031B                     T0CON1          equ	795	;# 
  7415   00031C                     TMR1            equ	796	;# 
  7416   00031C                     TMR1L           equ	796	;# 
  7417   00031D                     TMR1H           equ	797	;# 
  7418   00031E                     T1CON           equ	798	;# 
  7419   00031E                     TMR1CON         equ	798	;# 
  7420   00031F                     T1GCON          equ	799	;# 
  7421   00031F                     TMR1GCON        equ	799	;# 
  7422   000320                     T1GATE          equ	800	;# 
  7423   000320                     TMR1GATE        equ	800	;# 
  7424   000321                     T1CLK           equ	801	;# 
  7425   000321                     TMR1CLK         equ	801	;# 
  7426   000321                     PR1             equ	801	;# 
  7427   000322                     T2TMR           equ	802	;# 
  7428   000322                     TMR2            equ	802	;# 
  7429   000323                     T2PR            equ	803	;# 
  7430   000323                     PR2             equ	803	;# 
  7431   000324                     T2CON           equ	804	;# 
  7432   000325                     T2HLT           equ	805	;# 
  7433   000326                     T2CLKCON        equ	806	;# 
  7434   000326                     T2CLK           equ	806	;# 
  7435   000327                     T2RST           equ	807	;# 
  7436   000328                     TMR3            equ	808	;# 
  7437   000328                     TMR3L           equ	808	;# 
  7438   000329                     TMR3H           equ	809	;# 
  7439   00032A                     T3CON           equ	810	;# 
  7440   00032A                     TMR3CON         equ	810	;# 
  7441   00032B                     T3GCON          equ	811	;# 
  7442   00032B                     TMR3GCON        equ	811	;# 
  7443   00032C                     T3GATE          equ	812	;# 
  7444   00032C                     TMR3GATE        equ	812	;# 
  7445   00032D                     T3CLK           equ	813	;# 
  7446   00032D                     TMR3CLK         equ	813	;# 
  7447   00032D                     PR3             equ	813	;# 
  7448   00032E                     T4TMR           equ	814	;# 
  7449   00032E                     TMR4            equ	814	;# 
  7450   00032F                     T4PR            equ	815	;# 
  7451   00032F                     PR4             equ	815	;# 
  7452   000330                     T4CON           equ	816	;# 
  7453   000331                     T4HLT           equ	817	;# 
  7454   000332                     T4CLKCON        equ	818	;# 
  7455   000332                     T4CLK           equ	818	;# 
  7456   000333                     T4RST           equ	819	;# 
  7457   000334                     TMR5            equ	820	;# 
  7458   000334                     TMR5L           equ	820	;# 
  7459   000335                     TMR5H           equ	821	;# 
  7460   000336                     T5CON           equ	822	;# 
  7461   000336                     TMR5CON         equ	822	;# 
  7462   000337                     T5GCON          equ	823	;# 
  7463   000337                     TMR5GCON        equ	823	;# 
  7464   000338                     T5GATE          equ	824	;# 
  7465   000338                     TMR5GATE        equ	824	;# 
  7466   000339                     T5CLK           equ	825	;# 
  7467   000339                     TMR5CLK         equ	825	;# 
  7468   000339                     PR5             equ	825	;# 
  7469   00033A                     T6TMR           equ	826	;# 
  7470   00033A                     TMR6            equ	826	;# 
  7471   00033B                     T6PR            equ	827	;# 
  7472   00033B                     PR6             equ	827	;# 
  7473   00033C                     T6CON           equ	828	;# 
  7474   00033D                     T6HLT           equ	829	;# 
  7475   00033E                     T6CLKCON        equ	830	;# 
  7476   00033E                     T6CLK           equ	830	;# 
  7477   00033F                     T6RST           equ	831	;# 
  7478   000340                     CCPR1           equ	832	;# 
  7479   000340                     CCPR1L          equ	832	;# 
  7480   000341                     CCPR1H          equ	833	;# 
  7481   000342                     CCP1CON         equ	834	;# 
  7482   000343                     CCP1CAP         equ	835	;# 
  7483   000344                     CCPR2           equ	836	;# 
  7484   000344                     CCPR2L          equ	836	;# 
  7485   000345                     CCPR2H          equ	837	;# 
  7486   000346                     CCP2CON         equ	838	;# 
  7487   000347                     CCP2CAP         equ	839	;# 
  7488   000348                     CCPR3           equ	840	;# 
  7489   000348                     CCPR3L          equ	840	;# 
  7490   000349                     CCPR3H          equ	841	;# 
  7491   00034A                     CCP3CON         equ	842	;# 
  7492   00034B                     CCP3CAP         equ	843	;# 
  7493   00034C                     CCPTMRS0        equ	844	;# 
  7494   00034F                     CRCDATA         equ	847	;# 
  7495   00034F                     CRCDATL         equ	847	;# 
  7496   000350                     CRCDATH         equ	848	;# 
  7497   000351                     CRCACC          equ	849	;# 
  7498   000351                     CRCACCL         equ	849	;# 
  7499   000352                     CRCACCH         equ	850	;# 
  7500   000353                     CRCSHFT         equ	851	;# 
  7501   000353                     CRCSHIFTL       equ	851	;# 
  7502   000354                     CRCSHIFTH       equ	852	;# 
  7503   000355                     CRCXOR          equ	853	;# 
  7504   000355                     CRCXORL         equ	853	;# 
  7505   000356                     CRCXORH         equ	854	;# 
  7506   000357                     CRCCON0         equ	855	;# 
  7507   000358                     CRCCON1         equ	856	;# 
  7508   00035A                     SCANLADR        equ	858	;# 
  7509   00035A                     SCANLADRL       equ	858	;# 
  7510   00035B                     SCANLADRH       equ	859	;# 
  7511   00035C                     SCANLADRU       equ	860	;# 
  7512   00035D                     SCANHADR        equ	861	;# 
  7513   00035D                     SCANHADRL       equ	861	;# 
  7514   00035E                     SCANHADRH       equ	862	;# 
  7515   00035F                     SCANHADRU       equ	863	;# 
  7516   000360                     SCANCON0        equ	864	;# 
  7517   000361                     SCANTRIG        equ	865	;# 
  7518   000362                     IPR0            equ	866	;# 
  7519   000363                     IPR1            equ	867	;# 
  7520   000364                     IPR2            equ	868	;# 
  7521   000365                     IPR3            equ	869	;# 
  7522   000366                     IPR4            equ	870	;# 
  7523   000367                     IPR5            equ	871	;# 
  7524   000368                     IPR6            equ	872	;# 
  7525   000369                     IPR7            equ	873	;# 
  7526   00036A                     IPR8            equ	874	;# 
  7527   00036B                     IPR9            equ	875	;# 
  7528   00036C                     IPR10           equ	876	;# 
  7529   00036D                     IPR11           equ	877	;# 
  7530   00036E                     IPR12           equ	878	;# 
  7531   00036F                     IPR13           equ	879	;# 
  7532   000370                     IPR14           equ	880	;# 
  7533   000371                     IPR15           equ	881	;# 
  7534   000373                     STATUS_CSHAD    equ	883	;# 
  7535   000374                     WREG_CSHAD      equ	884	;# 
  7536   000375                     BSR_CSHAD       equ	885	;# 
  7537   000376                     SHADCON         equ	886	;# 
  7538   000377                     STATUS_SHAD     equ	887	;# 
  7539   000378                     WREG_SHAD       equ	888	;# 
  7540   000379                     BSR_SHAD        equ	889	;# 
  7541   00037A                     PCLATH_SHAD     equ	890	;# 
  7542   00037B                     PCLATU_SHAD     equ	891	;# 
  7543   00037C                     FSR0SH          equ	892	;# 
  7544   00037C                     FSR0L_SHAD      equ	892	;# 
  7545   00037D                     FSR0H_SHAD      equ	893	;# 
  7546   00037E                     FSR1SH          equ	894	;# 
  7547   00037E                     FSR1L_SHAD      equ	894	;# 
  7548   00037F                     FSR1H_SHAD      equ	895	;# 
  7549   000380                     FSR2SH          equ	896	;# 
  7550   000380                     FSR2L_SHAD      equ	896	;# 
  7551   000381                     FSR2H_SHAD      equ	897	;# 
  7552   000382                     PRODSH          equ	898	;# 
  7553   000382                     PRODL_SHAD      equ	898	;# 
  7554   000383                     PRODH_SHAD      equ	899	;# 
  7555   0003BC                     CWG1CLK         equ	956	;# 
  7556   0003BC                     CWG1CLKCON      equ	956	;# 
  7557   0003BD                     CWG1ISM         equ	957	;# 
  7558   0003BD                     CWG1DAT         equ	957	;# 
  7559   0003BE                     CWG1DBR         equ	958	;# 
  7560   0003BF                     CWG1DBF         equ	959	;# 
  7561   0003C0                     CWG1CON0        equ	960	;# 
  7562   0003C1                     CWG1CON1        equ	961	;# 
  7563   0003C2                     CWG1AS0         equ	962	;# 
  7564   0003C3                     CWG1AS1         equ	963	;# 
  7565   0003C4                     CWG1STR         equ	964	;# 
  7566   0003C5                     CWG2CLK         equ	965	;# 
  7567   0003C5                     CWG2CLKCON      equ	965	;# 
  7568   0003C6                     CWG2ISM         equ	966	;# 
  7569   0003C6                     CWG2DAT         equ	966	;# 
  7570   0003C7                     CWG2DBR         equ	967	;# 
  7571   0003C8                     CWG2DBF         equ	968	;# 
  7572   0003C9                     CWG2CON0        equ	969	;# 
  7573   0003CA                     CWG2CON1        equ	970	;# 
  7574   0003CB                     CWG2AS0         equ	971	;# 
  7575   0003CC                     CWG2AS1         equ	972	;# 
  7576   0003CD                     CWG2STR         equ	973	;# 
  7577   0003CE                     CWG3CLK         equ	974	;# 
  7578   0003CE                     CWG3CLKCON      equ	974	;# 
  7579   0003CF                     CWG3ISM         equ	975	;# 
  7580   0003CF                     CWG3DAT         equ	975	;# 
  7581   0003D0                     CWG3DBR         equ	976	;# 
  7582   0003D1                     CWG3DBF         equ	977	;# 
  7583   0003D2                     CWG3CON0        equ	978	;# 
  7584   0003D3                     CWG3CON1        equ	979	;# 
  7585   0003D4                     CWG3AS0         equ	980	;# 
  7586   0003D5                     CWG3AS1         equ	981	;# 
  7587   0003D6                     CWG3STR         equ	982	;# 
  7588   0003D7                     FVRCON          equ	983	;# 
  7589   0003D8                     ADCPCON         equ	984	;# 
  7590   0003D8                     ADCP            equ	984	;# 
  7591   0003D9                     ADLTH           equ	985	;# 
  7592   0003D9                     ADLTHL          equ	985	;# 
  7593   0003DA                     ADLTHH          equ	986	;# 
  7594   0003DB                     ADUTH           equ	987	;# 
  7595   0003DB                     ADUTHL          equ	987	;# 
  7596   0003DC                     ADUTHH          equ	988	;# 
  7597   0003DD                     ADERR           equ	989	;# 
  7598   0003DD                     ADERRL          equ	989	;# 
  7599   0003DE                     ADERRH          equ	990	;# 
  7600   0003DF                     ADSTPT          equ	991	;# 
  7601   0003DF                     ADSTPTL         equ	991	;# 
  7602   0003E0                     ADSTPTH         equ	992	;# 
  7603   0003E1                     ADFLTR          equ	993	;# 
  7604   0003E1                     ADFLTRL         equ	993	;# 
  7605   0003E2                     ADFLTRH         equ	994	;# 
  7606   0003E3                     ADACC           equ	995	;# 
  7607   0003E3                     ADACCL          equ	995	;# 
  7608   0003E4                     ADACCH          equ	996	;# 
  7609   0003E5                     ADACCU          equ	997	;# 
  7610   0003E6                     ADCNT           equ	998	;# 
  7611   0003E7                     ADRPT           equ	999	;# 
  7612   0003E8                     ADPREV          equ	1000	;# 
  7613   0003E8                     ADPREVL         equ	1000	;# 
  7614   0003E9                     ADPREVH         equ	1001	;# 
  7615   0003EA                     ADRES           equ	1002	;# 
  7616   0003EA                     ADRESL          equ	1002	;# 
  7617   0003EB                     ADRESH          equ	1003	;# 
  7618   0003EC                     ADPCH           equ	1004	;# 
  7619   0003EE                     ADACQ           equ	1006	;# 
  7620   0003EE                     ADACQL          equ	1006	;# 
  7621   0003EF                     ADACQH          equ	1007	;# 
  7622   0003F0                     ADCAP           equ	1008	;# 
  7623   0003F1                     ADPRE           equ	1009	;# 
  7624   0003F1                     ADPREL          equ	1009	;# 
  7625   0003F2                     ADPREH          equ	1010	;# 
  7626   0003F3                     ADCON0          equ	1011	;# 
  7627   0003F4                     ADCON1          equ	1012	;# 
  7628   0003F5                     ADCON2          equ	1013	;# 
  7629   0003F6                     ADCON3          equ	1014	;# 
  7630   0003F7                     ADSTAT          equ	1015	;# 
  7631   0003F8                     ADREF           equ	1016	;# 
  7632   0003F9                     ADACT           equ	1017	;# 
  7633   0003FA                     ADCLK           equ	1018	;# 
  7634   000400                     ANSELA          equ	1024	;# 
  7635   000401                     WPUA            equ	1025	;# 
  7636   000402                     ODCONA          equ	1026	;# 
  7637   000403                     SLRCONA         equ	1027	;# 
  7638   000404                     INLVLA          equ	1028	;# 
  7639   000405                     IOCAP           equ	1029	;# 
  7640   000406                     IOCAN           equ	1030	;# 
  7641   000407                     IOCAF           equ	1031	;# 
  7642   000408                     ANSELB          equ	1032	;# 
  7643   000409                     WPUB            equ	1033	;# 
  7644   00040A                     ODCONB          equ	1034	;# 
  7645   00040B                     SLRCONB         equ	1035	;# 
  7646   00040C                     INLVLB          equ	1036	;# 
  7647   00040D                     IOCBP           equ	1037	;# 
  7648   00040E                     IOCBN           equ	1038	;# 
  7649   00040F                     IOCBF           equ	1039	;# 
  7650   000410                     ANSELC          equ	1040	;# 
  7651   000411                     WPUC            equ	1041	;# 
  7652   000412                     ODCONC          equ	1042	;# 
  7653   000413                     SLRCONC         equ	1043	;# 
  7654   000414                     INLVLC          equ	1044	;# 
  7655   000415                     IOCCP           equ	1045	;# 
  7656   000416                     IOCCN           equ	1046	;# 
  7657   000417                     IOCCF           equ	1047	;# 
  7658   000418                     ANSELD          equ	1048	;# 
  7659   000419                     WPUD            equ	1049	;# 
  7660   00041A                     ODCOND          equ	1050	;# 
  7661   00041B                     SLRCOND         equ	1051	;# 
  7662   00041C                     INLVLD          equ	1052	;# 
  7663   000420                     ANSELE          equ	1056	;# 
  7664   000421                     WPUE            equ	1057	;# 
  7665   000422                     ODCONE          equ	1058	;# 
  7666   000423                     SLRCONE         equ	1059	;# 
  7667   000424                     INLVLE          equ	1060	;# 
  7668   000425                     IOCEP           equ	1061	;# 
  7669   000426                     IOCEN           equ	1062	;# 
  7670   000427                     IOCEF           equ	1063	;# 
  7671   000428                     ANSELF          equ	1064	;# 
  7672   000429                     WPUF            equ	1065	;# 
  7673   00042A                     ODCONF          equ	1066	;# 
  7674   00042B                     SLRCONF         equ	1067	;# 
  7675   00042C                     INLVLF          equ	1068	;# 
  7676   000440                     NCO1ACC         equ	1088	;# 
  7677   000440                     NCO1ACCL        equ	1088	;# 
  7678   000441                     NCO1ACCH        equ	1089	;# 
  7679   000442                     NCO1ACCU        equ	1090	;# 
  7680   000443                     NCO1INC         equ	1091	;# 
  7681   000443                     NCO1INCL        equ	1091	;# 
  7682   000444                     NCO1INCH        equ	1092	;# 
  7683   000445                     NCO1INCU        equ	1093	;# 
  7684   000446                     NCO1CON         equ	1094	;# 
  7685   000447                     NCO1CLK         equ	1095	;# 
  7686   000448                     NCO2ACC         equ	1096	;# 
  7687   000448                     NCO2ACCL        equ	1096	;# 
  7688   000449                     NCO2ACCH        equ	1097	;# 
  7689   00044A                     NCO2ACCU        equ	1098	;# 
  7690   00044B                     NCO2INC         equ	1099	;# 
  7691   00044B                     NCO2INCL        equ	1099	;# 
  7692   00044C                     NCO2INCH        equ	1100	;# 
  7693   00044D                     NCO2INCU        equ	1101	;# 
  7694   00044E                     NCO2CON         equ	1102	;# 
  7695   00044F                     NCO2CLK         equ	1103	;# 
  7696   000450                     NCO3ACC         equ	1104	;# 
  7697   000450                     NCO3ACCL        equ	1104	;# 
  7698   000451                     NCO3ACCH        equ	1105	;# 
  7699   000452                     NCO3ACCU        equ	1106	;# 
  7700   000453                     NCO3INC         equ	1107	;# 
  7701   000453                     NCO3INCL        equ	1107	;# 
  7702   000454                     NCO3INCH        equ	1108	;# 
  7703   000455                     NCO3INCU        equ	1109	;# 
  7704   000456                     NCO3CON         equ	1110	;# 
  7705   000457                     NCO3CLK         equ	1111	;# 
  7706   000459                     IVTLOCK         equ	1113	;# 
  7707   00045A                     IVTAD           equ	1114	;# 
  7708   00045A                     IVTADL          equ	1114	;# 
  7709   00045B                     IVTADH          equ	1115	;# 
  7710   00045C                     IVTADU          equ	1116	;# 
  7711   00045D                     IVTBASE         equ	1117	;# 
  7712   00045D                     IVTBASEL        equ	1117	;# 
  7713   00045E                     IVTBASEH        equ	1118	;# 
  7714   00045F                     IVTBASEU        equ	1119	;# 
  7715   000460                     PWM1ERS         equ	1120	;# 
  7716   000461                     PWM1CLK         equ	1121	;# 
  7717   000462                     PWM1LDS         equ	1122	;# 
  7718   000463                     PWM1PR          equ	1123	;# 
  7719   000463                     PWM1PRL         equ	1123	;# 
  7720   000464                     PWM1PRH         equ	1124	;# 
  7721   000465                     PWM1CPRE        equ	1125	;# 
  7722   000466                     PWM1PIPOS       equ	1126	;# 
  7723   000467                     PWM1GIR         equ	1127	;# 
  7724   000468                     PWM1GIE         equ	1128	;# 
  7725   000469                     PWM1CON         equ	1129	;# 
  7726   00046A                     PWM1S1CFG       equ	1130	;# 
  7727   00046B                     PWM1S1P1        equ	1131	;# 
  7728   00046B                     PWM1S1P1L       equ	1131	;# 
  7729   00046C                     PWM1S1P1H       equ	1132	;# 
  7730   00046D                     PWM1S1P2        equ	1133	;# 
  7731   00046D                     PWM1S1P2L       equ	1133	;# 
  7732   00046E                     PWM1S1P2H       equ	1134	;# 
  7733   00046F                     PWM2ERS         equ	1135	;# 
  7734   000470                     PWM2CLK         equ	1136	;# 
  7735   000471                     PWM2LDS         equ	1137	;# 
  7736   000472                     PWM2PR          equ	1138	;# 
  7737   000472                     PWM2PRL         equ	1138	;# 
  7738   000473                     PWM2PRH         equ	1139	;# 
  7739   000474                     PWM2CPRE        equ	1140	;# 
  7740   000475                     PWM2PIPOS       equ	1141	;# 
  7741   000476                     PWM2GIR         equ	1142	;# 
  7742   000477                     PWM2GIE         equ	1143	;# 
  7743   000478                     PWM2CON         equ	1144	;# 
  7744   000479                     PWM2S1CFG       equ	1145	;# 
  7745   00047A                     PWM2S1P1        equ	1146	;# 
  7746   00047A                     PWM2S1P1L       equ	1146	;# 
  7747   00047B                     PWM2S1P1H       equ	1147	;# 
  7748   00047C                     PWM2S1P2        equ	1148	;# 
  7749   00047C                     PWM2S1P2L       equ	1148	;# 
  7750   00047D                     PWM2S1P2H       equ	1149	;# 
  7751   00047E                     PWM3ERS         equ	1150	;# 
  7752   00047F                     PWM3CLK         equ	1151	;# 
  7753   000480                     PWM3LDS         equ	1152	;# 
  7754   000481                     PWM3PR          equ	1153	;# 
  7755   000481                     PWM3PRL         equ	1153	;# 
  7756   000482                     PWM3PRH         equ	1154	;# 
  7757   000483                     PWM3CPRE        equ	1155	;# 
  7758   000484                     PWM3PIPOS       equ	1156	;# 
  7759   000485                     PWM3GIR         equ	1157	;# 
  7760   000486                     PWM3GIE         equ	1158	;# 
  7761   000487                     PWM3CON         equ	1159	;# 
  7762   000488                     PWM3S1CFG       equ	1160	;# 
  7763   000489                     PWM3S1P1        equ	1161	;# 
  7764   000489                     PWM3S1P1L       equ	1161	;# 
  7765   00048A                     PWM3S1P1H       equ	1162	;# 
  7766   00048B                     PWM3S1P2        equ	1163	;# 
  7767   00048B                     PWM3S1P2L       equ	1163	;# 
  7768   00048C                     PWM3S1P2H       equ	1164	;# 
  7769   00049C                     PWMLOAD         equ	1180	;# 
  7770   00049D                     PWMEN           equ	1181	;# 
  7771   00049E                     PIE0            equ	1182	;# 
  7772   00049F                     PIE1            equ	1183	;# 
  7773   0004A0                     PIE2            equ	1184	;# 
  7774   0004A1                     PIE3            equ	1185	;# 
  7775   0004A2                     PIE4            equ	1186	;# 
  7776   0004A3                     PIE5            equ	1187	;# 
  7777   0004A4                     PIE6            equ	1188	;# 
  7778   0004A5                     PIE7            equ	1189	;# 
  7779   0004A6                     PIE8            equ	1190	;# 
  7780   0004A7                     PIE9            equ	1191	;# 
  7781   0004A8                     PIE10           equ	1192	;# 
  7782   0004A9                     PIE11           equ	1193	;# 
  7783   0004AA                     PIE12           equ	1194	;# 
  7784   0004AB                     PIE13           equ	1195	;# 
  7785   0004AC                     PIE14           equ	1196	;# 
  7786   0004AD                     PIE15           equ	1197	;# 
  7787   0004AE                     PIR0            equ	1198	;# 
  7788   0004AF                     PIR1            equ	1199	;# 
  7789   0004B0                     PIR2            equ	1200	;# 
  7790   0004B1                     PIR3            equ	1201	;# 
  7791   0004B2                     PIR4            equ	1202	;# 
  7792   0004B3                     PIR5            equ	1203	;# 
  7793   0004B4                     PIR6            equ	1204	;# 
  7794   0004B5                     PIR7            equ	1205	;# 
  7795   0004B6                     PIR8            equ	1206	;# 
  7796   0004B7                     PIR9            equ	1207	;# 
  7797   0004B8                     PIR10           equ	1208	;# 
  7798   0004B9                     PIR11           equ	1209	;# 
  7799   0004BA                     PIR12           equ	1210	;# 
  7800   0004BB                     PIR13           equ	1211	;# 
  7801   0004BC                     PIR14           equ	1212	;# 
  7802   0004BD                     PIR15           equ	1213	;# 
  7803   0004BE                     LATA            equ	1214	;# 
  7804   0004BF                     LATB            equ	1215	;# 
  7805   0004C0                     LATC            equ	1216	;# 
  7806   0004C1                     LATD            equ	1217	;# 
  7807   0004C2                     LATE            equ	1218	;# 
  7808   0004C3                     LATF            equ	1219	;# 
  7809   0004C6                     TRISA           equ	1222	;# 
  7810   0004C7                     TRISB           equ	1223	;# 
  7811   0004C8                     TRISC           equ	1224	;# 
  7812   0004C9                     TRISD           equ	1225	;# 
  7813   0004CA                     TRISE           equ	1226	;# 
  7814   0004CB                     TRISF           equ	1227	;# 
  7815   0004CE                     PORTA           equ	1230	;# 
  7816   0004CF                     PORTB           equ	1231	;# 
  7817   0004D0                     PORTC           equ	1232	;# 
  7818   0004D1                     PORTD           equ	1233	;# 
  7819   0004D2                     PORTE           equ	1234	;# 
  7820   0004D3                     PORTF           equ	1235	;# 
  7821   0004D6                     INTCON0         equ	1238	;# 
  7822   0004D7                     INTCON1         equ	1239	;# 
  7823   0004D8                     STATUS          equ	1240	;# 
  7824   0004D9                     FSR2            equ	1241	;# 
  7825   0004D9                     FSR2L           equ	1241	;# 
  7826   0004DA                     FSR2H           equ	1242	;# 
  7827   0004DB                     PLUSW2          equ	1243	;# 
  7828   0004DC                     PREINC2         equ	1244	;# 
  7829   0004DD                     POSTDEC2        equ	1245	;# 
  7830   0004DE                     POSTINC2        equ	1246	;# 
  7831   0004DF                     INDF2           equ	1247	;# 
  7832   0004E0                     BSR             equ	1248	;# 
  7833   0004E1                     FSR1            equ	1249	;# 
  7834   0004E1                     FSR1L           equ	1249	;# 
  7835   0004E2                     FSR1H           equ	1250	;# 
  7836   0004E3                     PLUSW1          equ	1251	;# 
  7837   0004E4                     PREINC1         equ	1252	;# 
  7838   0004E5                     POSTDEC1        equ	1253	;# 
  7839   0004E6                     POSTINC1        equ	1254	;# 
  7840   0004E7                     INDF1           equ	1255	;# 
  7841   0004E8                     WREG            equ	1256	;# 
  7842   0004E9                     FSR0            equ	1257	;# 
  7843   0004E9                     FSR0L           equ	1257	;# 
  7844   0004EA                     FSR0H           equ	1258	;# 
  7845   0004EB                     PLUSW0          equ	1259	;# 
  7846   0004EC                     PREINC0         equ	1260	;# 
  7847   0004ED                     POSTDEC0        equ	1261	;# 
  7848   0004EE                     POSTINC0        equ	1262	;# 
  7849   0004EF                     INDF0           equ	1263	;# 
  7850   0004F0                     PCON0           equ	1264	;# 
  7851   0004F1                     PCON1           equ	1265	;# 
  7852   0004F2                     CPUDOZE         equ	1266	;# 
  7853   0004F3                     PROD            equ	1267	;# 
  7854   0004F3                     PRODL           equ	1267	;# 
  7855   0004F4                     PRODH           equ	1268	;# 
  7856   0004F5                     TABLAT          equ	1269	;# 
  7857   0004F6                     TBLPTR          equ	1270	;# 
  7858   0004F6                     TBLPTRL         equ	1270	;# 
  7859   0004F7                     TBLPTRH         equ	1271	;# 
  7860   0004F8                     TBLPTRU         equ	1272	;# 
  7861   0004F9                     PCLAT           equ	1273	;# 
  7862   0004F9                     PCL             equ	1273	;# 
  7863   0004FA                     PCLATH          equ	1274	;# 
  7864   0004FB                     PCLATU          equ	1275	;# 
  7865   0004FC                     STKPTR          equ	1276	;# 
  7866   0004FD                     TOS             equ	1277	;# 
  7867   0004FD                     TOSL            equ	1277	;# 
  7868   0004FE                     TOSH            equ	1278	;# 
  7869   0004FF                     TOSU            equ	1279	;# 
  7870                           
  7871 ;; Function _SPI1_Deinitialize is unused but had its address taken
  7872   000000                     _SPI1_Deinitialize equ	0
  7873                           
  7874 ;; Function _SPI1_Close is unused but had its address taken
  7875   000000                     _SPI1_Close     equ	0
  7876                           
  7877 ;; Function _SPI1_BufferExchange is unused but had its address taken
  7878   000000                     _SPI1_BufferExchange equ	0
  7879                           
  7880 ;; Function _SPI1_BufferWrite is unused but had its address taken
  7881   000000                     _SPI1_BufferWrite equ	0
  7882                           
  7883 ;; Function _SPI1_BufferRead is unused but had its address taken
  7884   000000                     _SPI1_BufferRead equ	0
  7885                           
  7886 ;; Function _SPI1_ByteWrite is unused but had its address taken
  7887   000000                     _SPI1_ByteWrite equ	0
  7888                           
  7889 ;; Function _SPI1_ByteRead is unused but had its address taken
  7890   000000                     _SPI1_ByteRead  equ	0
  7891                           
  7892 ;; Function _SPI1_IsTxReady is unused but had its address taken
  7893   000000                     _SPI1_IsTxReady equ	0
  7894                           
  7895 ;; Function _SPI1_IsRxReady is unused but had its address taken
  7896   000000                     _SPI1_IsRxReady equ	0
  7897                           
  7898 ;; Function _INT0_DefaultInterruptHandler is unused but had its address taken
  7899   000000                     _INT0_DefaultInterruptHandler equ	0
  7900                           
  7901 ;; Function _INT1_DefaultInterruptHandler is unused but had its address taken
  7902   000000                     _INT1_DefaultInterruptHandler equ	0
  7903                           
  7904 ;; Function _INT2_DefaultInterruptHandler is unused but had its address taken
  7905   000000                     _INT2_DefaultInterruptHandler equ	0
  7906                           
  7907 ;; Function _TMR0_Stop is unused but had its address taken
  7908   000000                     _TMR0_Stop      equ	0
  7909                           
  7910 ;; Function _TMR0_Reload is unused but had its address taken
  7911   000000                     _TMR0_Reload    equ	0
  7912                           
  7913                           	psect	idataBANK5
  7914   011626                     __pidataBANK5:
  7915                           	callstack 0
  7916                           
  7917                           ;initializer for sender@F17890
  7918   011626  63                 	db	99
  7919   011627  6F                 	db	111
  7920   011628  77                 	db	119
  7921   011629  61                 	db	97
  7922   01162A  62                 	db	98
  7923   01162B  75                 	db	117
  7924   01162C  6E                 	db	110
  7925   01162D  67                 	db	103
  7926   01162E  61                 	db	97
  7927   01162F  20                 	db	32
  7928   011630  6D                 	db	109
  7929   011631  66                 	db	102
  7930   011632  65                 	db	101
  7931   011633  72                 	db	114
  7932   011634  73                 	db	115
  7933   011635  73                 	db	115
  7934   011636  73                 	db	115
  7935   011637  2E                 	db	46
  7936   011638  00                 	db	0
  7937   011639  00                 	db	0
  7938   01163A  00                 	db	0
  7939   01163B  00                 	db	0
  7940   01163C  00                 	db	0
  7941   01163D  00                 	db	0
  7942   01163E  00                 	db	0
  7943   01163F  00                 	db	0
  7944   011640  00                 	db	0
  7945   011641  00                 	db	0
  7946   011642  00                 	db	0
  7947   011643  00                 	db	0
  7948   011644  00                 	db	0
  7949   011645  00                 	db	0
  7950                           
  7951                           ;initializer for _rf24_datarates
  7952   011646  31                 	db	49
  7953   011647  4D                 	db	77
  7954   011648  62                 	db	98
  7955   011649  70                 	db	112
  7956   01164A  73                 	db	115
  7957   01164B  00                 	db	0
  7958   01164C  00                 	db	0
  7959   01164D  00                 	db	0
  7960   01164E  32                 	db	50
  7961   01164F  4D                 	db	77
  7962   011650  62                 	db	98
  7963   011651  70                 	db	112
  7964   011652  73                 	db	115
  7965   011653  00                 	db	0
  7966   011654  00                 	db	0
  7967   011655  00                 	db	0
  7968   011656  32                 	db	50
  7969   011657  35                 	db	53
  7970   011658  30                 	db	48
  7971   011659  4B                 	db	75
  7972   01165A  62                 	db	98
  7973   01165B  70                 	db	112
  7974   01165C  73                 	db	115
  7975   01165D  00                 	db	0
  7976                           
  7977                           	psect	idataBANK6
  7978   01194C                     __pidataBANK6:
  7979                           	callstack 0
  7980                           
  7981                           ;initializer for _rf24_pa_dbm
  7982   01194C  50                 	db	80
  7983   01194D  41                 	db	65
  7984   01194E  5F                 	db	95
  7985   01194F  4D                 	db	77
  7986   011950  49                 	db	73
  7987   011951  4E                 	db	78
  7988   011952  00                 	db	0
  7989   011953  00                 	db	0
  7990   011954  50                 	db	80
  7991   011955  41                 	db	65
  7992   011956  5F                 	db	95
  7993   011957  4C                 	db	76
  7994   011958  4F                 	db	79
  7995   011959  57                 	db	87
  7996   01195A  00                 	db	0
  7997   01195B  00                 	db	0
  7998   01195C  50                 	db	80
  7999   01195D  41                 	db	65
  8000   01195E  5F                 	db	95
  8001   01195F  48                 	db	72
  8002   011960  49                 	db	73
  8003   011961  47                 	db	71
  8004   011962  48                 	db	72
  8005   011963  00                 	db	0
  8006   011964  50                 	db	80
  8007   011965  41                 	db	65
  8008   011966  5F                 	db	95
  8009   011967  4D                 	db	77
  8010   011968  41                 	db	65
  8011   011969  58                 	db	88
  8012   01196A  00                 	db	0
  8013   01196B  00                 	db	0
  8014                           
  8015                           	psect	mediumconst
  8016   00FE4E                     __pmediumconst:
  8017                           	callstack 0
  8018   00FE4E  00                 	db	0
  8019   00FE4F                     _SPI1_nrf24:
  8020                           	callstack 0
  8021   00FE4F  BA                 	db	low _SPI1_Initialize
  8022   00FE50  19                 	db	high _SPI1_Initialize
  8023   00FE51  01                 	db	low (_SPI1_Initialize shr (0+16))
  8024   00FE52  00                 	db	0
  8025   00FE53  00                 	db	0
  8026   00FE54  00                 	db	0
  8027   00FE55  06                 	db	low _SPI1_Open
  8028   00FE56  0B                 	db	high _SPI1_Open
  8029   00FE57  01                 	db	low (_SPI1_Open shr (0+16))
  8030   00FE58  00                 	db	0
  8031   00FE59  00                 	db	0
  8032   00FE5A  00                 	db	0
  8033   00FE5B  00                 	db	0
  8034   00FE5C  00                 	db	0
  8035   00FE5D  00                 	db	0
  8036   00FE5E  00                 	db	0
  8037   00FE5F  00                 	db	0
  8038   00FE60  00                 	db	0
  8039   00FE61  00                 	db	0
  8040   00FE62  00                 	db	0
  8041   00FE63  00                 	db	0
  8042   00FE64  42                 	db	low _SPI1_ByteExchange
  8043   00FE65  18                 	db	high _SPI1_ByteExchange
  8044   00FE66  01                 	db	low (_SPI1_ByteExchange shr (0+16))
  8045   00FE67  00                 	db	0
  8046   00FE68  00                 	db	0
  8047   00FE69  00                 	db	0
  8048   00FE6A  00                 	db	0
  8049   00FE6B  00                 	db	0
  8050   00FE6C  00                 	db	0
  8051   00FE6D  00                 	db	0
  8052   00FE6E  00                 	db	0
  8053   00FE6F  00                 	db	0
  8054   00FE70  00                 	db	0
  8055   00FE71  00                 	db	0
  8056   00FE72  00                 	db	0
  8057   00FE73  00                 	db	0
  8058   00FE74  00                 	db	0
  8059   00FE75  00                 	db	0
  8060   00FE76  00                 	db	0
  8061   00FE77  00                 	db	0
  8062   00FE78  00                 	db	0
  8063   00FE79                     __end_of_SPI1_nrf24:
  8064                           	callstack 0
  8065   00FE79                     _Timer0:
  8066                           	callstack 0
  8067   00FE79  6E                 	db	low _TMR0_Initialize
  8068   00FE7A  18                 	db	high _TMR0_Initialize
  8069   00FE7B  01                 	db	low (_TMR0_Initialize shr (0+16))
  8070   00FE7C  56                 	db	low _TMR0_Start
  8071   00FE7D  1A                 	db	high _TMR0_Start
  8072   00FE7E  01                 	db	low (_TMR0_Start shr (0+16))
  8073   00FE7F  00                 	db	0
  8074   00FE80  00                 	db	0
  8075   00FE81  00                 	db	0
  8076   00FE82  00                 	db	0
  8077   00FE83  00                 	db	0
  8078   00FE84  00                 	db	0
  8079   00FE85  12                 	db	low _TMR0_OverflowCallbackRegister
  8080   00FE86  1A                 	db	high _TMR0_OverflowCallbackRegister
  8081   00FE87  01                 	db	low (_TMR0_OverflowCallbackRegister shr (0+16))
  8082   00FE88  00                 	db	0
  8083   00FE89  00                 	db	0
  8084   00FE8A  00                 	db	0
  8085   00FE8B                     __end_of_Timer0:
  8086                           	callstack 0
  8087   00FE8B                     _spi1_configuration:
  8088                           	callstack 0
  8089   00FE8B  02                 	db	2
  8090   00FE8C  C0                 	db	192
  8091   00FE8D  00                 	db	0
  8092   00FE8E  FF                 	db	255
  8093   00FE8F  00                 	db	0
  8094   00FE90  02                 	db	2
  8095   00FE91  C0                 	db	192
  8096   00FE92  00                 	db	0
  8097   00FE93  FF                 	db	255
  8098   00FE94  00                 	db	0
  8099   00FE95  02                 	db	2
  8100   00FE96  40                 	db	64
  8101   00FE97  00                 	db	0
  8102   00FE98  00                 	db	0
  8103   00FE99  00                 	db	0
  8104   00FE9A                     __end_of_spi1_configuration:
  8105                           	callstack 0
  8106   00FE9A                     _rf24_crclength:
  8107                           	callstack 0
  8108   00FE9A  44                 	db	68
  8109   00FE9B  69                 	db	105
  8110   00FE9C  73                 	db	115
  8111   00FE9D  61                 	db	97
  8112   00FE9E  62                 	db	98
  8113   00FE9F  6C                 	db	108
  8114   00FEA0  65                 	db	101
  8115   00FEA1  64                 	db	100
  8116   00FEA2  00                 	db	0
  8117   00FEA3  00                 	db	0
  8118   00FEA4  38                 	db	56
  8119   00FEA5  20                 	db	32
  8120   00FEA6  62                 	db	98
  8121   00FEA7  69                 	db	105
  8122   00FEA8  74                 	db	116
  8123   00FEA9  73                 	db	115
  8124   00FEAA  00                 	db	0
  8125   00FEAB  00                 	db	0
  8126   00FEAC  00                 	db	0
  8127   00FEAD  00                 	db	0
  8128   00FEAE  31                 	db	49
  8129   00FEAF  36                 	db	54
  8130   00FEB0  20                 	db	32
  8131   00FEB1  62                 	db	98
  8132   00FEB2  69                 	db	105
  8133   00FEB3  74                 	db	116
  8134   00FEB4  73                 	db	115
  8135   00FEB5  00                 	db	0
  8136   00FEB6  00                 	db	0
  8137   00FEB7  00                 	db	0
  8138   00FEB8                     __end_of_rf24_crclength:
  8139                           	callstack 0
  8140   00FEB8                     STR_17:
  8141   00FEB8  53                 	db	83	;'S'
  8142   00FEB9  54                 	db	84	;'T'
  8143   00FEBA  41                 	db	65	;'A'
  8144   00FEBB  54                 	db	84	;'T'
  8145   00FEBC  55                 	db	85	;'U'
  8146   00FEBD  53                 	db	83	;'S'
  8147   00FEBE  09                 	db	9
  8148   00FEBF  09                 	db	9
  8149   00FEC0  20                 	db	32
  8150   00FEC1  3D                 	db	61	;'='
  8151   00FEC2  20                 	db	32
  8152   00FEC3  30                 	db	48	;'0'
  8153   00FEC4  78                 	db	120	;'x'
  8154   00FEC5  25                 	db	37
  8155   00FEC6  30                 	db	48	;'0'
  8156   00FEC7  32                 	db	50	;'2'
  8157   00FEC8  78                 	db	120	;'x'
  8158   00FEC9  20                 	db	32
  8159   00FECA  52                 	db	82	;'R'
  8160   00FECB  58                 	db	88	;'X'
  8161   00FECC  5F                 	db	95	;'_'
  8162   00FECD  44                 	db	68	;'D'
  8163   00FECE  52                 	db	82	;'R'
  8164   00FECF  3D                 	db	61	;'='
  8165   00FED0  25                 	db	37
  8166   00FED1  78                 	db	120	;'x'
  8167   00FED2  20                 	db	32
  8168   00FED3  54                 	db	84	;'T'
  8169   00FED4  58                 	db	88	;'X'
  8170   00FED5  5F                 	db	95	;'_'
  8171   00FED6  44                 	db	68	;'D'
  8172   00FED7  53                 	db	83	;'S'
  8173   00FED8  3D                 	db	61	;'='
  8174   00FED9  25                 	db	37
  8175   00FEDA  78                 	db	120	;'x'
  8176   00FEDB  20                 	db	32
  8177   00FEDC  4D                 	db	77	;'M'
  8178   00FEDD  41                 	db	65	;'A'
  8179   00FEDE  58                 	db	88	;'X'
  8180   00FEDF  5F                 	db	95	;'_'
  8181   00FEE0  52                 	db	82	;'R'
  8182   00FEE1  54                 	db	84	;'T'
  8183   00FEE2  3D                 	db	61	;'='
  8184   00FEE3  25                 	db	37
  8185   00FEE4  78                 	db	120	;'x'
  8186   00FEE5  20                 	db	32
  8187   00FEE6  52                 	db	82	;'R'
  8188   00FEE7  58                 	db	88	;'X'
  8189   00FEE8  5F                 	db	95	;'_'
  8190   00FEE9  50                 	db	80	;'P'
  8191   00FEEA  5F                 	db	95	;'_'
  8192   00FEEB  4E                 	db	78	;'N'
  8193   00FEEC  4F                 	db	79	;'O'
  8194   00FEED  3D                 	db	61	;'='
  8195   00FEEE  25                 	db	37
  8196   00FEEF  78                 	db	120	;'x'
  8197   00FEF0  20                 	db	32
  8198   00FEF1  54                 	db	84	;'T'
  8199   00FEF2  58                 	db	88	;'X'
  8200   00FEF3  5F                 	db	95	;'_'
  8201   00FEF4  46                 	db	70	;'F'
  8202   00FEF5  55                 	db	85	;'U'
  8203   00FEF6  4C                 	db	76	;'L'
  8204   00FEF7  4C                 	db	76	;'L'
  8205   00FEF8  3D                 	db	61	;'='
  8206   00FEF9  25                 	db	37
  8207   00FEFA  78                 	db	120	;'x'
  8208   00FEFB  0D                 	db	13
  8209   00FEFC  0A                 	db	10
  8210   00FEFD  00                 	db	0
  8211   00FEFE                     STR_2:
  8212   00FEFE  3D                 	db	61	;'='
  8213   00FEFF  3D                 	db	61	;'='
  8214   00FF00  3D                 	db	61	;'='
  8215   00FF01  3D                 	db	61	;'='
  8216   00FF02  3D                 	db	61	;'='
  8217   00FF03  3D                 	db	61	;'='
  8218   00FF04  3D                 	db	61	;'='
  8219   00FF05  3D                 	db	61	;'='
  8220   00FF06  3D                 	db	61	;'='
  8221   00FF07  3D                 	db	61	;'='
  8222   00FF08  3D                 	db	61	;'='
  8223   00FF09  3D                 	db	61	;'='
  8224   00FF0A  3D                 	db	61	;'='
  8225   00FF0B  3D                 	db	61	;'='
  8226   00FF0C  3D                 	db	61	;'='
  8227   00FF0D  3D                 	db	61	;'='
  8228   00FF0E  20                 	db	32
  8229   00FF0F  4E                 	db	78	;'N'
  8230   00FF10  52                 	db	82	;'R'
  8231   00FF11  46                 	db	70	;'F'
  8232   00FF12  20                 	db	32
  8233   00FF13  43                 	db	67	;'C'
  8234   00FF14  6F                 	db	111	;'o'
  8235   00FF15  6E                 	db	110	;'n'
  8236   00FF16  66                 	db	102	;'f'
  8237   00FF17  69                 	db	105	;'i'
  8238   00FF18  67                 	db	103	;'g'
  8239   00FF19  75                 	db	117	;'u'
  8240   00FF1A  72                 	db	114	;'r'
  8241   00FF1B  61                 	db	97	;'a'
  8242   00FF1C  74                 	db	116	;'t'
  8243   00FF1D  69                 	db	105	;'i'
  8244   00FF1E  6F                 	db	111	;'o'
  8245   00FF1F  6E                 	db	110	;'n'
  8246   00FF20  20                 	db	32
  8247   00FF21  3D                 	db	61	;'='
  8248   00FF22  3D                 	db	61	;'='
  8249   00FF23  3D                 	db	61	;'='
  8250   00FF24  3D                 	db	61	;'='
  8251   00FF25  3D                 	db	61	;'='
  8252   00FF26  3D                 	db	61	;'='
  8253   00FF27  3D                 	db	61	;'='
  8254   00FF28  3D                 	db	61	;'='
  8255   00FF29  3D                 	db	61	;'='
  8256   00FF2A  3D                 	db	61	;'='
  8257   00FF2B  3D                 	db	61	;'='
  8258   00FF2C  3D                 	db	61	;'='
  8259   00FF2D  3D                 	db	61	;'='
  8260   00FF2E  3D                 	db	61	;'='
  8261   00FF2F  3D                 	db	61	;'='
  8262   00FF30  3D                 	db	61	;'='
  8263   00FF31  0A                 	db	10
  8264   00FF32  00                 	db	0
  8265   00FF33                     STR_16:
  8266   00FF33  52                 	db	82	;'R'
  8267   00FF34  65                 	db	101	;'e'
  8268   00FF35  74                 	db	116	;'t'
  8269   00FF36  72                 	db	114	;'r'
  8270   00FF37  61                 	db	97	;'a'
  8271   00FF38  6E                 	db	110	;'n'
  8272   00FF39  73                 	db	115	;'s'
  8273   00FF3A  6D                 	db	109	;'m'
  8274   00FF3B  69                 	db	105	;'i'
  8275   00FF3C  74                 	db	116	;'t'
  8276   00FF3D  09                 	db	9
  8277   00FF3E  20                 	db	32
  8278   00FF3F  3D                 	db	61	;'='
  8279   00FF40  20                 	db	32
  8280   00FF41  25                 	db	37
  8281   00FF42  64                 	db	100	;'d'
  8282   00FF43  20                 	db	32
  8283   00FF44  75                 	db	117	;'u'
  8284   00FF45  73                 	db	115	;'s'
  8285   00FF46  0A                 	db	10
  8286   00FF47  00                 	db	0
  8287   00FF48                     STR_14:
  8288   00FF48  43                 	db	67	;'C'
  8289   00FF49  52                 	db	82	;'R'
  8290   00FF4A  43                 	db	67	;'C'
  8291   00FF4B  20                 	db	32
  8292   00FF4C  4C                 	db	76	;'L'
  8293   00FF4D  65                 	db	101	;'e'
  8294   00FF4E  6E                 	db	110	;'n'
  8295   00FF4F  67                 	db	103	;'g'
  8296   00FF50  74                 	db	116	;'t'
  8297   00FF51  68                 	db	104	;'h'
  8298   00FF52  09                 	db	9
  8299   00FF53  20                 	db	32
  8300   00FF54  3D                 	db	61	;'='
  8301   00FF55  20                 	db	32
  8302   00FF56  25                 	db	37
  8303   00FF57  73                 	db	115	;'s'
  8304   00FF58  0A                 	db	10
  8305   00FF59  00                 	db	0
  8306   00FF5A                     STR_13:
  8307   00FF5A  44                 	db	68	;'D'
  8308   00FF5B  61                 	db	97	;'a'
  8309   00FF5C  74                 	db	116	;'t'
  8310   00FF5D  61                 	db	97	;'a'
  8311   00FF5E  20                 	db	32
  8312   00FF5F  52                 	db	82	;'R'
  8313   00FF60  61                 	db	97	;'a'
  8314   00FF61  74                 	db	116	;'t'
  8315   00FF62  65                 	db	101	;'e'
  8316   00FF63  09                 	db	9
  8317   00FF64  20                 	db	32
  8318   00FF65  3D                 	db	61	;'='
  8319   00FF66  20                 	db	32
  8320   00FF67  25                 	db	37
  8321   00FF68  73                 	db	115	;'s'
  8322   00FF69  0A                 	db	10
  8323   00FF6A  00                 	db	0
  8324   00FF6B                     STR_15:
  8325   00FF6B  50                 	db	80	;'P'
  8326   00FF6C  41                 	db	65	;'A'
  8327   00FF6D  20                 	db	32
  8328   00FF6E  50                 	db	80	;'P'
  8329   00FF6F  6F                 	db	111	;'o'
  8330   00FF70  77                 	db	119	;'w'
  8331   00FF71  65                 	db	101	;'e'
  8332   00FF72  72                 	db	114	;'r'
  8333   00FF73  09                 	db	9
  8334   00FF74  20                 	db	32
  8335   00FF75  3D                 	db	61	;'='
  8336   00FF76  20                 	db	32
  8337   00FF77  25                 	db	37
  8338   00FF78  73                 	db	115	;'s'
  8339   00FF79  0A                 	db	10
  8340   00FF7A  00                 	db	0
  8341   00FF7B                     STR_12:
  8342   00FF7B  44                 	db	68	;'D'
  8343   00FF7C  59                 	db	89	;'Y'
  8344   00FF7D  4E                 	db	78	;'N'
  8345   00FF7E  50                 	db	80	;'P'
  8346   00FF7F  44                 	db	68	;'D'
  8347   00FF80  2F                 	db	47
  8348   00FF81  46                 	db	70	;'F'
  8349   00FF82  45                 	db	69	;'E'
  8350   00FF83  41                 	db	65	;'A'
  8351   00FF84  54                 	db	84	;'T'
  8352   00FF85  55                 	db	85	;'U'
  8353   00FF86  52                 	db	82	;'R'
  8354   00FF87  45                 	db	69	;'E'
  8355   00FF88  00                 	db	0
  8356   00FF89                     STR_3:
  8357   00FF89  52                 	db	82	;'R'
  8358   00FF8A  58                 	db	88	;'X'
  8359   00FF8B  5F                 	db	95	;'_'
  8360   00FF8C  41                 	db	65	;'A'
  8361   00FF8D  44                 	db	68	;'D'
  8362   00FF8E  44                 	db	68	;'D'
  8363   00FF8F  52                 	db	82	;'R'
  8364   00FF90  5F                 	db	95	;'_'
  8365   00FF91  50                 	db	80	;'P'
  8366   00FF92  30                 	db	48	;'0'
  8367   00FF93  2D                 	db	45
  8368   00FF94  31                 	db	49	;'1'
  8369   00FF95  00                 	db	0
  8370   00FF96                     STR_4:
  8371   00FF96  52                 	db	82	;'R'
  8372   00FF97  58                 	db	88	;'X'
  8373   00FF98  5F                 	db	95	;'_'
  8374   00FF99  41                 	db	65	;'A'
  8375   00FF9A  44                 	db	68	;'D'
  8376   00FF9B  44                 	db	68	;'D'
  8377   00FF9C  52                 	db	82	;'R'
  8378   00FF9D  5F                 	db	95	;'_'
  8379   00FF9E  50                 	db	80	;'P'
  8380   00FF9F  32                 	db	50	;'2'
  8381   00FFA0  2D                 	db	45
  8382   00FFA1  35                 	db	53	;'5'
  8383   00FFA2  00                 	db	0
  8384   00FFA3                     STR_6:
  8385   00FFA3  52                 	db	82	;'R'
  8386   00FFA4  58                 	db	88	;'X'
  8387   00FFA5  5F                 	db	95	;'_'
  8388   00FFA6  50                 	db	80	;'P'
  8389   00FFA7  57                 	db	87	;'W'
  8390   00FFA8  5F                 	db	95	;'_'
  8391   00FFA9  50                 	db	80	;'P'
  8392   00FFAA  30                 	db	48	;'0'
  8393   00FFAB  2D                 	db	45
  8394   00FFAC  36                 	db	54	;'6'
  8395   00FFAD  00                 	db	0
  8396   00FFAE                     STR_8:
  8397   00FFAE  45                 	db	69	;'E'
  8398   00FFAF  4E                 	db	78	;'N'
  8399   00FFB0  5F                 	db	95	;'_'
  8400   00FFB1  52                 	db	82	;'R'
  8401   00FFB2  58                 	db	88	;'X'
  8402   00FFB3  41                 	db	65	;'A'
  8403   00FFB4  44                 	db	68	;'D'
  8404   00FFB5  44                 	db	68	;'D'
  8405   00FFB6  52                 	db	82	;'R'
  8406   00FFB7  00                 	db	0
  8407   00FFB8                     STR_5:
  8408   00FFB8  54                 	db	84	;'T'
  8409   00FFB9  58                 	db	88	;'X'
  8410   00FFBA  5F                 	db	95	;'_'
  8411   00FFBB  41                 	db	65	;'A'
  8412   00FFBC  44                 	db	68	;'D'
  8413   00FFBD  44                 	db	68	;'D'
  8414   00FFBE  52                 	db	82	;'R'
  8415   00FFBF  09                 	db	9
  8416   00FFC0  00                 	db	0
  8417   00FFC1                     STR_10:
  8418   00FFC1  52                 	db	82	;'R'
  8419   00FFC2  46                 	db	70	;'F'
  8420   00FFC3  5F                 	db	95	;'_'
  8421   00FFC4  53                 	db	83	;'S'
  8422   00FFC5  45                 	db	69	;'E'
  8423   00FFC6  54                 	db	84	;'T'
  8424   00FFC7  55                 	db	85	;'U'
  8425   00FFC8  50                 	db	80	;'P'
  8426   00FFC9  00                 	db	0
  8427   00FFCA                     STR_11:
  8428   00FFCA  43                 	db	67	;'C'
  8429   00FFCB  4F                 	db	79	;'O'
  8430   00FFCC  4E                 	db	78	;'N'
  8431   00FFCD  46                 	db	70	;'F'
  8432   00FFCE  49                 	db	73	;'I'
  8433   00FFCF  47                 	db	71	;'G'
  8434   00FFD0  09                 	db	9
  8435   00FFD1  00                 	db	0
  8436   00FFD2                     STR_23:
  8437   00FFD2  20                 	db	32
  8438   00FFD3  30                 	db	48	;'0'
  8439   00FFD4  78                 	db	120	;'x'
  8440   00FFD5  25                 	db	37
  8441   00FFD6  30                 	db	48	;'0'
  8442   00FFD7  32                 	db	50	;'2'
  8443   00FFD8  78                 	db	120	;'x'
  8444   00FFD9  00                 	db	0
  8445   00FFDA                     STR_25:
  8446   00FFDA  28                 	db	40
  8447   00FFDB  6E                 	db	110	;'n'
  8448   00FFDC  75                 	db	117	;'u'
  8449   00FFDD  6C                 	db	108	;'l'
  8450   00FFDE  6C                 	db	108	;'l'
  8451   00FFDF  29                 	db	41
  8452   00FFE0  00                 	db	0
  8453   00FFE1                     STR_7:
  8454   00FFE1  45                 	db	69	;'E'
  8455   00FFE2  4E                 	db	78	;'N'
  8456   00FFE3  5F                 	db	95	;'_'
  8457   00FFE4  41                 	db	65	;'A'
  8458   00FFE5  41                 	db	65	;'A'
  8459   00FFE6  09                 	db	9
  8460   00FFE7  00                 	db	0
  8461   00FFE8                     STR_9:
  8462   00FFE8  52                 	db	82	;'R'
  8463   00FFE9  46                 	db	70	;'F'
  8464   00FFEA  5F                 	db	95	;'_'
  8465   00FFEB  43                 	db	67	;'C'
  8466   00FFEC  48                 	db	72	;'H'
  8467   00FFED  09                 	db	9
  8468   00FFEE  00                 	db	0
  8469   00FFEF                     STR_18:
  8470   00FFEF  25                 	db	37
  8471   00FFF0  73                 	db	115	;'s'
  8472   00FFF1  09                 	db	9
  8473   00FFF2  20                 	db	32
  8474   00FFF3  3D                 	db	61	;'='
  8475   00FFF4  00                 	db	0
  8476   00FFF5                     STR_1:
  8477   00FFF5  46                 	db	70	;'F'
  8478   00FFF6  47                 	db	71	;'G'
  8479   00FFF7  48                 	db	72	;'H'
  8480   00FFF8  49                 	db	73	;'I'
  8481   00FFF9  4A                 	db	74	;'J'
  8482   00FFFA  00                 	db	0
  8483   00FFFB                     STR_19:
  8484   00FFFB  20                 	db	32
  8485   00FFFC  30                 	db	48	;'0'
  8486   00FFFD  78                 	db	120	;'x'
  8487   00FFFE  00                 	db	0
  8488   00FFD5                     STR_20          equ	STR_23+3
  8489   00FFEF                     STR_22          equ	STR_18
  8490   00FEFB                     STR_21          equ	STR_17+67
  8491   00FEFB                     STR_24          equ	STR_17+67
  8492   00FFFF  00                 	db	0	; dummy byte at the end
  8493   000003                     __activetblptr  equ	3
  8494                           
  8495                           	psect	nvBANK5
  8496   0005EF                     __pnvBANK5:
  8497                           	callstack 0
  8498   0005EF                     _TMR0_OverflowCallback:
  8499                           	callstack 0
  8500   0005EF                     	ds	3
  8501   0005F2                     _INT2_InterruptHandler:
  8502                           	callstack 0
  8503   0005F2                     	ds	3
  8504   0005F5                     _INT1_InterruptHandler:
  8505                           	callstack 0
  8506   0005F5                     	ds	3
  8507   0005F8                     _INT0_InterruptHandler:
  8508                           	callstack 0
  8509   0005F8                     	ds	3
  8510   0000AC                     _ACTCON         set	172
  8511   0000B0                     _OSCTUNE        set	176
  8512   0000B1                     _OSCFRQ         set	177
  8513   0000B3                     _OSCEN          set	179
  8514   0000AF                     _OSCCON3        set	175
  8515   0000AD                     _OSCCON1        set	173
  8516   000080                     _SPI1RXB        set	128
  8517   000081                     _SPI1TXB        set	129
  8518   000082                     _SPI1TCNTL      set	130
  8519   000083                     _SPI1TCNTH      set	131
  8520   00008A                     _SPI1INTFbits   set	138
  8521   000084                     _SPI1CON0bits   set	132
  8522   000087                     _SPI1STATUSbits set	135
  8523   00008C                     _SPI1CLK        set	140
  8524   000089                     _SPI1BAUD       set	137
  8525   000086                     _SPI1CON2       set	134
  8526   000085                     _SPI1CON1       set	133
  8527   000084                     _SPI1CON0       set	132
  8528   000217                     _RC6PPS         set	535
  8529   00026A                     _SPI1SCKPPS     set	618
  8530   000215                     _RC4PPS         set	533
  8531   00026B                     _SPI1SDIPPS     set	619
  8532   000286                     _RC4I2C         set	646
  8533   000287                     _RC3I2C         set	647
  8534   000288                     _RB2I2C         set	648
  8535   000289                     _RB1I2C         set	649
  8536   00031A                     _T0CON0bits     set	794
  8537   00031A                     _T0CON0         set	794
  8538   00031B                     _T0CON1         set	795
  8539   000318                     _TMR0L          set	792
  8540   000319                     _TMR0H          set	793
  8541   000427                     _IOCEF          set	1063
  8542   000426                     _IOCEN          set	1062
  8543   000425                     _IOCEP          set	1061
  8544   000417                     _IOCCF          set	1047
  8545   000416                     _IOCCN          set	1046
  8546   000415                     _IOCCP          set	1045
  8547   00040F                     _IOCBF          set	1039
  8548   00040E                     _IOCBN          set	1038
  8549   00040D                     _IOCBP          set	1037
  8550   000407                     _IOCAF          set	1031
  8551   000406                     _IOCAN          set	1030
  8552   000405                     _IOCAP          set	1029
  8553   00042C                     _INLVLF         set	1068
  8554   000424                     _INLVLE         set	1060
  8555   00041C                     _INLVLD         set	1052
  8556   000414                     _INLVLC         set	1044
  8557   00040C                     _INLVLB         set	1036
  8558   000404                     _INLVLA         set	1028
  8559   00042B                     _SLRCONF        set	1067
  8560   000423                     _SLRCONE        set	1059
  8561   00041B                     _SLRCOND        set	1051
  8562   000413                     _SLRCONC        set	1043
  8563   00040B                     _SLRCONB        set	1035
  8564   000403                     _SLRCONA        set	1027
  8565   000429                     _WPUF           set	1065
  8566   000421                     _WPUE           set	1057
  8567   000419                     _WPUD           set	1049
  8568   000411                     _WPUC           set	1041
  8569   000409                     _WPUB           set	1033
  8570   000401                     _WPUA           set	1025
  8571   000428                     _ANSELF         set	1064
  8572   000420                     _ANSELE         set	1056
  8573   000418                     _ANSELD         set	1048
  8574   000410                     _ANSELC         set	1040
  8575   000408                     _ANSELB         set	1032
  8576   000400                     _ANSELA         set	1024
  8577   00042A                     _ODCONF         set	1066
  8578   000422                     _ODCONE         set	1058
  8579   00041A                     _ODCOND         set	1050
  8580   000412                     _ODCONC         set	1042
  8581   00040A                     _ODCONB         set	1034
  8582   000402                     _ODCONA         set	1026
  8583   0004C0                     _LATCbits       set	1216
  8584   0004C3                     _LATFbits       set	1219
  8585   0004B8                     _PIR10bits      set	1208
  8586   0004B4                     _PIR6bits       set	1204
  8587   0004AF                     _PIR1bits       set	1199
  8588   0004D6                     _INTCON0bits    set	1238
  8589   0004CB                     _TRISF          set	1227
  8590   0004CA                     _TRISE          set	1226
  8591   0004C9                     _TRISD          set	1225
  8592   0004C8                     _TRISC          set	1224
  8593   0004C7                     _TRISB          set	1223
  8594   0004C6                     _TRISA          set	1222
  8595   0004C3                     _LATF           set	1219
  8596   0004C2                     _LATE           set	1218
  8597   0004C1                     _LATD           set	1217
  8598   0004C0                     _LATC           set	1216
  8599   0004BF                     _LATB           set	1215
  8600   0004BE                     _LATA           set	1214
  8601   0004B1                     _PIR3bits       set	1201
  8602   0004C8                     _TRISCbits      set	1224
  8603   0004A1                     _PIE3bits       set	1185
  8604                           
  8605                           ; #config settings
  8606                           
  8607                           	psect	cinit
  8608   011392                     __pcinit:
  8609                           	callstack 0
  8610   011392                     start_initialization:
  8611                           	callstack 0
  8612   011392                     __initialization:
  8613                           	callstack 0
  8614                           
  8615                           ; Initialize objects allocated to BANK6 (32 bytes)
  8616                           ; load TBLPTR registers with __pidataBANK6
  8617   011392  0E4C               	movlw	low __pidataBANK6
  8618   011394  6EF6               	movwf	tblptrl,c
  8619   011396  0E19               	movlw	high __pidataBANK6
  8620   011398  6EF7               	movwf	tblptrh,c
  8621   01139A  0E01               	movlw	low (__pidataBANK6 shr (0+16))
  8622   01139C  6EF8               	movwf	tblptru,c
  8623   01139E  EE01  F200         	lfsr	0,__pdataBANK6
  8624   0113A2  EE10 F020          	lfsr	1,32
  8625   0113A6                     copy_data0:
  8626   0113A6  0009               	tblrd		*+
  8627   0113A8  C4F5 F4EE          	movff	tablat,postinc0
  8628   0113AC  50E5               	movf	postdec1,w,c
  8629   0113AE  50E1               	movf	fsr1l,w,c
  8630   0113B0  E1FA               	bnz	copy_data0
  8631                           
  8632                           ; Initialize objects allocated to BANK5 (56 bytes)
  8633                           ; load TBLPTR registers with __pidataBANK5
  8634   0113B2  0E26               	movlw	low __pidataBANK5
  8635   0113B4  6EF6               	movwf	tblptrl,c
  8636   0113B6  0E16               	movlw	high __pidataBANK5
  8637   0113B8  6EF7               	movwf	tblptrh,c
  8638   0113BA  0E01               	movlw	low (__pidataBANK5 shr (0+16))
  8639   0113BC  6EF8               	movwf	tblptru,c
  8640   0113BE  EE01  F160         	lfsr	0,__pdataBANK5
  8641   0113C2  EE10 F038          	lfsr	1,56
  8642   0113C6                     copy_data1:
  8643   0113C6  0009               	tblrd		*+
  8644   0113C8  C4F5 F4EE          	movff	tablat,postinc0
  8645   0113CC  50E5               	movf	postdec1,w,c
  8646   0113CE  50E1               	movf	fsr1l,w,c
  8647   0113D0  E1FA               	bnz	copy_data1
  8648                           
  8649                           ; Clear objects allocated to BANK5 (34 bytes)
  8650   0113D2  EE01  F1CD         	lfsr	0,__pbssBANK5
  8651   0113D6  0E22               	movlw	34
  8652   0113D8                     clear_0:
  8653   0113D8  6AEE               	clrf	postinc0,c
  8654   0113DA  06E8               	decf	wreg,f,c
  8655   0113DC  E1FD               	bnz	clear_0
  8656                           
  8657                           ; Clear objects allocated to COMRAM (3 bytes)
  8658   0113DE  6A5C               	clrf	(__pbssCOMRAM+2)& (0+255),c
  8659   0113E0  6A5B               	clrf	(__pbssCOMRAM+1)& (0+255),c
  8660   0113E2  6A5A               	clrf	__pbssCOMRAM& (0+255),c
  8661                           
  8662                           ;
  8663                           ; Setup IVTBASE
  8664                           ;
  8665   00045D                     IVTBASEL        equ	1117
  8666   00045E                     IVTBASEH        equ	1118
  8667   00045F                     IVTBASEU        equ	1119
  8668   0113E4  0104               	movlb	4
  8669   0113E6  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  8670   0113E8  6F5D               	movwf	93,b
  8671   0113EA  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  8672   0113EC  6F5E               	movwf	94,b
  8673   0113EE  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  8674   0113F0  6F5F               	movwf	95,b
  8675   0113F2                     end_of_initialization:
  8676                           	callstack 0
  8677   0113F2                     __end_of__initialization:
  8678                           	callstack 0
  8679   0113F2  0100               	movlb	0
  8680   0113F4  EFDF  F08B         	goto	_main	;jump to C main() function
  8681                           
  8682                           	psect	bssCOMRAM
  8683   00055A                     __pbssCOMRAM:
  8684                           	callstack 0
  8685   00055A                     _width:
  8686                           	callstack 0
  8687   00055A                     	ds	2
  8688   00055C                     _flags:
  8689                           	callstack 0
  8690   00055C                     	ds	1
  8691                           
  8692                           	psect	bssBANK5
  8693   0005CD                     __pbssBANK5:
  8694                           	callstack 0
  8695   0005CD                     _prec:
  8696                           	callstack 0
  8697   0005CD                     	ds	2
  8698   0005CF                     _dbuf:
  8699                           	callstack 0
  8700   0005CF                     	ds	32
  8701                           
  8702                           	psect	dataBANK5
  8703   000560                     __pdataBANK5:
  8704                           	callstack 0
  8705   000560                     sender@F17890:
  8706                           	callstack 0
  8707   000560                     	ds	32
  8708   000580                     _rf24_datarates:
  8709                           	callstack 0
  8710   000580                     	ds	24
  8711                           
  8712                           	psect	dataBANK6
  8713   000600                     __pdataBANK6:
  8714                           	callstack 0
  8715   000600                     _rf24_pa_dbm:
  8716                           	callstack 0
  8717   000600                     	ds	32
  8718                           
  8719                           	psect	cstackBANK5
  8720   000598                     __pcstackBANK5:
  8721                           	callstack 0
  8722   000598                     Nrf24_print_address_register@buffer:
  8723                           	callstack 0
  8724                           
  8725                           ; 5 bytes @ 0x0
  8726   000598                     	ds	5
  8727   00059D                     Nrf24_print_address_register@i:
  8728                           	callstack 0
  8729                           
  8730                           ; 2 bytes @ 0x5
  8731   00059D                     	ds	2
  8732   00059F                     ??_Nrf24_printDetails:
  8733                           
  8734                           ; 1 bytes @ 0x7
  8735   00059F                     	ds	4
  8736   0005A3                     Nrf24_printDetails@delay:
  8737                           	callstack 0
  8738                           
  8739                           ; 2 bytes @ 0xB
  8740   0005A3                     	ds	2
  8741   0005A5                     Nrf24_printDetails@retransmit:
  8742                           	callstack 0
  8743                           
  8744                           ; 1 bytes @ 0xD
  8745   0005A5                     	ds	1
  8746   0005A6                     sender@pvParameters:
  8747                           	callstack 0
  8748                           
  8749                           ; 2 bytes @ 0xE
  8750   0005A6                     	ds	2
  8751   0005A8                     sender@buf:
  8752                           	callstack 0
  8753                           
  8754                           ; 32 bytes @ 0x10
  8755   0005A8                     	ds	32
  8756   0005C8                     sender@ret:
  8757                           	callstack 0
  8758                           
  8759                           ; 2 bytes @ 0x30
  8760   0005C8                     	ds	2
  8761   0005CA                     sender@nrf:
  8762                           	callstack 0
  8763                           
  8764                           ; 3 bytes @ 0x32
  8765   0005CA                     	ds	3
  8766                           
  8767                           	psect	cstackCOMRAM
  8768   000501                     __pcstackCOMRAM:
  8769                           	callstack 0
  8770   000501                     ??_led_toggle:
  8771                           
  8772                           ; 1 bytes @ 0x0
  8773   000501                     	ds	1
  8774   000502                     ??_INTERRUPT_InterruptManager:
  8775                           
  8776                           ; 1 bytes @ 0x1
  8777   000502                     	ds	2
  8778   000504                     ?___awdiv:
  8779                           	callstack 0
  8780   000504                     ?___awmod:
  8781                           	callstack 0
  8782   000504                     ?_read_prec_or_width:
  8783                           	callstack 0
  8784   000504                     SPI1_Open@spiConfigIndex:
  8785                           	callstack 0
  8786   000504                     SPI1_ByteExchange@byteData:
  8787                           	callstack 0
  8788   000504                     DELAY_milliseconds@milliseconds:
  8789                           	callstack 0
  8790   000504                     DELAY_microseconds@microseconds:
  8791                           	callstack 0
  8792   000504                     ___awdiv@dividend:
  8793                           	callstack 0
  8794   000504                     ___awmod@dividend:
  8795                           	callstack 0
  8796   000504                     read_prec_or_width@fmt:
  8797                           	callstack 0
  8798   000504                     fputc@c:
  8799                           	callstack 0
  8800   000504                     INT0_SetInterruptHandler@InterruptHandler:
  8801                           	callstack 0
  8802   000504                     INT1_SetInterruptHandler@InterruptHandler:
  8803                           	callstack 0
  8804   000504                     INT2_SetInterruptHandler@InterruptHandler:
  8805                           	callstack 0
  8806   000504                     TMR0_OverflowCallbackRegister@CallbackHandler:
  8807                           	callstack 0
  8808   000504                     
  8809                           ; 1 bytes @ 0x3
  8810   000504                     	ds	1
  8811   000505                     SPI1_ByteExchange@returnValue:
  8812                           	callstack 0
  8813   000505                     Nrf24_init@dev:
  8814                           	callstack 0
  8815                           
  8816                           ; 2 bytes @ 0x4
  8817   000505                     	ds	1
  8818   000506                     Nrf24_configRegister@value:
  8819                           	callstack 0
  8820   000506                     SPI_read_buff@buffer:
  8821                           	callstack 0
  8822   000506                     SPI_write_buff@buffer:
  8823                           	callstack 0
  8824   000506                     Nrf24_flushRx@dev:
  8825                           	callstack 0
  8826   000506                     ___awdiv@divisor:
  8827                           	callstack 0
  8828   000506                     ___awmod@divisor:
  8829                           	callstack 0
  8830   000506                     read_prec_or_width@ap:
  8831                           	callstack 0
  8832   000506                     fputc@fp:
  8833                           	callstack 0
  8834   000506                     ??_DELAY_milliseconds:
  8835   000506                     
  8836                           ; 1 bytes @ 0x5
  8837   000506                     	ds	1
  8838   000507                     Nrf24_configRegister@reg:
  8839                           	callstack 0
  8840   000507                     
  8841                           ; 1 bytes @ 0x6
  8842   000507                     	ds	1
  8843   000508                     SPI_read_buff@bytes:
  8844                           	callstack 0
  8845   000508                     SPI_write_buff@bytes:
  8846                           	callstack 0
  8847   000508                     ___awdiv@counter:
  8848                           	callstack 0
  8849   000508                     ___awmod@counter:
  8850                           	callstack 0
  8851   000508                     Nrf24_powerUpRx@dev:
  8852                           	callstack 0
  8853   000508                     Nrf24_powerUpTx@dev:
  8854                           	callstack 0
  8855   000508                     ??_fputc:
  8856   000508                     ??_read_prec_or_width:
  8857                           
  8858                           ; 1 bytes @ 0x7
  8859   000508                     	ds	1
  8860   000509                     SPI_read_buff@i:
  8861                           	callstack 0
  8862   000509                     SPI_write_buff@i:
  8863                           	callstack 0
  8864   000509                     ___awdiv@sign:
  8865                           	callstack 0
  8866   000509                     ___awmod@sign:
  8867                           	callstack 0
  8868   000509                     
  8869                           ; 1 bytes @ 0x8
  8870   000509                     	ds	1
  8871   00050A                     ?_abs:
  8872                           	callstack 0
  8873   00050A                     read_prec_or_width@c:
  8874                           	callstack 0
  8875   00050A                     Nrf24_readRegister@value:
  8876                           	callstack 0
  8877   00050A                     Nrf24_writeRegister@value:
  8878                           	callstack 0
  8879   00050A                     ___awdiv@quotient:
  8880                           	callstack 0
  8881   00050A                     abs@a:
  8882                           	callstack 0
  8883   00050A                     
  8884                           ; 1 bytes @ 0x9
  8885   00050A                     	ds	1
  8886   00050B                     read_prec_or_width@n:
  8887                           	callstack 0
  8888                           
  8889                           ; 2 bytes @ 0xA
  8890   00050B                     	ds	1
  8891   00050C                     Nrf24_readRegister@len:
  8892                           	callstack 0
  8893   00050C                     Nrf24_writeRegister@len:
  8894                           	callstack 0
  8895   00050C                     ??_abs:
  8896                           
  8897                           ; 1 bytes @ 0xB
  8898   00050C                     	ds	1
  8899   00050D                     Nrf24_readRegister@reg:
  8900                           	callstack 0
  8901   00050D                     Nrf24_writeRegister@reg:
  8902                           	callstack 0
  8903   00050D                     stoa@fp:
  8904                           	callstack 0
  8905   00050D                     fputs@s:
  8906                           	callstack 0
  8907   00050D                     
  8908                           ; 1 bytes @ 0xC
  8909   00050D                     	ds	1
  8910   00050E                     ?_Nrf24_setTADDR:
  8911                           	callstack 0
  8912   00050E                     Nrf24_getStatus@rv:
  8913                           	callstack 0
  8914   00050E                     Nrf24_setTADDR@dev:
  8915                           	callstack 0
  8916   00050E                     Nrf24_SetSpeedDataRates@dev:
  8917                           	callstack 0
  8918   00050E                     Nrf24_setRetransmitDelay@dev:
  8919                           	callstack 0
  8920   00050E                     Nrf24_getDataRate@dev:
  8921                           	callstack 0
  8922   00050E                     Nrf24_getCRCLength@dev:
  8923                           	callstack 0
  8924   00050E                     Nrf24_getPALevel@dev:
  8925                           	callstack 0
  8926   00050E                     Nrf24_getRetransmitDelay@dev:
  8927                           	callstack 0
  8928   00050E                     
  8929                           ; 1 bytes @ 0xD
  8930   00050E                     	ds	1
  8931   00050F                     Nrf24_config@dev:
  8932                           	callstack 0
  8933   00050F                     Nrf24_send@dev:
  8934                           	callstack 0
  8935   00050F                     Nrf24_isSend@dev:
  8936                           	callstack 0
  8937   00050F                     stoa@s:
  8938                           	callstack 0
  8939   00050F                     fputs@fp:
  8940                           	callstack 0
  8941                           
  8942                           ; 2 bytes @ 0xE
  8943   00050F                     	ds	1
  8944   000510                     Nrf24_SetSpeedDataRates@val:
  8945                           	callstack 0
  8946   000510                     Nrf24_setRetransmitDelay@val:
  8947                           	callstack 0
  8948   000510                     Nrf24_getDataRate@result:
  8949                           	callstack 0
  8950   000510                     Nrf24_getCRCLength@result:
  8951                           	callstack 0
  8952   000510                     Nrf24_getPALevel@level:
  8953                           	callstack 0
  8954   000510                     Nrf24_getRetransmitDelay@value:
  8955                           	callstack 0
  8956   000510                     Nrf24_setTADDR@adr:
  8957                           	callstack 0
  8958   000510                     
  8959                           ; 1 bytes @ 0xF
  8960   000510                     	ds	1
  8961   000511                     Nrf24_config@channel:
  8962                           	callstack 0
  8963   000511                     Nrf24_SetSpeedDataRates@value:
  8964                           	callstack 0
  8965   000511                     Nrf24_setRetransmitDelay@value:
  8966                           	callstack 0
  8967   000511                     Nrf24_getDataRate@dr:
  8968                           	callstack 0
  8969   000511                     Nrf24_getCRCLength@AA:
  8970                           	callstack 0
  8971   000511                     fputs@c:
  8972                           	callstack 0
  8973   000511                     Nrf24_send@value:
  8974                           	callstack 0
  8975   000511                     Nrf24_isSend@timeout:
  8976                           	callstack 0
  8977   000511                     ??_stoa:
  8978                           
  8979                           ; 1 bytes @ 0x10
  8980   000511                     	ds	1
  8981   000512                     Nrf24_config@payload:
  8982                           	callstack 0
  8983   000512                     Nrf24_getCRCLength@config:
  8984                           	callstack 0
  8985   000512                     AdvancedSettings@dev:
  8986                           	callstack 0
  8987   000512                     fputs@i:
  8988                           	callstack 0
  8989   000512                     ??_Nrf24_setTADDR:
  8990                           
  8991                           ; 1 bytes @ 0x11
  8992   000512                     	ds	1
  8993   000513                     stoa@p:
  8994                           	callstack 0
  8995   000513                     ??_Nrf24_send:
  8996   000513                     ??_Nrf24_isSend:
  8997                           
  8998                           ; 1 bytes @ 0x12
  8999   000513                     	ds	1
  9000   000514                     Nrf24_send@status:
  9001                           	callstack 0
  9002   000514                     pad@fp:
  9003                           	callstack 0
  9004   000514                     
  9005                           ; 1 bytes @ 0x13
  9006   000514                     	ds	1
  9007   000515                     stoa@w:
  9008                           	callstack 0
  9009   000515                     Nrf24_setTADDR@buffer:
  9010                           	callstack 0
  9011                           
  9012                           ; 5 bytes @ 0x14
  9013   000515                     	ds	1
  9014   000516                     pad@buf:
  9015                           	callstack 0
  9016                           
  9017                           ; 2 bytes @ 0x15
  9018   000516                     	ds	1
  9019   000517                     stoa@cp:
  9020                           	callstack 0
  9021   000517                     Nrf24_isSend@i:
  9022                           	callstack 0
  9023                           
  9024                           ; 4 bytes @ 0x16
  9025   000517                     	ds	1
  9026   000518                     pad@p:
  9027                           	callstack 0
  9028                           
  9029                           ; 2 bytes @ 0x17
  9030   000518                     	ds	1
  9031   000519                     stoa@l:
  9032                           	callstack 0
  9033                           
  9034                           ; 2 bytes @ 0x18
  9035   000519                     	ds	1
  9036   00051A                     Nrf24_setTADDR@ret:
  9037                           	callstack 0
  9038   00051A                     ??_pad:
  9039                           
  9040                           ; 1 bytes @ 0x19
  9041   00051A                     	ds	1
  9042   00051B                     Nrf24_isSend@status:
  9043                           	callstack 0
  9044   00051B                     pad@i:
  9045                           	callstack 0
  9046                           
  9047                           ; 2 bytes @ 0x1A
  9048   00051B                     	ds	1
  9049   00051C                     Nrf24_setTADDR@i:
  9050                           	callstack 0
  9051                           
  9052                           ; 2 bytes @ 0x1B
  9053   00051C                     	ds	1
  9054   00051D                     dtoa@fp:
  9055                           	callstack 0
  9056   00051D                     xtoa@fp:
  9057                           	callstack 0
  9058                           
  9059                           ; 2 bytes @ 0x1C
  9060   00051D                     	ds	2
  9061   00051F                     dtoa@d:
  9062                           	callstack 0
  9063   00051F                     xtoa@d:
  9064                           	callstack 0
  9065                           
  9066                           ; 2 bytes @ 0x1E
  9067   00051F                     	ds	2
  9068   000521                     _dtoa$1909:
  9069                           	callstack 0
  9070   000521                     ??_xtoa:
  9071                           
  9072                           ; 1 bytes @ 0x20
  9073   000521                     	ds	2
  9074   000523                     dtoa@p:
  9075                           	callstack 0
  9076                           
  9077                           ; 1 bytes @ 0x22
  9078   000523                     	ds	1
  9079   000524                     xtoa@p:
  9080                           	callstack 0
  9081   000524                     dtoa@w:
  9082                           	callstack 0
  9083                           
  9084                           ; 2 bytes @ 0x23
  9085   000524                     	ds	1
  9086   000525                     xtoa@w:
  9087                           	callstack 0
  9088                           
  9089                           ; 2 bytes @ 0x24
  9090   000525                     	ds	1
  9091   000526                     dtoa@s:
  9092                           	callstack 0
  9093                           
  9094                           ; 1 bytes @ 0x25
  9095   000526                     	ds	1
  9096   000527                     xtoa@c:
  9097                           	callstack 0
  9098   000527                     dtoa@i:
  9099                           	callstack 0
  9100                           
  9101                           ; 2 bytes @ 0x26
  9102   000527                     	ds	1
  9103   000528                     xtoa@i:
  9104                           	callstack 0
  9105                           
  9106                           ; 2 bytes @ 0x27
  9107   000528                     	ds	2
  9108   00052A                     vfpfcnvrt@fp:
  9109                           	callstack 0
  9110                           
  9111                           ; 2 bytes @ 0x29
  9112   00052A                     	ds	2
  9113   00052C                     vfpfcnvrt@fmt:
  9114                           	callstack 0
  9115                           
  9116                           ; 2 bytes @ 0x2B
  9117   00052C                     	ds	2
  9118   00052E                     vfpfcnvrt@ap:
  9119                           	callstack 0
  9120                           
  9121                           ; 2 bytes @ 0x2D
  9122   00052E                     	ds	2
  9123   000530                     ??_vfpfcnvrt:
  9124                           
  9125                           ; 1 bytes @ 0x2F
  9126   000530                     	ds	2
  9127   000532                     vfpfcnvrt@convarg:
  9128                           	callstack 0
  9129                           
  9130                           ; 4 bytes @ 0x31
  9131   000532                     	ds	4
  9132   000536                     vfpfcnvrt@done:
  9133                           	callstack 0
  9134                           
  9135                           ; 1 bytes @ 0x35
  9136   000536                     	ds	1
  9137   000537                     vfpfcnvrt@cp:
  9138                           	callstack 0
  9139                           
  9140                           ; 2 bytes @ 0x36
  9141   000537                     	ds	2
  9142   000539                     ?_vfprintf:
  9143                           	callstack 0
  9144   000539                     vfprintf@fp:
  9145                           	callstack 0
  9146                           
  9147                           ; 2 bytes @ 0x38
  9148   000539                     	ds	2
  9149   00053B                     vfprintf@fmt:
  9150                           	callstack 0
  9151                           
  9152                           ; 2 bytes @ 0x3A
  9153   00053B                     	ds	2
  9154   00053D                     vfprintf@ap:
  9155                           	callstack 0
  9156                           
  9157                           ; 2 bytes @ 0x3C
  9158   00053D                     	ds	2
  9159   00053F                     vfprintf@cfmt:
  9160                           	callstack 0
  9161   00053F                     
  9162                           ; 1 bytes @ 0x3E
  9163   00053F                     	ds	2
  9164   000541                     ?_printf:
  9165                           	callstack 0
  9166   000541                     printf@fmt:
  9167                           	callstack 0
  9168                           
  9169                           ; 2 bytes @ 0x40
  9170   000541                     	ds	14
  9171   00054F                     printf@ap:
  9172                           	callstack 0
  9173   00054F                     
  9174                           ; 1 bytes @ 0x4E
  9175   00054F                     	ds	2
  9176   000551                     Nrf24_print_address_register@dev:
  9177                           	callstack 0
  9178   000551                     Nrf24_print_byte_register@dev:
  9179                           	callstack 0
  9180   000551                     ??_Nrf24_print_status:
  9181                           
  9182                           ; 1 bytes @ 0x50
  9183   000551                     	ds	1
  9184   000552                     Nrf24_print_status@status:
  9185                           	callstack 0
  9186                           
  9187                           ; 1 bytes @ 0x51
  9188   000552                     	ds	1
  9189   000553                     Nrf24_print_address_register@name:
  9190                           	callstack 0
  9191   000553                     Nrf24_print_byte_register@name:
  9192                           	callstack 0
  9193                           
  9194                           ; 2 bytes @ 0x52
  9195   000553                     	ds	2
  9196   000555                     Nrf24_print_address_register@reg:
  9197                           	callstack 0
  9198   000555                     Nrf24_print_byte_register@reg:
  9199                           	callstack 0
  9200                           
  9201                           ; 1 bytes @ 0x54
  9202   000555                     	ds	1
  9203   000556                     Nrf24_print_address_register@qty:
  9204                           	callstack 0
  9205   000556                     Nrf24_print_byte_register@qty:
  9206                           	callstack 0
  9207                           
  9208                           ; 1 bytes @ 0x55
  9209   000556                     	ds	1
  9210   000557                     Nrf24_print_byte_register@buffer:
  9211                           	callstack 0
  9212   000557                     ??_Nrf24_print_address_register:
  9213   000557                     
  9214                           ; 1 bytes @ 0x56
  9215   000557                     	ds	1
  9216   000558                     Nrf24_printDetails@dev:
  9217                           	callstack 0
  9218                           
  9219                           ; 2 bytes @ 0x57
  9220   000558                     	ds	2
  9221   00055A                     
  9222                           ; 1 bytes @ 0x59
  9223 ;;
  9224 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  9225 ;;
  9226 ;; *************** function _main *****************
  9227 ;; Defined at:
  9228 ;;		line 119 in file "main.c"
  9229 ;; Parameters:    Size  Location     Type
  9230 ;;		None
  9231 ;; Auto vars:     Size  Location     Type
  9232 ;;		None
  9233 ;; Return value:  Size  Location     Type
  9234 ;;                  1    wreg      void 
  9235 ;; Registers used:
  9236 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9237 ;; Tracked objects:
  9238 ;;		On entry : 0/0
  9239 ;;		On exit  : 0/0
  9240 ;;		Unchanged: 0/0
  9241 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  9242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9246 ;;Total ram usage:        0 bytes
  9247 ;; Hardware stack levels required when called: 14
  9248 ;; This function calls:
  9249 ;;		_SYSTEM_Initialize
  9250 ;;		_TMR0_OverflowCallbackRegister
  9251 ;;		_TMR0_Start
  9252 ;;		_sender
  9253 ;; This function is called by:
  9254 ;;		Startup code after reset
  9255 ;; This function uses a non-reentrant model
  9256 ;;
  9257                           
  9258                           	psect	text0
  9259   0117BE                     __ptext0:
  9260                           	callstack 0
  9261   0117BE                     _main:
  9262                           	callstack 113
  9263   0117BE                     
  9264                           ;main.c: 121:     SYSTEM_Initialize();
  9265   0117BE  ECF4  F08C         	call	_SYSTEM_Initialize	;wreg free
  9266   0117C2                     
  9267                           ;main.c: 122:     (INTCON0bits.GIE = 1);
  9268   0117C2  8ED6               	bsf	214,7,c	;volatile
  9269                           
  9270                           ;main.c: 123:     TMR0_OverflowCallbackRegister(led_toggle);
  9271   0117C4  0E96               	movlw	low _led_toggle
  9272   0117C6  6E04               	movwf	TMR0_OverflowCallbackRegister@CallbackHandler^(0+1280),c
  9273   0117C8  0E18               	movlw	high _led_toggle
  9274   0117CA  6E05               	movwf	(TMR0_OverflowCallbackRegister@CallbackHandler+1)^(0+1280),c
  9275   0117CC  0E01               	movlw	low (_led_toggle shr (0+16))
  9276   0117CE  6E06               	movwf	(TMR0_OverflowCallbackRegister@CallbackHandler+2)^(0+1280),c
  9277   0117D0  EC09  F08D         	call	_TMR0_OverflowCallbackRegister	;wreg free
  9278   0117D4                     
  9279                           ;main.c: 124:     TMR0_Start();
  9280   0117D4  EC2B  F08D         	call	_TMR0_Start	;wreg free
  9281   0117D8                     
  9282                           ;main.c: 132:     sender(((void*)0));
  9283   0117D8  0E00               	movlw	0
  9284   0117DA  0105               	movlb	5	; () banked
  9285   0117DC  6FA6               	movwf	sender@pvParameters& (0+255),b
  9286   0117DE  0E00               	movlw	0
  9287   0117E0  6FA7               	movwf	(sender@pvParameters+1)& (0+255),b
  9288   0117E2  ECE8  F085         	call	_sender	;wreg free
  9289   0117E6  EF0D  F000         	goto	start
  9290   0117EA                     __end_of_main:
  9291                           	callstack 0
  9292                           
  9293 ;; *************** function _sender *****************
  9294 ;; Defined at:
  9295 ;;		line 88 in file "main.c"
  9296 ;; Parameters:    Size  Location     Type
  9297 ;;  pvParameters    2   14[BANK5 ] PTR void 
  9298 ;;		 -> NULL(0), 
  9299 ;; Auto vars:     Size  Location     Type
  9300 ;;  buf            32   16[BANK5 ] unsigned char [32]
  9301 ;;  nrf             3   50[BANK5 ] struct .
  9302 ;;  ret             2   48[BANK5 ] int 
  9303 ;;  channel         1    0        unsigned char 
  9304 ;;  payload         1    0        unsigned char 
  9305 ;; Return value:  Size  Location     Type
  9306 ;;                  1    wreg      void 
  9307 ;; Registers used:
  9308 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9309 ;; Tracked objects:
  9310 ;;		On entry : 0/0
  9311 ;;		On exit  : 0/0
  9312 ;;		Unchanged: 0/0
  9313 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  9314 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9315 ;;      Locals:         0      37       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9317 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9318 ;;Total ram usage:       39 bytes
  9319 ;; Hardware stack levels used: 1
  9320 ;; Hardware stack levels required when called: 13
  9321 ;; This function calls:
  9322 ;;		_AdvancedSettings
  9323 ;;		_DELAY_milliseconds
  9324 ;;		_Nrf24_config
  9325 ;;		_Nrf24_init
  9326 ;;		_Nrf24_isSend
  9327 ;;		_Nrf24_printDetails
  9328 ;;		_Nrf24_send
  9329 ;;		_Nrf24_setTADDR
  9330 ;; This function is called by:
  9331 ;;		_main
  9332 ;; This function uses a non-reentrant model
  9333 ;;
  9334                           
  9335                           	psect	text1
  9336   010BD0                     __ptext1:
  9337                           	callstack 0
  9338   010BD0                     _sender:
  9339                           	callstack 113
  9340   010BD0                     
  9341                           ;main.c: 88: void sender(void *pvParameters);main.c: 89: {;main.c: 90:  NRF24_t nrf;;mai
      +                          n.c: 91:  Nrf24_init(&nrf);
  9342   010BD0  0ECA               	movlw	low sender@nrf
  9343   010BD2  6E05               	movwf	Nrf24_init@dev^(0+1280),c
  9344   010BD4  0E05               	movlw	high sender@nrf
  9345   010BD6  6E06               	movwf	(Nrf24_init@dev+1)^(0+1280),c
  9346   010BD8  ECF5  F08B         	call	_Nrf24_init	;wreg free
  9347   010BDC                     
  9348                           ;main.c: 94:  Nrf24_config(&nrf, channel, payload);
  9349   010BDC  0ECA               	movlw	low sender@nrf
  9350   010BDE  6E0F               	movwf	Nrf24_config@dev^(0+1280),c
  9351   010BE0  0E05               	movlw	high sender@nrf
  9352   010BE2  6E10               	movwf	(Nrf24_config@dev+1)^(0+1280),c
  9353   010BE4  0E73               	movlw	115
  9354   010BE6  6E11               	movwf	Nrf24_config@channel^(0+1280),c
  9355   010BE8  0E20               	movlw	32
  9356   010BEA  6E12               	movwf	Nrf24_config@payload^(0+1280),c
  9357   010BEC  EC24  F089         	call	_Nrf24_config	;wreg free
  9358   010BF0                     
  9359                           ;main.c: 97:  int ret = Nrf24_setTADDR(&nrf, (uint8_t *)"FGHIJ");
  9360   010BF0  0ECA               	movlw	low sender@nrf
  9361   010BF2  6E0E               	movwf	Nrf24_setTADDR@dev^(0+1280),c
  9362   010BF4  0E05               	movlw	high sender@nrf
  9363   010BF6  6E0F               	movwf	(Nrf24_setTADDR@dev+1)^(0+1280),c
  9364   010BF8  0EF5               	movlw	low STR_1
  9365   010BFA  6E10               	movwf	Nrf24_setTADDR@adr^(0+1280),c
  9366   010BFC  0EFF               	movlw	high STR_1
  9367   010BFE  6E11               	movwf	(Nrf24_setTADDR@adr+1)^(0+1280),c
  9368   010C00  EC02  F087         	call	_Nrf24_setTADDR	;wreg free
  9369   010C04  C50E  F5C8         	movff	?_Nrf24_setTADDR,sender@ret
  9370   010C08  C50F  F5C9         	movff	?_Nrf24_setTADDR+1,sender@ret+1
  9371   010C0C                     
  9372                           ;main.c: 98:  if (ret != 0) {
  9373   010C0C  0105               	movlb	5	; () banked
  9374   010C0E  51C8               	movf	sender@ret& (0+255),w,b
  9375   010C10  11C9               	iorwf	(sender@ret+1)& (0+255),w,b
  9376   010C12  B4D8               	btfsc	status,2,c
  9377   010C14  EF0E  F086         	goto	u3431
  9378   010C18  EF10  F086         	goto	u3430
  9379   010C1C                     u3431:
  9380   010C1C  EF18  F086         	goto	l4245
  9381   010C20                     u3430:
  9382   010C20                     l4243:
  9383   010C20  0E00               	movlw	0
  9384   010C22  6E05               	movwf	(DELAY_milliseconds@milliseconds+1)^(0+1280),c
  9385   010C24  0E01               	movlw	1
  9386   010C26  6E04               	movwf	DELAY_milliseconds@milliseconds^(0+1280),c
  9387   010C28  ECAF  F08B         	call	_DELAY_milliseconds	;wreg free
  9388   010C2C  EF10  F086         	goto	l4243
  9389   010C30                     l4245:
  9390                           
  9391                           ; BSR set to: 5
  9392                           ;main.c: 103:  AdvancedSettings(&nrf);
  9393   010C30  0ECA               	movlw	low sender@nrf
  9394   010C32  6E12               	movwf	AdvancedSettings@dev^(0+1280),c
  9395   010C34  0E05               	movlw	high sender@nrf
  9396   010C36  6E13               	movwf	(AdvancedSettings@dev+1)^(0+1280),c
  9397   010C38  EC95  F08C         	call	_AdvancedSettings	;wreg free
  9398   010C3C                     
  9399                           ;main.c: 107:  Nrf24_printDetails(&nrf);
  9400   010C3C  0ECA               	movlw	low sender@nrf
  9401   010C3E  6E58               	movwf	Nrf24_printDetails@dev^(0+1280),c
  9402   010C40  0E05               	movlw	high sender@nrf
  9403   010C42  6E59               	movwf	(Nrf24_printDetails@dev+1)^(0+1280),c
  9404   010C44  ECC7  F081         	call	_Nrf24_printDetails	;wreg free
  9405   010C48                     
  9406                           ;main.c: 109:  uint8_t buf[32] = "cowabunga mfersss.";
  9407   010C48  EE21  F160         	lfsr	2,sender@F17890
  9408   010C4C  EE11  F1A8         	lfsr	1,sender@buf
  9409   010C50  0E1F               	movlw	31
  9410   010C52                     u3441:
  9411   010C52  C4DB F4E3          	movff	plusw2,plusw1
  9412   010C56  06E8               	decf	wreg,f,c
  9413   010C58  E2FC               	bc	u3441
  9414   010C5A                     l4251:
  9415                           
  9416                           ;main.c: 111:   Nrf24_send(&nrf, buf);
  9417   010C5A  0ECA               	movlw	low sender@nrf
  9418   010C5C  6E0F               	movwf	Nrf24_send@dev^(0+1280),c
  9419   010C5E  0E05               	movlw	high sender@nrf
  9420   010C60  6E10               	movwf	(Nrf24_send@dev+1)^(0+1280),c
  9421   010C62  0EA8               	movlw	low sender@buf
  9422   010C64  6E11               	movwf	Nrf24_send@value^(0+1280),c
  9423   010C66  0E05               	movlw	high sender@buf
  9424   010C68  6E12               	movwf	(Nrf24_send@value+1)^(0+1280),c
  9425   010C6A  EC9E  F088         	call	_Nrf24_send	;wreg free
  9426   010C6E                     
  9427                           ;main.c: 113:   Nrf24_isSend(&nrf, 1000);
  9428   010C6E  0ECA               	movlw	low sender@nrf
  9429   010C70  6E0F               	movwf	Nrf24_isSend@dev^(0+1280),c
  9430   010C72  0E05               	movlw	high sender@nrf
  9431   010C74  6E10               	movwf	(Nrf24_isSend@dev+1)^(0+1280),c
  9432   010C76  0E03               	movlw	3
  9433   010C78  6E12               	movwf	(Nrf24_isSend@timeout+1)^(0+1280),c
  9434   010C7A  0EE8               	movlw	232
  9435   010C7C  6E11               	movwf	Nrf24_isSend@timeout^(0+1280),c
  9436   010C7E  EC58  F087         	call	_Nrf24_isSend	;wreg free
  9437   010C82                     
  9438                           ;main.c: 114:   DELAY_milliseconds(1);
  9439   010C82  0E00               	movlw	0
  9440   010C84  6E05               	movwf	(DELAY_milliseconds@milliseconds+1)^(0+1280),c
  9441   010C86  0E01               	movlw	1
  9442   010C88  6E04               	movwf	DELAY_milliseconds@milliseconds^(0+1280),c
  9443   010C8A  ECAF  F08B         	call	_DELAY_milliseconds	;wreg free
  9444   010C8E  EF2D  F086         	goto	l4251
  9445   010C92  0012               	return		;funcret
  9446   010C94                     __end_of_sender:
  9447                           	callstack 0
  9448                           
  9449 ;; *************** function _Nrf24_setTADDR *****************
  9450 ;; Defined at:
  9451 ;;		line 103 in file "cmirf.c"
  9452 ;; Parameters:    Size  Location     Type
  9453 ;;  dev             2   13[COMRAM] PTR struct .
  9454 ;;		 -> sender@nrf(3), 
  9455 ;;  adr             2   15[COMRAM] PTR unsigned char 
  9456 ;;		 -> STR_1(6), 
  9457 ;; Auto vars:     Size  Location     Type
  9458 ;;  i               2   27[COMRAM] int 
  9459 ;;  buffer          5   20[COMRAM] unsigned char [5]
  9460 ;;  ret             2   25[COMRAM] int 
  9461 ;; Return value:  Size  Location     Type
  9462 ;;                  2   13[COMRAM] int 
  9463 ;; Registers used:
  9464 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9465 ;; Tracked objects:
  9466 ;;		On entry : 0/0
  9467 ;;		On exit  : 0/0
  9468 ;;		Unchanged: 0/0
  9469 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  9470 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9471 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9472 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9473 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9474 ;;Total ram usage:       16 bytes
  9475 ;; Hardware stack levels used: 1
  9476 ;; Hardware stack levels required when called: 6
  9477 ;; This function calls:
  9478 ;;		_Nrf24_readRegister
  9479 ;;		_Nrf24_writeRegister
  9480 ;; This function is called by:
  9481 ;;		_sender
  9482 ;; This function uses a non-reentrant model
  9483 ;;
  9484                           
  9485                           	psect	text2
  9486   010E04                     __ptext2:
  9487                           	callstack 0
  9488   010E04                     _Nrf24_setTADDR:
  9489                           	callstack 119
  9490   010E04                     
  9491                           ;cmirf.c: 103: int Nrf24_setTADDR(NRF24_t * dev, uint8_t * adr);cmirf.c: 104: {;cmirf.c:
      +                           105:  int ret = 0;
  9492   010E04  0E00               	movlw	0
  9493   010E06  6E1B               	movwf	(Nrf24_setTADDR@ret+1)^(0+1280),c
  9494   010E08  0E00               	movlw	0
  9495   010E0A  6E1A               	movwf	Nrf24_setTADDR@ret^(0+1280),c
  9496   010E0C                     
  9497                           ;cmirf.c: 106:  Nrf24_writeRegister(0x0A, adr, 5);
  9498   010E0C  C510  F50A         	movff	Nrf24_setTADDR@adr,Nrf24_writeRegister@value
  9499   010E10  C511  F50B         	movff	Nrf24_setTADDR@adr+1,Nrf24_writeRegister@value+1
  9500   010E14  0E05               	movlw	5
  9501   010E16  6E0C               	movwf	Nrf24_writeRegister@len^(0+1280),c
  9502   010E18  0E0A               	movlw	10
  9503   010E1A  EC7D  F08B         	call	_Nrf24_writeRegister
  9504   010E1E                     
  9505                           ;cmirf.c: 107:  Nrf24_writeRegister(0x10, adr, 5);
  9506   010E1E  C510  F50A         	movff	Nrf24_setTADDR@adr,Nrf24_writeRegister@value
  9507   010E22  C511  F50B         	movff	Nrf24_setTADDR@adr+1,Nrf24_writeRegister@value+1
  9508   010E26  0E05               	movlw	5
  9509   010E28  6E0C               	movwf	Nrf24_writeRegister@len^(0+1280),c
  9510   010E2A  0E10               	movlw	16
  9511   010E2C  EC7D  F08B         	call	_Nrf24_writeRegister
  9512   010E30                     
  9513                           ;cmirf.c: 108:  uint8_t buffer[5];;cmirf.c: 109:  Nrf24_readRegister(0x0A, buffer, sizeo
      +                          f(buffer));
  9514   010E30  0E15               	movlw	low Nrf24_setTADDR@buffer
  9515   010E32  6E0A               	movwf	Nrf24_readRegister@value^(0+1280),c
  9516   010E34  0E05               	movlw	high Nrf24_setTADDR@buffer
  9517   010E36  6E0B               	movwf	(Nrf24_readRegister@value+1)^(0+1280),c
  9518   010E38  0E05               	movlw	5
  9519   010E3A  6E0C               	movwf	Nrf24_readRegister@len^(0+1280),c
  9520   010E3C  0E0A               	movlw	10
  9521   010E3E  ECC7  F08B         	call	_Nrf24_readRegister
  9522   010E42                     
  9523                           ;cmirf.c: 110:  for (int i=0;i<5;i++) {
  9524   010E42  0E00               	movlw	0
  9525   010E44  6E1D               	movwf	(Nrf24_setTADDR@i+1)^(0+1280),c
  9526   010E46  0E00               	movlw	0
  9527   010E48  6E1C               	movwf	Nrf24_setTADDR@i^(0+1280),c
  9528   010E4A                     l4165:
  9529                           
  9530                           ;cmirf.c: 111:   if (adr[i] != buffer[i]) ret = -1;
  9531   010E4A  0E15               	movlw	low Nrf24_setTADDR@buffer
  9532   010E4C  241C               	addwf	Nrf24_setTADDR@i^(0+1280),w,c
  9533   010E4E  6ED9               	movwf	fsr2l,c
  9534   010E50  0E05               	movlw	high Nrf24_setTADDR@buffer
  9535   010E52  201D               	addwfc	(Nrf24_setTADDR@i+1)^(0+1280),w,c
  9536   010E54  6EDA               	movwf	fsr2h,c
  9537   010E56  501C               	movf	Nrf24_setTADDR@i^(0+1280),w,c
  9538   010E58  2410               	addwf	Nrf24_setTADDR@adr^(0+1280),w,c
  9539   010E5A  6E13               	movwf	(??_Nrf24_setTADDR+1)^(0+1280),c
  9540   010E5C  501D               	movf	(Nrf24_setTADDR@i+1)^(0+1280),w,c
  9541   010E5E  2011               	addwfc	(Nrf24_setTADDR@adr+1)^(0+1280),w,c
  9542   010E60  6E14               	movwf	(??_Nrf24_setTADDR+2)^(0+1280),c
  9543   010E62  C513  F4F6         	movff	??_Nrf24_setTADDR+1,tblptrl
  9544   010E66  C514  F4F7         	movff	??_Nrf24_setTADDR+2,tblptrh
  9545   010E6A                     	if	0	;tblptru may be non-zero
  9546   010E6A                     	endif
  9547   010E6A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9548   010E6A  0E00               	movlw	low (__mediumconst shr (0+16))
  9549   010E6C  6EF8               	movwf	tblptru,c
  9550   010E6E                     	endif
  9551   010E6E  50DE               	movf	postinc2,w,c
  9552   010E70  0009               	tblrd		*+
  9553   010E72  18F5               	xorwf	tablat,w,c
  9554   010E74  B4D8               	btfsc	status,2,c
  9555   010E76  EF3F  F087         	goto	u3351
  9556   010E7A  EF41  F087         	goto	u3350
  9557   010E7E                     u3351:
  9558   010E7E  EF43  F087         	goto	l4169
  9559   010E82                     u3350:
  9560   010E82  681A               	setf	Nrf24_setTADDR@ret^(0+1280),c
  9561   010E84  681B               	setf	(Nrf24_setTADDR@ret+1)^(0+1280),c
  9562   010E86                     l4169:
  9563                           
  9564                           ;cmirf.c: 112:  }
  9565   010E86  4A1C               	infsnz	Nrf24_setTADDR@i^(0+1280),f,c
  9566   010E88  2A1D               	incf	(Nrf24_setTADDR@i+1)^(0+1280),f,c
  9567   010E8A  BE1D               	btfsc	(Nrf24_setTADDR@i+1)^(0+1280),7,c
  9568   010E8C  EF51  F087         	goto	u3361
  9569   010E90  501D               	movf	(Nrf24_setTADDR@i+1)^(0+1280),w,c
  9570   010E92  E109               	bnz	u3360
  9571   010E94  0E05               	movlw	5
  9572   010E96  5C1C               	subwf	Nrf24_setTADDR@i^(0+1280),w,c
  9573   010E98  A0D8               	btfss	status,0,c
  9574   010E9A  EF51  F087         	goto	u3361
  9575   010E9E  EF53  F087         	goto	u3360
  9576   010EA2                     u3361:
  9577   010EA2  EF25  F087         	goto	l4165
  9578   010EA6                     u3360:
  9579   010EA6                     
  9580                           ;cmirf.c: 113:  return ret;
  9581   010EA6  C51A  F50E         	movff	Nrf24_setTADDR@ret,?_Nrf24_setTADDR
  9582   010EAA  C51B  F50F         	movff	Nrf24_setTADDR@ret+1,?_Nrf24_setTADDR+1
  9583   010EAE  0012               	return		;funcret
  9584   010EB0                     __end_of_Nrf24_setTADDR:
  9585                           	callstack 0
  9586                           
  9587 ;; *************** function _Nrf24_writeRegister *****************
  9588 ;; Defined at:
  9589 ;;		line 206 in file "cmirf.c"
  9590 ;; Parameters:    Size  Location     Type
  9591 ;;  reg             1    wreg     unsigned char 
  9592 ;;  value           2    9[COMRAM] PTR unsigned char 
  9593 ;;		 -> STR_1(6), 
  9594 ;;  len             1   11[COMRAM] unsigned char 
  9595 ;; Auto vars:     Size  Location     Type
  9596 ;;  reg             1   12[COMRAM] unsigned char 
  9597 ;; Return value:  Size  Location     Type
  9598 ;;                  1    wreg      void 
  9599 ;; Registers used:
  9600 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9601 ;; Tracked objects:
  9602 ;;		On entry : 0/0
  9603 ;;		On exit  : 0/0
  9604 ;;		Unchanged: 0/0
  9605 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  9606 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9607 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9609 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9610 ;;Total ram usage:        4 bytes
  9611 ;; Hardware stack levels used: 1
  9612 ;; Hardware stack levels required when called: 5
  9613 ;; This function calls:
  9614 ;;		_SPI1_ByteExchange
  9615 ;;		_SPI_write_buff
  9616 ;; This function is called by:
  9617 ;;		_Nrf24_setTADDR
  9618 ;;		_Nrf24_setRADDR
  9619 ;; This function uses a non-reentrant model
  9620 ;;
  9621                           
  9622                           	psect	text3
  9623   0116FA                     __ptext3:
  9624                           	callstack 0
  9625   0116FA                     _Nrf24_writeRegister:
  9626                           	callstack 119
  9627                           
  9628                           ;incstack = 0
  9629                           ;Nrf24_writeRegister@reg stored from wreg
  9630   0116FA  6E0D               	movwf	Nrf24_writeRegister@reg^(0+1280),c
  9631   0116FC                     
  9632                           ;cmirf.c: 206: void Nrf24_writeRegister(uint8_t reg, uint8_t * value, uint8_t len);cmirf
      +                          .c: 207: {;cmirf.c: 208:     if(len) {
  9633   0116FC  500C               	movf	Nrf24_writeRegister@len^(0+1280),w,c
  9634   0116FE  B4D8               	btfsc	status,2,c
  9635   011700  EF84  F08B         	goto	u3181
  9636   011704  EF86  F08B         	goto	u3180
  9637   011708                     u3181:
  9638   011708  EF95  F08B         	goto	l641
  9639   01170C                     u3180:
  9640   01170C  92C0               	bcf	192,1,c	;volatile
  9641   01170E                     
  9642                           ;cmirf.c: 210:         SPI1_ByteExchange(0x20 | (0x1F & reg));
  9643   01170E  500D               	movf	Nrf24_writeRegister@reg^(0+1280),w,c
  9644   011710  0B1F               	andlw	31
  9645   011712  0920               	iorlw	32
  9646   011714  EC21  F08C         	call	_SPI1_ByteExchange
  9647   011718                     
  9648                           ;cmirf.c: 211:         SPI_write_buff(value, len);
  9649   011718  C50A  F506         	movff	Nrf24_writeRegister@value,SPI_write_buff@buffer
  9650   01171C  C50B  F507         	movff	Nrf24_writeRegister@value+1,SPI_write_buff@buffer+1
  9651   011720  C50C  F508         	movff	Nrf24_writeRegister@len,SPI_write_buff@bytes
  9652   011724  EC2B  F08A         	call	_SPI_write_buff	;wreg free
  9653   011728  82C0               	bsf	192,1,c	;volatile
  9654   01172A                     l641:
  9655   01172A  0012               	return		;funcret
  9656   01172C                     __end_of_Nrf24_writeRegister:
  9657                           	callstack 0
  9658                           
  9659 ;; *************** function _Nrf24_send *****************
  9660 ;; Defined at:
  9661 ;;		line 218 in file "cmirf.c"
  9662 ;; Parameters:    Size  Location     Type
  9663 ;;  dev             2   14[COMRAM] PTR struct .
  9664 ;;		 -> sender@nrf(3), 
  9665 ;;  value           2   16[COMRAM] PTR unsigned char 
  9666 ;;		 -> sender@buf(32), 
  9667 ;; Auto vars:     Size  Location     Type
  9668 ;;  status          1   19[COMRAM] unsigned char 
  9669 ;; Return value:  Size  Location     Type
  9670 ;;                  1    wreg      void 
  9671 ;; Registers used:
  9672 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9673 ;; Tracked objects:
  9674 ;;		On entry : 0/0
  9675 ;;		On exit  : 0/0
  9676 ;;		Unchanged: 0/0
  9677 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  9678 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9679 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9680 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9681 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9682 ;;Total ram usage:        6 bytes
  9683 ;; Hardware stack levels used: 1
  9684 ;; Hardware stack levels required when called: 7
  9685 ;; This function calls:
  9686 ;;		_Nrf24_getStatus
  9687 ;;		_Nrf24_powerUpTx
  9688 ;;		_SPI1_ByteExchange
  9689 ;;		_SPI_write_buff
  9690 ;; This function is called by:
  9691 ;;		_sender
  9692 ;; This function uses a non-reentrant model
  9693 ;;
  9694                           
  9695                           	psect	text4
  9696   01113C                     __ptext4:
  9697                           	callstack 0
  9698   01113C                     _Nrf24_send:
  9699                           	callstack 118
  9700   01113C  ECE9  F08C         	call	_Nrf24_getStatus	;wreg free
  9701                           
  9702                           ;cmirf.c: 222:  while (dev->PTX)
  9703   011140  EFB7  F088         	goto	l4189
  9704   011144                     l4183:
  9705                           
  9706                           ;cmirf.c: 223:  {;cmirf.c: 224:   status = Nrf24_getStatus();
  9707   011144  ECE9  F08C         	call	_Nrf24_getStatus	;wreg free
  9708   011148  6E14               	movwf	Nrf24_send@status^(0+1280),c
  9709   01114A                     
  9710                           ;cmirf.c: 225:   if ((status & ((1 << 5) | (1 << 4))))
  9711   01114A  C514  F513         	movff	Nrf24_send@status,??_Nrf24_send
  9712   01114E  0E30               	movlw	48
  9713   011150  1613               	andwf	??_Nrf24_send^(0+1280),f,c
  9714   011152  B4D8               	btfsc	status,2,c
  9715   011154  EFAE  F088         	goto	u3371
  9716   011158  EFB0  F088         	goto	u3370
  9717   01115C                     u3371:
  9718   01115C  EFB7  F088         	goto	l4189
  9719   011160                     u3370:
  9720   011160                     
  9721                           ;cmirf.c: 226:   {;cmirf.c: 227:    dev->PTX = 0;
  9722   011160  C50F  F4D9         	movff	Nrf24_send@dev,fsr2l
  9723   011164  C510  F4DA         	movff	Nrf24_send@dev+1,fsr2h
  9724   011168  6ADF               	clrf	indf2,c
  9725                           
  9726                           ;cmirf.c: 228:    break;
  9727   01116A  EFC3  F088         	goto	l648
  9728   01116E                     l4189:
  9729                           
  9730                           ;cmirf.c: 222:  while (dev->PTX)
  9731   01116E  C50F  F4D9         	movff	Nrf24_send@dev,fsr2l
  9732   011172  C510  F4DA         	movff	Nrf24_send@dev+1,fsr2h
  9733   011176  50DF               	movf	indf2,w,c
  9734   011178  A4D8               	btfss	status,2,c
  9735   01117A  EFC1  F088         	goto	u3381
  9736   01117E  EFC3  F088         	goto	u3380
  9737   011182                     u3381:
  9738   011182  EFA2  F088         	goto	l4183
  9739   011186                     u3380:
  9740   011186                     l648:
  9741   011186  94C0               	bcf	192,2,c	;volatile
  9742   011188                     
  9743                           ;cmirf.c: 232:  Nrf24_powerUpTx(dev);
  9744   011188  C50F  F508         	movff	Nrf24_send@dev,Nrf24_powerUpTx@dev
  9745   01118C  C510  F509         	movff	Nrf24_send@dev+1,Nrf24_powerUpTx@dev+1
  9746   011190  EC84  F08C         	call	_Nrf24_powerUpTx	;wreg free
  9747   011194  92C0               	bcf	192,1,c	;volatile
  9748   011196                     
  9749                           ;cmirf.c: 234:  SPI1_ByteExchange(0xE1);
  9750   011196  0EE1               	movlw	225
  9751   011198  EC21  F08C         	call	_SPI1_ByteExchange
  9752   01119C  82C0               	bsf	192,1,c	;volatile
  9753   01119E  92C0               	bcf	192,1,c	;volatile
  9754   0111A0                     
  9755                           ;cmirf.c: 237:  SPI1_ByteExchange(0xA0);
  9756   0111A0  0EA0               	movlw	160
  9757   0111A2  EC21  F08C         	call	_SPI1_ByteExchange
  9758   0111A6                     
  9759                           ;cmirf.c: 238:  SPI_write_buff(value, dev->payload);
  9760   0111A6  C511  F506         	movff	Nrf24_send@value,SPI_write_buff@buffer
  9761   0111AA  C512  F507         	movff	Nrf24_send@value+1,SPI_write_buff@buffer+1
  9762   0111AE  EE20 F002          	lfsr	2,2
  9763   0111B2  500F               	movf	Nrf24_send@dev^(0+1280),w,c
  9764   0111B4  26D9               	addwf	fsr2l,f,c
  9765   0111B6  5010               	movf	(Nrf24_send@dev+1)^(0+1280),w,c
  9766   0111B8  22DA               	addwfc	fsr2h,f,c
  9767   0111BA  50DF               	movf	indf2,w,c
  9768   0111BC  6E08               	movwf	SPI_write_buff@bytes^(0+1280),c
  9769   0111BE  EC2B  F08A         	call	_SPI_write_buff	;wreg free
  9770   0111C2  82C0               	bsf	192,1,c	;volatile
  9771   0111C4  84C0               	bsf	192,2,c	;volatile
  9772   0111C6  0012               	return		;funcret
  9773   0111C8                     __end_of_Nrf24_send:
  9774                           	callstack 0
  9775                           
  9776 ;; *************** function _SPI_write_buff *****************
  9777 ;; Defined at:
  9778 ;;		line 42 in file "cmirf.c"
  9779 ;; Parameters:    Size  Location     Type
  9780 ;;  buffer          2    5[COMRAM] PTR unsigned char 
  9781 ;;		 -> sender@buf(32), STR_1(6), 
  9782 ;;  bytes           1    7[COMRAM] unsigned char 
  9783 ;; Auto vars:     Size  Location     Type
  9784 ;;  i               1    8[COMRAM] unsigned char 
  9785 ;; Return value:  Size  Location     Type
  9786 ;;                  1    wreg      void 
  9787 ;; Registers used:
  9788 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9789 ;; Tracked objects:
  9790 ;;		On entry : 0/0
  9791 ;;		On exit  : 0/0
  9792 ;;		Unchanged: 0/0
  9793 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  9794 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9795 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9797 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9798 ;;Total ram usage:        4 bytes
  9799 ;; Hardware stack levels used: 1
  9800 ;; Hardware stack levels required when called: 4
  9801 ;; This function calls:
  9802 ;;		_DELAY_microseconds
  9803 ;;		_SPI1_ByteExchange
  9804 ;; This function is called by:
  9805 ;;		_Nrf24_writeRegister
  9806 ;;		_Nrf24_send
  9807 ;; This function uses a non-reentrant model
  9808 ;;
  9809                           
  9810                           	psect	text5
  9811   011456                     __ptext5:
  9812                           	callstack 0
  9813   011456                     _SPI_write_buff:
  9814                           	callstack 119
  9815   011456  92C0               	bcf	192,1,c	;volatile
  9816   011458                     
  9817                           ;cmirf.c: 44:     unsigned char i;;cmirf.c: 45:     for (i = 0; i < bytes; i++) {
  9818   011458  6A09               	clrf	SPI_write_buff@i^(0+1280),c
  9819   01145A  EF4B  F08A         	goto	l3971
  9820   01145E                     l3963:
  9821                           
  9822                           ;cmirf.c: 46:         SPI1_ByteExchange(*buffer);
  9823   01145E  C506  F4F6         	movff	SPI_write_buff@buffer,tblptrl
  9824   011462  C507  F4F7         	movff	SPI_write_buff@buffer+1,tblptrh
  9825   011466  0E00               	movlw	low (__mediumconst shr (0+16))
  9826   011468  6EF8               	movwf	tblptru,c
  9827   01146A  0E25               	movlw	(high __ramtop+-1)
  9828   01146C  64F7               	cpfsgt	tblptrh,c
  9829   01146E  D003               	bra	u3137
  9830   011470  0008               	tblrd		*
  9831   011472  50F5               	movf	tablat,w,c
  9832   011474  D005               	bra	u3130
  9833   011476                     u3137:
  9834   011476  C4F6 F4E9          	movff	tblptrl,fsr0l
  9835   01147A  C4F7 F4EA          	movff	tblptrh,fsr0h
  9836   01147E  50EF               	movf	indf0,w,c
  9837   011480                     u3130:
  9838   011480  EC21  F08C         	call	_SPI1_ByteExchange
  9839   011484                     
  9840                           ;cmirf.c: 47:         buffer++;
  9841   011484  4A06               	infsnz	SPI_write_buff@buffer^(0+1280),f,c
  9842   011486  2A07               	incf	(SPI_write_buff@buffer+1)^(0+1280),f,c
  9843   011488                     
  9844                           ;cmirf.c: 48:         DELAY_microseconds(10);
  9845   011488  0E00               	movlw	0
  9846   01148A  6E05               	movwf	(DELAY_microseconds@microseconds+1)^(0+1280),c
  9847   01148C  0E0A               	movlw	10
  9848   01148E  6E04               	movwf	DELAY_microseconds@microseconds^(0+1280),c
  9849   011490  EC56  F08A         	call	_DELAY_microseconds	;wreg free
  9850   011494                     
  9851                           ;cmirf.c: 49:     }
  9852   011494  2A09               	incf	SPI_write_buff@i^(0+1280),f,c
  9853   011496                     l3971:
  9854   011496  5008               	movf	SPI_write_buff@bytes^(0+1280),w,c
  9855   011498  5C09               	subwf	SPI_write_buff@i^(0+1280),w,c
  9856   01149A  A0D8               	btfss	status,0,c
  9857   01149C  EF52  F08A         	goto	u3141
  9858   0114A0  EF54  F08A         	goto	u3140
  9859   0114A4                     u3141:
  9860   0114A4  EF2F  F08A         	goto	l3963
  9861   0114A8                     u3140:
  9862   0114A8  82C0               	bsf	192,1,c	;volatile
  9863   0114AA  0012               	return		;funcret
  9864   0114AC                     __end_of_SPI_write_buff:
  9865                           	callstack 0
  9866                           
  9867 ;; *************** function _DELAY_microseconds *****************
  9868 ;; Defined at:
  9869 ;;		line 43 in file "mcc_generated_files/timer/src/delay.c"
  9870 ;; Parameters:    Size  Location     Type
  9871 ;;  microseconds    2    3[COMRAM] unsigned short 
  9872 ;; Auto vars:     Size  Location     Type
  9873 ;;		None
  9874 ;; Return value:  Size  Location     Type
  9875 ;;                  1    wreg      void 
  9876 ;; Registers used:
  9877 ;;		wreg, status,2, status,0
  9878 ;; Tracked objects:
  9879 ;;		On entry : 0/0
  9880 ;;		On exit  : 0/0
  9881 ;;		Unchanged: 0/0
  9882 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  9883 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9886 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9887 ;;Total ram usage:        2 bytes
  9888 ;; Hardware stack levels used: 1
  9889 ;; Hardware stack levels required when called: 3
  9890 ;; This function calls:
  9891 ;;		Nothing
  9892 ;; This function is called by:
  9893 ;;		_SPI_write_buff
  9894 ;; This function uses a non-reentrant model
  9895 ;;
  9896                           
  9897                           	psect	text6
  9898   0114AC                     __ptext6:
  9899                           	callstack 0
  9900   0114AC                     _DELAY_microseconds:
  9901                           	callstack 119
  9902   0114AC                     
  9903                           ;mcc_generated_files/timer/src/delay.c: 44:     while( microseconds >= 32)
  9904   0114AC  EF60  F08A         	goto	l3049
  9905   0114B0                     l3045:
  9906                           
  9907                           ;mcc_generated_files/timer/src/delay.c: 45:     {;mcc_generated_files/timer/src/delay.c:
      +                           46:         _delay((unsigned long)((32)*(64000000U/4000000.0)));
  9908   0114B0  0EAA               	movlw	170
  9909   0114B2                     u3547:
  9910   0114B2  2EE8               	decfsz	wreg,f,c
  9911   0114B4  D7FE               	bra	u3547
  9912   0114B6  D000               	nop2	
  9913   0114B8                     
  9914                           ;mcc_generated_files/timer/src/delay.c: 47:         microseconds -= 32;
  9915   0114B8  0E20               	movlw	32
  9916   0114BA  5E04               	subwf	DELAY_microseconds@microseconds^(0+1280),f,c
  9917   0114BC  0E00               	movlw	0
  9918   0114BE  5A05               	subwfb	(DELAY_microseconds@microseconds+1)^(0+1280),f,c
  9919   0114C0                     l3049:
  9920                           
  9921                           ;mcc_generated_files/timer/src/delay.c: 44:     while( microseconds >= 32)
  9922   0114C0  5005               	movf	(DELAY_microseconds@microseconds+1)^(0+1280),w,c
  9923   0114C2  E107               	bnz	u1911
  9924   0114C4  0E20               	movlw	32
  9925   0114C6  5C04               	subwf	DELAY_microseconds@microseconds^(0+1280),w,c
  9926   0114C8  B0D8               	btfsc	status,0,c
  9927   0114CA  EF69  F08A         	goto	u1911
  9928   0114CE  EF6B  F08A         	goto	u1910
  9929   0114D2                     u1911:
  9930   0114D2  EF58  F08A         	goto	l3045
  9931   0114D6                     u1910:
  9932   0114D6  EF71  F08A         	goto	l3053
  9933   0114DA                     l3051:
  9934                           
  9935                           ;mcc_generated_files/timer/src/delay.c: 51:     {;mcc_generated_files/timer/src/delay.c:
      +                           52:         _delay((unsigned long)((1)*(64000000U/4000000.0)));
  9936   0114DA  0E05               	movlw	5
  9937   0114DC                     u3557:
  9938   0114DC  2EE8               	decfsz	wreg,f,c
  9939   0114DE  D7FE               	bra	u3557
  9940   0114E0  0000               	nop	
  9941   0114E2                     l3053:
  9942                           
  9943                           ;mcc_generated_files/timer/src/delay.c: 50:     while(microseconds--)
  9944   0114E2  0604               	decf	DELAY_microseconds@microseconds^(0+1280),f,c
  9945   0114E4  A0D8               	btfss	status,0,c
  9946   0114E6  0605               	decf	(DELAY_microseconds@microseconds+1)^(0+1280),f,c
  9947   0114E8  2804               	incf	DELAY_microseconds@microseconds^(0+1280),w,c
  9948   0114EA  E106               	bnz	u1921
  9949   0114EC  2805               	incf	(DELAY_microseconds@microseconds+1)^(0+1280),w,c
  9950   0114EE  A4D8               	btfss	status,2,c
  9951   0114F0  EF7C  F08A         	goto	u1921
  9952   0114F4  EF7E  F08A         	goto	u1920
  9953   0114F8                     u1921:
  9954   0114F8  EF6D  F08A         	goto	l3051
  9955   0114FC                     u1920:
  9956   0114FC  0012               	return		;funcret
  9957   0114FE                     __end_of_DELAY_microseconds:
  9958                           	callstack 0
  9959                           
  9960 ;; *************** function _Nrf24_powerUpTx *****************
  9961 ;; Defined at:
  9962 ;;		line 306 in file "cmirf.c"
  9963 ;; Parameters:    Size  Location     Type
  9964 ;;  dev             2    7[COMRAM] PTR struct .
  9965 ;;		 -> sender@nrf(3), 
  9966 ;; Auto vars:     Size  Location     Type
  9967 ;;		None
  9968 ;; Return value:  Size  Location     Type
  9969 ;;                  1    wreg      void 
  9970 ;; Registers used:
  9971 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9972 ;; Tracked objects:
  9973 ;;		On entry : 0/0
  9974 ;;		On exit  : 0/0
  9975 ;;		Unchanged: 0/0
  9976 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  9977 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9980 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9981 ;;Total ram usage:        2 bytes
  9982 ;; Hardware stack levels used: 1
  9983 ;; Hardware stack levels required when called: 5
  9984 ;; This function calls:
  9985 ;;		_Nrf24_configRegister
  9986 ;; This function is called by:
  9987 ;;		_Nrf24_send
  9988 ;; This function uses a non-reentrant model
  9989 ;;
  9990                           
  9991                           	psect	text7
  9992   011908                     __ptext7:
  9993                           	callstack 0
  9994   011908                     _Nrf24_powerUpTx:
  9995                           	callstack 119
  9996   011908                     
  9997                           ;cmirf.c: 307:  dev->PTX = 1;
  9998   011908  C508  F4D9         	movff	Nrf24_powerUpTx@dev,fsr2l
  9999   01190C  C509  F4DA         	movff	Nrf24_powerUpTx@dev+1,fsr2h
 10000   011910  0E01               	movlw	1
 10001   011912  6EDF               	movwf	indf2,c
 10002   011914                     
 10003                           ;cmirf.c: 308:  Nrf24_configRegister(0x00, ((1<<5) | (1<<3) | (0<<2) ) | ( (1 << 1) | (0
      +                           << 0) ) );
 10004   011914  0E2A               	movlw	42
 10005   011916  6E06               	movwf	Nrf24_configRegister@value^(0+1280),c
 10006   011918  0E00               	movlw	0
 10007   01191A  ECD1  F08C         	call	_Nrf24_configRegister
 10008   01191E                     
 10009                           ;cmirf.c: 309:  Nrf24_configRegister(0x07, (1 << 5) | (1 << 4));
 10010   01191E  0E30               	movlw	48
 10011   011920  6E06               	movwf	Nrf24_configRegister@value^(0+1280),c
 10012   011922  0E07               	movlw	7
 10013   011924  ECD1  F08C         	call	_Nrf24_configRegister
 10014   011928  0012               	return		;funcret
 10015   01192A                     __end_of_Nrf24_powerUpTx:
 10016                           	callstack 0
 10017                           
 10018 ;; *************** function _Nrf24_printDetails *****************
 10019 ;; Defined at:
 10020 ;;		line 362 in file "cmirf.c"
 10021 ;; Parameters:    Size  Location     Type
 10022 ;;  dev             2   87[COMRAM] PTR struct .
 10023 ;;		 -> sender@nrf(3), 
 10024 ;; Auto vars:     Size  Location     Type
 10025 ;;  delay           2   11[BANK5 ] short 
 10026 ;;  retransmit      1   13[BANK5 ] unsigned char 
 10027 ;; Return value:  Size  Location     Type
 10028 ;;                  1    wreg      void 
 10029 ;; Registers used:
 10030 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10031 ;; Tracked objects:
 10032 ;;		On entry : 0/0
 10033 ;;		On exit  : 0/0
 10034 ;;		Unchanged: 0/0
 10035 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 10036 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10037 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10038 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10039 ;;      Totals:         2       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10040 ;;Total ram usage:        9 bytes
 10041 ;; Hardware stack levels used: 1
 10042 ;; Hardware stack levels required when called: 12
 10043 ;; This function calls:
 10044 ;;		_Nrf24_getCRCLength
 10045 ;;		_Nrf24_getDataRate
 10046 ;;		_Nrf24_getPALevel
 10047 ;;		_Nrf24_getRetransmitDelay
 10048 ;;		_Nrf24_getStatus
 10049 ;;		_Nrf24_print_address_register
 10050 ;;		_Nrf24_print_byte_register
 10051 ;;		_Nrf24_print_status
 10052 ;;		_printf
 10053 ;; This function is called by:
 10054 ;;		_sender
 10055 ;; This function uses a non-reentrant model
 10056 ;;
 10057                           
 10058                           	psect	text8
 10059   01038E                     __ptext8:
 10060                           	callstack 0
 10061   01038E                     _Nrf24_printDetails:
 10062                           	callstack 113
 10063   01038E                     
 10064                           ;cmirf.c: 362: void Nrf24_printDetails(NRF24_t * dev);cmirf.c: 363: {;cmirf.c: 364:  pri
      +                          ntf("================ NRF Configuration ================\n");
 10065   01038E  0EFE               	movlw	low STR_2
 10066   010390  6E41               	movwf	printf@fmt^(0+1280),c
 10067   010392  0EFE               	movlw	high STR_2
 10068   010394  6E42               	movwf	(printf@fmt+1)^(0+1280),c
 10069   010396  EC5F  F08C         	call	_printf	;wreg free
 10070                           
 10071                           ;cmirf.c: 366:  Nrf24_print_status(Nrf24_getStatus());
 10072   01039A  ECE9  F08C         	call	_Nrf24_getStatus	;wreg free
 10073   01039E  ECE4  F088         	call	_Nrf24_print_status
 10074                           
 10075                           ;cmirf.c: 368:  Nrf24_print_address_register(dev, "RX_ADDR_P0-1", 0x0A, 2);
 10076   0103A2  C558  F551         	movff	Nrf24_printDetails@dev,Nrf24_print_address_register@dev
 10077   0103A6  C559  F552         	movff	Nrf24_printDetails@dev+1,Nrf24_print_address_register@dev+1
 10078   0103AA  0E89               	movlw	low STR_3
 10079   0103AC  6E53               	movwf	Nrf24_print_address_register@name^(0+1280),c
 10080   0103AE  0EFF               	movlw	high STR_3
 10081   0103B0  6E54               	movwf	(Nrf24_print_address_register@name+1)^(0+1280),c
 10082   0103B2  0E0A               	movlw	10
 10083   0103B4  6E55               	movwf	Nrf24_print_address_register@reg^(0+1280),c
 10084   0103B6  0E02               	movlw	2
 10085   0103B8  6E56               	movwf	Nrf24_print_address_register@qty^(0+1280),c
 10086   0103BA  ECAE  F087         	call	_Nrf24_print_address_register	;wreg free
 10087                           
 10088                           ;cmirf.c: 369:  Nrf24_print_byte_register(dev, "RX_ADDR_P2-5", 0x0C, 4);
 10089   0103BE  C558  F551         	movff	Nrf24_printDetails@dev,Nrf24_print_byte_register@dev
 10090   0103C2  C559  F552         	movff	Nrf24_printDetails@dev+1,Nrf24_print_byte_register@dev+1
 10091   0103C6  0E96               	movlw	low STR_4
 10092   0103C8  6E53               	movwf	Nrf24_print_byte_register@name^(0+1280),c
 10093   0103CA  0EFF               	movlw	high STR_4
 10094   0103CC  6E54               	movwf	(Nrf24_print_byte_register@name+1)^(0+1280),c
 10095   0103CE  0E0C               	movlw	12
 10096   0103D0  6E55               	movwf	Nrf24_print_byte_register@reg^(0+1280),c
 10097   0103D2  0E04               	movlw	4
 10098   0103D4  6E56               	movwf	Nrf24_print_byte_register@qty^(0+1280),c
 10099   0103D6  ECFC  F089         	call	_Nrf24_print_byte_register	;wreg free
 10100                           
 10101                           ;cmirf.c: 370:  Nrf24_print_address_register(dev, "TX_ADDR\t", 0x10, 1);
 10102   0103DA  C558  F551         	movff	Nrf24_printDetails@dev,Nrf24_print_address_register@dev
 10103   0103DE  C559  F552         	movff	Nrf24_printDetails@dev+1,Nrf24_print_address_register@dev+1
 10104   0103E2  0EB8               	movlw	low STR_5
 10105   0103E4  6E53               	movwf	Nrf24_print_address_register@name^(0+1280),c
 10106   0103E6  0EFF               	movlw	high STR_5
 10107   0103E8  6E54               	movwf	(Nrf24_print_address_register@name+1)^(0+1280),c
 10108   0103EA  0E10               	movlw	16
 10109   0103EC  6E55               	movwf	Nrf24_print_address_register@reg^(0+1280),c
 10110   0103EE  0E01               	movlw	1
 10111   0103F0  6E56               	movwf	Nrf24_print_address_register@qty^(0+1280),c
 10112   0103F2  ECAE  F087         	call	_Nrf24_print_address_register	;wreg free
 10113                           
 10114                           ;cmirf.c: 372:  Nrf24_print_byte_register(dev, "RX_PW_P0-6", 0x11, 6);
 10115   0103F6  C558  F551         	movff	Nrf24_printDetails@dev,Nrf24_print_byte_register@dev
 10116   0103FA  C559  F552         	movff	Nrf24_printDetails@dev+1,Nrf24_print_byte_register@dev+1
 10117   0103FE  0EA3               	movlw	low STR_6
 10118   010400  6E53               	movwf	Nrf24_print_byte_register@name^(0+1280),c
 10119   010402  0EFF               	movlw	high STR_6
 10120   010404  6E54               	movwf	(Nrf24_print_byte_register@name+1)^(0+1280),c
 10121   010406  0E11               	movlw	17
 10122   010408  6E55               	movwf	Nrf24_print_byte_register@reg^(0+1280),c
 10123   01040A  0E06               	movlw	6
 10124   01040C  6E56               	movwf	Nrf24_print_byte_register@qty^(0+1280),c
 10125   01040E  ECFC  F089         	call	_Nrf24_print_byte_register	;wreg free
 10126                           
 10127                           ;cmirf.c: 373:  Nrf24_print_byte_register(dev, "EN_AA\t", 0x01, 1);
 10128   010412  C558  F551         	movff	Nrf24_printDetails@dev,Nrf24_print_byte_register@dev
 10129   010416  C559  F552         	movff	Nrf24_printDetails@dev+1,Nrf24_print_byte_register@dev+1
 10130   01041A  0EE1               	movlw	low STR_7
 10131   01041C  6E53               	movwf	Nrf24_print_byte_register@name^(0+1280),c
 10132   01041E  0EFF               	movlw	high STR_7
 10133   010420  6E54               	movwf	(Nrf24_print_byte_register@name+1)^(0+1280),c
 10134   010422  0E01               	movlw	1
 10135   010424  6E55               	movwf	Nrf24_print_byte_register@reg^(0+1280),c
 10136   010426  0E01               	movlw	1
 10137   010428  6E56               	movwf	Nrf24_print_byte_register@qty^(0+1280),c
 10138   01042A  ECFC  F089         	call	_Nrf24_print_byte_register	;wreg free
 10139                           
 10140                           ;cmirf.c: 374:  Nrf24_print_byte_register(dev, "EN_RXADDR", 0x02, 1);
 10141   01042E  C558  F551         	movff	Nrf24_printDetails@dev,Nrf24_print_byte_register@dev
 10142   010432  C559  F552         	movff	Nrf24_printDetails@dev+1,Nrf24_print_byte_register@dev+1
 10143   010436  0EAE               	movlw	low STR_8
 10144   010438  6E53               	movwf	Nrf24_print_byte_register@name^(0+1280),c
 10145   01043A  0EFF               	movlw	high STR_8
 10146   01043C  6E54               	movwf	(Nrf24_print_byte_register@name+1)^(0+1280),c
 10147   01043E  0E02               	movlw	2
 10148   010440  6E55               	movwf	Nrf24_print_byte_register@reg^(0+1280),c
 10149   010442  0E01               	movlw	1
 10150   010444  6E56               	movwf	Nrf24_print_byte_register@qty^(0+1280),c
 10151   010446  ECFC  F089         	call	_Nrf24_print_byte_register	;wreg free
 10152                           
 10153                           ;cmirf.c: 375:  Nrf24_print_byte_register(dev, "RF_CH\t", 0x05, 1);
 10154   01044A  C558  F551         	movff	Nrf24_printDetails@dev,Nrf24_print_byte_register@dev
 10155   01044E  C559  F552         	movff	Nrf24_printDetails@dev+1,Nrf24_print_byte_register@dev+1
 10156   010452  0EE8               	movlw	low STR_9
 10157   010454  6E53               	movwf	Nrf24_print_byte_register@name^(0+1280),c
 10158   010456  0EFF               	movlw	high STR_9
 10159   010458  6E54               	movwf	(Nrf24_print_byte_register@name+1)^(0+1280),c
 10160   01045A  0E05               	movlw	5
 10161   01045C  6E55               	movwf	Nrf24_print_byte_register@reg^(0+1280),c
 10162   01045E  0E01               	movlw	1
 10163   010460  6E56               	movwf	Nrf24_print_byte_register@qty^(0+1280),c
 10164   010462  ECFC  F089         	call	_Nrf24_print_byte_register	;wreg free
 10165                           
 10166                           ;cmirf.c: 376:  Nrf24_print_byte_register(dev, "RF_SETUP", 0x06, 1);
 10167   010466  C558  F551         	movff	Nrf24_printDetails@dev,Nrf24_print_byte_register@dev
 10168   01046A  C559  F552         	movff	Nrf24_printDetails@dev+1,Nrf24_print_byte_register@dev+1
 10169   01046E  0EC1               	movlw	low STR_10
 10170   010470  6E53               	movwf	Nrf24_print_byte_register@name^(0+1280),c
 10171   010472  0EFF               	movlw	high STR_10
 10172   010474  6E54               	movwf	(Nrf24_print_byte_register@name+1)^(0+1280),c
 10173   010476  0E06               	movlw	6
 10174   010478  6E55               	movwf	Nrf24_print_byte_register@reg^(0+1280),c
 10175   01047A  0E01               	movlw	1
 10176   01047C  6E56               	movwf	Nrf24_print_byte_register@qty^(0+1280),c
 10177   01047E  ECFC  F089         	call	_Nrf24_print_byte_register	;wreg free
 10178                           
 10179                           ;cmirf.c: 377:  Nrf24_print_byte_register(dev, "CONFIG\t", 0x00, 1);
 10180   010482  C558  F551         	movff	Nrf24_printDetails@dev,Nrf24_print_byte_register@dev
 10181   010486  C559  F552         	movff	Nrf24_printDetails@dev+1,Nrf24_print_byte_register@dev+1
 10182   01048A  0ECA               	movlw	low STR_11
 10183   01048C  6E53               	movwf	Nrf24_print_byte_register@name^(0+1280),c
 10184   01048E  0EFF               	movlw	high STR_11
 10185   010490  6E54               	movwf	(Nrf24_print_byte_register@name+1)^(0+1280),c
 10186   010492  0E00               	movlw	0
 10187   010494  6E55               	movwf	Nrf24_print_byte_register@reg^(0+1280),c
 10188   010496  0E01               	movlw	1
 10189   010498  6E56               	movwf	Nrf24_print_byte_register@qty^(0+1280),c
 10190   01049A  ECFC  F089         	call	_Nrf24_print_byte_register	;wreg free
 10191                           
 10192                           ;cmirf.c: 378:  Nrf24_print_byte_register(dev, "DYNPD/FEATURE", 0x1C, 2);
 10193   01049E  C558  F551         	movff	Nrf24_printDetails@dev,Nrf24_print_byte_register@dev
 10194   0104A2  C559  F552         	movff	Nrf24_printDetails@dev+1,Nrf24_print_byte_register@dev+1
 10195   0104A6  0E7B               	movlw	low STR_12
 10196   0104A8  6E53               	movwf	Nrf24_print_byte_register@name^(0+1280),c
 10197   0104AA  0EFF               	movlw	high STR_12
 10198   0104AC  6E54               	movwf	(Nrf24_print_byte_register@name+1)^(0+1280),c
 10199   0104AE  0E1C               	movlw	28
 10200   0104B0  6E55               	movwf	Nrf24_print_byte_register@reg^(0+1280),c
 10201   0104B2  0E02               	movlw	2
 10202   0104B4  6E56               	movwf	Nrf24_print_byte_register@qty^(0+1280),c
 10203   0104B6  ECFC  F089         	call	_Nrf24_print_byte_register	;wreg free
 10204                           
 10205                           ;cmirf.c: 380:  printf("Data Rate\t = %s\n",rf24_datarates[Nrf24_getDataRate(dev)]);
 10206   0104BA  0E5A               	movlw	low STR_13
 10207   0104BC  6E41               	movwf	printf@fmt^(0+1280),c
 10208   0104BE  0EFF               	movlw	high STR_13
 10209   0104C0  6E42               	movwf	(printf@fmt+1)^(0+1280),c
 10210   0104C2  C558  F50E         	movff	Nrf24_printDetails@dev,Nrf24_getDataRate@dev
 10211   0104C6  C559  F50F         	movff	Nrf24_printDetails@dev+1,Nrf24_getDataRate@dev+1
 10212   0104CA  ECA8  F08A         	call	_Nrf24_getDataRate	;wreg free
 10213   0104CE  0105               	movlb	5	; () banked
 10214   0104D0  6F9F               	movwf	??_Nrf24_printDetails& (0+255),b
 10215   0104D2  519F               	movf	??_Nrf24_printDetails& (0+255),w,b
 10216   0104D4  0D08               	mullw	8
 10217   0104D6  0E80               	movlw	low _rf24_datarates
 10218   0104D8  24F3               	addwf	243,w,c
 10219   0104DA  6E43               	movwf	(?_printf+2)^(0+1280),c
 10220   0104DC  0E05               	movlw	high _rf24_datarates
 10221   0104DE  20F4               	addwfc	prodh,w,c
 10222   0104E0  6E44               	movwf	(?_printf+3)^(0+1280),c
 10223   0104E2  EC5F  F08C         	call	_printf	;wreg free
 10224                           
 10225                           ;cmirf.c: 387:  printf("CRC Length\t = %s\n", rf24_crclength[Nrf24_getCRCLength(dev)]);
 10226   0104E6  0E48               	movlw	low STR_14
 10227   0104E8  6E41               	movwf	printf@fmt^(0+1280),c
 10228   0104EA  0EFF               	movlw	high STR_14
 10229   0104EC  6E42               	movwf	(printf@fmt+1)^(0+1280),c
 10230   0104EE  C558  F50E         	movff	Nrf24_printDetails@dev,Nrf24_getCRCLength@dev
 10231   0104F2  C559  F50F         	movff	Nrf24_printDetails@dev+1,Nrf24_getCRCLength@dev+1
 10232   0104F6  EC95  F089         	call	_Nrf24_getCRCLength	;wreg free
 10233   0104FA  0105               	movlb	5	; () banked
 10234   0104FC  6F9F               	movwf	??_Nrf24_printDetails& (0+255),b
 10235   0104FE  519F               	movf	??_Nrf24_printDetails& (0+255),w,b
 10236   010500  0D0A               	mullw	10
 10237   010502  0E9A               	movlw	low _rf24_crclength
 10238   010504  24F3               	addwf	243,w,c
 10239   010506  6E43               	movwf	(?_printf+2)^(0+1280),c
 10240   010508  0EFE               	movlw	high _rf24_crclength
 10241   01050A  20F4               	addwfc	prodh,w,c
 10242   01050C  6E44               	movwf	(?_printf+3)^(0+1280),c
 10243   01050E  EC5F  F08C         	call	_printf	;wreg free
 10244                           
 10245                           ;cmirf.c: 389:  printf("PA Power\t = %s\n", rf24_pa_dbm[Nrf24_getPALevel(dev)]);
 10246   010512  0E6B               	movlw	low STR_15
 10247   010514  6E41               	movwf	printf@fmt^(0+1280),c
 10248   010516  0EFF               	movlw	high STR_15
 10249   010518  6E42               	movwf	(printf@fmt+1)^(0+1280),c
 10250   01051A  C558  F50E         	movff	Nrf24_printDetails@dev,Nrf24_getPALevel@dev
 10251   01051E  C559  F50F         	movff	Nrf24_printDetails@dev+1,Nrf24_getPALevel@dev+1
 10252   010522  ECB6  F08C         	call	_Nrf24_getPALevel	;wreg free
 10253   010526  0105               	movlb	5	; () banked
 10254   010528  6F9F               	movwf	??_Nrf24_printDetails& (0+255),b
 10255   01052A  519F               	movf	??_Nrf24_printDetails& (0+255),w,b
 10256   01052C  0D08               	mullw	8
 10257   01052E  0E00               	movlw	low _rf24_pa_dbm
 10258   010530  24F3               	addwf	243,w,c
 10259   010532  6E43               	movwf	(?_printf+2)^(0+1280),c
 10260   010534  0E06               	movlw	high _rf24_pa_dbm
 10261   010536  20F4               	addwfc	prodh,w,c
 10262   010538  6E44               	movwf	(?_printf+3)^(0+1280),c
 10263   01053A  EC5F  F08C         	call	_printf	;wreg free
 10264   01053E                     
 10265                           ;cmirf.c: 390:  uint8_t retransmit = Nrf24_getRetransmitDelay(dev);
 10266   01053E  C558  F50E         	movff	Nrf24_printDetails@dev,Nrf24_getRetransmitDelay@dev
 10267   010542  C559  F50F         	movff	Nrf24_printDetails@dev+1,Nrf24_getRetransmitDelay@dev+1
 10268   010546  ECC5  F08C         	call	_Nrf24_getRetransmitDelay	;wreg free
 10269   01054A  0105               	movlb	5	; () banked
 10270   01054C  6FA5               	movwf	Nrf24_printDetails@retransmit& (0+255),b
 10271   01054E                     
 10272                           ; BSR set to: 5
 10273                           ;cmirf.c: 391:  int16_t delay = (retransmit+1)*250;
 10274   01054E  51A5               	movf	Nrf24_printDetails@retransmit& (0+255),w,b
 10275   010550  6F9F               	movwf	??_Nrf24_printDetails& (0+255),b
 10276   010552  6BA0               	clrf	(??_Nrf24_printDetails+1)& (0+255),b
 10277   010554  0E01               	movlw	1
 10278   010556  279F               	addwf	??_Nrf24_printDetails& (0+255),f,b
 10279   010558  0E00               	movlw	0
 10280   01055A  23A0               	addwfc	(??_Nrf24_printDetails+1)& (0+255),f,b
 10281   01055C  0EFA               	movlw	250
 10282   01055E  039F               	mulwf	??_Nrf24_printDetails& (0+255),b
 10283   010560  C4F3 F5A1          	movff	prodl,??_Nrf24_printDetails+2
 10284   010564  C4F4 F5A2          	movff	prodh,??_Nrf24_printDetails+3
 10285   010568  03A0               	mulwf	(??_Nrf24_printDetails+1)& (0+255),b
 10286   01056A  50F3               	movf	prodl,w,c
 10287   01056C  27A2               	addwf	(??_Nrf24_printDetails+3)& (0+255),f,b
 10288   01056E  C5A1  F5A3         	movff	??_Nrf24_printDetails+2,Nrf24_printDetails@delay
 10289   010572  C5A2  F5A4         	movff	??_Nrf24_printDetails+3,Nrf24_printDetails@delay+1
 10290   010576                     
 10291                           ; BSR set to: 5
 10292                           ;cmirf.c: 392:  printf("Retransmit\t = %d us\n", delay);
 10293   010576  0E33               	movlw	low STR_16
 10294   010578  6E41               	movwf	printf@fmt^(0+1280),c
 10295   01057A  0EFF               	movlw	high STR_16
 10296   01057C  6E42               	movwf	(printf@fmt+1)^(0+1280),c
 10297   01057E  C5A3  F543         	movff	Nrf24_printDetails@delay,?_printf+2
 10298   010582  C5A4  F544         	movff	Nrf24_printDetails@delay+1,?_printf+3
 10299   010586  EC5F  F08C         	call	_printf	;wreg free
 10300   01058A  0012               	return		;funcret
 10301   01058C                     __end_of_Nrf24_printDetails:
 10302                           	callstack 0
 10303                           
 10304 ;; *************** function _Nrf24_print_status *****************
 10305 ;; Defined at:
 10306 ;;		line 397 in file "cmirf.c"
 10307 ;; Parameters:    Size  Location     Type
 10308 ;;  status          1    wreg     unsigned char 
 10309 ;; Auto vars:     Size  Location     Type
 10310 ;;  status          1   81[COMRAM] unsigned char 
 10311 ;; Return value:  Size  Location     Type
 10312 ;;                  1    wreg      void 
 10313 ;; Registers used:
 10314 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10315 ;; Tracked objects:
 10316 ;;		On entry : 0/0
 10317 ;;		On exit  : 0/0
 10318 ;;		Unchanged: 0/0
 10319 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 10320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10321 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10322 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10323 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10324 ;;Total ram usage:        2 bytes
 10325 ;; Hardware stack levels used: 1
 10326 ;; Hardware stack levels required when called: 11
 10327 ;; This function calls:
 10328 ;;		_printf
 10329 ;; This function is called by:
 10330 ;;		_Nrf24_printDetails
 10331 ;; This function uses a non-reentrant model
 10332 ;;
 10333                           
 10334                           	psect	text9
 10335   0111C8                     __ptext9:
 10336                           	callstack 0
 10337   0111C8                     _Nrf24_print_status:
 10338                           	callstack 113
 10339                           
 10340                           ;incstack = 0
 10341                           ;Nrf24_print_status@status stored from wreg
 10342   0111C8  6E52               	movwf	Nrf24_print_status@status^(0+1280),c
 10343   0111CA                     
 10344                           ;cmirf.c: 397: void Nrf24_print_status(uint8_t status);cmirf.c: 398: {;cmirf.c: 399:  pr
      +                          intf("STATUS\t\t = 0x%02x RX_DR=%x TX_DS=%x MAX_RT=%x RX_P_NO=%x TX_FULL=%x\r\n", status
      +                          , (status & (1<<(6))) ? 1 : 0,
 10345   0111CA  0EB8               	movlw	low STR_17
 10346   0111CC  6E41               	movwf	printf@fmt^(0+1280),c
 10347   0111CE  0EFE               	movlw	high STR_17
 10348   0111D0  6E42               	movwf	(printf@fmt+1)^(0+1280),c
 10349   0111D2  C552  F543         	movff	Nrf24_print_status@status,?_printf+2
 10350   0111D6  6A44               	clrf	(?_printf+3)^(0+1280),c
 10351   0111D8  BC52               	btfsc	Nrf24_print_status@status^(0+1280),6,c
 10352   0111DA  EFF1  F088         	goto	u3191
 10353   0111DE  EFF4  F088         	goto	u3190
 10354   0111E2                     u3191:
 10355   0111E2  0E01               	movlw	1
 10356   0111E4  EFF5  F088         	goto	u3200
 10357   0111E8                     u3190:
 10358   0111E8  0E00               	movlw	0
 10359   0111EA                     u3200:
 10360   0111EA  6E45               	movwf	(?_printf+4)^(0+1280),c
 10361   0111EC  6A46               	clrf	(?_printf+5)^(0+1280),c
 10362   0111EE  BA52               	btfsc	Nrf24_print_status@status^(0+1280),5,c
 10363   0111F0  EFFC  F088         	goto	u3211
 10364   0111F4  EFFF  F088         	goto	u3210
 10365   0111F8                     u3211:
 10366   0111F8  0E01               	movlw	1
 10367   0111FA  EF00  F089         	goto	u3220
 10368   0111FE                     u3210:
 10369   0111FE  0E00               	movlw	0
 10370   011200                     u3220:
 10371   011200  6E47               	movwf	(?_printf+6)^(0+1280),c
 10372   011202  6A48               	clrf	(?_printf+7)^(0+1280),c
 10373   011204  B852               	btfsc	Nrf24_print_status@status^(0+1280),4,c
 10374   011206  EF07  F089         	goto	u3231
 10375   01120A  EF0A  F089         	goto	u3230
 10376   01120E                     u3231:
 10377   01120E  0E01               	movlw	1
 10378   011210  EF0B  F089         	goto	u3240
 10379   011214                     u3230:
 10380   011214  0E00               	movlw	0
 10381   011216                     u3240:
 10382   011216  6E49               	movwf	(?_printf+8)^(0+1280),c
 10383   011218  6A4A               	clrf	(?_printf+9)^(0+1280),c
 10384   01121A  C552  F551         	movff	Nrf24_print_status@status,??_Nrf24_print_status
 10385   01121E  90D8               	bcf	status,0,c
 10386   011220  3251               	rrcf	??_Nrf24_print_status^(0+1280),f,c
 10387   011222  0E07               	movlw	7
 10388   011224  1651               	andwf	??_Nrf24_print_status^(0+1280),f,c
 10389   011226  5051               	movf	??_Nrf24_print_status^(0+1280),w,c
 10390   011228  6E4B               	movwf	(?_printf+10)^(0+1280),c
 10391   01122A  6A4C               	clrf	(?_printf+11)^(0+1280),c
 10392   01122C  B052               	btfsc	Nrf24_print_status@status^(0+1280),0,c
 10393   01122E  EF1B  F089         	goto	u3251
 10394   011232  EF1E  F089         	goto	u3250
 10395   011236                     u3251:
 10396   011236  0E01               	movlw	1
 10397   011238  EF1F  F089         	goto	u3260
 10398   01123C                     u3250:
 10399   01123C  0E00               	movlw	0
 10400   01123E                     u3260:
 10401   01123E  6E4D               	movwf	(?_printf+12)^(0+1280),c
 10402   011240  6A4E               	clrf	(?_printf+13)^(0+1280),c
 10403   011242  EC5F  F08C         	call	_printf	;wreg free
 10404   011246  0012               	return		;funcret
 10405   011248                     __end_of_Nrf24_print_status:
 10406                           	callstack 0
 10407                           
 10408 ;; *************** function _Nrf24_print_byte_register *****************
 10409 ;; Defined at:
 10410 ;;		line 425 in file "cmirf.c"
 10411 ;; Parameters:    Size  Location     Type
 10412 ;;  dev             2   80[COMRAM] PTR struct .
 10413 ;;		 -> sender@nrf(3), 
 10414 ;;  name            2   82[COMRAM] PTR const unsigned char 
 10415 ;;		 -> STR_12(14), STR_11(8), STR_10(9), STR_9(7), 
 10416 ;;		 -> STR_8(10), STR_7(7), STR_6(11), STR_4(13), 
 10417 ;;  reg             1   84[COMRAM] unsigned char 
 10418 ;;  qty             1   85[COMRAM] unsigned char 
 10419 ;; Auto vars:     Size  Location     Type
 10420 ;;  buffer          1   86[COMRAM] unsigned char [1]
 10421 ;; Return value:  Size  Location     Type
 10422 ;;                  1    wreg      void 
 10423 ;; Registers used:
 10424 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10425 ;; Tracked objects:
 10426 ;;		On entry : 0/0
 10427 ;;		On exit  : 0/0
 10428 ;;		Unchanged: 0/0
 10429 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 10430 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10431 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10433 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10434 ;;Total ram usage:        7 bytes
 10435 ;; Hardware stack levels used: 1
 10436 ;; Hardware stack levels required when called: 11
 10437 ;; This function calls:
 10438 ;;		_Nrf24_readRegister
 10439 ;;		_printf
 10440 ;; This function is called by:
 10441 ;;		_Nrf24_printDetails
 10442 ;; This function uses a non-reentrant model
 10443 ;;
 10444                           
 10445                           	psect	text10
 10446   0113F8                     __ptext10:
 10447                           	callstack 0
 10448   0113F8                     _Nrf24_print_byte_register:
 10449                           	callstack 113
 10450   0113F8                     
 10451                           ;cmirf.c: 425: void Nrf24_print_byte_register(NRF24_t * dev, const char* name, uint8_t r
      +                          eg, uint8_t qty);cmirf.c: 426: {;cmirf.c: 427:  printf("%s\t =", name);
 10452   0113F8  0EEF               	movlw	low STR_18
 10453   0113FA  6E41               	movwf	printf@fmt^(0+1280),c
 10454   0113FC  0EFF               	movlw	high STR_18
 10455   0113FE  6E42               	movwf	(printf@fmt+1)^(0+1280),c
 10456   011400  C553  F543         	movff	Nrf24_print_byte_register@name,?_printf+2
 10457   011404  C554  F544         	movff	Nrf24_print_byte_register@name+1,?_printf+3
 10458   011408  EC5F  F08C         	call	_printf	;wreg free
 10459                           
 10460                           ;cmirf.c: 428:  while (qty--) {
 10461   01140C  EF1B  F08A         	goto	l4083
 10462   011410                     l4077:
 10463                           
 10464                           ;cmirf.c: 429:   uint8_t buffer[1];;cmirf.c: 430:   Nrf24_readRegister(reg++, buffer, 1)
      +                          ;
 10465   011410  0E57               	movlw	low Nrf24_print_byte_register@buffer
 10466   011412  6E0A               	movwf	Nrf24_readRegister@value^(0+1280),c
 10467   011414  0E05               	movlw	high Nrf24_print_byte_register@buffer
 10468   011416  6E0B               	movwf	(Nrf24_readRegister@value+1)^(0+1280),c
 10469   011418  0E01               	movlw	1
 10470   01141A  6E0C               	movwf	Nrf24_readRegister@len^(0+1280),c
 10471   01141C  5055               	movf	Nrf24_print_byte_register@reg^(0+1280),w,c
 10472   01141E  ECC7  F08B         	call	_Nrf24_readRegister
 10473   011422  2A55               	incf	Nrf24_print_byte_register@reg^(0+1280),f,c
 10474   011424                     
 10475                           ;cmirf.c: 431:   printf(" 0x%02x", buffer[0]);
 10476   011424  0ED2               	movlw	low STR_23
 10477   011426  6E41               	movwf	printf@fmt^(0+1280),c
 10478   011428  0EFF               	movlw	high STR_23
 10479   01142A  6E42               	movwf	(printf@fmt+1)^(0+1280),c
 10480   01142C  C557  F543         	movff	Nrf24_print_byte_register@buffer,?_printf+2
 10481   011430  6A44               	clrf	(?_printf+3)^(0+1280),c
 10482   011432  EC5F  F08C         	call	_printf	;wreg free
 10483   011436                     l4083:
 10484                           
 10485                           ;cmirf.c: 428:  while (qty--) {
 10486   011436  0656               	decf	Nrf24_print_byte_register@qty^(0+1280),f,c
 10487   011438  2856               	incf	Nrf24_print_byte_register@qty^(0+1280),w,c
 10488   01143A  A4D8               	btfss	status,2,c
 10489   01143C  EF22  F08A         	goto	u3291
 10490   011440  EF24  F08A         	goto	u3290
 10491   011444                     u3291:
 10492   011444  EF08  F08A         	goto	l4077
 10493   011448                     u3290:
 10494   011448                     
 10495                           ;cmirf.c: 433:  printf("\r\n");
 10496   011448  0EFB               	movlw	low (STR_17+67)
 10497   01144A  6E41               	movwf	printf@fmt^(0+1280),c
 10498   01144C  0EFE               	movlw	high (STR_17+67)
 10499   01144E  6E42               	movwf	(printf@fmt+1)^(0+1280),c
 10500   011450  EC5F  F08C         	call	_printf	;wreg free
 10501   011454  0012               	return		;funcret
 10502   011456                     __end_of_Nrf24_print_byte_register:
 10503                           	callstack 0
 10504                           
 10505 ;; *************** function _Nrf24_print_address_register *****************
 10506 ;; Defined at:
 10507 ;;		line 403 in file "cmirf.c"
 10508 ;; Parameters:    Size  Location     Type
 10509 ;;  dev             2   80[COMRAM] PTR struct .
 10510 ;;		 -> sender@nrf(3), 
 10511 ;;  name            2   82[COMRAM] PTR const unsigned char 
 10512 ;;		 -> STR_5(9), STR_3(13), 
 10513 ;;  reg             1   84[COMRAM] unsigned char 
 10514 ;;  qty             1   85[COMRAM] unsigned char 
 10515 ;; Auto vars:     Size  Location     Type
 10516 ;;  i               2    5[BANK5 ] int 
 10517 ;;  buffer          5    0[BANK5 ] unsigned char [5]
 10518 ;; Return value:  Size  Location     Type
 10519 ;;                  1    wreg      void 
 10520 ;; Registers used:
 10521 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10522 ;; Tracked objects:
 10523 ;;		On entry : 0/0
 10524 ;;		On exit  : 0/0
 10525 ;;		Unchanged: 0/0
 10526 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 10527 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10528 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10529 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10530 ;;      Totals:         7       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10531 ;;Total ram usage:       14 bytes
 10532 ;; Hardware stack levels used: 1
 10533 ;; Hardware stack levels required when called: 11
 10534 ;; This function calls:
 10535 ;;		_Nrf24_readRegister
 10536 ;;		_printf
 10537 ;; This function is called by:
 10538 ;;		_Nrf24_printDetails
 10539 ;; This function uses a non-reentrant model
 10540 ;;
 10541                           
 10542                           	psect	text11
 10543   010F5C                     __ptext11:
 10544                           	callstack 0
 10545   010F5C                     _Nrf24_print_address_register:
 10546                           	callstack 113
 10547   010F5C                     
 10548                           ;cmirf.c: 403: void Nrf24_print_address_register(NRF24_t * dev, const char* name, uint8_
      +                          t reg, uint8_t qty);cmirf.c: 404: {;cmirf.c: 405:  printf("%s\t =",name);
 10549   010F5C  0EEF               	movlw	low STR_18
 10550   010F5E  6E41               	movwf	printf@fmt^(0+1280),c
 10551   010F60  0EFF               	movlw	high STR_18
 10552   010F62  6E42               	movwf	(printf@fmt+1)^(0+1280),c
 10553   010F64  C553  F543         	movff	Nrf24_print_address_register@name,?_printf+2
 10554   010F68  C554  F544         	movff	Nrf24_print_address_register@name+1,?_printf+3
 10555   010F6C  EC5F  F08C         	call	_printf	;wreg free
 10556                           
 10557                           ;cmirf.c: 406:  while (qty--) {
 10558   010F70  EFF1  F087         	goto	l4071
 10559   010F74                     l4053:
 10560                           
 10561                           ;cmirf.c: 408:   uint8_t buffer[5];;cmirf.c: 409:   Nrf24_readRegister(reg++, buffer, si
      +                          zeof(buffer));
 10562   010F74  0E98               	movlw	low Nrf24_print_address_register@buffer
 10563   010F76  6E0A               	movwf	Nrf24_readRegister@value^(0+1280),c
 10564   010F78  0E05               	movlw	high Nrf24_print_address_register@buffer
 10565   010F7A  6E0B               	movwf	(Nrf24_readRegister@value+1)^(0+1280),c
 10566   010F7C  0E05               	movlw	5
 10567   010F7E  6E0C               	movwf	Nrf24_readRegister@len^(0+1280),c
 10568   010F80  5055               	movf	Nrf24_print_address_register@reg^(0+1280),w,c
 10569   010F82  ECC7  F08B         	call	_Nrf24_readRegister
 10570   010F86  2A55               	incf	Nrf24_print_address_register@reg^(0+1280),f,c
 10571   010F88                     
 10572                           ;cmirf.c: 411:   printf(" 0x");
 10573   010F88  0EFB               	movlw	low STR_19
 10574   010F8A  6E41               	movwf	printf@fmt^(0+1280),c
 10575   010F8C  0EFF               	movlw	high STR_19
 10576   010F8E  6E42               	movwf	(printf@fmt+1)^(0+1280),c
 10577   010F90  EC5F  F08C         	call	_printf	;wreg free
 10578   010F94                     
 10579                           ;cmirf.c: 418:   for(int i=0;i<5;i++) {
 10580   010F94  0E00               	movlw	0
 10581   010F96  0105               	movlb	5	; () banked
 10582   010F98  6F9E               	movwf	(Nrf24_print_address_register@i+1)& (0+255),b
 10583   010F9A  0E00               	movlw	0
 10584   010F9C  6F9D               	movwf	Nrf24_print_address_register@i& (0+255),b
 10585   010F9E                     l4065:
 10586                           
 10587                           ; BSR set to: 5
 10588                           ;cmirf.c: 419:    printf("%02x", buffer[i]);
 10589   010F9E  0ED5               	movlw	low (STR_23+3)
 10590   010FA0  6E41               	movwf	printf@fmt^(0+1280),c
 10591   010FA2  0EFF               	movlw	high (STR_23+3)
 10592   010FA4  6E42               	movwf	(printf@fmt+1)^(0+1280),c
 10593   010FA6  0E98               	movlw	low Nrf24_print_address_register@buffer
 10594   010FA8  259D               	addwf	Nrf24_print_address_register@i& (0+255),w,b
 10595   010FAA  6ED9               	movwf	fsr2l,c
 10596   010FAC  0E05               	movlw	high Nrf24_print_address_register@buffer
 10597   010FAE  219E               	addwfc	(Nrf24_print_address_register@i+1)& (0+255),w,b
 10598   010FB0  6EDA               	movwf	fsr2h,c
 10599   010FB2  50DF               	movf	indf2,w,c
 10600   010FB4  6E57               	movwf	??_Nrf24_print_address_register^(0+1280),c
 10601   010FB6  5057               	movf	??_Nrf24_print_address_register^(0+1280),w,c
 10602   010FB8  6E43               	movwf	(?_printf+2)^(0+1280),c
 10603   010FBA  6A44               	clrf	(?_printf+3)^(0+1280),c
 10604   010FBC  EC5F  F08C         	call	_printf	;wreg free
 10605   010FC0                     
 10606                           ;cmirf.c: 420:   }
 10607   010FC0  0105               	movlb	5	; () banked
 10608   010FC2  4B9D               	infsnz	Nrf24_print_address_register@i& (0+255),f,b
 10609   010FC4  2B9E               	incf	(Nrf24_print_address_register@i+1)& (0+255),f,b
 10610   010FC6                     
 10611                           ; BSR set to: 5
 10612   010FC6  BF9E               	btfsc	(Nrf24_print_address_register@i+1)& (0+255),7,b
 10613   010FC8  EFEF  F087         	goto	u3271
 10614   010FCC  519E               	movf	(Nrf24_print_address_register@i+1)& (0+255),w,b
 10615   010FCE  E109               	bnz	u3270
 10616   010FD0  0E05               	movlw	5
 10617   010FD2  5D9D               	subwf	Nrf24_print_address_register@i& (0+255),w,b
 10618   010FD4  A0D8               	btfss	status,0,c
 10619   010FD6  EFEF  F087         	goto	u3271
 10620   010FDA  EFF1  F087         	goto	u3270
 10621   010FDE                     u3271:
 10622   010FDE  EFCF  F087         	goto	l4065
 10623   010FE2                     u3270:
 10624   010FE2                     l4071:
 10625                           
 10626                           ;cmirf.c: 406:  while (qty--) {
 10627   010FE2  0656               	decf	Nrf24_print_address_register@qty^(0+1280),f,c
 10628   010FE4  2856               	incf	Nrf24_print_address_register@qty^(0+1280),w,c
 10629   010FE6  A4D8               	btfss	status,2,c
 10630   010FE8  EFF8  F087         	goto	u3281
 10631   010FEC  EFFA  F087         	goto	u3280
 10632   010FF0                     u3281:
 10633   010FF0  EFBA  F087         	goto	l4053
 10634   010FF4                     u3280:
 10635   010FF4                     
 10636                           ;cmirf.c: 422:  printf("\r\n");
 10637   010FF4  0EFB               	movlw	low (STR_17+67)
 10638   010FF6  6E41               	movwf	printf@fmt^(0+1280),c
 10639   010FF8  0EFE               	movlw	high (STR_17+67)
 10640   010FFA  6E42               	movwf	(printf@fmt+1)^(0+1280),c
 10641   010FFC  EC5F  F08C         	call	_printf	;wreg free
 10642   011000  0012               	return		;funcret
 10643   011002                     __end_of_Nrf24_print_address_register:
 10644                           	callstack 0
 10645                           
 10646 ;; *************** function _printf *****************
 10647 ;; Defined at:
 10648 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\printf.c"
 10649 ;; Parameters:    Size  Location     Type
 10650 ;;  fmt             2   64[COMRAM] PTR const unsigned char 
 10651 ;;		 -> STR_24(3), STR_23(8), STR_22(6), STR_21(3), 
 10652 ;;		 -> STR_20(5), STR_19(4), STR_18(6), STR_17(70), 
 10653 ;;		 -> STR_16(21), STR_15(16), STR_14(18), STR_13(17), 
 10654 ;;		 -> STR_2(53), 
 10655 ;; Auto vars:     Size  Location     Type
 10656 ;;  ap              2   78[COMRAM] PTR void [1]
 10657 ;;		 -> ?_printf(2), 
 10658 ;;  ret             2    0        int 
 10659 ;; Return value:  Size  Location     Type
 10660 ;;                  2   64[COMRAM] int 
 10661 ;; Registers used:
 10662 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10663 ;; Tracked objects:
 10664 ;;		On entry : 0/0
 10665 ;;		On exit  : 0/0
 10666 ;;		Unchanged: 0/0
 10667 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 10668 ;;      Params:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10669 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10671 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10672 ;;Total ram usage:       16 bytes
 10673 ;; Hardware stack levels used: 1
 10674 ;; Hardware stack levels required when called: 10
 10675 ;; This function calls:
 10676 ;;		_vfprintf
 10677 ;; This function is called by:
 10678 ;;		_Nrf24_printDetails
 10679 ;;		_Nrf24_print_status
 10680 ;;		_Nrf24_print_address_register
 10681 ;;		_Nrf24_print_byte_register
 10682 ;; This function uses a non-reentrant model
 10683 ;;
 10684                           
 10685                           	psect	text12
 10686   0118BE                     __ptext12:
 10687                           	callstack 0
 10688   0118BE                     _printf:
 10689                           	callstack 114
 10690   0118BE  0E43               	movlw	low (?_printf+2)
 10691   0118C0  6E4F               	movwf	printf@ap^(0+1280),c
 10692   0118C2  0E05               	movlw	high (?_printf+2)
 10693   0118C4  6E50               	movwf	(printf@ap+1)^(0+1280),c
 10694   0118C6  0E00               	movlw	0
 10695   0118C8  6E39               	movwf	vfprintf@fp^(0+1280),c
 10696   0118CA  0E00               	movlw	0
 10697   0118CC  6E3A               	movwf	(vfprintf@fp+1)^(0+1280),c
 10698   0118CE  C541  F53B         	movff	printf@fmt,vfprintf@fmt
 10699   0118D2  C542  F53C         	movff	printf@fmt+1,vfprintf@fmt+1
 10700   0118D6  0E4F               	movlw	low printf@ap
 10701   0118D8  6E3D               	movwf	vfprintf@ap^(0+1280),c
 10702   0118DA  0E05               	movlw	high printf@ap
 10703   0118DC  6E3E               	movwf	(vfprintf@ap+1)^(0+1280),c
 10704   0118DE  EC7F  F08A         	call	_vfprintf	;wreg free
 10705   0118E2  0012               	return		;funcret
 10706   0118E4                     __end_of_printf:
 10707                           	callstack 0
 10708                           
 10709 ;; *************** function _vfprintf *****************
 10710 ;; Defined at:
 10711 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 10712 ;; Parameters:    Size  Location     Type
 10713 ;;  fp              2   56[COMRAM] PTR struct _IO_FILE
 10714 ;;		 -> NULL(0), 
 10715 ;;  fmt             2   58[COMRAM] PTR const unsigned char 
 10716 ;;		 -> STR_24(3), STR_23(8), STR_22(6), STR_21(3), 
 10717 ;;		 -> STR_20(5), STR_19(4), STR_18(6), STR_17(70), 
 10718 ;;		 -> STR_16(21), STR_15(16), STR_14(18), STR_13(17), 
 10719 ;;		 -> STR_2(53), 
 10720 ;;  ap              2   60[COMRAM] PTR PTR void 
 10721 ;;		 -> printf@ap(2), 
 10722 ;; Auto vars:     Size  Location     Type
 10723 ;;  cfmt            2   62[COMRAM] PTR unsigned char 
 10724 ;;		 -> STR_24(3), STR_23(8), STR_22(6), STR_21(3), 
 10725 ;;		 -> STR_20(5), STR_19(4), STR_18(6), STR_17(70), 
 10726 ;;		 -> STR_16(21), STR_15(16), STR_14(18), STR_13(17), 
 10727 ;;		 -> STR_2(53), 
 10728 ;; Return value:  Size  Location     Type
 10729 ;;                  2   56[COMRAM] int 
 10730 ;; Registers used:
 10731 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10732 ;; Tracked objects:
 10733 ;;		On entry : 0/0
 10734 ;;		On exit  : 0/0
 10735 ;;		Unchanged: 0/0
 10736 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 10737 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10738 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10740 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10741 ;;Total ram usage:        8 bytes
 10742 ;; Hardware stack levels used: 1
 10743 ;; Hardware stack levels required when called: 9
 10744 ;; This function calls:
 10745 ;;		_vfpfcnvrt
 10746 ;; This function is called by:
 10747 ;;		_printf
 10748 ;; This function uses a non-reentrant model
 10749 ;;
 10750                           
 10751                           	psect	text13
 10752   0114FE                     __ptext13:
 10753                           	callstack 0
 10754   0114FE                     _vfprintf:
 10755                           	callstack 114
 10756   0114FE                     
 10757                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
 10758   0114FE  C53B  F53F         	movff	vfprintf@fmt,vfprintf@cfmt
 10759   011502  C53C  F540         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
 10760                           
 10761                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
 10762   011506  EF93  F08A         	goto	l3957
 10763   01150A                     l3955:
 10764                           
 10765                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
 10766   01150A  C539  F52A         	movff	vfprintf@fp,vfpfcnvrt@fp
 10767   01150E  C53A  F52B         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
 10768   011512  0E3F               	movlw	low vfprintf@cfmt
 10769   011514  6E2C               	movwf	vfpfcnvrt@fmt^(0+1280),c
 10770   011516  0E05               	movlw	high vfprintf@cfmt
 10771   011518  6E2D               	movwf	(vfpfcnvrt@fmt+1)^(0+1280),c
 10772   01151A  C53D  F52E         	movff	vfprintf@ap,vfpfcnvrt@ap
 10773   01151E  C53E  F52F         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
 10774   011522  EC00  F080         	call	_vfpfcnvrt	;wreg free
 10775   011526                     l3957:
 10776                           
 10777                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
 10778   011526  C53F  F4F6         	movff	vfprintf@cfmt,tblptrl
 10779   01152A  C540  F4F7         	movff	vfprintf@cfmt+1,tblptrh
 10780   01152E                     	if	0	;tblptru may be non-zero
 10781   01152E                     	endif
 10782   01152E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10783   01152E  0E00               	movlw	low (__mediumconst shr (0+16))
 10784   011530  6EF8               	movwf	tblptru,c
 10785   011532                     	endif
 10786   011532  0008               	tblrd		*
 10787   011534  50F5               	movf	tablat,w,c
 10788   011536  0900               	iorlw	0
 10789   011538  A4D8               	btfss	status,2,c
 10790   01153A  EFA1  F08A         	goto	u3121
 10791   01153E  EFA3  F08A         	goto	u3120
 10792   011542                     u3121:
 10793   011542  EF85  F08A         	goto	l3955
 10794   011546                     u3120:
 10795   011546                     
 10796                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1835:  return 0;
 10797   011546  0E00               	movlw	0
 10798   011548  6E3A               	movwf	(?_vfprintf+1)^(0+1280),c
 10799   01154A  0E00               	movlw	0
 10800   01154C  6E39               	movwf	?_vfprintf^(0+1280),c
 10801   01154E  0012               	return		;funcret
 10802   011550                     __end_of_vfprintf:
 10803                           	callstack 0
 10804                           
 10805 ;; *************** function _vfpfcnvrt *****************
 10806 ;; Defined at:
 10807 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 10808 ;; Parameters:    Size  Location     Type
 10809 ;;  fp              2   41[COMRAM] PTR struct _IO_FILE
 10810 ;;		 -> NULL(0), 
 10811 ;;  fmt             2   43[COMRAM] PTR PTR unsigned char 
 10812 ;;		 -> vfprintf@cfmt(2), 
 10813 ;;  ap              2   45[COMRAM] PTR PTR void 
 10814 ;;		 -> printf@ap(2), 
 10815 ;; Auto vars:     Size  Location     Type
 10816 ;;  convarg         4   49[COMRAM] struct .
 10817 ;;  cp              2   54[COMRAM] PTR unsigned char 
 10818 ;;		 -> STR_24(3), STR_23(8), STR_22(6), STR_21(3), 
 10819 ;;		 -> STR_20(5), STR_19(4), STR_18(6), STR_17(70), 
 10820 ;;		 -> STR_16(21), STR_15(16), STR_14(18), STR_13(17), 
 10821 ;;		 -> STR_2(53), 
 10822 ;;  done            1   53[COMRAM] _Bool 
 10823 ;;  c               1    0        unsigned char 
 10824 ;; Return value:  Size  Location     Type
 10825 ;;                  1    wreg      void 
 10826 ;; Registers used:
 10827 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10828 ;; Tracked objects:
 10829 ;;		On entry : 0/0
 10830 ;;		On exit  : 0/0
 10831 ;;		Unchanged: 0/0
 10832 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 10833 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10834 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10835 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10836 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10837 ;;Total ram usage:       15 bytes
 10838 ;; Hardware stack levels used: 1
 10839 ;; Hardware stack levels required when called: 8
 10840 ;; This function calls:
 10841 ;;		_dtoa
 10842 ;;		_fputc
 10843 ;;		_read_prec_or_width
 10844 ;;		_stoa
 10845 ;;		_xtoa
 10846 ;; This function is called by:
 10847 ;;		_vfprintf
 10848 ;; This function uses a non-reentrant model
 10849 ;;
 10850                           
 10851                           	psect	text14
 10852   010000                     __ptext14:
 10853                           	callstack 0
 10854   010000                     _vfpfcnvrt:
 10855                           	callstack 114
 10856   010000                     
 10857                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
 10858   010000  C52C  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 10859   010004  C52D  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10860   010008  C4DE F4F6          	movff	postinc2,tblptrl
 10861   01000C  C4DD F4F7          	movff	postdec2,tblptrh
 10862   010010                     	if	0	;tblptru may be non-zero
 10863   010010                     	endif
 10864   010010                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10865   010010  0E00               	movlw	low (__mediumconst shr (0+16))
 10866   010012  6EF8               	movwf	tblptru,c
 10867   010014                     	endif
 10868   010014  0008               	tblrd		*
 10869   010016  50F5               	movf	tablat,w,c
 10870   010018  0A25               	xorlw	37
 10871   01001A  A4D8               	btfss	status,2,c
 10872   01001C  EF12  F080         	goto	u3001
 10873   010020  EF14  F080         	goto	u3000
 10874   010024                     u3001:
 10875   010024  EFB0  F081         	goto	l3939
 10876   010028                     u3000:
 10877   010028                     
 10878                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
 10879   010028  C52C  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 10880   01002C  C52D  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10881   010030  2ADE               	incf	postinc2,f,c
 10882   010032  0E00               	movlw	0
 10883   010034  22DD               	addwfc	postdec2,f,c
 10884   010036                     
 10885                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
 10886   010036  0E00               	movlw	0
 10887   010038  6E5B               	movwf	(_width+1)^(0+1280),c
 10888   01003A  0E00               	movlw	0
 10889   01003C  6E5A               	movwf	_width^(0+1280),c
 10890   01003E  C55A  F55C         	movff	_width,_flags
 10891   010042                     
 10892                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
 10893   010042  0105               	movlb	5	; () banked
 10894   010044  69CD               	setf	_prec& (0+255),b
 10895   010046  69CE               	setf	(_prec+1)& (0+255),b
 10896   010048                     
 10897                           ; BSR set to: 5
 10898                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
 10899   010048  6A36               	clrf	vfpfcnvrt@done^(0+1280),c
 10900                           
 10901                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
 10902   01004A  EF47  F080         	goto	l3881
 10903   01004E                     l3871:
 10904                           
 10905                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
 10906   01004E  825C               	bsf	_flags^(0+1280),1,c
 10907   010050                     
 10908                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
 10909   010050  C52C  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 10910   010054  C52D  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10911   010058  2ADE               	incf	postinc2,f,c
 10912   01005A  0E00               	movlw	0
 10913   01005C  22DD               	addwfc	postdec2,f,c
 10914                           
 10915                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
 10916   01005E  EF47  F080         	goto	l3881
 10917   010062                     l3875:
 10918                           
 10919                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
 10920   010062  0E01               	movlw	1
 10921   010064  6E36               	movwf	vfpfcnvrt@done^(0+1280),c
 10922                           
 10923                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
 10924   010066  EF47  F080         	goto	l3881
 10925   01006A                     l3879:
 10926   01006A  C52C  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 10927   01006E  C52D  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10928   010072  C4DE F4F6          	movff	postinc2,tblptrl
 10929   010076  C4DD F4F7          	movff	postdec2,tblptrh
 10930   01007A                     	if	0	;tblptru may be non-zero
 10931   01007A                     	endif
 10932   01007A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10933   01007A  0E00               	movlw	low (__mediumconst shr (0+16))
 10934   01007C  6EF8               	movwf	tblptru,c
 10935   01007E                     	endif
 10936   01007E  0008               	tblrd		*
 10937   010080  50F5               	movf	tablat,w,c
 10938                           
 10939                           ; Switch size 1, requested type "simple"
 10940                           ; Number of cases is 1, Range of values is 48 to 48
 10941                           ; switch strategies available:
 10942                           ; Name         Instructions Cycles
 10943                           ; simple_byte            4     3 (average)
 10944                           ;	Chosen strategy is simple_byte
 10945   010082  0A30               	xorlw	48	; case 48
 10946   010084  B4D8               	btfsc	status,2,c
 10947   010086  EF27  F080         	goto	l3871
 10948   01008A  EF31  F080         	goto	l3875
 10949   01008E                     l3881:
 10950                           
 10951                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
 10952   01008E  5036               	movf	vfpfcnvrt@done^(0+1280),w,c
 10953   010090  B4D8               	btfsc	status,2,c
 10954   010092  EF4D  F080         	goto	u3011
 10955   010096  EF4F  F080         	goto	u3010
 10956   01009A                     u3011:
 10957   01009A  EF35  F080         	goto	l3879
 10958   01009E                     u3010:
 10959   01009E                     
 10960                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
 10961   01009E  C52C  F504         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
 10962   0100A2  C52D  F505         	movff	vfpfcnvrt@fmt+1,read_prec_or_width@fmt+1
 10963   0100A6  C52E  F506         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
 10964   0100AA  C52F  F507         	movff	vfpfcnvrt@ap+1,read_prec_or_width@ap+1
 10965   0100AE  ECB8  F084         	call	_read_prec_or_width	;wreg free
 10966   0100B2  C504  F55A         	movff	?_read_prec_or_width,_width
 10967   0100B6  C505  F55B         	movff	?_read_prec_or_width+1,_width+1
 10968   0100BA                     
 10969                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
 10970   0100BA  BE5B               	btfsc	(_width+1)^(0+1280),7,c
 10971   0100BC  EF64  F080         	goto	u3020
 10972   0100C0  EF62  F080         	goto	u3021
 10973   0100C4                     u3021:
 10974   0100C4  EF69  F080         	goto	l3889
 10975   0100C8                     u3020:
 10976   0100C8                     
 10977                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
 10978   0100C8  805C               	bsf	_flags^(0+1280),0,c
 10979                           
 10980                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
 10981   0100CA  6C5A               	negf	_width^(0+1280),c
 10982   0100CC  1E5B               	comf	(_width+1)^(0+1280),f,c
 10983   0100CE  B0D8               	btfsc	status,0,c
 10984   0100D0  2A5B               	incf	(_width+1)^(0+1280),f,c
 10985   0100D2                     l3889:
 10986                           
 10987                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
 10988   0100D2  C52C  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 10989   0100D6  C52D  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10990   0100DA  C4DE F537          	movff	postinc2,vfpfcnvrt@cp
 10991   0100DE  C4DD F538          	movff	postdec2,vfpfcnvrt@cp+1
 10992   0100E2                     
 10993                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
 10994   0100E2  C537  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 10995   0100E6  C538  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 10996   0100EA                     	if	0	;tblptru may be non-zero
 10997   0100EA                     	endif
 10998   0100EA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10999   0100EA  0E00               	movlw	low (__mediumconst shr (0+16))
 11000   0100EC  6EF8               	movwf	tblptru,c
 11001   0100EE                     	endif
 11002   0100EE  0008               	tblrd		*
 11003   0100F0  50F5               	movf	tablat,w,c
 11004   0100F2  0A64               	xorlw	100
 11005   0100F4  B4D8               	btfsc	status,2,c
 11006   0100F6  EF7F  F080         	goto	u3031
 11007   0100FA  EF81  F080         	goto	u3030
 11008   0100FE                     u3031:
 11009   0100FE  EF91  F080         	goto	l3895
 11010   010102                     u3030:
 11011   010102  C537  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 11012   010106  C538  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 11013   01010A                     	if	0	;tblptru may be non-zero
 11014   01010A                     	endif
 11015   01010A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11016   01010A  0E00               	movlw	low (__mediumconst shr (0+16))
 11017   01010C  6EF8               	movwf	tblptru,c
 11018   01010E                     	endif
 11019   01010E  0008               	tblrd		*
 11020   010110  50F5               	movf	tablat,w,c
 11021   010112  0A69               	xorlw	105
 11022   010114  A4D8               	btfss	status,2,c
 11023   010116  EF8F  F080         	goto	u3041
 11024   01011A  EF91  F080         	goto	u3040
 11025   01011E                     u3041:
 11026   01011E  EFBF  F080         	goto	l3901
 11027   010122                     u3040:
 11028   010122                     l3895:
 11029                           
 11030                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
 11031   010122  C52E  F4D9         	movff	vfpfcnvrt@ap,fsr2l
 11032   010126  C52F  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
 11033   01012A  C4DF F530          	movff	indf2,??_vfpfcnvrt
 11034   01012E  0E02               	movlw	2
 11035   010130  26DE               	addwf	postinc2,f,c
 11036   010132  C4DF F531          	movff	indf2,??_vfpfcnvrt+1
 11037   010136  0E00               	movlw	0
 11038   010138  22DD               	addwfc	postdec2,f,c
 11039   01013A  C530  F4D9         	movff	??_vfpfcnvrt,fsr2l
 11040   01013E  C531  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
 11041   010142  C4DE F532          	movff	postinc2,vfpfcnvrt@convarg
 11042   010146  C4DD F533          	movff	postdec2,vfpfcnvrt@convarg+1
 11043                           
 11044                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
 11045   01014A  0E01               	movlw	1
 11046   01014C  2437               	addwf	vfpfcnvrt@cp^(0+1280),w,c
 11047   01014E  6E30               	movwf	??_vfpfcnvrt^(0+1280),c
 11048   010150  0E00               	movlw	0
 11049   010152  2038               	addwfc	(vfpfcnvrt@cp+1)^(0+1280),w,c
 11050   010154  6E31               	movwf	(??_vfpfcnvrt+1)^(0+1280),c
 11051   010156  C52C  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 11052   01015A  C52D  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11053   01015E  C530  F4DE         	movff	??_vfpfcnvrt,postinc2
 11054   010162  C531  F4DD         	movff	??_vfpfcnvrt+1,postdec2
 11055   010166                     
 11056                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
 11057   010166  C52A  F51D         	movff	vfpfcnvrt@fp,dtoa@fp
 11058   01016A  C52B  F51E         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 11059   01016E  C532  F51F         	movff	vfpfcnvrt@convarg,dtoa@d
 11060   010172  C533  F520         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
 11061   010176  ECC6  F082         	call	_dtoa	;wreg free
 11062   01017A  EFC6  F081         	goto	l1547
 11063   01017E                     l3901:
 11064   01017E  C537  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 11065   010182  C538  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 11066   010186                     	if	0	;tblptru may be non-zero
 11067   010186                     	endif
 11068   010186                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11069   010186  0E00               	movlw	low (__mediumconst shr (0+16))
 11070   010188  6EF8               	movwf	tblptru,c
 11071   01018A                     	endif
 11072   01018A  0008               	tblrd		*
 11073   01018C  50F5               	movf	tablat,w,c
 11074   01018E  0A78               	xorlw	120
 11075   010190  A4D8               	btfss	status,2,c
 11076   010192  EFCD  F080         	goto	u3051
 11077   010196  EFCF  F080         	goto	u3050
 11078   01019A                     u3051:
 11079   01019A  EF0D  F081         	goto	l1548
 11080   01019E                     u3050:
 11081   01019E                     
 11082                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1452:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1495:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
 11083   01019E  C52E  F4D9         	movff	vfpfcnvrt@ap,fsr2l
 11084   0101A2  C52F  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
 11085   0101A6  C4DF F530          	movff	indf2,??_vfpfcnvrt
 11086   0101AA  0E02               	movlw	2
 11087   0101AC  26DE               	addwf	postinc2,f,c
 11088   0101AE  C4DF F531          	movff	indf2,??_vfpfcnvrt+1
 11089   0101B2  0E00               	movlw	0
 11090   0101B4  22DD               	addwfc	postdec2,f,c
 11091   0101B6  C530  F4D9         	movff	??_vfpfcnvrt,fsr2l
 11092   0101BA  C531  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
 11093   0101BE  C4DE F532          	movff	postinc2,vfpfcnvrt@convarg
 11094   0101C2  C4DD F533          	movff	postdec2,vfpfcnvrt@convarg+1
 11095                           
 11096                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
 11097   0101C6  0E01               	movlw	1
 11098   0101C8  2437               	addwf	vfpfcnvrt@cp^(0+1280),w,c
 11099   0101CA  6E30               	movwf	??_vfpfcnvrt^(0+1280),c
 11100   0101CC  0E00               	movlw	0
 11101   0101CE  2038               	addwfc	(vfpfcnvrt@cp+1)^(0+1280),w,c
 11102   0101D0  6E31               	movwf	(??_vfpfcnvrt+1)^(0+1280),c
 11103   0101D2  C52C  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 11104   0101D6  C52D  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11105   0101DA  C530  F4DE         	movff	??_vfpfcnvrt,postinc2
 11106   0101DE  C531  F4DD         	movff	??_vfpfcnvrt+1,postdec2
 11107                           
 11108                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
 11109   0101E2  EFFF  F080         	goto	l3911
 11110   0101E6                     l3905:
 11111                           
 11112                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1586:      return
      +                           (void) xtoa(fp,convarg.uint);;	Return value of _vfpfcnvrt is never used
 11113   0101E6  C52A  F51D         	movff	vfpfcnvrt@fp,xtoa@fp
 11114   0101EA  C52B  F51E         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
 11115   0101EE  C532  F51F         	movff	vfpfcnvrt@convarg,xtoa@d
 11116   0101F2  C533  F520         	movff	vfpfcnvrt@convarg+1,xtoa@d+1
 11117   0101F6  EC36  F084         	call	_xtoa	;wreg free
 11118   0101FA  EFC6  F081         	goto	l1547
 11119   0101FE                     l3911:
 11120   0101FE  C537  F4F6         	movff	vfpfcnvrt@cp,tblptrl
 11121   010202  C538  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
 11122   010206                     	if	0	;tblptru may be non-zero
 11123   010206                     	endif
 11124   010206                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11125   010206  0E00               	movlw	low (__mediumconst shr (0+16))
 11126   010208  6EF8               	movwf	tblptru,c
 11127   01020A                     	endif
 11128   01020A  0008               	tblrd		*
 11129   01020C  50F5               	movf	tablat,w,c
 11130                           
 11131                           ; Switch size 1, requested type "simple"
 11132                           ; Number of cases is 1, Range of values is 120 to 120
 11133                           ; switch strategies available:
 11134                           ; Name         Instructions Cycles
 11135                           ; simple_byte            4     3 (average)
 11136                           ;	Chosen strategy is simple_byte
 11137   01020E  0A78               	xorlw	120	; case 120
 11138   010210  B4D8               	btfsc	status,2,c
 11139   010212  EFF3  F080         	goto	l3905
 11140   010216  EF0D  F081         	goto	l1548
 11141   01021A                     l1548:
 11142                           
 11143                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1656:   done = 0;
 11144   01021A  6A36               	clrf	vfpfcnvrt@done^(0+1280),c
 11145   01021C                     
 11146                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1657:   if ((*fmt
      +                          )[0] == 's') {
 11147   01021C  C52C  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 11148   010220  C52D  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11149   010224  C4DE F4F6          	movff	postinc2,tblptrl
 11150   010228  C4DD F4F7          	movff	postdec2,tblptrh
 11151   01022C                     	if	0	;tblptru may be non-zero
 11152   01022C                     	endif
 11153   01022C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11154   01022C  0E00               	movlw	low (__mediumconst shr (0+16))
 11155   01022E  6EF8               	movwf	tblptru,c
 11156   010230                     	endif
 11157   010230  0008               	tblrd		*
 11158   010232  50F5               	movf	tablat,w,c
 11159   010234  0A73               	xorlw	115
 11160   010236  A4D8               	btfss	status,2,c
 11161   010238  EF20  F081         	goto	u3061
 11162   01023C  EF22  F081         	goto	u3060
 11163   010240                     u3061:
 11164   010240  EF2D  F081         	goto	l3919
 11165   010244                     u3060:
 11166   010244                     
 11167                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1658:    ++*fmt;
 11168   010244  C52C  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 11169   010248  C52D  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11170   01024C  2ADE               	incf	postinc2,f,c
 11171   01024E  0E00               	movlw	0
 11172   010250  22DD               	addwfc	postdec2,f,c
 11173   010252                     l3917:
 11174                           
 11175                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1659:    done = 1
      +                          ;
 11176   010252  0E01               	movlw	1
 11177   010254  6E36               	movwf	vfpfcnvrt@done^(0+1280),c
 11178                           
 11179                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1660:   }
 11180   010256  EF83  F081         	goto	l3929
 11181   01025A                     l3919:
 11182   01025A  C52C  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 11183   01025E  C52D  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11184   010262  C4DE F4F6          	movff	postinc2,tblptrl
 11185   010266  C4DD F4F7          	movff	postdec2,tblptrh
 11186   01026A                     	if	0	;tblptru may be non-zero
 11187   01026A                     	endif
 11188   01026A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11189   01026A  0E00               	movlw	low (__mediumconst shr (0+16))
 11190   01026C  6EF8               	movwf	tblptru,c
 11191   01026E                     	endif
 11192   01026E  0008               	tblrd		*
 11193   010270  50F5               	movf	tablat,w,c
 11194   010272  0A6C               	xorlw	108
 11195   010274  A4D8               	btfss	status,2,c
 11196   010276  EF3F  F081         	goto	u3071
 11197   01027A  EF41  F081         	goto	u3070
 11198   01027E                     u3071:
 11199   01027E  EF83  F081         	goto	l3929
 11200   010282                     u3070:
 11201   010282  C52C  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 11202   010286  C52D  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11203   01028A  C4DE F530          	movff	postinc2,??_vfpfcnvrt
 11204   01028E  C4DD F531          	movff	postdec2,??_vfpfcnvrt+1
 11205   010292  0E01               	movlw	1
 11206   010294  2630               	addwf	??_vfpfcnvrt^(0+1280),f,c
 11207   010296  0E00               	movlw	0
 11208   010298  2231               	addwfc	(??_vfpfcnvrt+1)^(0+1280),f,c
 11209   01029A  C530  F4F6         	movff	??_vfpfcnvrt,tblptrl
 11210   01029E  C531  F4F7         	movff	??_vfpfcnvrt+1,tblptrh
 11211   0102A2                     	if	0	;tblptru may be non-zero
 11212   0102A2                     	endif
 11213   0102A2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11214   0102A2  0E00               	movlw	low (__mediumconst shr (0+16))
 11215   0102A4  6EF8               	movwf	tblptru,c
 11216   0102A6                     	endif
 11217   0102A6  0008               	tblrd		*
 11218   0102A8  50F5               	movf	tablat,w,c
 11219   0102AA  0A6C               	xorlw	108
 11220   0102AC  A4D8               	btfss	status,2,c
 11221   0102AE  EF5B  F081         	goto	u3081
 11222   0102B2  EF5D  F081         	goto	u3080
 11223   0102B6                     u3081:
 11224   0102B6  EF83  F081         	goto	l3929
 11225   0102BA                     u3080:
 11226   0102BA  C52C  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 11227   0102BE  C52D  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11228   0102C2  C4DE F530          	movff	postinc2,??_vfpfcnvrt
 11229   0102C6  C4DD F531          	movff	postdec2,??_vfpfcnvrt+1
 11230   0102CA  0E02               	movlw	2
 11231   0102CC  2630               	addwf	??_vfpfcnvrt^(0+1280),f,c
 11232   0102CE  0E00               	movlw	0
 11233   0102D0  2231               	addwfc	(??_vfpfcnvrt+1)^(0+1280),f,c
 11234   0102D2  C530  F4F6         	movff	??_vfpfcnvrt,tblptrl
 11235   0102D6  C531  F4F7         	movff	??_vfpfcnvrt+1,tblptrh
 11236   0102DA                     	if	0	;tblptru may be non-zero
 11237   0102DA                     	endif
 11238   0102DA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11239   0102DA  0E00               	movlw	low (__mediumconst shr (0+16))
 11240   0102DC  6EF8               	movwf	tblptru,c
 11241   0102DE                     	endif
 11242   0102DE  0008               	tblrd		*
 11243   0102E0  50F5               	movf	tablat,w,c
 11244   0102E2  0A73               	xorlw	115
 11245   0102E4  A4D8               	btfss	status,2,c
 11246   0102E6  EF77  F081         	goto	u3091
 11247   0102EA  EF79  F081         	goto	u3090
 11248   0102EE                     u3091:
 11249   0102EE  EF83  F081         	goto	l3929
 11250   0102F2                     u3090:
 11251   0102F2                     
 11252                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1662:    *fmt += 
      +                          3;
 11253   0102F2  0E03               	movlw	3
 11254   0102F4  C52C  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 11255   0102F8  C52D  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11256   0102FC  26DE               	addwf	postinc2,f,c
 11257   0102FE  0E00               	movlw	0
 11258   010300  22DD               	addwfc	postdec2,f,c
 11259   010302  EF29  F081         	goto	l3917
 11260   010306                     l3929:
 11261                           
 11262                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1665:   if (done)
      +                           {
 11263   010306  5036               	movf	vfpfcnvrt@done^(0+1280),w,c
 11264   010308  B4D8               	btfsc	status,2,c
 11265   01030A  EF89  F081         	goto	u3101
 11266   01030E  EF8B  F081         	goto	u3100
 11267   010312                     u3101:
 11268   010312  EFA7  F081         	goto	l3935
 11269   010316                     u3100:
 11270   010316                     
 11271                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1682:    return (
      +                          void) stoa(fp, (*(char * *)__va_arg(*(char * **)ap, (char *)0)));;	Return value of _vfpf
      +                          cnvrt is never used
 11272   010316  C52A  F50D         	movff	vfpfcnvrt@fp,stoa@fp
 11273   01031A  C52B  F50E         	movff	vfpfcnvrt@fp+1,stoa@fp+1
 11274   01031E  C52E  F4D9         	movff	vfpfcnvrt@ap,fsr2l
 11275   010322  C52F  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
 11276   010326  C4DF F530          	movff	indf2,??_vfpfcnvrt
 11277   01032A  0E02               	movlw	2
 11278   01032C  26DE               	addwf	postinc2,f,c
 11279   01032E  C4DF F531          	movff	indf2,??_vfpfcnvrt+1
 11280   010332  0E00               	movlw	0
 11281   010334  22DD               	addwfc	postdec2,f,c
 11282   010336  C530  F4D9         	movff	??_vfpfcnvrt,fsr2l
 11283   01033A  C531  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
 11284   01033E  C4DE F50F          	movff	postinc2,stoa@s
 11285   010342  C4DD F510          	movff	postdec2,stoa@s+1
 11286   010346  EC81  F083         	call	_stoa	;wreg free
 11287   01034A  EFC6  F081         	goto	l1547
 11288   01034E                     l3935:
 11289                           
 11290                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
 11291   01034E  C52C  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 11292   010352  C52D  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11293   010356  2ADE               	incf	postinc2,f,c
 11294   010358  0E00               	movlw	0
 11295   01035A  22DD               	addwfc	postdec2,f,c
 11296   01035C  EFC6  F081         	goto	l1547
 11297   010360                     l3939:
 11298                           
 11299                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
 11300   010360  C52C  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
 11301   010364  C52D  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11302   010368  C4DE F4F6          	movff	postinc2,tblptrl
 11303   01036C  C4DD F4F7          	movff	postdec2,tblptrh
 11304   010370                     	if	0	;tblptru may be non-zero
 11305   010370                     	endif
 11306   010370                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11307   010370  0E00               	movlw	low (__mediumconst shr (0+16))
 11308   010372  6EF8               	movwf	tblptru,c
 11309   010374                     	endif
 11310   010374  0008               	tblrd		*
 11311   010376  50F5               	movf	tablat,w,c
 11312   010378  6E04               	movwf	fputc@c^(0+1280),c
 11313   01037A  6A05               	clrf	(fputc@c+1)^(0+1280),c
 11314   01037C  C52A  F506         	movff	vfpfcnvrt@fp,fputc@fp
 11315   010380  C52B  F507         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 11316   010384  EC1E  F085         	call	_fputc	;wreg free
 11317   010388  EFA7  F081         	goto	l3935
 11318   01038C                     l1547:
 11319   01038C  0012               	return		;funcret
 11320   01038E                     __end_of_vfpfcnvrt:
 11321                           	callstack 0
 11322                           
 11323 ;; *************** function _xtoa *****************
 11324 ;; Defined at:
 11325 ;;		line 1055 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 11326 ;; Parameters:    Size  Location     Type
 11327 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
 11328 ;;		 -> NULL(0), 
 11329 ;;  d               2   30[COMRAM] unsigned int 
 11330 ;; Auto vars:     Size  Location     Type
 11331 ;;  i               2   39[COMRAM] int 
 11332 ;;  w               2   36[COMRAM] int 
 11333 ;;  c               1   38[COMRAM] unsigned char 
 11334 ;;  p               1   35[COMRAM] _Bool 
 11335 ;; Return value:  Size  Location     Type
 11336 ;;                  1    wreg      void 
 11337 ;; Registers used:
 11338 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11339 ;; Tracked objects:
 11340 ;;		On entry : 0/0
 11341 ;;		On exit  : 0/0
 11342 ;;		Unchanged: 0/0
 11343 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 11344 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11345 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11346 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11347 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11348 ;;Total ram usage:       13 bytes
 11349 ;; Hardware stack levels used: 1
 11350 ;; Hardware stack levels required when called: 7
 11351 ;; This function calls:
 11352 ;;		_pad
 11353 ;; This function is called by:
 11354 ;;		_vfpfcnvrt
 11355 ;; This function uses a non-reentrant model
 11356 ;;
 11357                           
 11358                           	psect	text15
 11359   01086C                     __ptext15:
 11360                           	callstack 0
 11361   01086C                     _xtoa:
 11362                           	callstack 114
 11363   01086C                     
 11364                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1055: static void
      +                           xtoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\comm
      +                          on\doprnt.c: 1058: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.
      +                          c: 1059:  char c;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 
      +                          1063:     int i, w;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c
      +                          : 1067:  _Bool p = 1;
 11365   01086C  0E01               	movlw	1
 11366   01086E  6E24               	movwf	xtoa@p^(0+1280),c
 11367   010870                     
 11368                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1082:     w = wid
      +                          th;
 11369   010870  C55A  F525         	movff	_width,xtoa@w
 11370   010874  C55B  F526         	movff	_width+1,xtoa@w+1
 11371                           
 11372                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1095:     i = siz
      +                          eof(dbuf) - 1;
 11373   010878  0E00               	movlw	0
 11374   01087A  6E29               	movwf	(xtoa@i+1)^(0+1280),c
 11375   01087C  0E1F               	movlw	31
 11376   01087E  6E28               	movwf	xtoa@i^(0+1280),c
 11377   010880                     
 11378                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1096:     dbuf[i]
      +                           = '\0';
 11379   010880  0105               	movlb	5	; () banked
 11380   010882  6BEE               	clrf	(_dbuf+31)& (0+255),b
 11381                           
 11382                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1097:     while (
      +                          !(i < 2) && (d != 0
 11383   010884  EF74  F084         	goto	l3821
 11384   010888                     l3803:
 11385                           
 11386                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1106:     )) {;C:
      +                          \Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1107:         --i;
 11387   010888  0628               	decf	xtoa@i^(0+1280),f,c
 11388   01088A  A0D8               	btfss	status,0,c
 11389   01088C  0629               	decf	(xtoa@i+1)^(0+1280),f,c
 11390   01088E                     
 11391                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1108:         c =
      +                           d & 0x0f;
 11392   01088E  501F               	movf	xtoa@d^(0+1280),w,c
 11393   010890  0B0F               	andlw	15
 11394   010892  6E27               	movwf	xtoa@c^(0+1280),c
 11395   010894                     
 11396                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1109:   if (c < 1
      +                          0) {
 11397   010894  0E0A               	movlw	10
 11398   010896  6027               	cpfslt	xtoa@c^(0+1280),c
 11399   010898  EF50  F084         	goto	u2901
 11400   01089C  EF52  F084         	goto	u2900
 11401   0108A0                     u2901:
 11402   0108A0  EF56  F084         	goto	l3811
 11403   0108A4                     u2900:
 11404   0108A4                     
 11405                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1110:    c += '0'
      +                          ;
 11406   0108A4  0E30               	movlw	48
 11407   0108A6  2627               	addwf	xtoa@c^(0+1280),f,c
 11408                           
 11409                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1111:   }
 11410   0108A8  EF58  F084         	goto	l3813
 11411   0108AC                     l3811:
 11412                           
 11413                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1116:    c += 'a'
      +                           - 10;
 11414   0108AC  0E57               	movlw	87
 11415   0108AE  2627               	addwf	xtoa@c^(0+1280),f,c
 11416   0108B0                     l3813:
 11417                           
 11418                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1121:   dbuf[i] =
      +                           c;
 11419   0108B0  0ECF               	movlw	low _dbuf
 11420   0108B2  2428               	addwf	xtoa@i^(0+1280),w,c
 11421   0108B4  6ED9               	movwf	fsr2l,c
 11422   0108B6  0E05               	movlw	high _dbuf
 11423   0108B8  2029               	addwfc	(xtoa@i+1)^(0+1280),w,c
 11424   0108BA  6EDA               	movwf	fsr2h,c
 11425   0108BC  C527  F4DF         	movff	xtoa@c,indf2
 11426   0108C0                     
 11427                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1125:   p = 0;
 11428   0108C0  6A24               	clrf	xtoa@p^(0+1280),c
 11429   0108C2                     
 11430                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1127:         --w
      +                          ;
 11431   0108C2  0625               	decf	xtoa@w^(0+1280),f,c
 11432   0108C4  A0D8               	btfss	status,0,c
 11433   0108C6  0626               	decf	(xtoa@w+1)^(0+1280),f,c
 11434   0108C8                     
 11435                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1128:         d =
      +                           d >> 4;
 11436   0108C8  C51F  F521         	movff	xtoa@d,??_xtoa
 11437   0108CC  C520  F522         	movff	xtoa@d+1,??_xtoa+1
 11438   0108D0  0E04               	movlw	4
 11439   0108D2  6E23               	movwf	(??_xtoa+2)^(0+1280),c
 11440   0108D4                     u2915:
 11441   0108D4  90D8               	bcf	status,0,c
 11442   0108D6  3222               	rrcf	(??_xtoa+1)^(0+1280),f,c
 11443   0108D8  3221               	rrcf	??_xtoa^(0+1280),f,c
 11444   0108DA  2E23               	decfsz	(??_xtoa+2)^(0+1280),f,c
 11445   0108DC  EF6A  F084         	goto	u2915
 11446   0108E0  C521  F51F         	movff	??_xtoa,xtoa@d
 11447   0108E4  C522  F520         	movff	??_xtoa+1,xtoa@d+1
 11448   0108E8                     l3821:
 11449                           
 11450                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1097:     while (
      +                          !(i < 2) && (d != 0
 11451   0108E8  BE29               	btfsc	(xtoa@i+1)^(0+1280),7,c
 11452   0108EA  EF80  F084         	goto	u2921
 11453   0108EE  5029               	movf	(xtoa@i+1)^(0+1280),w,c
 11454   0108F0  E109               	bnz	u2920
 11455   0108F2  0E02               	movlw	2
 11456   0108F4  5C28               	subwf	xtoa@i^(0+1280),w,c
 11457   0108F6  A0D8               	btfss	status,0,c
 11458   0108F8  EF80  F084         	goto	u2921
 11459   0108FC  EF82  F084         	goto	u2920
 11460   010900                     u2921:
 11461   010900  EFA7  F084         	goto	l3831
 11462   010904                     u2920:
 11463   010904  501F               	movf	xtoa@d^(0+1280),w,c
 11464   010906  1020               	iorwf	(xtoa@d+1)^(0+1280),w,c
 11465   010908  A4D8               	btfss	status,2,c
 11466   01090A  EF89  F084         	goto	u2931
 11467   01090E  EF8B  F084         	goto	u2930
 11468   010912                     u2931:
 11469   010912  EF44  F084         	goto	l3803
 11470   010916                     u2930:
 11471   010916  5024               	movf	xtoa@p^(0+1280),w,c
 11472   010918  A4D8               	btfss	status,2,c
 11473   01091A  EF91  F084         	goto	u2941
 11474   01091E  EF93  F084         	goto	u2940
 11475   010922                     u2941:
 11476   010922  EF44  F084         	goto	l3803
 11477   010926                     u2940:
 11478   010926  BE26               	btfsc	(xtoa@w+1)^(0+1280),7,c
 11479   010928  EF9E  F084         	goto	u2951
 11480   01092C  5026               	movf	(xtoa@w+1)^(0+1280),w,c
 11481   01092E  E108               	bnz	u2950
 11482   010930  0425               	decf	xtoa@w^(0+1280),w,c
 11483   010932  A0D8               	btfss	status,0,c
 11484   010934  EF9E  F084         	goto	u2951
 11485   010938  EFA0  F084         	goto	u2950
 11486   01093C                     u2951:
 11487   01093C  EFA7  F084         	goto	l3831
 11488   010940                     u2950:
 11489   010940  B25C               	btfsc	_flags^(0+1280),1,c
 11490   010942  EFA5  F084         	goto	u2961
 11491   010946  EFA7  F084         	goto	u2960
 11492   01094A                     u2961:
 11493   01094A  EF44  F084         	goto	l3803
 11494   01094E                     u2960:
 11495   01094E                     l3831:
 11496                           
 11497                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1152:     return 
      +                          (void) pad(fp, &dbuf[i], w);
 11498   01094E  C51D  F514         	movff	xtoa@fp,pad@fp
 11499   010952  C51E  F515         	movff	xtoa@fp+1,pad@fp+1
 11500   010956  0ECF               	movlw	low _dbuf
 11501   010958  2428               	addwf	xtoa@i^(0+1280),w,c
 11502   01095A  6E16               	movwf	pad@buf^(0+1280),c
 11503   01095C  0E05               	movlw	high _dbuf
 11504   01095E  2029               	addwfc	(xtoa@i+1)^(0+1280),w,c
 11505   010960  6E17               	movwf	(pad@buf+1)^(0+1280),c
 11506   010962  C525  F518         	movff	xtoa@w,pad@p
 11507   010966  C526  F519         	movff	xtoa@w+1,pad@p+1
 11508   01096A  EC01  F088         	call	_pad	;wreg free
 11509   01096E  0012               	return		;funcret
 11510   010970                     __end_of_xtoa:
 11511                           	callstack 0
 11512                           
 11513 ;; *************** function _stoa *****************
 11514 ;; Defined at:
 11515 ;;		line 942 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 11516 ;; Parameters:    Size  Location     Type
 11517 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
 11518 ;;		 -> NULL(0), 
 11519 ;;  s               2   14[COMRAM] PTR unsigned char 
 11520 ;;		 -> ?_printf(2), rf24_pa_dbm(32), rf24_crclength(30), rf24_datarates(24), 
 11521 ;;		 -> STR_12(14), STR_11(8), STR_10(9), STR_9(7), 
 11522 ;;		 -> STR_8(10), STR_7(7), STR_6(11), STR_5(9), 
 11523 ;;		 -> STR_4(13), STR_3(13), 
 11524 ;; Auto vars:     Size  Location     Type
 11525 ;;  l               2   24[COMRAM] int 
 11526 ;;  cp              2   22[COMRAM] PTR unsigned char 
 11527 ;;		 -> STR_25(7), ?_printf(2), rf24_pa_dbm(32), rf24_crclength(30), 
 11528 ;;		 -> rf24_datarates(24), STR_12(14), STR_11(8), STR_10(9), 
 11529 ;;		 -> STR_9(7), STR_8(10), STR_7(7), STR_6(11), 
 11530 ;;		 -> STR_5(9), STR_4(13), STR_3(13), 
 11531 ;;  w               2   20[COMRAM] int 
 11532 ;;  p               2   18[COMRAM] int 
 11533 ;; Return value:  Size  Location     Type
 11534 ;;                  1    wreg      void 
 11535 ;; Registers used:
 11536 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11537 ;; Tracked objects:
 11538 ;;		On entry : 0/0
 11539 ;;		On exit  : 0/0
 11540 ;;		Unchanged: 0/0
 11541 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 11542 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11543 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11544 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11545 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11546 ;;Total ram usage:       14 bytes
 11547 ;; Hardware stack levels used: 1
 11548 ;; Hardware stack levels required when called: 5
 11549 ;; This function calls:
 11550 ;;		_fputc
 11551 ;; This function is called by:
 11552 ;;		_vfpfcnvrt
 11553 ;; This function uses a non-reentrant model
 11554 ;;
 11555                           
 11556                           	psect	text16
 11557   010702                     __ptext16:
 11558                           	callstack 0
 11559   010702                     _stoa:
 11560                           	callstack 116
 11561   010702                     
 11562                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 942: static void 
      +                          stoa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\dopr
      +                          nt.c: 943: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 944: 
      +                              char *cp;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 945:
      +                               int l, p;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 947
      +                          :  int w;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 951:    
      +                           cp = s;
 11563   010702  C50F  F517         	movff	stoa@s,stoa@cp
 11564   010706  C510  F518         	movff	stoa@s+1,stoa@cp+1
 11565                           
 11566                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 952:     if (!cp)
      +                           {
 11567   01070A  5017               	movf	stoa@cp^(0+1280),w,c
 11568   01070C  1018               	iorwf	(stoa@cp+1)^(0+1280),w,c
 11569   01070E  A4D8               	btfss	status,2,c
 11570   010710  EF8C  F083         	goto	u2811
 11571   010714  EF8E  F083         	goto	u2810
 11572   010718                     u2811:
 11573   010718  EF92  F083         	goto	l3769
 11574   01071C                     u2810:
 11575   01071C                     
 11576                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 953:         cp =
      +                           "(null)";
 11577   01071C  0EDA               	movlw	low STR_25
 11578   01071E  6E17               	movwf	stoa@cp^(0+1280),c
 11579   010720  0EFF               	movlw	high STR_25
 11580   010722  6E18               	movwf	(stoa@cp+1)^(0+1280),c
 11581   010724                     l3769:
 11582                           
 11583                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 957:  for (l = 0;
      +                           cp[l] != '\0'; l++) {
 11584   010724  0E00               	movlw	0
 11585   010726  6E1A               	movwf	(stoa@l+1)^(0+1280),c
 11586   010728  0E00               	movlw	0
 11587   01072A  6E19               	movwf	stoa@l^(0+1280),c
 11588   01072C  EF9A  F083         	goto	l3773
 11589   010730                     l3771:
 11590   010730  4A19               	infsnz	stoa@l^(0+1280),f,c
 11591   010732  2A1A               	incf	(stoa@l+1)^(0+1280),f,c
 11592   010734                     l3773:
 11593   010734  5019               	movf	stoa@l^(0+1280),w,c
 11594   010736  2417               	addwf	stoa@cp^(0+1280),w,c
 11595   010738  6E11               	movwf	??_stoa^(0+1280),c
 11596   01073A  501A               	movf	(stoa@l+1)^(0+1280),w,c
 11597   01073C  2018               	addwfc	(stoa@cp+1)^(0+1280),w,c
 11598   01073E  6E12               	movwf	(??_stoa+1)^(0+1280),c
 11599   010740  C511  F4F6         	movff	??_stoa,tblptrl
 11600   010744  C512  F4F7         	movff	??_stoa+1,tblptrh
 11601   010748  0E00               	movlw	low (__mediumconst shr (0+16))
 11602   01074A  6EF8               	movwf	tblptru,c
 11603   01074C  0E25               	movlw	(high __ramtop+-1)
 11604   01074E  64F7               	cpfsgt	tblptrh,c
 11605   010750  D003               	bra	u2827
 11606   010752  0008               	tblrd		*
 11607   010754  50F5               	movf	tablat,w,c
 11608   010756  D005               	bra	u2820
 11609   010758                     u2827:
 11610   010758  C4F6 F4E9          	movff	tblptrl,fsr0l
 11611   01075C  C4F7 F4EA          	movff	tblptrh,fsr0h
 11612   010760  50EF               	movf	indf0,w,c
 11613   010762                     u2820:
 11614   010762  0900               	iorlw	0
 11615   010764  A4D8               	btfss	status,2,c
 11616   010766  EFB7  F083         	goto	u2831
 11617   01076A  EFB9  F083         	goto	u2830
 11618   01076E                     u2831:
 11619   01076E  EF98  F083         	goto	l3771
 11620   010772                     u2830:
 11621   010772                     
 11622                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 965:     p = l;
 11623   010772  C519  F513         	movff	stoa@l,stoa@p
 11624   010776  C51A  F514         	movff	stoa@l+1,stoa@p+1
 11625                           
 11626                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 969:     w = widt
      +                          h;
 11627   01077A  C55A  F515         	movff	_width,stoa@w
 11628   01077E  C55B  F516         	movff	_width+1,stoa@w+1
 11629                           
 11630                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 970:     if (!(fl
      +                          ags & (1 << 0))) {
 11631   010782  B05C               	btfsc	_flags^(0+1280),0,c
 11632   010784  EFC6  F083         	goto	u2841
 11633   010788  EFC8  F083         	goto	u2840
 11634   01078C                     u2841:
 11635   01078C  EF04  F084         	goto	l3787
 11636   010790                     u2840:
 11637   010790  EFD6  F083         	goto	l3781
 11638   010794                     l3777:
 11639                           
 11640                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 972:             
      +                          fputc(' ', fp);
 11641   010794  0E00               	movlw	0
 11642   010796  6E05               	movwf	(fputc@c+1)^(0+1280),c
 11643   010798  0E20               	movlw	32
 11644   01079A  6E04               	movwf	fputc@c^(0+1280),c
 11645   01079C  C50D  F506         	movff	stoa@fp,fputc@fp
 11646   0107A0  C50E  F507         	movff	stoa@fp+1,fputc@fp+1
 11647   0107A4  EC1E  F085         	call	_fputc	;wreg free
 11648   0107A8                     
 11649                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 973:             
      +                          ++l;
 11650   0107A8  4A19               	infsnz	stoa@l^(0+1280),f,c
 11651   0107AA  2A1A               	incf	(stoa@l+1)^(0+1280),f,c
 11652   0107AC                     l3781:
 11653                           
 11654                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 971:         whil
      +                          e (l < w) {
 11655   0107AC  5015               	movf	stoa@w^(0+1280),w,c
 11656   0107AE  5C19               	subwf	stoa@l^(0+1280),w,c
 11657   0107B0  501A               	movf	(stoa@l+1)^(0+1280),w,c
 11658   0107B2  0A80               	xorlw	128
 11659   0107B4  6E11               	movwf	??_stoa^(0+1280),c
 11660   0107B6  5016               	movf	(stoa@w+1)^(0+1280),w,c
 11661   0107B8  0A80               	xorlw	128
 11662   0107BA  5811               	subwfb	??_stoa^(0+1280),w,c
 11663   0107BC  A0D8               	btfss	status,0,c
 11664   0107BE  EFE3  F083         	goto	u2851
 11665   0107C2  EFE5  F083         	goto	u2850
 11666   0107C6                     u2851:
 11667   0107C6  EFCA  F083         	goto	l3777
 11668   0107CA                     u2850:
 11669   0107CA  EF04  F084         	goto	l3787
 11670   0107CE                     l3783:
 11671                           
 11672                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 980:         fput
      +                          c(*cp, fp);
 11673   0107CE  C517  F4F6         	movff	stoa@cp,tblptrl
 11674   0107D2  C518  F4F7         	movff	stoa@cp+1,tblptrh
 11675   0107D6  0E00               	movlw	low (__mediumconst shr (0+16))
 11676   0107D8  6EF8               	movwf	tblptru,c
 11677   0107DA  0E25               	movlw	(high __ramtop+-1)
 11678   0107DC  64F7               	cpfsgt	tblptrh,c
 11679   0107DE  D003               	bra	u2867
 11680   0107E0  0008               	tblrd		*
 11681   0107E2  50F5               	movf	tablat,w,c
 11682   0107E4  D005               	bra	u2860
 11683   0107E6                     u2867:
 11684   0107E6  C4F6 F4E9          	movff	tblptrl,fsr0l
 11685   0107EA  C4F7 F4EA          	movff	tblptrh,fsr0h
 11686   0107EE  50EF               	movf	indf0,w,c
 11687   0107F0                     u2860:
 11688   0107F0  6E11               	movwf	??_stoa^(0+1280),c
 11689   0107F2  5011               	movf	??_stoa^(0+1280),w,c
 11690   0107F4  6E04               	movwf	fputc@c^(0+1280),c
 11691   0107F6  6A05               	clrf	(fputc@c+1)^(0+1280),c
 11692   0107F8  C50D  F506         	movff	stoa@fp,fputc@fp
 11693   0107FC  C50E  F507         	movff	stoa@fp+1,fputc@fp+1
 11694   010800  EC1E  F085         	call	_fputc	;wreg free
 11695   010804                     
 11696                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 981:         ++cp
      +                          ;
 11697   010804  4A17               	infsnz	stoa@cp^(0+1280),f,c
 11698   010806  2A18               	incf	(stoa@cp+1)^(0+1280),f,c
 11699   010808                     l3787:
 11700                           
 11701                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 979:     while (p
      +                          --) {
 11702   010808  0613               	decf	stoa@p^(0+1280),f,c
 11703   01080A  A0D8               	btfss	status,0,c
 11704   01080C  0614               	decf	(stoa@p+1)^(0+1280),f,c
 11705   01080E  2813               	incf	stoa@p^(0+1280),w,c
 11706   010810  E106               	bnz	u2871
 11707   010812  2814               	incf	(stoa@p+1)^(0+1280),w,c
 11708   010814  A4D8               	btfss	status,2,c
 11709   010816  EF0F  F084         	goto	u2871
 11710   01081A  EF11  F084         	goto	u2870
 11711   01081E                     u2871:
 11712   01081E  EFE7  F083         	goto	l3783
 11713   010822                     u2870:
 11714   010822                     
 11715                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 986:     if (flag
      +                          s & (1 << 0)) {
 11716   010822  A05C               	btfss	_flags^(0+1280),0,c
 11717   010824  EF16  F084         	goto	u2881
 11718   010828  EF18  F084         	goto	u2880
 11719   01082C                     u2881:
 11720   01082C  EF35  F084         	goto	l1512
 11721   010830                     u2880:
 11722   010830  EF26  F084         	goto	l3795
 11723   010834                     l3791:
 11724                           
 11725                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 988:             
      +                          fputc(' ', fp);
 11726   010834  0E00               	movlw	0
 11727   010836  6E05               	movwf	(fputc@c+1)^(0+1280),c
 11728   010838  0E20               	movlw	32
 11729   01083A  6E04               	movwf	fputc@c^(0+1280),c
 11730   01083C  C50D  F506         	movff	stoa@fp,fputc@fp
 11731   010840  C50E  F507         	movff	stoa@fp+1,fputc@fp+1
 11732   010844  EC1E  F085         	call	_fputc	;wreg free
 11733   010848                     
 11734                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 989:             
      +                          ++l;
 11735   010848  4A19               	infsnz	stoa@l^(0+1280),f,c
 11736   01084A  2A1A               	incf	(stoa@l+1)^(0+1280),f,c
 11737   01084C                     l3795:
 11738                           
 11739                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 987:         whil
      +                          e (l < w) {
 11740   01084C  5015               	movf	stoa@w^(0+1280),w,c
 11741   01084E  5C19               	subwf	stoa@l^(0+1280),w,c
 11742   010850  501A               	movf	(stoa@l+1)^(0+1280),w,c
 11743   010852  0A80               	xorlw	128
 11744   010854  6E11               	movwf	??_stoa^(0+1280),c
 11745   010856  5016               	movf	(stoa@w+1)^(0+1280),w,c
 11746   010858  0A80               	xorlw	128
 11747   01085A  5811               	subwfb	??_stoa^(0+1280),w,c
 11748   01085C  A0D8               	btfss	status,0,c
 11749   01085E  EF33  F084         	goto	u2891
 11750   010862  EF35  F084         	goto	u2890
 11751   010866                     u2891:
 11752   010866  EF1A  F084         	goto	l3791
 11753   01086A                     u2890:
 11754   01086A                     l1512:
 11755   01086A  0012               	return		;funcret
 11756   01086C                     __end_of_stoa:
 11757                           	callstack 0
 11758                           
 11759 ;; *************** function _read_prec_or_width *****************
 11760 ;; Defined at:
 11761 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 11762 ;; Parameters:    Size  Location     Type
 11763 ;;  fmt             2    3[COMRAM] PTR PTR const unsigned c
 11764 ;;		 -> vfprintf@cfmt(2), 
 11765 ;;  ap              2    5[COMRAM] PTR PTR void [1]
 11766 ;;		 -> printf@ap(2), 
 11767 ;; Auto vars:     Size  Location     Type
 11768 ;;  c               1    9[COMRAM] unsigned char 
 11769 ;;  n               2   10[COMRAM] int 
 11770 ;; Return value:  Size  Location     Type
 11771 ;;                  2    3[COMRAM] int 
 11772 ;; Registers used:
 11773 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 11774 ;; Tracked objects:
 11775 ;;		On entry : 0/0
 11776 ;;		On exit  : 0/0
 11777 ;;		Unchanged: 0/0
 11778 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 11779 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11780 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11781 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11782 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11783 ;;Total ram usage:        9 bytes
 11784 ;; Hardware stack levels used: 1
 11785 ;; Hardware stack levels required when called: 3
 11786 ;; This function calls:
 11787 ;;		Nothing
 11788 ;; This function is called by:
 11789 ;;		_vfpfcnvrt
 11790 ;; This function uses a non-reentrant model
 11791 ;;
 11792                           
 11793                           	psect	text17
 11794   010970                     __ptext17:
 11795                           	callstack 0
 11796   010970                     _read_prec_or_width:
 11797                           	callstack 118
 11798   010970                     
 11799                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
 11800   010970  0E00               	movlw	0
 11801   010972  6E0C               	movwf	(read_prec_or_width@n+1)^(0+1280),c
 11802   010974  0E00               	movlw	0
 11803   010976  6E0B               	movwf	read_prec_or_width@n^(0+1280),c
 11804   010978                     
 11805                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
 11806   010978  C504  F4D9         	movff	read_prec_or_width@fmt,fsr2l
 11807   01097C  C505  F4DA         	movff	read_prec_or_width@fmt+1,fsr2h
 11808   010980  C4DE F4F6          	movff	postinc2,tblptrl
 11809   010984  C4DD F4F7          	movff	postdec2,tblptrh
 11810   010988                     	if	0	;tblptru may be non-zero
 11811   010988                     	endif
 11812   010988                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11813   010988  0E00               	movlw	low (__mediumconst shr (0+16))
 11814   01098A  6EF8               	movwf	tblptru,c
 11815   01098C                     	endif
 11816   01098C  0008               	tblrd		*
 11817   01098E  50F5               	movf	tablat,w,c
 11818   010990  0A2A               	xorlw	42
 11819   010992  A4D8               	btfss	status,2,c
 11820   010994  EFCE  F084         	goto	u2971
 11821   010998  EFD0  F084         	goto	u2970
 11822   01099C                     u2971:
 11823   01099C  EF03  F085         	goto	l3845
 11824   0109A0                     u2970:
 11825   0109A0                     
 11826                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
 11827   0109A0  C504  F4D9         	movff	read_prec_or_width@fmt,fsr2l
 11828   0109A4  C505  F4DA         	movff	read_prec_or_width@fmt+1,fsr2h
 11829   0109A8  2ADE               	incf	postinc2,f,c
 11830   0109AA  0E00               	movlw	0
 11831   0109AC  22DD               	addwfc	postdec2,f,c
 11832                           
 11833                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
 11834   0109AE  C506  F4D9         	movff	read_prec_or_width@ap,fsr2l
 11835   0109B2  C507  F4DA         	movff	read_prec_or_width@ap+1,fsr2h
 11836   0109B6  C4DF F508          	movff	indf2,??_read_prec_or_width
 11837   0109BA  0E02               	movlw	2
 11838   0109BC  26DE               	addwf	postinc2,f,c
 11839   0109BE  C4DF F509          	movff	indf2,??_read_prec_or_width+1
 11840   0109C2  0E00               	movlw	0
 11841   0109C4  22DD               	addwfc	postdec2,f,c
 11842   0109C6  C508  F4D9         	movff	??_read_prec_or_width,fsr2l
 11843   0109CA  C509  F4DA         	movff	??_read_prec_or_width+1,fsr2h
 11844   0109CE  C4DE F50B          	movff	postinc2,read_prec_or_width@n
 11845   0109D2  C4DD F50C          	movff	postdec2,read_prec_or_width@n+1
 11846                           
 11847                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
 11848   0109D6  EF19  F085         	goto	l1528
 11849   0109DA                     l3841:
 11850                           
 11851                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
 11852   0109DA  0E0A               	movlw	10
 11853   0109DC  020B               	mulwf	read_prec_or_width@n^(0+1280),c
 11854   0109DE  C4F3 F508          	movff	prodl,??_read_prec_or_width
 11855   0109E2  C4F4 F509          	movff	prodh,??_read_prec_or_width+1
 11856   0109E6  020C               	mulwf	(read_prec_or_width@n+1)^(0+1280),c
 11857   0109E8  50F3               	movf	prodl,w,c
 11858   0109EA  2609               	addwf	(??_read_prec_or_width+1)^(0+1280),f,c
 11859   0109EC  500A               	movf	read_prec_or_width@c^(0+1280),w,c
 11860   0109EE  2408               	addwf	??_read_prec_or_width^(0+1280),w,c
 11861   0109F0  6E0B               	movwf	read_prec_or_width@n^(0+1280),c
 11862   0109F2  0E00               	movlw	0
 11863   0109F4  2009               	addwfc	(??_read_prec_or_width+1)^(0+1280),w,c
 11864   0109F6  6E0C               	movwf	(read_prec_or_width@n+1)^(0+1280),c
 11865   0109F8                     
 11866                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
 11867   0109F8  C504  F4D9         	movff	read_prec_or_width@fmt,fsr2l
 11868   0109FC  C505  F4DA         	movff	read_prec_or_width@fmt+1,fsr2h
 11869   010A00  2ADE               	incf	postinc2,f,c
 11870   010A02  0E00               	movlw	0
 11871   010A04  22DD               	addwfc	postdec2,f,c
 11872   010A06                     l3845:
 11873                           
 11874                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
 11875   010A06  C504  F4D9         	movff	read_prec_or_width@fmt,fsr2l
 11876   010A0A  C505  F4DA         	movff	read_prec_or_width@fmt+1,fsr2h
 11877   010A0E  C4DE F4F6          	movff	postinc2,tblptrl
 11878   010A12  C4DD F4F7          	movff	postdec2,tblptrh
 11879   010A16                     	if	0	;tblptru may be non-zero
 11880   010A16                     	endif
 11881   010A16                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11882   010A16  0E00               	movlw	low (__mediumconst shr (0+16))
 11883   010A18  6EF8               	movwf	tblptru,c
 11884   010A1A                     	endif
 11885   010A1A  0008               	tblrd		*
 11886   010A1C  50F5               	movf	tablat,w,c
 11887   010A1E  0FD0               	addlw	208
 11888   010A20  6E0A               	movwf	read_prec_or_width@c^(0+1280),c
 11889   010A22  0E09               	movlw	9
 11890   010A24  640A               	cpfsgt	read_prec_or_width@c^(0+1280),c
 11891   010A26  EF17  F085         	goto	u2981
 11892   010A2A  EF19  F085         	goto	u2980
 11893   010A2E                     u2981:
 11894   010A2E  EFED  F084         	goto	l3841
 11895   010A32                     u2980:
 11896   010A32                     l1528:
 11897                           
 11898                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
 11899   010A32  C50B  F504         	movff	read_prec_or_width@n,?_read_prec_or_width
 11900   010A36  C50C  F505         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
 11901   010A3A  0012               	return		;funcret
 11902   010A3C                     __end_of_read_prec_or_width:
 11903                           	callstack 0
 11904                           
 11905 ;; *************** function _dtoa *****************
 11906 ;; Defined at:
 11907 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 11908 ;; Parameters:    Size  Location     Type
 11909 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
 11910 ;;		 -> NULL(0), 
 11911 ;;  d               2   30[COMRAM] int 
 11912 ;; Auto vars:     Size  Location     Type
 11913 ;;  i               2   38[COMRAM] int 
 11914 ;;  w               2   35[COMRAM] int 
 11915 ;;  s               1   37[COMRAM] unsigned char 
 11916 ;;  p               1   34[COMRAM] _Bool 
 11917 ;; Return value:  Size  Location     Type
 11918 ;;                  1    wreg      void 
 11919 ;; Registers used:
 11920 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11921 ;; Tracked objects:
 11922 ;;		On entry : 0/0
 11923 ;;		On exit  : 0/0
 11924 ;;		Unchanged: 0/0
 11925 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 11926 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11927 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11929 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11930 ;;Total ram usage:       12 bytes
 11931 ;; Hardware stack levels used: 1
 11932 ;; Hardware stack levels required when called: 7
 11933 ;; This function calls:
 11934 ;;		___awdiv
 11935 ;;		___awmod
 11936 ;;		_abs
 11937 ;;		_pad
 11938 ;; This function is called by:
 11939 ;;		_vfpfcnvrt
 11940 ;; This function uses a non-reentrant model
 11941 ;;
 11942                           
 11943                           	psect	text18
 11944   01058C                     __ptext18:
 11945                           	callstack 0
 11946   01058C                     _dtoa:
 11947                           	callstack 114
 11948   01058C                     
 11949                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 52
      +                          0:  _Bool p = 1;
 11950   01058C  0E01               	movlw	1
 11951   01058E  6E23               	movwf	dtoa@p^(0+1280),c
 11952   010590                     
 11953                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 524:     s = d < 
      +                          0 ? 1 : 0;
 11954   010590  BE20               	btfsc	(dtoa@d+1)^(0+1280),7,c
 11955   010592  EFCD  F082         	goto	u2711
 11956   010596  EFD0  F082         	goto	u2710
 11957   01059A                     u2711:
 11958   01059A  0E01               	movlw	1
 11959   01059C  EFD1  F082         	goto	u2720
 11960   0105A0                     u2710:
 11961   0105A0  0E00               	movlw	0
 11962   0105A2                     u2720:
 11963   0105A2  6E26               	movwf	dtoa@s^(0+1280),c
 11964   0105A4                     
 11965                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
 11966   0105A4  C55A  F524         	movff	_width,dtoa@w
 11967   0105A8  C55B  F525         	movff	_width+1,dtoa@w+1
 11968   0105AC                     
 11969                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 536:     if (s
 11970   0105AC  5026               	movf	dtoa@s^(0+1280),w,c
 11971   0105AE  B4D8               	btfsc	status,2,c
 11972   0105B0  EFDC  F082         	goto	u2731
 11973   0105B4  EFDE  F082         	goto	u2730
 11974   0105B8                     u2731:
 11975   0105B8  EFF5  F082         	goto	l1480
 11976   0105BC                     u2730:
 11977   0105BC                     
 11978                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 541:         --w;
 11979   0105BC  0624               	decf	dtoa@w^(0+1280),f,c
 11980   0105BE  A0D8               	btfss	status,0,c
 11981   0105C0  0625               	decf	(dtoa@w+1)^(0+1280),f,c
 11982   0105C2                     
 11983                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
 11984   0105C2  5026               	movf	dtoa@s^(0+1280),w,c
 11985   0105C4  A4D8               	btfss	status,2,c
 11986   0105C6  EFE7  F082         	goto	u2741
 11987   0105CA  EFE9  F082         	goto	u2740
 11988   0105CE                     u2741:
 11989   0105CE  EFEF  F082         	goto	l3729
 11990   0105D2                     u2740:
 11991   0105D2  0E00               	movlw	0
 11992   0105D4  6E22               	movwf	(_dtoa$1909+1)^(0+1280),c
 11993   0105D6  0E2B               	movlw	43
 11994   0105D8  6E21               	movwf	_dtoa$1909^(0+1280),c
 11995   0105DA  EFF3  F082         	goto	l3731
 11996   0105DE                     l3729:
 11997   0105DE  0E00               	movlw	0
 11998   0105E0  6E22               	movwf	(_dtoa$1909+1)^(0+1280),c
 11999   0105E2  0E2D               	movlw	45
 12000   0105E4  6E21               	movwf	_dtoa$1909^(0+1280),c
 12001   0105E6                     l3731:
 12002   0105E6  C521  F526         	movff	_dtoa$1909,dtoa@s
 12003   0105EA                     l1480:
 12004                           
 12005                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
 12006   0105EA  0E00               	movlw	0
 12007   0105EC  6E28               	movwf	(dtoa@i+1)^(0+1280),c
 12008   0105EE  0E1F               	movlw	31
 12009   0105F0  6E27               	movwf	dtoa@i^(0+1280),c
 12010   0105F2                     
 12011                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
 12012   0105F2  0105               	movlb	5	; () banked
 12013   0105F4  6BEE               	clrf	(_dbuf+31)& (0+255),b
 12014                           
 12015                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 12016   0105F6  EF2B  F083         	goto	l3745
 12017   0105FA                     l3735:
 12018                           
 12019                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 564:         --i;
 12020   0105FA  0627               	decf	dtoa@i^(0+1280),f,c
 12021   0105FC  A0D8               	btfss	status,0,c
 12022   0105FE  0628               	decf	(dtoa@i+1)^(0+1280),f,c
 12023   010600                     
 12024                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
 12025   010600  0ECF               	movlw	low _dbuf
 12026   010602  2427               	addwf	dtoa@i^(0+1280),w,c
 12027   010604  6ED9               	movwf	fsr2l,c
 12028   010606  0E05               	movlw	high _dbuf
 12029   010608  2028               	addwfc	(dtoa@i+1)^(0+1280),w,c
 12030   01060A  6EDA               	movwf	fsr2h,c
 12031   01060C  C51F  F504         	movff	dtoa@d,___awmod@dividend
 12032   010610  C520  F505         	movff	dtoa@d+1,___awmod@dividend+1
 12033   010614  0E00               	movlw	0
 12034   010616  6E07               	movwf	(___awmod@divisor+1)^(0+1280),c
 12035   010618  0E0A               	movlw	10
 12036   01061A  6E06               	movwf	___awmod@divisor^(0+1280),c
 12037   01061C  ECAB  F086         	call	___awmod	;wreg free
 12038   010620  C504  F50A         	movff	?___awmod,abs@a
 12039   010624  C505  F50B         	movff	?___awmod+1,abs@a+1
 12040   010628  EC2F  F08B         	call	_abs	;wreg free
 12041   01062C  500A               	movf	?_abs^(0+1280),w,c
 12042   01062E  0F30               	addlw	48
 12043   010630  6EDF               	movwf	indf2,c
 12044   010632                     
 12045                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 569:   p = 0;
 12046   010632  6A23               	clrf	dtoa@p^(0+1280),c
 12047   010634                     
 12048                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 571:         --w;
 12049   010634  0624               	decf	dtoa@w^(0+1280),f,c
 12050   010636  A0D8               	btfss	status,0,c
 12051   010638  0625               	decf	(dtoa@w+1)^(0+1280),f,c
 12052   01063A                     
 12053                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
 12054   01063A  C51F  F504         	movff	dtoa@d,___awdiv@dividend
 12055   01063E  C520  F505         	movff	dtoa@d+1,___awdiv@dividend+1
 12056   010642  0E00               	movlw	0
 12057   010644  6E07               	movwf	(___awdiv@divisor+1)^(0+1280),c
 12058   010646  0E0A               	movlw	10
 12059   010648  6E06               	movwf	___awdiv@divisor^(0+1280),c
 12060   01064A  EC4A  F086         	call	___awdiv	;wreg free
 12061   01064E  C504  F51F         	movff	?___awdiv,dtoa@d
 12062   010652  C505  F520         	movff	?___awdiv+1,dtoa@d+1
 12063   010656                     l3745:
 12064                           
 12065                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 12066   010656  BE28               	btfsc	(dtoa@i+1)^(0+1280),7,c
 12067   010658  EF36  F083         	goto	u2751
 12068   01065C  5028               	movf	(dtoa@i+1)^(0+1280),w,c
 12069   01065E  E108               	bnz	u2750
 12070   010660  0427               	decf	dtoa@i^(0+1280),w,c
 12071   010662  A0D8               	btfss	status,0,c
 12072   010664  EF36  F083         	goto	u2751
 12073   010668  EF38  F083         	goto	u2750
 12074   01066C                     u2751:
 12075   01066C  EF5D  F083         	goto	l3755
 12076   010670                     u2750:
 12077   010670  501F               	movf	dtoa@d^(0+1280),w,c
 12078   010672  1020               	iorwf	(dtoa@d+1)^(0+1280),w,c
 12079   010674  A4D8               	btfss	status,2,c
 12080   010676  EF3F  F083         	goto	u2761
 12081   01067A  EF41  F083         	goto	u2760
 12082   01067E                     u2761:
 12083   01067E  EFFD  F082         	goto	l3735
 12084   010682                     u2760:
 12085   010682  5023               	movf	dtoa@p^(0+1280),w,c
 12086   010684  A4D8               	btfss	status,2,c
 12087   010686  EF47  F083         	goto	u2771
 12088   01068A  EF49  F083         	goto	u2770
 12089   01068E                     u2771:
 12090   01068E  EFFD  F082         	goto	l3735
 12091   010692                     u2770:
 12092   010692  BE25               	btfsc	(dtoa@w+1)^(0+1280),7,c
 12093   010694  EF54  F083         	goto	u2781
 12094   010698  5025               	movf	(dtoa@w+1)^(0+1280),w,c
 12095   01069A  E108               	bnz	u2780
 12096   01069C  0424               	decf	dtoa@w^(0+1280),w,c
 12097   01069E  A0D8               	btfss	status,0,c
 12098   0106A0  EF54  F083         	goto	u2781
 12099   0106A4  EF56  F083         	goto	u2780
 12100   0106A8                     u2781:
 12101   0106A8  EF5D  F083         	goto	l3755
 12102   0106AC                     u2780:
 12103   0106AC  B25C               	btfsc	_flags^(0+1280),1,c
 12104   0106AE  EF5B  F083         	goto	u2791
 12105   0106B2  EF5D  F083         	goto	u2790
 12106   0106B6                     u2791:
 12107   0106B6  EFFD  F082         	goto	l3735
 12108   0106BA                     u2790:
 12109   0106BA                     l3755:
 12110                           
 12111                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
 12112   0106BA  5026               	movf	dtoa@s^(0+1280),w,c
 12113   0106BC  B4D8               	btfsc	status,2,c
 12114   0106BE  EF63  F083         	goto	u2801
 12115   0106C2  EF65  F083         	goto	u2800
 12116   0106C6                     u2801:
 12117   0106C6  EF70  F083         	goto	l3761
 12118   0106CA                     u2800:
 12119   0106CA                     
 12120                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 577:         --i;
 12121   0106CA  0627               	decf	dtoa@i^(0+1280),f,c
 12122   0106CC  A0D8               	btfss	status,0,c
 12123   0106CE  0628               	decf	(dtoa@i+1)^(0+1280),f,c
 12124   0106D0                     
 12125                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
 12126   0106D0  0ECF               	movlw	low _dbuf
 12127   0106D2  2427               	addwf	dtoa@i^(0+1280),w,c
 12128   0106D4  6ED9               	movwf	fsr2l,c
 12129   0106D6  0E05               	movlw	high _dbuf
 12130   0106D8  2028               	addwfc	(dtoa@i+1)^(0+1280),w,c
 12131   0106DA  6EDA               	movwf	fsr2h,c
 12132   0106DC  C526  F4DF         	movff	dtoa@s,indf2
 12133   0106E0                     l3761:
 12134                           
 12135                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
 12136   0106E0  C51D  F514         	movff	dtoa@fp,pad@fp
 12137   0106E4  C51E  F515         	movff	dtoa@fp+1,pad@fp+1
 12138   0106E8  0ECF               	movlw	low _dbuf
 12139   0106EA  2427               	addwf	dtoa@i^(0+1280),w,c
 12140   0106EC  6E16               	movwf	pad@buf^(0+1280),c
 12141   0106EE  0E05               	movlw	high _dbuf
 12142   0106F0  2028               	addwfc	(dtoa@i+1)^(0+1280),w,c
 12143   0106F2  6E17               	movwf	(pad@buf+1)^(0+1280),c
 12144   0106F4  C524  F518         	movff	dtoa@w,pad@p
 12145   0106F8  C525  F519         	movff	dtoa@w+1,pad@p+1
 12146   0106FC  EC01  F088         	call	_pad	;wreg free
 12147   010700  0012               	return		;funcret
 12148   010702                     __end_of_dtoa:
 12149                           	callstack 0
 12150                           
 12151 ;; *************** function _pad *****************
 12152 ;; Defined at:
 12153 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
 12154 ;; Parameters:    Size  Location     Type
 12155 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
 12156 ;;		 -> NULL(0), 
 12157 ;;  buf             2   21[COMRAM] PTR unsigned char 
 12158 ;;		 -> dbuf(32), 
 12159 ;;  p               2   23[COMRAM] int 
 12160 ;; Auto vars:     Size  Location     Type
 12161 ;;  i               2   26[COMRAM] int 
 12162 ;; Return value:  Size  Location     Type
 12163 ;;                  1    wreg      void 
 12164 ;; Registers used:
 12165 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12166 ;; Tracked objects:
 12167 ;;		On entry : 0/0
 12168 ;;		On exit  : 0/0
 12169 ;;		Unchanged: 0/0
 12170 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12171 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12172 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12173 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12174 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12175 ;;Total ram usage:        9 bytes
 12176 ;; Hardware stack levels used: 1
 12177 ;; Hardware stack levels required when called: 6
 12178 ;; This function calls:
 12179 ;;		_fputc
 12180 ;;		_fputs
 12181 ;; This function is called by:
 12182 ;;		_dtoa
 12183 ;;		_xtoa
 12184 ;; This function uses a non-reentrant model
 12185 ;;
 12186                           
 12187                           	psect	text19
 12188   011002                     __ptext19:
 12189                           	callstack 0
 12190   011002                     _pad:
 12191                           	callstack 114
 12192   011002                     
 12193                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
 12194   011002  A05C               	btfss	_flags^(0+1280),0,c
 12195   011004  EF06  F088         	goto	u2661
 12196   011008  EF08  F088         	goto	u2660
 12197   01100C                     u2661:
 12198   01100C  EF12  F088         	goto	l3699
 12199   011010                     u2660:
 12200   011010                     
 12201                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
 12202   011010  C516  F50D         	movff	pad@buf,fputs@s
 12203   011014  C517  F50E         	movff	pad@buf+1,fputs@s+1
 12204   011018  C514  F50F         	movff	pad@fp,fputs@fp
 12205   01101C  C515  F510         	movff	pad@fp+1,fputs@fp+1
 12206   011020  ECD1  F08A         	call	_fputs	;wreg free
 12207   011024                     l3699:
 12208                           
 12209                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
 12210   011024  BE19               	btfsc	(pad@p+1)^(0+1280),7,c
 12211   011026  EF19  F088         	goto	u2670
 12212   01102A  EF17  F088         	goto	u2671
 12213   01102E                     u2671:
 12214   01102E  EF1D  F088         	goto	l1472
 12215   011032                     u2670:
 12216   011032                     
 12217                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 206:   p = 0;
 12218   011032  0E00               	movlw	0
 12219   011034  6E19               	movwf	(pad@p+1)^(0+1280),c
 12220   011036  0E00               	movlw	0
 12221   011038  6E18               	movwf	pad@p^(0+1280),c
 12222   01103A                     l1472:
 12223                           
 12224                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 208:     i = 0;
 12225   01103A  0E00               	movlw	0
 12226   01103C  6E1C               	movwf	(pad@i+1)^(0+1280),c
 12227   01103E  0E00               	movlw	0
 12228   011040  6E1B               	movwf	pad@i^(0+1280),c
 12229                           
 12230                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 12231   011042  EF2F  F088         	goto	l3707
 12232   011046                     l3703:
 12233                           
 12234                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
 12235   011046  0E00               	movlw	0
 12236   011048  6E05               	movwf	(fputc@c+1)^(0+1280),c
 12237   01104A  0E20               	movlw	32
 12238   01104C  6E04               	movwf	fputc@c^(0+1280),c
 12239   01104E  C514  F506         	movff	pad@fp,fputc@fp
 12240   011052  C515  F507         	movff	pad@fp+1,fputc@fp+1
 12241   011056  EC1E  F085         	call	_fputc	;wreg free
 12242   01105A                     
 12243                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 211:         ++i;
 12244   01105A  4A1B               	infsnz	pad@i^(0+1280),f,c
 12245   01105C  2A1C               	incf	(pad@i+1)^(0+1280),f,c
 12246   01105E                     l3707:
 12247                           
 12248                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 12249   01105E  5018               	movf	pad@p^(0+1280),w,c
 12250   011060  5C1B               	subwf	pad@i^(0+1280),w,c
 12251   011062  501C               	movf	(pad@i+1)^(0+1280),w,c
 12252   011064  0A80               	xorlw	128
 12253   011066  6E1A               	movwf	??_pad^(0+1280),c
 12254   011068  5019               	movf	(pad@p+1)^(0+1280),w,c
 12255   01106A  0A80               	xorlw	128
 12256   01106C  581A               	subwfb	??_pad^(0+1280),w,c
 12257   01106E  A0D8               	btfss	status,0,c
 12258   011070  EF3C  F088         	goto	u2681
 12259   011074  EF3E  F088         	goto	u2680
 12260   011078                     u2681:
 12261   011078  EF23  F088         	goto	l3703
 12262   01107C                     u2680:
 12263   01107C                     
 12264                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
 12265   01107C  B05C               	btfsc	_flags^(0+1280),0,c
 12266   01107E  EF43  F088         	goto	u2691
 12267   011082  EF45  F088         	goto	u2690
 12268   011086                     u2691:
 12269   011086  EF4F  F088         	goto	l1477
 12270   01108A                     u2690:
 12271   01108A                     
 12272                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
 12273   01108A  C516  F50D         	movff	pad@buf,fputs@s
 12274   01108E  C517  F50E         	movff	pad@buf+1,fputs@s+1
 12275   011092  C514  F50F         	movff	pad@fp,fputs@fp
 12276   011096  C515  F510         	movff	pad@fp+1,fputs@fp+1
 12277   01109A  ECD1  F08A         	call	_fputs	;wreg free
 12278   01109E                     l1477:
 12279   01109E  0012               	return		;funcret
 12280   0110A0                     __end_of_pad:
 12281                           	callstack 0
 12282                           
 12283 ;; *************** function _fputs *****************
 12284 ;; Defined at:
 12285 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputs.c"
 12286 ;; Parameters:    Size  Location     Type
 12287 ;;  s               2   12[COMRAM] PTR const unsigned char 
 12288 ;;		 -> dbuf(32), 
 12289 ;;  fp              2   14[COMRAM] PTR struct _IO_FILE
 12290 ;;		 -> NULL(0), 
 12291 ;; Auto vars:     Size  Location     Type
 12292 ;;  i               2   17[COMRAM] int 
 12293 ;;  c               1   16[COMRAM] unsigned char 
 12294 ;; Return value:  Size  Location     Type
 12295 ;;                  2   12[COMRAM] int 
 12296 ;; Registers used:
 12297 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12298 ;; Tracked objects:
 12299 ;;		On entry : 0/0
 12300 ;;		On exit  : 0/0
 12301 ;;		Unchanged: 0/0
 12302 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12303 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12304 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12306 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12307 ;;Total ram usage:        7 bytes
 12308 ;; Hardware stack levels used: 1
 12309 ;; Hardware stack levels required when called: 5
 12310 ;; This function calls:
 12311 ;;		_fputc
 12312 ;; This function is called by:
 12313 ;;		_pad
 12314 ;; This function uses a non-reentrant model
 12315 ;;
 12316                           
 12317                           	psect	text20
 12318   0115A2                     __ptext20:
 12319                           	callstack 0
 12320   0115A2                     _fputs:
 12321                           	callstack 114
 12322   0115A2  0E00               	movlw	0
 12323   0115A4  6E13               	movwf	(fputs@i+1)^(0+1280),c
 12324   0115A6  0E00               	movlw	0
 12325   0115A8  6E12               	movwf	fputs@i^(0+1280),c
 12326   0115AA  EFE2  F08A         	goto	l3613
 12327   0115AE                     l3609:
 12328   0115AE  C511  F504         	movff	fputs@c,fputc@c
 12329   0115B2  6A05               	clrf	(fputc@c+1)^(0+1280),c
 12330   0115B4  C50F  F506         	movff	fputs@fp,fputc@fp
 12331   0115B8  C510  F507         	movff	fputs@fp+1,fputc@fp+1
 12332   0115BC  EC1E  F085         	call	_fputc	;wreg free
 12333   0115C0  4A12               	infsnz	fputs@i^(0+1280),f,c
 12334   0115C2  2A13               	incf	(fputs@i+1)^(0+1280),f,c
 12335   0115C4                     l3613:
 12336   0115C4  5012               	movf	fputs@i^(0+1280),w,c
 12337   0115C6  240D               	addwf	fputs@s^(0+1280),w,c
 12338   0115C8  6ED9               	movwf	fsr2l,c
 12339   0115CA  5013               	movf	(fputs@i+1)^(0+1280),w,c
 12340   0115CC  200E               	addwfc	(fputs@s+1)^(0+1280),w,c
 12341   0115CE  6EDA               	movwf	fsr2h,c
 12342   0115D0  50DF               	movf	indf2,w,c
 12343   0115D2  6E11               	movwf	fputs@c^(0+1280),c
 12344   0115D4  5011               	movf	fputs@c^(0+1280),w,c
 12345   0115D6  A4D8               	btfss	status,2,c
 12346   0115D8  EFF0  F08A         	goto	u2531
 12347   0115DC  EFF2  F08A         	goto	u2530
 12348   0115E0                     u2531:
 12349   0115E0  EFD7  F08A         	goto	l3609
 12350   0115E4                     u2530:
 12351   0115E4  0012               	return		;funcret
 12352   0115E6                     __end_of_fputs:
 12353                           	callstack 0
 12354                           
 12355 ;; *************** function _fputc *****************
 12356 ;; Defined at:
 12357 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputc.c"
 12358 ;; Parameters:    Size  Location     Type
 12359 ;;  c               2    3[COMRAM] int 
 12360 ;;  fp              2    5[COMRAM] PTR struct _IO_FILE
 12361 ;;		 -> NULL(0), 
 12362 ;; Auto vars:     Size  Location     Type
 12363 ;;		None
 12364 ;; Return value:  Size  Location     Type
 12365 ;;                  2    3[COMRAM] int 
 12366 ;; Registers used:
 12367 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12368 ;; Tracked objects:
 12369 ;;		On entry : 0/0
 12370 ;;		On exit  : 0/0
 12371 ;;		Unchanged: 0/0
 12372 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12373 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12375 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12376 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12377 ;;Total ram usage:        9 bytes
 12378 ;; Hardware stack levels used: 1
 12379 ;; Hardware stack levels required when called: 4
 12380 ;; This function calls:
 12381 ;;		_putch
 12382 ;; This function is called by:
 12383 ;;		_pad
 12384 ;;		_stoa
 12385 ;;		_vfpfcnvrt
 12386 ;;		_fputs
 12387 ;; This function uses a non-reentrant model
 12388 ;;
 12389                           
 12390                           	psect	text21
 12391   010A3C                     __ptext21:
 12392                           	callstack 0
 12393   010A3C                     _fputc:
 12394                           	callstack 114
 12395   010A3C  5006               	movf	fputc@fp^(0+1280),w,c
 12396   010A3E  1007               	iorwf	(fputc@fp+1)^(0+1280),w,c
 12397   010A40  B4D8               	btfsc	status,2,c
 12398   010A42  EF25  F085         	goto	u2491
 12399   010A46  EF27  F085         	goto	u2490
 12400   010A4A                     u2491:
 12401   010A4A  EF30  F085         	goto	l3597
 12402   010A4E                     u2490:
 12403   010A4E  5006               	movf	fputc@fp^(0+1280),w,c
 12404   010A50  1007               	iorwf	(fputc@fp+1)^(0+1280),w,c
 12405   010A52  A4D8               	btfss	status,2,c
 12406   010A54  EF2E  F085         	goto	u2501
 12407   010A58  EF30  F085         	goto	u2500
 12408   010A5C                     u2501:
 12409   010A5C  EF35  F085         	goto	l3599
 12410   010A60                     u2500:
 12411   010A60                     l3597:
 12412   010A60  5004               	movf	fputc@c^(0+1280),w,c
 12413   010A62  EC2E  F08D         	call	_putch
 12414   010A66  EF82  F085         	goto	l1582
 12415   010A6A                     l3599:
 12416   010A6A  EE20 F009          	lfsr	2,9
 12417   010A6E  5006               	movf	fputc@fp^(0+1280),w,c
 12418   010A70  26D9               	addwf	fsr2l,f,c
 12419   010A72  5007               	movf	(fputc@fp+1)^(0+1280),w,c
 12420   010A74  22DA               	addwfc	fsr2h,f,c
 12421   010A76  50DE               	movf	postinc2,w,c
 12422   010A78  10DE               	iorwf	postinc2,w,c
 12423   010A7A  B4D8               	btfsc	status,2,c
 12424   010A7C  EF42  F085         	goto	u2511
 12425   010A80  EF44  F085         	goto	u2510
 12426   010A84                     u2511:
 12427   010A84  EF5F  F085         	goto	l3603
 12428   010A88                     u2510:
 12429   010A88  EE20 F009          	lfsr	2,9
 12430   010A8C  5006               	movf	fputc@fp^(0+1280),w,c
 12431   010A8E  26D9               	addwf	fsr2l,f,c
 12432   010A90  5007               	movf	(fputc@fp+1)^(0+1280),w,c
 12433   010A92  22DA               	addwfc	fsr2h,f,c
 12434   010A94  EE10 F002          	lfsr	1,2
 12435   010A98  5006               	movf	fputc@fp^(0+1280),w,c
 12436   010A9A  26E1               	addwf	fsr1l,f,c
 12437   010A9C  5007               	movf	(fputc@fp+1)^(0+1280),w,c
 12438   010A9E  22E2               	addwfc	fsr1h,f,c
 12439   010AA0  50DE               	movf	postinc2,w,c
 12440   010AA2  5CE6               	subwf	postinc1,w,c
 12441   010AA4  50E6               	movf	postinc1,w,c
 12442   010AA6  0A80               	xorlw	128
 12443   010AA8  6E0C               	movwf	(??_fputc+4)^(0+1280),c
 12444   010AAA  50DE               	movf	postinc2,w,c
 12445   010AAC  0A80               	xorlw	128
 12446   010AAE  580C               	subwfb	(??_fputc+4)^(0+1280),w,c
 12447   010AB0  B0D8               	btfsc	status,0,c
 12448   010AB2  EF5D  F085         	goto	u2521
 12449   010AB6  EF5F  F085         	goto	u2520
 12450   010ABA                     u2521:
 12451   010ABA  EF82  F085         	goto	l1582
 12452   010ABE                     u2520:
 12453   010ABE                     l3603:
 12454   010ABE  EE20 F002          	lfsr	2,2
 12455   010AC2  5006               	movf	fputc@fp^(0+1280),w,c
 12456   010AC4  26D9               	addwf	fsr2l,f,c
 12457   010AC6  5007               	movf	(fputc@fp+1)^(0+1280),w,c
 12458   010AC8  22DA               	addwfc	fsr2h,f,c
 12459   010ACA  C4DE F508          	movff	postinc2,??_fputc
 12460   010ACE  C4DD F509          	movff	postdec2,??_fputc+1
 12461   010AD2  C506  F4D9         	movff	fputc@fp,fsr2l
 12462   010AD6  C507  F4DA         	movff	fputc@fp+1,fsr2h
 12463   010ADA  C4DE F50A          	movff	postinc2,??_fputc+2
 12464   010ADE  C4DD F50B          	movff	postdec2,??_fputc+3
 12465   010AE2  5008               	movf	??_fputc^(0+1280),w,c
 12466   010AE4  240A               	addwf	(??_fputc+2)^(0+1280),w,c
 12467   010AE6  6ED9               	movwf	fsr2l,c
 12468   010AE8  5009               	movf	(??_fputc+1)^(0+1280),w,c
 12469   010AEA  200B               	addwfc	(??_fputc+3)^(0+1280),w,c
 12470   010AEC  6EDA               	movwf	fsr2h,c
 12471   010AEE  C504  F4DF         	movff	fputc@c,indf2
 12472   010AF2  EE20 F002          	lfsr	2,2
 12473   010AF6  5006               	movf	fputc@fp^(0+1280),w,c
 12474   010AF8  26D9               	addwf	fsr2l,f,c
 12475   010AFA  5007               	movf	(fputc@fp+1)^(0+1280),w,c
 12476   010AFC  22DA               	addwfc	fsr2h,f,c
 12477   010AFE  2ADE               	incf	postinc2,f,c
 12478   010B00  0E00               	movlw	0
 12479   010B02  22DD               	addwfc	postdec2,f,c
 12480   010B04                     l1582:
 12481   010B04  0012               	return		;funcret
 12482   010B06                     __end_of_fputc:
 12483                           	callstack 0
 12484                           
 12485 ;; *************** function _putch *****************
 12486 ;; Defined at:
 12487 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\putch.c"
 12488 ;; Parameters:    Size  Location     Type
 12489 ;;  c               1    wreg     unsigned char 
 12490 ;; Auto vars:     Size  Location     Type
 12491 ;;  c               1    0[COMRAM] unsigned char 
 12492 ;; Return value:  Size  Location     Type
 12493 ;;                  1    wreg      void 
 12494 ;; Registers used:
 12495 ;;		wreg
 12496 ;; Tracked objects:
 12497 ;;		On entry : 0/0
 12498 ;;		On exit  : 0/0
 12499 ;;		Unchanged: 0/0
 12500 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12505 ;;Total ram usage:        0 bytes
 12506 ;; Hardware stack levels used: 1
 12507 ;; Hardware stack levels required when called: 3
 12508 ;; This function calls:
 12509 ;;		Nothing
 12510 ;; This function is called by:
 12511 ;;		_fputc
 12512 ;; This function uses a non-reentrant model
 12513 ;;
 12514                           
 12515                           	psect	text22
 12516   011A5C                     __ptext22:
 12517                           	callstack 0
 12518   011A5C                     _putch:
 12519                           	callstack 114
 12520   011A5C  0012               	return		;funcret
 12521   011A5E                     __end_of_putch:
 12522                           	callstack 0
 12523                           
 12524 ;; *************** function _abs *****************
 12525 ;; Defined at:
 12526 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\abs.c"
 12527 ;; Parameters:    Size  Location     Type
 12528 ;;  a               2    9[COMRAM] int 
 12529 ;; Auto vars:     Size  Location     Type
 12530 ;;		None
 12531 ;; Return value:  Size  Location     Type
 12532 ;;                  2    9[COMRAM] int 
 12533 ;; Registers used:
 12534 ;;		wreg, status,2, status,0
 12535 ;; Tracked objects:
 12536 ;;		On entry : 0/0
 12537 ;;		On exit  : 0/0
 12538 ;;		Unchanged: 0/0
 12539 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12540 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12542 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12543 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12544 ;;Total ram usage:        4 bytes
 12545 ;; Hardware stack levels used: 1
 12546 ;; Hardware stack levels required when called: 3
 12547 ;; This function calls:
 12548 ;;		Nothing
 12549 ;; This function is called by:
 12550 ;;		_dtoa
 12551 ;; This function uses a non-reentrant model
 12552 ;;
 12553                           
 12554                           	psect	text23
 12555   01165E                     __ptext23:
 12556                           	callstack 0
 12557   01165E                     _abs:
 12558                           	callstack 117
 12559   01165E  BE0B               	btfsc	(abs@a+1)^(0+1280),7,c
 12560   011660  EF34  F08B         	goto	u2701
 12561   011664  EF36  F08B         	goto	u2700
 12562   011668                     u2701:
 12563   011668  EF3C  F08B         	goto	l1567
 12564   01166C                     u2700:
 12565   01166C  C50A  F50A         	movff	abs@a,?_abs
 12566   011670  C50B  F50B         	movff	abs@a+1,?_abs+1
 12567   011674  EF48  F08B         	goto	l1570
 12568   011678                     l1567:
 12569   011678  C50A  F50C         	movff	abs@a,??_abs
 12570   01167C  C50B  F50D         	movff	abs@a+1,??_abs+1
 12571   011680  1E0C               	comf	??_abs^(0+1280),f,c
 12572   011682  1E0D               	comf	(??_abs+1)^(0+1280),f,c
 12573   011684  4A0C               	infsnz	??_abs^(0+1280),f,c
 12574   011686  2A0D               	incf	(??_abs+1)^(0+1280),f,c
 12575   011688  C50C  F50A         	movff	??_abs,?_abs
 12576   01168C  C50D  F50B         	movff	??_abs+1,?_abs+1
 12577   011690                     l1570:
 12578   011690  0012               	return		;funcret
 12579   011692                     __end_of_abs:
 12580                           	callstack 0
 12581                           
 12582 ;; *************** function ___awmod *****************
 12583 ;; Defined at:
 12584 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awmod.c"
 12585 ;; Parameters:    Size  Location     Type
 12586 ;;  dividend        2    3[COMRAM] int 
 12587 ;;  divisor         2    5[COMRAM] int 
 12588 ;; Auto vars:     Size  Location     Type
 12589 ;;  sign            1    8[COMRAM] unsigned char 
 12590 ;;  counter         1    7[COMRAM] unsigned char 
 12591 ;; Return value:  Size  Location     Type
 12592 ;;                  2    3[COMRAM] int 
 12593 ;; Registers used:
 12594 ;;		wreg, status,2, status,0
 12595 ;; Tracked objects:
 12596 ;;		On entry : 0/0
 12597 ;;		On exit  : 0/0
 12598 ;;		Unchanged: 0/0
 12599 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12600 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12601 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12603 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12604 ;;Total ram usage:        6 bytes
 12605 ;; Hardware stack levels used: 1
 12606 ;; Hardware stack levels required when called: 3
 12607 ;; This function calls:
 12608 ;;		Nothing
 12609 ;; This function is called by:
 12610 ;;		_dtoa
 12611 ;; This function uses a non-reentrant model
 12612 ;;
 12613                           
 12614                           	psect	text24
 12615   010D56                     __ptext24:
 12616                           	callstack 0
 12617   010D56                     ___awmod:
 12618                           	callstack 117
 12619   010D56  6A09               	clrf	___awmod@sign^(0+1280),c
 12620   010D58  BE05               	btfsc	(___awmod@dividend+1)^(0+1280),7,c
 12621   010D5A  EFB3  F086         	goto	u2600
 12622   010D5E  EFB1  F086         	goto	u2601
 12623   010D62                     u2601:
 12624   010D62  EFB9  F086         	goto	l3667
 12625   010D66                     u2600:
 12626   010D66  6C04               	negf	___awmod@dividend^(0+1280),c
 12627   010D68  1E05               	comf	(___awmod@dividend+1)^(0+1280),f,c
 12628   010D6A  B0D8               	btfsc	status,0,c
 12629   010D6C  2A05               	incf	(___awmod@dividend+1)^(0+1280),f,c
 12630   010D6E  0E01               	movlw	1
 12631   010D70  6E09               	movwf	___awmod@sign^(0+1280),c
 12632   010D72                     l3667:
 12633   010D72  BE07               	btfsc	(___awmod@divisor+1)^(0+1280),7,c
 12634   010D74  EFC0  F086         	goto	u2610
 12635   010D78  EFBE  F086         	goto	u2611
 12636   010D7C                     u2611:
 12637   010D7C  EFC4  F086         	goto	l3671
 12638   010D80                     u2610:
 12639   010D80  6C06               	negf	___awmod@divisor^(0+1280),c
 12640   010D82  1E07               	comf	(___awmod@divisor+1)^(0+1280),f,c
 12641   010D84  B0D8               	btfsc	status,0,c
 12642   010D86  2A07               	incf	(___awmod@divisor+1)^(0+1280),f,c
 12643   010D88                     l3671:
 12644   010D88  5006               	movf	___awmod@divisor^(0+1280),w,c
 12645   010D8A  1007               	iorwf	(___awmod@divisor+1)^(0+1280),w,c
 12646   010D8C  B4D8               	btfsc	status,2,c
 12647   010D8E  EFCB  F086         	goto	u2621
 12648   010D92  EFCD  F086         	goto	u2620
 12649   010D96                     u2621:
 12650   010D96  EFF1  F086         	goto	l3687
 12651   010D9A                     u2620:
 12652   010D9A  0E01               	movlw	1
 12653   010D9C  6E08               	movwf	___awmod@counter^(0+1280),c
 12654   010D9E  EFD5  F086         	goto	l3677
 12655   010DA2                     l3675:
 12656   010DA2  90D8               	bcf	status,0,c
 12657   010DA4  3606               	rlcf	___awmod@divisor^(0+1280),f,c
 12658   010DA6  3607               	rlcf	(___awmod@divisor+1)^(0+1280),f,c
 12659   010DA8  2A08               	incf	___awmod@counter^(0+1280),f,c
 12660   010DAA                     l3677:
 12661   010DAA  AE07               	btfss	(___awmod@divisor+1)^(0+1280),7,c
 12662   010DAC  EFDA  F086         	goto	u2631
 12663   010DB0  EFDC  F086         	goto	u2630
 12664   010DB4                     u2631:
 12665   010DB4  EFD1  F086         	goto	l3675
 12666   010DB8                     u2630:
 12667   010DB8                     l3679:
 12668   010DB8  5006               	movf	___awmod@divisor^(0+1280),w,c
 12669   010DBA  5C04               	subwf	___awmod@dividend^(0+1280),w,c
 12670   010DBC  5007               	movf	(___awmod@divisor+1)^(0+1280),w,c
 12671   010DBE  5805               	subwfb	(___awmod@dividend+1)^(0+1280),w,c
 12672   010DC0  A0D8               	btfss	status,0,c
 12673   010DC2  EFE5  F086         	goto	u2641
 12674   010DC6  EFE7  F086         	goto	u2640
 12675   010DCA                     u2641:
 12676   010DCA  EFEB  F086         	goto	l3683
 12677   010DCE                     u2640:
 12678   010DCE  5006               	movf	___awmod@divisor^(0+1280),w,c
 12679   010DD0  5E04               	subwf	___awmod@dividend^(0+1280),f,c
 12680   010DD2  5007               	movf	(___awmod@divisor+1)^(0+1280),w,c
 12681   010DD4  5A05               	subwfb	(___awmod@dividend+1)^(0+1280),f,c
 12682   010DD6                     l3683:
 12683   010DD6  90D8               	bcf	status,0,c
 12684   010DD8  3207               	rrcf	(___awmod@divisor+1)^(0+1280),f,c
 12685   010DDA  3206               	rrcf	___awmod@divisor^(0+1280),f,c
 12686   010DDC  2E08               	decfsz	___awmod@counter^(0+1280),f,c
 12687   010DDE  EFDC  F086         	goto	l3679
 12688   010DE2                     l3687:
 12689   010DE2  5009               	movf	___awmod@sign^(0+1280),w,c
 12690   010DE4  B4D8               	btfsc	status,2,c
 12691   010DE6  EFF7  F086         	goto	u2651
 12692   010DEA  EFF9  F086         	goto	u2650
 12693   010DEE                     u2651:
 12694   010DEE  EFFD  F086         	goto	l3691
 12695   010DF2                     u2650:
 12696   010DF2  6C04               	negf	___awmod@dividend^(0+1280),c
 12697   010DF4  1E05               	comf	(___awmod@dividend+1)^(0+1280),f,c
 12698   010DF6  B0D8               	btfsc	status,0,c
 12699   010DF8  2A05               	incf	(___awmod@dividend+1)^(0+1280),f,c
 12700   010DFA                     l3691:
 12701   010DFA  C504  F504         	movff	___awmod@dividend,?___awmod
 12702   010DFE  C505  F505         	movff	___awmod@dividend+1,?___awmod+1
 12703   010E02  0012               	return		;funcret
 12704   010E04                     __end_of___awmod:
 12705                           	callstack 0
 12706                           
 12707 ;; *************** function ___awdiv *****************
 12708 ;; Defined at:
 12709 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awdiv.c"
 12710 ;; Parameters:    Size  Location     Type
 12711 ;;  dividend        2    3[COMRAM] int 
 12712 ;;  divisor         2    5[COMRAM] int 
 12713 ;; Auto vars:     Size  Location     Type
 12714 ;;  quotient        2    9[COMRAM] int 
 12715 ;;  sign            1    8[COMRAM] unsigned char 
 12716 ;;  counter         1    7[COMRAM] unsigned char 
 12717 ;; Return value:  Size  Location     Type
 12718 ;;                  2    3[COMRAM] int 
 12719 ;; Registers used:
 12720 ;;		wreg, status,2, status,0
 12721 ;; Tracked objects:
 12722 ;;		On entry : 0/0
 12723 ;;		On exit  : 0/0
 12724 ;;		Unchanged: 0/0
 12725 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12726 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12727 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12729 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12730 ;;Total ram usage:        8 bytes
 12731 ;; Hardware stack levels used: 1
 12732 ;; Hardware stack levels required when called: 3
 12733 ;; This function calls:
 12734 ;;		Nothing
 12735 ;; This function is called by:
 12736 ;;		_dtoa
 12737 ;; This function uses a non-reentrant model
 12738 ;;
 12739                           
 12740                           	psect	text25
 12741   010C94                     __ptext25:
 12742                           	callstack 0
 12743   010C94                     ___awdiv:
 12744                           	callstack 117
 12745   010C94  6A09               	clrf	___awdiv@sign^(0+1280),c
 12746   010C96  BE07               	btfsc	(___awdiv@divisor+1)^(0+1280),7,c
 12747   010C98  EF52  F086         	goto	u2540
 12748   010C9C  EF50  F086         	goto	u2541
 12749   010CA0                     u2541:
 12750   010CA0  EF58  F086         	goto	l3623
 12751   010CA4                     u2540:
 12752   010CA4  6C06               	negf	___awdiv@divisor^(0+1280),c
 12753   010CA6  1E07               	comf	(___awdiv@divisor+1)^(0+1280),f,c
 12754   010CA8  B0D8               	btfsc	status,0,c
 12755   010CAA  2A07               	incf	(___awdiv@divisor+1)^(0+1280),f,c
 12756   010CAC  0E01               	movlw	1
 12757   010CAE  6E09               	movwf	___awdiv@sign^(0+1280),c
 12758   010CB0                     l3623:
 12759   010CB0  BE05               	btfsc	(___awdiv@dividend+1)^(0+1280),7,c
 12760   010CB2  EF5F  F086         	goto	u2550
 12761   010CB6  EF5D  F086         	goto	u2551
 12762   010CBA                     u2551:
 12763   010CBA  EF65  F086         	goto	l3629
 12764   010CBE                     u2550:
 12765   010CBE  6C04               	negf	___awdiv@dividend^(0+1280),c
 12766   010CC0  1E05               	comf	(___awdiv@dividend+1)^(0+1280),f,c
 12767   010CC2  B0D8               	btfsc	status,0,c
 12768   010CC4  2A05               	incf	(___awdiv@dividend+1)^(0+1280),f,c
 12769   010CC6  0E01               	movlw	1
 12770   010CC8  1A09               	xorwf	___awdiv@sign^(0+1280),f,c
 12771   010CCA                     l3629:
 12772   010CCA  0E00               	movlw	0
 12773   010CCC  6E0B               	movwf	(___awdiv@quotient+1)^(0+1280),c
 12774   010CCE  0E00               	movlw	0
 12775   010CD0  6E0A               	movwf	___awdiv@quotient^(0+1280),c
 12776   010CD2  5006               	movf	___awdiv@divisor^(0+1280),w,c
 12777   010CD4  1007               	iorwf	(___awdiv@divisor+1)^(0+1280),w,c
 12778   010CD6  B4D8               	btfsc	status,2,c
 12779   010CD8  EF70  F086         	goto	u2561
 12780   010CDC  EF72  F086         	goto	u2560
 12781   010CE0                     u2561:
 12782   010CE0  EF9A  F086         	goto	l3651
 12783   010CE4                     u2560:
 12784   010CE4  0E01               	movlw	1
 12785   010CE6  6E08               	movwf	___awdiv@counter^(0+1280),c
 12786   010CE8  EF7A  F086         	goto	l3637
 12787   010CEC                     l3635:
 12788   010CEC  90D8               	bcf	status,0,c
 12789   010CEE  3606               	rlcf	___awdiv@divisor^(0+1280),f,c
 12790   010CF0  3607               	rlcf	(___awdiv@divisor+1)^(0+1280),f,c
 12791   010CF2  2A08               	incf	___awdiv@counter^(0+1280),f,c
 12792   010CF4                     l3637:
 12793   010CF4  AE07               	btfss	(___awdiv@divisor+1)^(0+1280),7,c
 12794   010CF6  EF7F  F086         	goto	u2571
 12795   010CFA  EF81  F086         	goto	u2570
 12796   010CFE                     u2571:
 12797   010CFE  EF76  F086         	goto	l3635
 12798   010D02                     u2570:
 12799   010D02                     l3639:
 12800   010D02  90D8               	bcf	status,0,c
 12801   010D04  360A               	rlcf	___awdiv@quotient^(0+1280),f,c
 12802   010D06  360B               	rlcf	(___awdiv@quotient+1)^(0+1280),f,c
 12803   010D08  5006               	movf	___awdiv@divisor^(0+1280),w,c
 12804   010D0A  5C04               	subwf	___awdiv@dividend^(0+1280),w,c
 12805   010D0C  5007               	movf	(___awdiv@divisor+1)^(0+1280),w,c
 12806   010D0E  5805               	subwfb	(___awdiv@dividend+1)^(0+1280),w,c
 12807   010D10  A0D8               	btfss	status,0,c
 12808   010D12  EF8D  F086         	goto	u2581
 12809   010D16  EF8F  F086         	goto	u2580
 12810   010D1A                     u2581:
 12811   010D1A  EF94  F086         	goto	l3647
 12812   010D1E                     u2580:
 12813   010D1E  5006               	movf	___awdiv@divisor^(0+1280),w,c
 12814   010D20  5E04               	subwf	___awdiv@dividend^(0+1280),f,c
 12815   010D22  5007               	movf	(___awdiv@divisor+1)^(0+1280),w,c
 12816   010D24  5A05               	subwfb	(___awdiv@dividend+1)^(0+1280),f,c
 12817   010D26  800A               	bsf	___awdiv@quotient^(0+1280),0,c
 12818   010D28                     l3647:
 12819   010D28  90D8               	bcf	status,0,c
 12820   010D2A  3207               	rrcf	(___awdiv@divisor+1)^(0+1280),f,c
 12821   010D2C  3206               	rrcf	___awdiv@divisor^(0+1280),f,c
 12822   010D2E  2E08               	decfsz	___awdiv@counter^(0+1280),f,c
 12823   010D30  EF81  F086         	goto	l3639
 12824   010D34                     l3651:
 12825   010D34  5009               	movf	___awdiv@sign^(0+1280),w,c
 12826   010D36  B4D8               	btfsc	status,2,c
 12827   010D38  EFA0  F086         	goto	u2591
 12828   010D3C  EFA2  F086         	goto	u2590
 12829   010D40                     u2591:
 12830   010D40  EFA6  F086         	goto	l3655
 12831   010D44                     u2590:
 12832   010D44  6C0A               	negf	___awdiv@quotient^(0+1280),c
 12833   010D46  1E0B               	comf	(___awdiv@quotient+1)^(0+1280),f,c
 12834   010D48  B0D8               	btfsc	status,0,c
 12835   010D4A  2A0B               	incf	(___awdiv@quotient+1)^(0+1280),f,c
 12836   010D4C                     l3655:
 12837   010D4C  C50A  F504         	movff	___awdiv@quotient,?___awdiv
 12838   010D50  C50B  F505         	movff	___awdiv@quotient+1,?___awdiv+1
 12839   010D54  0012               	return		;funcret
 12840   010D56                     __end_of___awdiv:
 12841                           	callstack 0
 12842                           
 12843 ;; *************** function _Nrf24_getRetransmitDelay *****************
 12844 ;; Defined at:
 12845 ;;		line 498 in file "cmirf.c"
 12846 ;; Parameters:    Size  Location     Type
 12847 ;;  dev             2   13[COMRAM] PTR struct .
 12848 ;;		 -> sender@nrf(3), 
 12849 ;; Auto vars:     Size  Location     Type
 12850 ;;  value           1   15[COMRAM] unsigned char 
 12851 ;; Return value:  Size  Location     Type
 12852 ;;                  1    wreg      unsigned char 
 12853 ;; Registers used:
 12854 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12855 ;; Tracked objects:
 12856 ;;		On entry : 0/0
 12857 ;;		On exit  : 0/0
 12858 ;;		Unchanged: 0/0
 12859 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12860 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12861 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12863 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12864 ;;Total ram usage:        3 bytes
 12865 ;; Hardware stack levels used: 1
 12866 ;; Hardware stack levels required when called: 6
 12867 ;; This function calls:
 12868 ;;		_Nrf24_readRegister
 12869 ;; This function is called by:
 12870 ;;		_Nrf24_printDetails
 12871 ;; This function uses a non-reentrant model
 12872 ;;
 12873                           
 12874                           	psect	text26
 12875   01198A                     __ptext26:
 12876                           	callstack 0
 12877   01198A                     _Nrf24_getRetransmitDelay:
 12878                           	callstack 118
 12879   01198A                     
 12880                           ;cmirf.c: 498: uint8_t Nrf24_getRetransmitDelay(NRF24_t * dev);cmirf.c: 499: {;cmirf.c: 
      +                          500:  uint8_t value;;cmirf.c: 501:  Nrf24_readRegister(0x04, &value, 1);
 12881   01198A  0E10               	movlw	low Nrf24_getRetransmitDelay@value
 12882   01198C  6E0A               	movwf	Nrf24_readRegister@value^(0+1280),c
 12883   01198E  0E05               	movlw	high Nrf24_getRetransmitDelay@value
 12884   011990  6E0B               	movwf	(Nrf24_readRegister@value+1)^(0+1280),c
 12885   011992  0E01               	movlw	1
 12886   011994  6E0C               	movwf	Nrf24_readRegister@len^(0+1280),c
 12887   011996  0E04               	movlw	4
 12888   011998  ECC7  F08B         	call	_Nrf24_readRegister
 12889   01199C                     
 12890                           ;cmirf.c: 502:  return (value >> 4);
 12891   01199C  3810               	swapf	Nrf24_getRetransmitDelay@value^(0+1280),w,c
 12892   01199E  0B0F               	andlw	15
 12893   0119A0  0012               	return		;funcret
 12894   0119A2                     __end_of_Nrf24_getRetransmitDelay:
 12895                           	callstack 0
 12896                           
 12897 ;; *************** function _Nrf24_getPALevel *****************
 12898 ;; Defined at:
 12899 ;;		line 484 in file "cmirf.c"
 12900 ;; Parameters:    Size  Location     Type
 12901 ;;  dev             2   13[COMRAM] PTR struct .
 12902 ;;		 -> sender@nrf(3), 
 12903 ;; Auto vars:     Size  Location     Type
 12904 ;;  level           1   15[COMRAM] unsigned char 
 12905 ;; Return value:  Size  Location     Type
 12906 ;;                  1    wreg      unsigned char 
 12907 ;; Registers used:
 12908 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12909 ;; Tracked objects:
 12910 ;;		On entry : 0/0
 12911 ;;		On exit  : 0/0
 12912 ;;		Unchanged: 0/0
 12913 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12914 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12915 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12917 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12918 ;;Total ram usage:        3 bytes
 12919 ;; Hardware stack levels used: 1
 12920 ;; Hardware stack levels required when called: 6
 12921 ;; This function calls:
 12922 ;;		_Nrf24_readRegister
 12923 ;; This function is called by:
 12924 ;;		_Nrf24_printDetails
 12925 ;;		_Nrf24_getPALevelString
 12926 ;; This function uses a non-reentrant model
 12927 ;;
 12928                           
 12929                           	psect	text27
 12930   01196C                     __ptext27:
 12931                           	callstack 0
 12932   01196C                     _Nrf24_getPALevel:
 12933                           	callstack 118
 12934   01196C                     
 12935                           ;cmirf.c: 484: uint8_t Nrf24_getPALevel(NRF24_t * dev);cmirf.c: 485: {;cmirf.c: 486:  ui
      +                          nt8_t level;;cmirf.c: 487:  Nrf24_readRegister(0x06, &level, sizeof(level));
 12936   01196C  0E10               	movlw	low Nrf24_getPALevel@level
 12937   01196E  6E0A               	movwf	Nrf24_readRegister@value^(0+1280),c
 12938   011970  0E05               	movlw	high Nrf24_getPALevel@level
 12939   011972  6E0B               	movwf	(Nrf24_readRegister@value+1)^(0+1280),c
 12940   011974  0E01               	movlw	1
 12941   011976  6E0C               	movwf	Nrf24_readRegister@len^(0+1280),c
 12942   011978  0E06               	movlw	6
 12943   01197A  ECC7  F08B         	call	_Nrf24_readRegister
 12944   01197E                     
 12945                           ;cmirf.c: 489:  level = (level & ((1<<(1)) | (1<<(2)))) >> 1;
 12946   01197E  90D8               	bcf	status,0,c
 12947   011980  3010               	rrcf	Nrf24_getPALevel@level^(0+1280),w,c
 12948   011982  0B03               	andlw	3
 12949   011984  6E10               	movwf	Nrf24_getPALevel@level^(0+1280),c
 12950   011986                     
 12951                           ;cmirf.c: 490:  return (level);
 12952   011986  5010               	movf	Nrf24_getPALevel@level^(0+1280),w,c
 12953   011988  0012               	return		;funcret
 12954   01198A                     __end_of_Nrf24_getPALevel:
 12955                           	callstack 0
 12956                           
 12957 ;; *************** function _Nrf24_getDataRate *****************
 12958 ;; Defined at:
 12959 ;;		line 436 in file "cmirf.c"
 12960 ;; Parameters:    Size  Location     Type
 12961 ;;  dev             2   13[COMRAM] PTR struct .
 12962 ;;		 -> sender@nrf(3), 
 12963 ;; Auto vars:     Size  Location     Type
 12964 ;;  dr              1   16[COMRAM] unsigned char 
 12965 ;;  result          1   15[COMRAM] enum E17429
 12966 ;; Return value:  Size  Location     Type
 12967 ;;                  1    wreg      unsigned char 
 12968 ;; Registers used:
 12969 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12970 ;; Tracked objects:
 12971 ;;		On entry : 0/0
 12972 ;;		On exit  : 0/0
 12973 ;;		Unchanged: 0/0
 12974 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12975 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12976 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12978 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12979 ;;Total ram usage:        4 bytes
 12980 ;; Hardware stack levels used: 1
 12981 ;; Hardware stack levels required when called: 6
 12982 ;; This function calls:
 12983 ;;		_Nrf24_readRegister
 12984 ;; This function is called by:
 12985 ;;		_Nrf24_printDetails
 12986 ;;		_Nrf24_getDataRateString
 12987 ;; This function uses a non-reentrant model
 12988 ;;
 12989                           
 12990                           	psect	text28
 12991   011550                     __ptext28:
 12992                           	callstack 0
 12993   011550                     _Nrf24_getDataRate:
 12994                           	callstack 118
 12995   011550                     
 12996                           ;cmirf.c: 436: uint8_t Nrf24_getDataRate(NRF24_t * dev);cmirf.c: 437: {;cmirf.c: 438:  r
      +                          f24_datarate_e result;;cmirf.c: 439:  uint8_t dr;;cmirf.c: 440:  Nrf24_readRegister(0x06
      +                          , &dr, sizeof(dr));
 12997   011550  0E11               	movlw	low Nrf24_getDataRate@dr
 12998   011552  6E0A               	movwf	Nrf24_readRegister@value^(0+1280),c
 12999   011554  0E05               	movlw	high Nrf24_getDataRate@dr
 13000   011556  6E0B               	movwf	(Nrf24_readRegister@value+1)^(0+1280),c
 13001   011558  0E01               	movlw	1
 13002   01155A  6E0C               	movwf	Nrf24_readRegister@len^(0+1280),c
 13003   01155C  0E06               	movlw	6
 13004   01155E  ECC7  F08B         	call	_Nrf24_readRegister
 13005   011562                     
 13006                           ;cmirf.c: 441:  dr = dr & ((1<<(5)) | (1<<(3)));
 13007   011562  5011               	movf	Nrf24_getDataRate@dr^(0+1280),w,c
 13008   011564  0B28               	andlw	40
 13009   011566  6E11               	movwf	Nrf24_getDataRate@dr^(0+1280),c
 13010   011568                     
 13011                           ;cmirf.c: 444:  if (dr == (1<<(5))) {
 13012   011568  0E20               	movlw	32
 13013   01156A  1811               	xorwf	Nrf24_getDataRate@dr^(0+1280),w,c
 13014   01156C  A4D8               	btfss	status,2,c
 13015   01156E  EFBB  F08A         	goto	u3301
 13016   011572  EFBD  F08A         	goto	u3300
 13017   011576                     u3301:
 13018   011576  EFC1  F08A         	goto	l4095
 13019   01157A                     u3300:
 13020   01157A                     
 13021                           ;cmirf.c: 446:   result = RF24_250KBPS;
 13022   01157A  0E02               	movlw	2
 13023   01157C  6E10               	movwf	Nrf24_getDataRate@result^(0+1280),c
 13024                           
 13025                           ;cmirf.c: 447:  } else if (dr == (1<<(3))) {
 13026   01157E  EFCF  F08A         	goto	l4099
 13027   011582                     l4095:
 13028   011582  0E08               	movlw	8
 13029   011584  1811               	xorwf	Nrf24_getDataRate@dr^(0+1280),w,c
 13030   011586  A4D8               	btfss	status,2,c
 13031   011588  EFC8  F08A         	goto	u3311
 13032   01158C  EFCA  F08A         	goto	u3310
 13033   011590                     u3311:
 13034   011590  EFCE  F08A         	goto	l737
 13035   011594                     u3310:
 13036   011594                     
 13037                           ;cmirf.c: 449:   result = RF24_2MBPS;
 13038   011594  0E01               	movlw	1
 13039   011596  6E10               	movwf	Nrf24_getDataRate@result^(0+1280),c
 13040                           
 13041                           ;cmirf.c: 450:  } else {
 13042   011598  EFCF  F08A         	goto	l4099
 13043   01159C                     l737:
 13044                           
 13045                           ;cmirf.c: 452:   result = RF24_1MBPS;
 13046   01159C  6A10               	clrf	Nrf24_getDataRate@result^(0+1280),c
 13047   01159E                     l4099:
 13048                           
 13049                           ;cmirf.c: 454:  return result;
 13050   01159E  5010               	movf	Nrf24_getDataRate@result^(0+1280),w,c
 13051   0115A0  0012               	return		;funcret
 13052   0115A2                     __end_of_Nrf24_getDataRate:
 13053                           	callstack 0
 13054                           
 13055 ;; *************** function _Nrf24_getCRCLength *****************
 13056 ;; Defined at:
 13057 ;;		line 462 in file "cmirf.c"
 13058 ;; Parameters:    Size  Location     Type
 13059 ;;  dev             2   13[COMRAM] PTR struct .
 13060 ;;		 -> sender@nrf(3), 
 13061 ;; Auto vars:     Size  Location     Type
 13062 ;;  config          1   17[COMRAM] unsigned char 
 13063 ;;  AA              1   16[COMRAM] unsigned char 
 13064 ;;  result          1   15[COMRAM] enum E17434
 13065 ;; Return value:  Size  Location     Type
 13066 ;;                  1    wreg      unsigned char 
 13067 ;; Registers used:
 13068 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13069 ;; Tracked objects:
 13070 ;;		On entry : 0/0
 13071 ;;		On exit  : 0/0
 13072 ;;		Unchanged: 0/0
 13073 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13074 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13075 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13077 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13078 ;;Total ram usage:        5 bytes
 13079 ;; Hardware stack levels used: 1
 13080 ;; Hardware stack levels required when called: 6
 13081 ;; This function calls:
 13082 ;;		_Nrf24_readRegister
 13083 ;; This function is called by:
 13084 ;;		_Nrf24_printDetails
 13085 ;; This function uses a non-reentrant model
 13086 ;;
 13087                           
 13088                           	psect	text29
 13089   01132A                     __ptext29:
 13090                           	callstack 0
 13091   01132A                     _Nrf24_getCRCLength:
 13092                           	callstack 118
 13093   01132A                     
 13094                           ;cmirf.c: 462: uint8_t Nrf24_getCRCLength(NRF24_t * dev);cmirf.c: 463: {;cmirf.c: 464:  
      +                          rf24_crclength_e result = RF24_CRC_DISABLED;
 13095   01132A  6A10               	clrf	Nrf24_getCRCLength@result^(0+1280),c
 13096   01132C                     
 13097                           ;cmirf.c: 466:  uint8_t config;;cmirf.c: 467:  Nrf24_readRegister(0x00, &config, sizeof(
      +                          config));
 13098   01132C  0E12               	movlw	low Nrf24_getCRCLength@config
 13099   01132E  6E0A               	movwf	Nrf24_readRegister@value^(0+1280),c
 13100   011330  0E05               	movlw	high Nrf24_getCRCLength@config
 13101   011332  6E0B               	movwf	(Nrf24_readRegister@value+1)^(0+1280),c
 13102   011334  0E01               	movlw	1
 13103   011336  6E0C               	movwf	Nrf24_readRegister@len^(0+1280),c
 13104   011338  0E00               	movlw	0
 13105   01133A  ECC7  F08B         	call	_Nrf24_readRegister
 13106   01133E                     
 13107                           ;cmirf.c: 469:  config = config & ((1<<(2)) | (1<<(3)));
 13108   01133E  5012               	movf	Nrf24_getCRCLength@config^(0+1280),w,c
 13109   011340  0B0C               	andlw	12
 13110   011342  6E12               	movwf	Nrf24_getCRCLength@config^(0+1280),c
 13111   011344                     
 13112                           ;cmirf.c: 470:  uint8_t AA;;cmirf.c: 471:  Nrf24_readRegister(0x01, &AA, sizeof(AA));
 13113   011344  0E11               	movlw	low Nrf24_getCRCLength@AA
 13114   011346  6E0A               	movwf	Nrf24_readRegister@value^(0+1280),c
 13115   011348  0E05               	movlw	high Nrf24_getCRCLength@AA
 13116   01134A  6E0B               	movwf	(Nrf24_readRegister@value+1)^(0+1280),c
 13117   01134C  0E01               	movlw	1
 13118   01134E  6E0C               	movwf	Nrf24_readRegister@len^(0+1280),c
 13119   011350  0E01               	movlw	1
 13120   011352  ECC7  F08B         	call	_Nrf24_readRegister
 13121   011356                     
 13122                           ;cmirf.c: 473:  if (config & (1<<(3)) || AA) {
 13123   011356  B612               	btfsc	Nrf24_getCRCLength@config^(0+1280),3,c
 13124   011358  EFB0  F089         	goto	u3321
 13125   01135C  EFB2  F089         	goto	u3320
 13126   011360                     u3321:
 13127   011360  EFBA  F089         	goto	l747
 13128   011364                     u3320:
 13129   011364  5011               	movf	Nrf24_getCRCLength@AA^(0+1280),w,c
 13130   011366  B4D8               	btfsc	status,2,c
 13131   011368  EFB8  F089         	goto	u3331
 13132   01136C  EFBA  F089         	goto	u3330
 13133   011370                     u3331:
 13134   011370  EFC7  F089         	goto	l745
 13135   011374                     u3330:
 13136   011374                     l747:
 13137                           
 13138                           ;cmirf.c: 474:   if (config & (1<<(2))) {
 13139   011374  A412               	btfss	Nrf24_getCRCLength@config^(0+1280),2,c
 13140   011376  EFBF  F089         	goto	u3341
 13141   01137A  EFC1  F089         	goto	u3340
 13142   01137E                     u3341:
 13143   01137E  EFC5  F089         	goto	l4117
 13144   011382                     u3340:
 13145   011382                     
 13146                           ;cmirf.c: 475:    result = RF24_CRC_16;
 13147   011382  0E02               	movlw	2
 13148   011384  6E10               	movwf	Nrf24_getCRCLength@result^(0+1280),c
 13149                           
 13150                           ;cmirf.c: 476:   } else {
 13151   011386  EFC7  F089         	goto	l745
 13152   01138A                     l4117:
 13153                           
 13154                           ;cmirf.c: 477:    result = RF24_CRC_8;
 13155   01138A  0E01               	movlw	1
 13156   01138C  6E10               	movwf	Nrf24_getCRCLength@result^(0+1280),c
 13157   01138E                     l745:
 13158                           
 13159                           ;cmirf.c: 481:  return result;
 13160   01138E  5010               	movf	Nrf24_getCRCLength@result^(0+1280),w,c
 13161   011390  0012               	return		;funcret
 13162   011392                     __end_of_Nrf24_getCRCLength:
 13163                           	callstack 0
 13164                           
 13165 ;; *************** function _Nrf24_isSend *****************
 13166 ;; Defined at:
 13167 ;;		line 262 in file "cmirf.c"
 13168 ;; Parameters:    Size  Location     Type
 13169 ;;  dev             2   14[COMRAM] PTR struct .
 13170 ;;		 -> sender@nrf(3), 
 13171 ;;  timeout         2   16[COMRAM] int 
 13172 ;; Auto vars:     Size  Location     Type
 13173 ;;  i               4   22[COMRAM] unsigned long 
 13174 ;;  status          1   26[COMRAM] unsigned char 
 13175 ;; Return value:  Size  Location     Type
 13176 ;;                  1    wreg      _Bool 
 13177 ;; Registers used:
 13178 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13179 ;; Tracked objects:
 13180 ;;		On entry : 0/0
 13181 ;;		On exit  : 0/0
 13182 ;;		Unchanged: 0/0
 13183 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13184 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13185 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13186 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13187 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13188 ;;Total ram usage:       13 bytes
 13189 ;; Hardware stack levels used: 1
 13190 ;; Hardware stack levels required when called: 7
 13191 ;; This function calls:
 13192 ;;		_DELAY_milliseconds
 13193 ;;		_Nrf24_getStatus
 13194 ;;		_Nrf24_powerUpRx
 13195 ;; This function is called by:
 13196 ;;		_sender
 13197 ;; This function uses a non-reentrant model
 13198 ;;
 13199                           
 13200                           	psect	text30
 13201   010EB0                     __ptext30:
 13202                           	callstack 0
 13203   010EB0                     _Nrf24_isSend:
 13204                           	callstack 118
 13205   010EB0                     
 13206                           ;cmirf.c: 263:  uint8_t status;;cmirf.c: 264:  if (dev->PTX) {
 13207   010EB0  C50F  F4D9         	movff	Nrf24_isSend@dev,fsr2l
 13208   010EB4  C510  F4DA         	movff	Nrf24_isSend@dev+1,fsr2h
 13209   010EB8  50DF               	movf	indf2,w,c
 13210   010EBA  B4D8               	btfsc	status,2,c
 13211   010EBC  EF62  F087         	goto	u3391
 13212   010EC0  EF64  F087         	goto	u3390
 13213   010EC4                     u3391:
 13214   010EC4  EFAD  F087         	goto	l672
 13215   010EC8                     u3390:
 13216   010EC8                     
 13217                           ;cmirf.c: 265:   for(unsigned long int i = 0; i < timeout; i++) {
 13218   010EC8  0E00               	movlw	0
 13219   010ECA  6E17               	movwf	Nrf24_isSend@i^(0+1280),c
 13220   010ECC  0E00               	movlw	0
 13221   010ECE  6E18               	movwf	(Nrf24_isSend@i+1)^(0+1280),c
 13222   010ED0  0E00               	movlw	0
 13223   010ED2  6E19               	movwf	(Nrf24_isSend@i+2)^(0+1280),c
 13224   010ED4  0E00               	movlw	0
 13225   010ED6  6E1A               	movwf	(Nrf24_isSend@i+3)^(0+1280),c
 13226   010ED8  EF95  F087         	goto	l4229
 13227   010EDC                     l4213:
 13228                           
 13229                           ;cmirf.c: 266:    status = Nrf24_getStatus();
 13230   010EDC  ECE9  F08C         	call	_Nrf24_getStatus	;wreg free
 13231   010EE0  6E1B               	movwf	Nrf24_isSend@status^(0+1280),c
 13232   010EE2                     
 13233                           ;cmirf.c: 268:    if (status & (1 << 5)) {
 13234   010EE2  AA1B               	btfss	Nrf24_isSend@status^(0+1280),5,c
 13235   010EE4  EF76  F087         	goto	u3401
 13236   010EE8  EF78  F087         	goto	u3400
 13237   010EEC                     u3401:
 13238   010EEC  EF80  F087         	goto	l671
 13239   010EF0                     u3400:
 13240   010EF0                     l4217:
 13241                           
 13242                           ;cmirf.c: 269:     Nrf24_powerUpRx(dev);
 13243   010EF0  C50F  F508         	movff	Nrf24_isSend@dev,Nrf24_powerUpRx@dev
 13244   010EF4  C510  F509         	movff	Nrf24_isSend@dev+1,Nrf24_powerUpRx@dev+1
 13245   010EF8  EC72  F08C         	call	_Nrf24_powerUpRx	;wreg free
 13246   010EFC  EFAD  F087         	goto	l672
 13247   010F00                     l671:
 13248                           
 13249                           ;cmirf.c: 273:    if (status & (1 << 4)) {
 13250   010F00  A81B               	btfss	Nrf24_isSend@status^(0+1280),4,c
 13251   010F02  EF85  F087         	goto	u3411
 13252   010F06  EF87  F087         	goto	u3410
 13253   010F0A                     u3411:
 13254   010F0A  EF89  F087         	goto	l4225
 13255   010F0E                     u3410:
 13256   010F0E  EF78  F087         	goto	l4217
 13257   010F12                     l4225:
 13258                           
 13259                           ;cmirf.c: 278:    DELAY_milliseconds(1);
 13260   010F12  0E00               	movlw	0
 13261   010F14  6E05               	movwf	(DELAY_milliseconds@milliseconds+1)^(0+1280),c
 13262   010F16  0E01               	movlw	1
 13263   010F18  6E04               	movwf	DELAY_milliseconds@milliseconds^(0+1280),c
 13264   010F1A  ECAF  F08B         	call	_DELAY_milliseconds	;wreg free
 13265   010F1E                     
 13266                           ;cmirf.c: 279:   }
 13267   010F1E  0E01               	movlw	1
 13268   010F20  2617               	addwf	Nrf24_isSend@i^(0+1280),f,c
 13269   010F22  0E00               	movlw	0
 13270   010F24  2218               	addwfc	(Nrf24_isSend@i+1)^(0+1280),f,c
 13271   010F26  2219               	addwfc	(Nrf24_isSend@i+2)^(0+1280),f,c
 13272   010F28  221A               	addwfc	(Nrf24_isSend@i+3)^(0+1280),f,c
 13273   010F2A                     l4229:
 13274   010F2A  C511  F513         	movff	Nrf24_isSend@timeout,??_Nrf24_isSend
 13275   010F2E  C512  F514         	movff	Nrf24_isSend@timeout+1,??_Nrf24_isSend+1
 13276   010F32  0E00               	movlw	0
 13277   010F34  BE14               	btfsc	(??_Nrf24_isSend+1)^(0+1280),7,c
 13278   010F36  0EFF               	movlw	255
 13279   010F38  6E15               	movwf	(??_Nrf24_isSend+2)^(0+1280),c
 13280   010F3A  6E16               	movwf	(??_Nrf24_isSend+3)^(0+1280),c
 13281   010F3C  5013               	movf	??_Nrf24_isSend^(0+1280),w,c
 13282   010F3E  5C17               	subwf	Nrf24_isSend@i^(0+1280),w,c
 13283   010F40  5014               	movf	(??_Nrf24_isSend+1)^(0+1280),w,c
 13284   010F42  5818               	subwfb	(Nrf24_isSend@i+1)^(0+1280),w,c
 13285   010F44  5015               	movf	(??_Nrf24_isSend+2)^(0+1280),w,c
 13286   010F46  5819               	subwfb	(Nrf24_isSend@i+2)^(0+1280),w,c
 13287   010F48  5016               	movf	(??_Nrf24_isSend+3)^(0+1280),w,c
 13288   010F4A  581A               	subwfb	(Nrf24_isSend@i+3)^(0+1280),w,c
 13289   010F4C  A0D8               	btfss	status,0,c
 13290   010F4E  EFAB  F087         	goto	u3421
 13291   010F52  EFAD  F087         	goto	u3420
 13292   010F56                     u3421:
 13293   010F56  EF6E  F087         	goto	l4213
 13294   010F5A                     u3420:
 13295   010F5A                     l672:
 13296   010F5A  0012               	return		;funcret
 13297   010F5C                     __end_of_Nrf24_isSend:
 13298                           	callstack 0
 13299                           
 13300 ;; *************** function _DELAY_milliseconds *****************
 13301 ;; Defined at:
 13302 ;;		line 37 in file "mcc_generated_files/timer/src/delay.c"
 13303 ;; Parameters:    Size  Location     Type
 13304 ;;  milliseconds    2    3[COMRAM] unsigned short 
 13305 ;; Auto vars:     Size  Location     Type
 13306 ;;		None
 13307 ;; Return value:  Size  Location     Type
 13308 ;;                  1    wreg      void 
 13309 ;; Registers used:
 13310 ;;		wreg, status,2, status,0
 13311 ;; Tracked objects:
 13312 ;;		On entry : 0/0
 13313 ;;		On exit  : 0/0
 13314 ;;		Unchanged: 0/0
 13315 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13316 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13318 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13319 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13320 ;;Total ram usage:        3 bytes
 13321 ;; Hardware stack levels used: 1
 13322 ;; Hardware stack levels required when called: 3
 13323 ;; This function calls:
 13324 ;;		Nothing
 13325 ;; This function is called by:
 13326 ;;		_sender
 13327 ;;		_Nrf24_isSend
 13328 ;; This function uses a non-reentrant model
 13329 ;;
 13330                           
 13331                           	psect	text31
 13332   01175E                     __ptext31:
 13333                           	callstack 0
 13334   01175E                     _DELAY_milliseconds:
 13335                           	callstack 121
 13336   01175E                     
 13337                           ;mcc_generated_files/timer/src/delay.c: 38:     while(milliseconds--){
 13338   01175E  EFB9  F08B         	goto	l3121
 13339   011762                     l3119:
 13340                           
 13341                           ;mcc_generated_files/timer/src/delay.c: 39:         _delay((unsigned long)((1)*(64000000
      +                          U/4000.0)));
 13342   011762  0E15               	movlw	21
 13343   011764  6E06               	movwf	??_DELAY_milliseconds^(0+1280),c
 13344   011766  0EC6               	movlw	198
 13345   011768                     u3567:
 13346   011768  2EE8               	decfsz	wreg,f,c
 13347   01176A  D7FE               	bra	u3567
 13348   01176C  2E06               	decfsz	??_DELAY_milliseconds^(0+1280),f,c
 13349   01176E  D7FC               	bra	u3567
 13350   011770  D000               	nop2	
 13351   011772                     l3121:
 13352                           
 13353                           ;mcc_generated_files/timer/src/delay.c: 38:     while(milliseconds--){
 13354   011772  0604               	decf	DELAY_milliseconds@milliseconds^(0+1280),f,c
 13355   011774  A0D8               	btfss	status,0,c
 13356   011776  0605               	decf	(DELAY_milliseconds@milliseconds+1)^(0+1280),f,c
 13357   011778  2804               	incf	DELAY_milliseconds@milliseconds^(0+1280),w,c
 13358   01177A  E106               	bnz	u1991
 13359   01177C  2805               	incf	(DELAY_milliseconds@milliseconds+1)^(0+1280),w,c
 13360   01177E  A4D8               	btfss	status,2,c
 13361   011780  EFC4  F08B         	goto	u1991
 13362   011784  EFC6  F08B         	goto	u1990
 13363   011788                     u1991:
 13364   011788  EFB1  F08B         	goto	l3119
 13365   01178C                     u1990:
 13366   01178C  0012               	return		;funcret
 13367   01178E                     __end_of_DELAY_milliseconds:
 13368                           	callstack 0
 13369                           
 13370 ;; *************** function _Nrf24_init *****************
 13371 ;; Defined at:
 13372 ;;		line 58 in file "cmirf.c"
 13373 ;; Parameters:    Size  Location     Type
 13374 ;;  dev             2    4[COMRAM] PTR struct .
 13375 ;;		 -> sender@nrf(3), 
 13376 ;; Auto vars:     Size  Location     Type
 13377 ;;		None
 13378 ;; Return value:  Size  Location     Type
 13379 ;;                  1    wreg      void 
 13380 ;; Registers used:
 13381 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13382 ;; Tracked objects:
 13383 ;;		On entry : 0/0
 13384 ;;		On exit  : 0/0
 13385 ;;		Unchanged: 0/0
 13386 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13387 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13390 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13391 ;;Total ram usage:        2 bytes
 13392 ;; Hardware stack levels used: 1
 13393 ;; Hardware stack levels required when called: 4
 13394 ;; This function calls:
 13395 ;;		_SPI1_Open
 13396 ;; This function is called by:
 13397 ;;		_sender
 13398 ;; This function uses a non-reentrant model
 13399 ;;
 13400                           
 13401                           	psect	text32
 13402   0117EA                     __ptext32:
 13403                           	callstack 0
 13404   0117EA                     _Nrf24_init:
 13405                           	callstack 121
 13406   0117EA                     
 13407                           ;cmirf.c: 58: void Nrf24_init(NRF24_t * dev);cmirf.c: 59: {;cmirf.c: 60:     SPI1_Open(S
      +                          PI1_DEFAULT);
 13408   0117EA  0E01               	movlw	1
 13409   0117EC  EC83  F085         	call	_SPI1_Open
 13410   0117F0                     
 13411                           ;cmirf.c: 62:     dev->channel = 115;
 13412   0117F0  EE20 F001          	lfsr	2,1
 13413   0117F4  5005               	movf	Nrf24_init@dev^(0+1280),w,c
 13414   0117F6  26D9               	addwf	fsr2l,f,c
 13415   0117F8  5006               	movf	(Nrf24_init@dev+1)^(0+1280),w,c
 13416   0117FA  22DA               	addwfc	fsr2h,f,c
 13417   0117FC  0E73               	movlw	115
 13418   0117FE  6EDF               	movwf	indf2,c
 13419   011800                     
 13420                           ;cmirf.c: 63:     dev->payload = 32;
 13421   011800  EE20 F002          	lfsr	2,2
 13422   011804  5005               	movf	Nrf24_init@dev^(0+1280),w,c
 13423   011806  26D9               	addwf	fsr2l,f,c
 13424   011808  5006               	movf	(Nrf24_init@dev+1)^(0+1280),w,c
 13425   01180A  22DA               	addwfc	fsr2h,f,c
 13426   01180C  0E20               	movlw	32
 13427   01180E  6EDF               	movwf	indf2,c
 13428   011810  92C8               	bcf	200,1,c	;volatile
 13429   011812  94C8               	bcf	200,2,c	;volatile
 13430   011814  0012               	return		;funcret
 13431   011816                     __end_of_Nrf24_init:
 13432                           	callstack 0
 13433                           
 13434 ;; *************** function _SPI1_Open *****************
 13435 ;; Defined at:
 13436 ;;		line 92 in file "mcc_generated_files/spi/src/spi1.c"
 13437 ;; Parameters:    Size  Location     Type
 13438 ;;  spiConfigInd    1    wreg     unsigned char 
 13439 ;; Auto vars:     Size  Location     Type
 13440 ;;  spiConfigInd    1    3[COMRAM] unsigned char 
 13441 ;;  returnValue     1    0        _Bool 
 13442 ;; Return value:  Size  Location     Type
 13443 ;;                  1    wreg      _Bool 
 13444 ;; Registers used:
 13445 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 13446 ;; Tracked objects:
 13447 ;;		On entry : 0/0
 13448 ;;		On exit  : 0/0
 13449 ;;		Unchanged: 0/0
 13450 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13452 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13454 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13455 ;;Total ram usage:        1 bytes
 13456 ;; Hardware stack levels used: 1
 13457 ;; Hardware stack levels required when called: 3
 13458 ;; This function calls:
 13459 ;;		Nothing
 13460 ;; This function is called by:
 13461 ;;		_Nrf24_init
 13462 ;; This function uses a non-reentrant model
 13463 ;;
 13464                           
 13465                           	psect	text33
 13466   010B06                     __ptext33:
 13467                           	callstack 0
 13468   010B06                     _SPI1_Open:
 13469                           	callstack 121
 13470                           
 13471                           ;incstack = 0
 13472                           ;SPI1_Open@spiConfigIndex stored from wreg
 13473   010B06  6E04               	movwf	SPI1_Open@spiConfigIndex^(0+1280),c
 13474   010B08                     
 13475                           ;mcc_generated_files/spi/src/spi1.c: 95:  if(0 == SPI1CON0bits.EN)
 13476   010B08  0100               	movlb	0	; () banked
 13477   010B0A  BF84               	btfsc	132,7,b	;volatile
 13478   010B0C  EF8A  F085         	goto	u1981
 13479   010B10  EF8C  F085         	goto	u1980
 13480   010B14                     u1981:
 13481   010B14  EFE7  F085         	goto	l67
 13482   010B18                     u1980:
 13483   010B18                     
 13484                           ; BSR set to: 0
 13485                           ;mcc_generated_files/spi/src/spi1.c: 96:  {;mcc_generated_files/spi/src/spi1.c: 97:     
      +                              SPI1CON0 = spi1_configuration[spiConfigIndex].con0;
 13486   010B18  5004               	movf	SPI1_Open@spiConfigIndex^(0+1280),w,c
 13487   010B1A  0D05               	mullw	5
 13488   010B1C  0E8B               	movlw	low _spi1_configuration
 13489   010B1E  24F3               	addwf	243,w,c
 13490   010B20  6EF6               	movwf	tblptrl,c
 13491   010B22  0EFE               	movlw	high _spi1_configuration
 13492   010B24  20F4               	addwfc	244,w,c
 13493   010B26  6EF7               	movwf	tblptrh,c
 13494   010B28                     	if	1	;There are 3 active tblptr bytes
 13495   010B28  6AF8               	clrf	tblptru,c
 13496   010B2A  0E00               	movlw	low (__mediumconst shr (0+16))
 13497   010B2C  22F8               	addwfc	tblptru,f,c
 13498   010B2E                     	endif
 13499   010B2E  0008               	tblrd		*
 13500   010B30  C4F5 F084          	movff	tablat,132	;volatile
 13501                           
 13502                           ;mcc_generated_files/spi/src/spi1.c: 98:         SPI1CON1 = spi1_configuration[spiConfig
      +                          Index].con1;
 13503   010B34  5004               	movf	SPI1_Open@spiConfigIndex^(0+1280),w,c
 13504   010B36  0D05               	mullw	5
 13505   010B38  0E01               	movlw	1
 13506   010B3A  26F3               	addwf	243,f,c
 13507   010B3C  0E00               	movlw	0
 13508   010B3E  22F4               	addwfc	244,f,c
 13509   010B40  0E8B               	movlw	low _spi1_configuration
 13510   010B42  24F3               	addwf	243,w,c
 13511   010B44  6EF6               	movwf	tblptrl,c
 13512   010B46  0EFE               	movlw	high _spi1_configuration
 13513   010B48  20F4               	addwfc	244,w,c
 13514   010B4A  6EF7               	movwf	tblptrh,c
 13515   010B4C                     	if	1	;There are 3 active tblptr bytes
 13516   010B4C  6AF8               	clrf	tblptru,c
 13517   010B4E  0E00               	movlw	low (__mediumconst shr (0+16))
 13518   010B50  22F8               	addwfc	tblptru,f,c
 13519   010B52                     	endif
 13520   010B52  0008               	tblrd		*
 13521   010B54  C4F5 F085          	movff	tablat,133	;volatile
 13522                           
 13523                           ;mcc_generated_files/spi/src/spi1.c: 99:         SPI1CON2 = spi1_configuration[spiConfig
      +                          Index].con2 & ~(0x1) & ~(0x2);
 13524   010B58  5004               	movf	SPI1_Open@spiConfigIndex^(0+1280),w,c
 13525   010B5A  0D05               	mullw	5
 13526   010B5C  0E02               	movlw	2
 13527   010B5E  26F3               	addwf	243,f,c
 13528   010B60  0E00               	movlw	0
 13529   010B62  22F4               	addwfc	244,f,c
 13530   010B64  0E8B               	movlw	low _spi1_configuration
 13531   010B66  24F3               	addwf	243,w,c
 13532   010B68  6EF6               	movwf	tblptrl,c
 13533   010B6A  0EFE               	movlw	high _spi1_configuration
 13534   010B6C  20F4               	addwfc	244,w,c
 13535   010B6E  6EF7               	movwf	tblptrh,c
 13536   010B70                     	if	1	;There are 3 active tblptr bytes
 13537   010B70  6AF8               	clrf	tblptru,c
 13538   010B72  0E00               	movlw	low (__mediumconst shr (0+16))
 13539   010B74  22F8               	addwfc	tblptru,f,c
 13540   010B76                     	endif
 13541   010B76  0008               	tblrd		*
 13542   010B78  50F5               	movf	tablat,w,c
 13543   010B7A  0BFC               	andlw	252
 13544   010B7C  6F86               	movwf	134,b	;volatile
 13545                           
 13546                           ;mcc_generated_files/spi/src/spi1.c: 100:         SPI1BAUD = spi1_configuration[spiConfi
      +                          gIndex].baud;
 13547   010B7E  5004               	movf	SPI1_Open@spiConfigIndex^(0+1280),w,c
 13548   010B80  0D05               	mullw	5
 13549   010B82  0E03               	movlw	3
 13550   010B84  26F3               	addwf	243,f,c
 13551   010B86  0E00               	movlw	0
 13552   010B88  22F4               	addwfc	244,f,c
 13553   010B8A  0E8B               	movlw	low _spi1_configuration
 13554   010B8C  24F3               	addwf	243,w,c
 13555   010B8E  6EF6               	movwf	tblptrl,c
 13556   010B90  0EFE               	movlw	high _spi1_configuration
 13557   010B92  20F4               	addwfc	244,w,c
 13558   010B94  6EF7               	movwf	tblptrh,c
 13559   010B96                     	if	1	;There are 3 active tblptr bytes
 13560   010B96  6AF8               	clrf	tblptru,c
 13561   010B98  0E00               	movlw	low (__mediumconst shr (0+16))
 13562   010B9A  22F8               	addwfc	tblptru,f,c
 13563   010B9C                     	endif
 13564   010B9C  0008               	tblrd		*
 13565   010B9E  C4F5 F089          	movff	tablat,137	;volatile
 13566                           
 13567                           ;mcc_generated_files/spi/src/spi1.c: 101:         SPI1CLK = spi1_configuration[spiConfig
      +                          Index].clksel;
 13568   010BA2  5004               	movf	SPI1_Open@spiConfigIndex^(0+1280),w,c
 13569   010BA4  0D05               	mullw	5
 13570   010BA6  0E04               	movlw	4
 13571   010BA8  26F3               	addwf	243,f,c
 13572   010BAA  0E00               	movlw	0
 13573   010BAC  22F4               	addwfc	244,f,c
 13574   010BAE  0E8B               	movlw	low _spi1_configuration
 13575   010BB0  24F3               	addwf	243,w,c
 13576   010BB2  6EF6               	movwf	tblptrl,c
 13577   010BB4  0EFE               	movlw	high _spi1_configuration
 13578   010BB6  20F4               	addwfc	244,w,c
 13579   010BB8  6EF7               	movwf	tblptrh,c
 13580   010BBA                     	if	1	;There are 3 active tblptr bytes
 13581   010BBA  6AF8               	clrf	tblptru,c
 13582   010BBC  0E00               	movlw	low (__mediumconst shr (0+16))
 13583   010BBE  22F8               	addwfc	tblptru,f,c
 13584   010BC0                     	endif
 13585   010BC0  0008               	tblrd		*
 13586   010BC2  C4F5 F08C          	movff	tablat,140	;volatile
 13587   010BC6                     
 13588                           ; BSR set to: 0
 13589                           ;mcc_generated_files/spi/src/spi1.c: 102:   TRISCbits.TRISC6 = 0;
 13590   010BC6  9CC8               	bcf	200,6,c	;volatile
 13591   010BC8                     
 13592                           ; BSR set to: 0
 13593                           ;mcc_generated_files/spi/src/spi1.c: 103:         SPI1CON0bits.EN = 1U;
 13594   010BC8  8F84               	bsf	132,7,b	;volatile
 13595   010BCA                     
 13596                           ; BSR set to: 0
 13597                           ;mcc_generated_files/spi/src/spi1.c: 105:  }
 13598   010BCA  EFE7  F085         	goto	l69
 13599   010BCE                     l67:
 13600   010BCE                     l69:
 13601                           
 13602                           ; BSR set to: 0
 13603   010BCE  0012               	return		;funcret
 13604   010BD0                     __end_of_SPI1_Open:
 13605                           	callstack 0
 13606                           
 13607 ;; *************** function _Nrf24_config *****************
 13608 ;; Defined at:
 13609 ;;		line 77 in file "cmirf.c"
 13610 ;; Parameters:    Size  Location     Type
 13611 ;;  dev             2   14[COMRAM] PTR struct .
 13612 ;;		 -> sender@nrf(3), 
 13613 ;;  channel         1   16[COMRAM] unsigned char 
 13614 ;;  payload         1   17[COMRAM] unsigned char 
 13615 ;; Auto vars:     Size  Location     Type
 13616 ;;		None
 13617 ;; Return value:  Size  Location     Type
 13618 ;;                  1    wreg      void 
 13619 ;; Registers used:
 13620 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13621 ;; Tracked objects:
 13622 ;;		On entry : 0/0
 13623 ;;		On exit  : 0/0
 13624 ;;		Unchanged: 0/0
 13625 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13626 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13629 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13630 ;;Total ram usage:        4 bytes
 13631 ;; Hardware stack levels used: 1
 13632 ;; Hardware stack levels required when called: 7
 13633 ;; This function calls:
 13634 ;;		_Nrf24_configRegister
 13635 ;;		_Nrf24_flushRx
 13636 ;;		_Nrf24_getStatus
 13637 ;;		_Nrf24_powerUpRx
 13638 ;; This function is called by:
 13639 ;;		_sender
 13640 ;; This function uses a non-reentrant model
 13641 ;;
 13642                           
 13643                           	psect	text34
 13644   011248                     __ptext34:
 13645                           	callstack 0
 13646   011248                     _Nrf24_config:
 13647                           	callstack 118
 13648   011248                     
 13649                           ;cmirf.c: 77: void Nrf24_config(NRF24_t * dev, uint8_t channel, uint8_t payload);cmirf.c
      +                          : 78: {;cmirf.c: 79:  dev->channel = channel;
 13650   011248  EE20 F001          	lfsr	2,1
 13651   01124C  500F               	movf	Nrf24_config@dev^(0+1280),w,c
 13652   01124E  26D9               	addwf	fsr2l,f,c
 13653   011250  5010               	movf	(Nrf24_config@dev+1)^(0+1280),w,c
 13654   011252  22DA               	addwfc	fsr2h,f,c
 13655   011254  C511  F4DF         	movff	Nrf24_config@channel,indf2
 13656                           
 13657                           ;cmirf.c: 80:  dev->payload = payload;
 13658   011258  EE20 F002          	lfsr	2,2
 13659   01125C  500F               	movf	Nrf24_config@dev^(0+1280),w,c
 13660   01125E  26D9               	addwf	fsr2l,f,c
 13661   011260  5010               	movf	(Nrf24_config@dev+1)^(0+1280),w,c
 13662   011262  22DA               	addwfc	fsr2h,f,c
 13663   011264  C512  F4DF         	movff	Nrf24_config@payload,indf2
 13664   011268                     
 13665                           ;cmirf.c: 81:     Nrf24_getStatus();
 13666   011268  ECE9  F08C         	call	_Nrf24_getStatus	;wreg free
 13667   01126C                     
 13668                           ;cmirf.c: 82:     Nrf24_configRegister(0x05, channel);
 13669   01126C  C511  F506         	movff	Nrf24_config@channel,Nrf24_configRegister@value
 13670   011270  0E05               	movlw	5
 13671   011272  ECD1  F08C         	call	_Nrf24_configRegister
 13672   011276                     
 13673                           ;cmirf.c: 83:  Nrf24_configRegister(0x11, dev->payload);
 13674   011276  EE20 F002          	lfsr	2,2
 13675   01127A  500F               	movf	Nrf24_config@dev^(0+1280),w,c
 13676   01127C  26D9               	addwf	fsr2l,f,c
 13677   01127E  5010               	movf	(Nrf24_config@dev+1)^(0+1280),w,c
 13678   011280  22DA               	addwfc	fsr2h,f,c
 13679   011282  50DF               	movf	indf2,w,c
 13680   011284  6E06               	movwf	Nrf24_configRegister@value^(0+1280),c
 13681   011286  0E11               	movlw	17
 13682   011288  ECD1  F08C         	call	_Nrf24_configRegister
 13683   01128C                     
 13684                           ;cmirf.c: 84:  Nrf24_configRegister(0x12, dev->payload);
 13685   01128C  EE20 F002          	lfsr	2,2
 13686   011290  500F               	movf	Nrf24_config@dev^(0+1280),w,c
 13687   011292  26D9               	addwf	fsr2l,f,c
 13688   011294  5010               	movf	(Nrf24_config@dev+1)^(0+1280),w,c
 13689   011296  22DA               	addwfc	fsr2h,f,c
 13690   011298  50DF               	movf	indf2,w,c
 13691   01129A  6E06               	movwf	Nrf24_configRegister@value^(0+1280),c
 13692   01129C  0E12               	movlw	18
 13693   01129E  ECD1  F08C         	call	_Nrf24_configRegister
 13694   0112A2                     
 13695                           ;cmirf.c: 85:  Nrf24_powerUpRx(dev);
 13696   0112A2  C50F  F508         	movff	Nrf24_config@dev,Nrf24_powerUpRx@dev
 13697   0112A6  C510  F509         	movff	Nrf24_config@dev+1,Nrf24_powerUpRx@dev+1
 13698   0112AA  EC72  F08C         	call	_Nrf24_powerUpRx	;wreg free
 13699   0112AE                     
 13700                           ;cmirf.c: 86:  Nrf24_flushRx(dev);
 13701   0112AE  C50F  F506         	movff	Nrf24_config@dev,Nrf24_flushRx@dev
 13702   0112B2  C510  F507         	movff	Nrf24_config@dev+1,Nrf24_flushRx@dev+1
 13703   0112B6  EC25  F08D         	call	_Nrf24_flushRx	;wreg free
 13704   0112BA  0012               	return		;funcret
 13705   0112BC                     __end_of_Nrf24_config:
 13706                           	callstack 0
 13707                           
 13708 ;; *************** function _Nrf24_powerUpRx *****************
 13709 ;; Defined at:
 13710 ;;		line 291 in file "cmirf.c"
 13711 ;; Parameters:    Size  Location     Type
 13712 ;;  dev             2    7[COMRAM] PTR struct .
 13713 ;;		 -> sender@nrf(3), 
 13714 ;; Auto vars:     Size  Location     Type
 13715 ;;		None
 13716 ;; Return value:  Size  Location     Type
 13717 ;;                  1    wreg      void 
 13718 ;; Registers used:
 13719 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13720 ;; Tracked objects:
 13721 ;;		On entry : 0/0
 13722 ;;		On exit  : 0/0
 13723 ;;		Unchanged: 0/0
 13724 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13725 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13728 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13729 ;;Total ram usage:        2 bytes
 13730 ;; Hardware stack levels used: 1
 13731 ;; Hardware stack levels required when called: 5
 13732 ;; This function calls:
 13733 ;;		_Nrf24_configRegister
 13734 ;; This function is called by:
 13735 ;;		_Nrf24_config
 13736 ;;		_Nrf24_isSend
 13737 ;;		_Nrf24_isSending
 13738 ;; This function uses a non-reentrant model
 13739 ;;
 13740                           
 13741                           	psect	text35
 13742   0118E4                     __ptext35:
 13743                           	callstack 0
 13744   0118E4                     _Nrf24_powerUpRx:
 13745                           	callstack 119
 13746   0118E4                     
 13747                           ;cmirf.c: 292:  dev->PTX = 0;
 13748   0118E4  C508  F4D9         	movff	Nrf24_powerUpRx@dev,fsr2l
 13749   0118E8  C509  F4DA         	movff	Nrf24_powerUpRx@dev+1,fsr2h
 13750   0118EC  6ADF               	clrf	indf2,c
 13751   0118EE  94C0               	bcf	192,2,c	;volatile
 13752   0118F0                     
 13753                           ;cmirf.c: 294:  Nrf24_configRegister(0x00, ((1<<5) | (1<<3) | (0<<2) ) | ( (1 << 1) | (1
      +                           << 0) ) );
 13754   0118F0  0E2B               	movlw	43
 13755   0118F2  6E06               	movwf	Nrf24_configRegister@value^(0+1280),c
 13756   0118F4  0E00               	movlw	0
 13757   0118F6  ECD1  F08C         	call	_Nrf24_configRegister
 13758   0118FA  84C0               	bsf	192,2,c	;volatile
 13759   0118FC                     
 13760                           ;cmirf.c: 296:  Nrf24_configRegister(0x07, (1 << 5) | (1 << 4));
 13761   0118FC  0E30               	movlw	48
 13762   0118FE  6E06               	movwf	Nrf24_configRegister@value^(0+1280),c
 13763   011900  0E07               	movlw	7
 13764   011902  ECD1  F08C         	call	_Nrf24_configRegister
 13765   011906  0012               	return		;funcret
 13766   011908                     __end_of_Nrf24_powerUpRx:
 13767                           	callstack 0
 13768                           
 13769 ;; *************** function _Nrf24_getStatus *****************
 13770 ;; Defined at:
 13771 ;;		line 285 in file "cmirf.c"
 13772 ;; Parameters:    Size  Location     Type
 13773 ;;		None
 13774 ;; Auto vars:     Size  Location     Type
 13775 ;;  rv              1   13[COMRAM] unsigned char 
 13776 ;; Return value:  Size  Location     Type
 13777 ;;                  1    wreg      unsigned char 
 13778 ;; Registers used:
 13779 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13780 ;; Tracked objects:
 13781 ;;		On entry : 0/0
 13782 ;;		On exit  : 0/0
 13783 ;;		Unchanged: 0/0
 13784 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13786 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13788 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13789 ;;Total ram usage:        1 bytes
 13790 ;; Hardware stack levels used: 1
 13791 ;; Hardware stack levels required when called: 6
 13792 ;; This function calls:
 13793 ;;		_Nrf24_readRegister
 13794 ;; This function is called by:
 13795 ;;		_Nrf24_config
 13796 ;;		_Nrf24_send
 13797 ;;		_Nrf24_isSend
 13798 ;;		_Nrf24_printDetails
 13799 ;;		_Nrf24_dataReady
 13800 ;;		_Nrf24_getDataPipe
 13801 ;;		_Nrf24_isSending
 13802 ;; This function uses a non-reentrant model
 13803 ;;
 13804                           
 13805                           	psect	text36
 13806   0119D2                     __ptext36:
 13807                           	callstack 0
 13808   0119D2                     _Nrf24_getStatus:
 13809                           	callstack 118
 13810   0119D2                     
 13811                           ;cmirf.c: 286:  uint8_t rv;;cmirf.c: 287:  Nrf24_readRegister(0x07, &rv, 1);
 13812   0119D2  0E0E               	movlw	low Nrf24_getStatus@rv
 13813   0119D4  6E0A               	movwf	Nrf24_readRegister@value^(0+1280),c
 13814   0119D6  0E05               	movlw	high Nrf24_getStatus@rv
 13815   0119D8  6E0B               	movwf	(Nrf24_readRegister@value+1)^(0+1280),c
 13816   0119DA  0E01               	movlw	1
 13817   0119DC  6E0C               	movwf	Nrf24_readRegister@len^(0+1280),c
 13818   0119DE  0E07               	movlw	7
 13819   0119E0  ECC7  F08B         	call	_Nrf24_readRegister
 13820   0119E4                     
 13821                           ;cmirf.c: 288:  return rv;
 13822   0119E4  500E               	movf	Nrf24_getStatus@rv^(0+1280),w,c
 13823   0119E6  0012               	return		;funcret
 13824   0119E8                     __end_of_Nrf24_getStatus:
 13825                           	callstack 0
 13826                           
 13827 ;; *************** function _Nrf24_flushRx *****************
 13828 ;; Defined at:
 13829 ;;		line 299 in file "cmirf.c"
 13830 ;; Parameters:    Size  Location     Type
 13831 ;;  dev             2    5[COMRAM] PTR struct .
 13832 ;;		 -> sender@nrf(3), 
 13833 ;; Auto vars:     Size  Location     Type
 13834 ;;		None
 13835 ;; Return value:  Size  Location     Type
 13836 ;;                  1    wreg      void 
 13837 ;; Registers used:
 13838 ;;		wreg, status,2, status,0, cstack
 13839 ;; Tracked objects:
 13840 ;;		On entry : 0/0
 13841 ;;		On exit  : 0/0
 13842 ;;		Unchanged: 0/0
 13843 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13844 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13847 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13848 ;;Total ram usage:        2 bytes
 13849 ;; Hardware stack levels used: 1
 13850 ;; Hardware stack levels required when called: 4
 13851 ;; This function calls:
 13852 ;;		_SPI1_ByteExchange
 13853 ;; This function is called by:
 13854 ;;		_Nrf24_config
 13855 ;; This function uses a non-reentrant model
 13856 ;;
 13857                           
 13858                           	psect	text37
 13859   011A4A                     __ptext37:
 13860                           	callstack 0
 13861   011A4A                     _Nrf24_flushRx:
 13862                           	callstack 120
 13863   011A4A  92C0               	bcf	192,1,c	;volatile
 13864   011A4C                     
 13865                           ;cmirf.c: 302:  SPI1_ByteExchange(0xE2);
 13866   011A4C  0EE2               	movlw	226
 13867   011A4E  EC21  F08C         	call	_SPI1_ByteExchange
 13868   011A52  82C0               	bsf	192,1,c	;volatile
 13869   011A54  0012               	return		;funcret
 13870   011A56                     __end_of_Nrf24_flushRx:
 13871                           	callstack 0
 13872                           
 13873 ;; *************** function _AdvancedSettings *****************
 13874 ;; Defined at:
 13875 ;;		line 29 in file "main.c"
 13876 ;; Parameters:    Size  Location     Type
 13877 ;;  dev             2   17[COMRAM] PTR struct .
 13878 ;;		 -> sender@nrf(3), 
 13879 ;; Auto vars:     Size  Location     Type
 13880 ;;		None
 13881 ;; Return value:  Size  Location     Type
 13882 ;;                  1    wreg      void 
 13883 ;; Registers used:
 13884 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13885 ;; Tracked objects:
 13886 ;;		On entry : 0/0
 13887 ;;		On exit  : 0/0
 13888 ;;		Unchanged: 0/0
 13889 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13890 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13893 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13894 ;;Total ram usage:        2 bytes
 13895 ;; Hardware stack levels used: 1
 13896 ;; Hardware stack levels required when called: 7
 13897 ;; This function calls:
 13898 ;;		_Nrf24_SetSpeedDataRates
 13899 ;;		_Nrf24_setRetransmitDelay
 13900 ;; This function is called by:
 13901 ;;		_sender
 13902 ;; This function uses a non-reentrant model
 13903 ;;
 13904                           
 13905                           	psect	text38
 13906   01192A                     __ptext38:
 13907                           	callstack 0
 13908   01192A                     _AdvancedSettings:
 13909                           	callstack 118
 13910   01192A                     
 13911                           ;main.c: 29: void AdvancedSettings(NRF24_t * dev);main.c: 30: {;main.c: 36:  Nrf24_SetSp
      +                          eedDataRates(dev, 0);
 13912   01192A  C512  F50E         	movff	AdvancedSettings@dev,Nrf24_SetSpeedDataRates@dev
 13913   01192E  C513  F50F         	movff	AdvancedSettings@dev+1,Nrf24_SetSpeedDataRates@dev+1
 13914   011932  0E00               	movlw	0
 13915   011934  6E10               	movwf	Nrf24_SetSpeedDataRates@val^(0+1280),c
 13916   011936  EC5E  F089         	call	_Nrf24_SetSpeedDataRates	;wreg free
 13917                           
 13918                           ;main.c: 42:  Nrf24_setRetransmitDelay(dev, 100);
 13919   01193A  C512  F50E         	movff	AdvancedSettings@dev,Nrf24_setRetransmitDelay@dev
 13920   01193E  C513  F50F         	movff	AdvancedSettings@dev+1,Nrf24_setRetransmitDelay@dev+1
 13921   011942  0E64               	movlw	100
 13922   011944  6E10               	movwf	Nrf24_setRetransmitDelay@val^(0+1280),c
 13923   011946  EC0B  F08C         	call	_Nrf24_setRetransmitDelay	;wreg free
 13924   01194A  0012               	return		;funcret
 13925   01194C                     __end_of_AdvancedSettings:
 13926                           	callstack 0
 13927                           
 13928 ;; *************** function _Nrf24_setRetransmitDelay *****************
 13929 ;; Defined at:
 13930 ;;		line 352 in file "cmirf.c"
 13931 ;; Parameters:    Size  Location     Type
 13932 ;;  dev             2   13[COMRAM] PTR struct .
 13933 ;;		 -> sender@nrf(3), 
 13934 ;;  val             1   15[COMRAM] unsigned char 
 13935 ;; Auto vars:     Size  Location     Type
 13936 ;;  value           1   16[COMRAM] unsigned char 
 13937 ;; Return value:  Size  Location     Type
 13938 ;;                  1    wreg      void 
 13939 ;; Registers used:
 13940 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13941 ;; Tracked objects:
 13942 ;;		On entry : 0/0
 13943 ;;		On exit  : 0/0
 13944 ;;		Unchanged: 0/0
 13945 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13946 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13947 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13949 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13950 ;;Total ram usage:        4 bytes
 13951 ;; Hardware stack levels used: 1
 13952 ;; Hardware stack levels required when called: 6
 13953 ;; This function calls:
 13954 ;;		_Nrf24_configRegister
 13955 ;;		_Nrf24_readRegister
 13956 ;; This function is called by:
 13957 ;;		_AdvancedSettings
 13958 ;; This function uses a non-reentrant model
 13959 ;;
 13960                           
 13961                           	psect	text39
 13962   011816                     __ptext39:
 13963                           	callstack 0
 13964   011816                     _Nrf24_setRetransmitDelay:
 13965                           	callstack 118
 13966   011816                     
 13967                           ;cmirf.c: 352: void Nrf24_setRetransmitDelay(NRF24_t * dev, uint8_t val);cmirf.c: 353: {
      +                          ;cmirf.c: 354:  uint8_t value;;cmirf.c: 355:  Nrf24_readRegister(0x04, &value, 1);
 13968   011816  0E11               	movlw	low Nrf24_setRetransmitDelay@value
 13969   011818  6E0A               	movwf	Nrf24_readRegister@value^(0+1280),c
 13970   01181A  0E05               	movlw	high Nrf24_setRetransmitDelay@value
 13971   01181C  6E0B               	movwf	(Nrf24_readRegister@value+1)^(0+1280),c
 13972   01181E  0E01               	movlw	1
 13973   011820  6E0C               	movwf	Nrf24_readRegister@len^(0+1280),c
 13974   011822  0E04               	movlw	4
 13975   011824  ECC7  F08B         	call	_Nrf24_readRegister
 13976   011828                     
 13977                           ;cmirf.c: 356:  value = value & 0x0F;
 13978   011828  5011               	movf	Nrf24_setRetransmitDelay@value^(0+1280),w,c
 13979   01182A  0B0F               	andlw	15
 13980   01182C  6E11               	movwf	Nrf24_setRetransmitDelay@value^(0+1280),c
 13981   01182E                     
 13982                           ;cmirf.c: 357:  value = value | (val << 4);
 13983   01182E  3810               	swapf	Nrf24_setRetransmitDelay@val^(0+1280),w,c
 13984   011830  0BF0               	andlw	240
 13985   011832  1011               	iorwf	Nrf24_setRetransmitDelay@value^(0+1280),w,c
 13986   011834  6E11               	movwf	Nrf24_setRetransmitDelay@value^(0+1280),c
 13987   011836                     
 13988                           ;cmirf.c: 358:  Nrf24_configRegister(0x04, value);
 13989   011836  C511  F506         	movff	Nrf24_setRetransmitDelay@value,Nrf24_configRegister@value
 13990   01183A  0E04               	movlw	4
 13991   01183C  ECD1  F08C         	call	_Nrf24_configRegister
 13992   011840  0012               	return		;funcret
 13993   011842                     __end_of_Nrf24_setRetransmitDelay:
 13994                           	callstack 0
 13995                           
 13996 ;; *************** function _Nrf24_SetSpeedDataRates *****************
 13997 ;; Defined at:
 13998 ;;		line 331 in file "cmirf.c"
 13999 ;; Parameters:    Size  Location     Type
 14000 ;;  dev             2   13[COMRAM] PTR struct .
 14001 ;;		 -> sender@nrf(3), 
 14002 ;;  val             1   15[COMRAM] unsigned char 
 14003 ;; Auto vars:     Size  Location     Type
 14004 ;;  value           1   16[COMRAM] unsigned char 
 14005 ;; Return value:  Size  Location     Type
 14006 ;;                  1    wreg      void 
 14007 ;; Registers used:
 14008 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14009 ;; Tracked objects:
 14010 ;;		On entry : 0/0
 14011 ;;		On exit  : 0/0
 14012 ;;		Unchanged: 0/0
 14013 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14014 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14015 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14017 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14018 ;;Total ram usage:        4 bytes
 14019 ;; Hardware stack levels used: 1
 14020 ;; Hardware stack levels required when called: 6
 14021 ;; This function calls:
 14022 ;;		_Nrf24_configRegister
 14023 ;;		_Nrf24_readRegister
 14024 ;; This function is called by:
 14025 ;;		_AdvancedSettings
 14026 ;; This function uses a non-reentrant model
 14027 ;;
 14028                           
 14029                           	psect	text40
 14030   0112BC                     __ptext40:
 14031                           	callstack 0
 14032   0112BC                     _Nrf24_SetSpeedDataRates:
 14033                           	callstack 118
 14034   0112BC                     
 14035                           ;cmirf.c: 331: void Nrf24_SetSpeedDataRates(NRF24_t * dev, uint8_t val);cmirf.c: 332: {;
      +                          cmirf.c: 333:  if (val > 2) return;
 14036   0112BC  0E02               	movlw	2
 14037   0112BE  6410               	cpfsgt	Nrf24_SetSpeedDataRates@val^(0+1280),c
 14038   0112C0  EF64  F089         	goto	u3161
 14039   0112C4  EF66  F089         	goto	u3160
 14040   0112C8                     u3161:
 14041   0112C8  EF68  F089         	goto	l3995
 14042   0112CC                     u3160:
 14043   0112CC  EF94  F089         	goto	l707
 14044   0112D0                     l3995:
 14045                           
 14046                           ;cmirf.c: 335:  uint8_t value;;cmirf.c: 336:  Nrf24_readRegister(0x06, &value, 1);
 14047   0112D0  0E11               	movlw	low Nrf24_SetSpeedDataRates@value
 14048   0112D2  6E0A               	movwf	Nrf24_readRegister@value^(0+1280),c
 14049   0112D4  0E05               	movlw	high Nrf24_SetSpeedDataRates@value
 14050   0112D6  6E0B               	movwf	(Nrf24_readRegister@value+1)^(0+1280),c
 14051   0112D8  0E01               	movlw	1
 14052   0112DA  6E0C               	movwf	Nrf24_readRegister@len^(0+1280),c
 14053   0112DC  0E06               	movlw	6
 14054   0112DE  ECC7  F08B         	call	_Nrf24_readRegister
 14055   0112E2                     
 14056                           ;cmirf.c: 337:  if(val == 2)
 14057   0112E2  0E02               	movlw	2
 14058   0112E4  1810               	xorwf	Nrf24_SetSpeedDataRates@val^(0+1280),w,c
 14059   0112E6  A4D8               	btfss	status,2,c
 14060   0112E8  EF78  F089         	goto	u3171
 14061   0112EC  EF7A  F089         	goto	u3170
 14062   0112F0                     u3171:
 14063   0112F0  EF87  F089         	goto	l4003
 14064   0112F4                     u3170:
 14065   0112F4                     
 14066                           ;cmirf.c: 338:  {;cmirf.c: 339:   value = value | 0x20;
 14067   0112F4  5011               	movf	Nrf24_SetSpeedDataRates@value^(0+1280),w,c
 14068   0112F6  0920               	iorlw	32
 14069   0112F8  6E11               	movwf	Nrf24_SetSpeedDataRates@value^(0+1280),c
 14070                           
 14071                           ;cmirf.c: 340:   value = value & 0xF7;
 14072   0112FA  5011               	movf	Nrf24_SetSpeedDataRates@value^(0+1280),w,c
 14073   0112FC  0BF7               	andlw	247
 14074   0112FE  6E11               	movwf	Nrf24_SetSpeedDataRates@value^(0+1280),c
 14075   011300                     
 14076                           ;cmirf.c: 341:      Nrf24_configRegister(0x06, value);
 14077   011300  C511  F506         	movff	Nrf24_SetSpeedDataRates@value,Nrf24_configRegister@value
 14078   011304  0E06               	movlw	6
 14079   011306  ECD1  F08C         	call	_Nrf24_configRegister
 14080                           
 14081                           ;cmirf.c: 342:  }
 14082   01130A  EF94  F089         	goto	l707
 14083   01130E                     l4003:
 14084                           
 14085                           ;cmirf.c: 344:  {;cmirf.c: 345:   value = value & 0xD7;
 14086   01130E  5011               	movf	Nrf24_SetSpeedDataRates@value^(0+1280),w,c
 14087   011310  0BD7               	andlw	215
 14088   011312  6E11               	movwf	Nrf24_SetSpeedDataRates@value^(0+1280),c
 14089                           
 14090                           ;cmirf.c: 346:   value = value | (val << 3);
 14091   011314  3810               	swapf	Nrf24_SetSpeedDataRates@val^(0+1280),w,c
 14092   011316  42E8               	rrncf	wreg,f,c
 14093   011318  0BF8               	andlw	248
 14094   01131A  1011               	iorwf	Nrf24_SetSpeedDataRates@value^(0+1280),w,c
 14095   01131C  6E11               	movwf	Nrf24_SetSpeedDataRates@value^(0+1280),c
 14096   01131E                     
 14097                           ;cmirf.c: 347:   Nrf24_configRegister(0x06, value);
 14098   01131E  C511  F506         	movff	Nrf24_SetSpeedDataRates@value,Nrf24_configRegister@value
 14099   011322  0E06               	movlw	6
 14100   011324  ECD1  F08C         	call	_Nrf24_configRegister
 14101   011328                     l707:
 14102   011328  0012               	return		;funcret
 14103   01132A                     __end_of_Nrf24_SetSpeedDataRates:
 14104                           	callstack 0
 14105                           
 14106 ;; *************** function _Nrf24_readRegister *****************
 14107 ;; Defined at:
 14108 ;;		line 195 in file "cmirf.c"
 14109 ;; Parameters:    Size  Location     Type
 14110 ;;  reg             1    wreg     unsigned char 
 14111 ;;  value           2    9[COMRAM] PTR unsigned char 
 14112 ;;		 -> Nrf24_getRetransmitDelay@value(1), Nrf24_getPALevel@level(1), Nrf24_getCRCLength@AA(1), Nrf24_getCRCLength@confi
      +g(1), 
 14113 ;;		 -> Nrf24_getDataRate@dr(1), Nrf24_print_byte_register@buffer(1), Nrf24_print_address_register@buffer(5), Nrf24_setR
      +etransmitDelay@value(1), 
 14114 ;;		 -> Nrf24_SetSpeedDataRates@value(1), Nrf24_SetOutputRF_PWR@value(1), Nrf24_getStatus@rv(1), Nrf24_rxFifoEmpty@fifoS
      +tatus(1), 
 14115 ;;		 -> Nrf24_addRADDR@value(1), Nrf24_setTADDR@buffer(5), Nrf24_setRADDR@buffer(5), 
 14116 ;;  len             1   11[COMRAM] unsigned char 
 14117 ;; Auto vars:     Size  Location     Type
 14118 ;;  reg             1   12[COMRAM] unsigned char 
 14119 ;; Return value:  Size  Location     Type
 14120 ;;                  1    wreg      void 
 14121 ;; Registers used:
 14122 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14123 ;; Tracked objects:
 14124 ;;		On entry : 0/0
 14125 ;;		On exit  : 0/0
 14126 ;;		Unchanged: 0/0
 14127 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14128 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14129 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14131 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14132 ;;Total ram usage:        4 bytes
 14133 ;; Hardware stack levels used: 1
 14134 ;; Hardware stack levels required when called: 5
 14135 ;; This function calls:
 14136 ;;		_SPI1_ByteExchange
 14137 ;;		_SPI_read_buff
 14138 ;; This function is called by:
 14139 ;;		_Nrf24_setTADDR
 14140 ;;		_Nrf24_getStatus
 14141 ;;		_Nrf24_SetSpeedDataRates
 14142 ;;		_Nrf24_setRetransmitDelay
 14143 ;;		_Nrf24_print_address_register
 14144 ;;		_Nrf24_print_byte_register
 14145 ;;		_Nrf24_getDataRate
 14146 ;;		_Nrf24_getCRCLength
 14147 ;;		_Nrf24_getPALevel
 14148 ;;		_Nrf24_getRetransmitDelay
 14149 ;;		_Nrf24_setRADDR
 14150 ;;		_Nrf24_addRADDR
 14151 ;;		_Nrf24_rxFifoEmpty
 14152 ;;		_Nrf24_SetOutputRF_PWR
 14153 ;; This function uses a non-reentrant model
 14154 ;;
 14155                           
 14156                           	psect	text41
 14157   01178E                     __ptext41:
 14158                           	callstack 0
 14159   01178E                     _Nrf24_readRegister:
 14160                           	callstack 119
 14161                           
 14162                           ;incstack = 0
 14163                           ;Nrf24_readRegister@reg stored from wreg
 14164   01178E  6E0D               	movwf	Nrf24_readRegister@reg^(0+1280),c
 14165   011790                     
 14166                           ;cmirf.c: 195: void Nrf24_readRegister(uint8_t reg, uint8_t * value, uint8_t len);cmirf.
      +                          c: 196: {;cmirf.c: 197:     if(len) {
 14167   011790  500C               	movf	Nrf24_readRegister@len^(0+1280),w,c
 14168   011792  B4D8               	btfsc	status,2,c
 14169   011794  EFCE  F08B         	goto	u3151
 14170   011798  EFD0  F08B         	goto	u3150
 14171   01179C                     u3151:
 14172   01179C  EFDE  F08B         	goto	l633
 14173   0117A0                     u3150:
 14174   0117A0  92C0               	bcf	192,1,c	;volatile
 14175   0117A2                     
 14176                           ;cmirf.c: 199:         SPI1_ByteExchange(0x00 | (0x1F & reg));
 14177   0117A2  500D               	movf	Nrf24_readRegister@reg^(0+1280),w,c
 14178   0117A4  0B1F               	andlw	31
 14179   0117A6  EC21  F08C         	call	_SPI1_ByteExchange
 14180   0117AA                     
 14181                           ;cmirf.c: 200:         SPI_read_buff(value, len);
 14182   0117AA  C50A  F506         	movff	Nrf24_readRegister@value,SPI_read_buff@buffer
 14183   0117AE  C50B  F507         	movff	Nrf24_readRegister@value+1,SPI_read_buff@buffer+1
 14184   0117B2  C50C  F508         	movff	Nrf24_readRegister@len,SPI_read_buff@bytes
 14185   0117B6  EC49  F08B         	call	_SPI_read_buff	;wreg free
 14186   0117BA  82C0               	bsf	192,1,c	;volatile
 14187   0117BC                     l633:
 14188   0117BC  0012               	return		;funcret
 14189   0117BE                     __end_of_Nrf24_readRegister:
 14190                           	callstack 0
 14191                           
 14192 ;; *************** function _SPI_read_buff *****************
 14193 ;; Defined at:
 14194 ;;		line 32 in file "cmirf.c"
 14195 ;; Parameters:    Size  Location     Type
 14196 ;;  buffer          2    5[COMRAM] PTR unsigned char 
 14197 ;;		 -> Nrf24_getRetransmitDelay@value(1), Nrf24_getPALevel@level(1), Nrf24_getCRCLength@AA(1), Nrf24_getCRCLength@confi
      +g(1), 
 14198 ;;		 -> Nrf24_getDataRate@dr(1), Nrf24_print_byte_register@buffer(1), Nrf24_print_address_register@buffer(5), Nrf24_setR
      +etransmitDelay@value(1), 
 14199 ;;		 -> Nrf24_SetSpeedDataRates@value(1), Nrf24_SetOutputRF_PWR@value(1), Nrf24_getStatus@rv(1), Nrf24_rxFifoEmpty@fifoS
      +tatus(1), 
 14200 ;;		 -> Nrf24_addRADDR@value(1), Nrf24_setTADDR@buffer(5), Nrf24_setRADDR@buffer(5), 
 14201 ;;  bytes           1    7[COMRAM] unsigned char 
 14202 ;; Auto vars:     Size  Location     Type
 14203 ;;  i               1    8[COMRAM] unsigned char 
 14204 ;; Return value:  Size  Location     Type
 14205 ;;                  1    wreg      void 
 14206 ;; Registers used:
 14207 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14208 ;; Tracked objects:
 14209 ;;		On entry : 0/0
 14210 ;;		On exit  : 0/0
 14211 ;;		Unchanged: 0/0
 14212 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14213 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14214 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14216 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14217 ;;Total ram usage:        4 bytes
 14218 ;; Hardware stack levels used: 1
 14219 ;; Hardware stack levels required when called: 4
 14220 ;; This function calls:
 14221 ;;		_SPI1_ByteExchange
 14222 ;; This function is called by:
 14223 ;;		_Nrf24_readRegister
 14224 ;;		_Nrf24_getData
 14225 ;; This function uses a non-reentrant model
 14226 ;;
 14227                           
 14228                           	psect	text42
 14229   011692                     __ptext42:
 14230                           	callstack 0
 14231   011692                     _SPI_read_buff:
 14232                           	callstack 119
 14233   011692  92C0               	bcf	192,1,c	;volatile
 14234   011694                     
 14235                           ;cmirf.c: 34:     unsigned char i;;cmirf.c: 35:     for (i = 0; i < bytes; i++) {
 14236   011694  6A09               	clrf	SPI_read_buff@i^(0+1280),c
 14237   011696  EF58  F08B         	goto	l3951
 14238   01169A                     l3945:
 14239                           
 14240                           ;cmirf.c: 36:         *buffer = SPI1_ByteExchange(0xFF);
 14241   01169A  0EFF               	movlw	255
 14242   01169C  EC21  F08C         	call	_SPI1_ByteExchange
 14243   0116A0  C506  F4D9         	movff	SPI_read_buff@buffer,fsr2l
 14244   0116A4  C507  F4DA         	movff	SPI_read_buff@buffer+1,fsr2h
 14245   0116A8  6EDF               	movwf	indf2,c
 14246   0116AA                     
 14247                           ;cmirf.c: 37:         buffer++;
 14248   0116AA  4A06               	infsnz	SPI_read_buff@buffer^(0+1280),f,c
 14249   0116AC  2A07               	incf	(SPI_read_buff@buffer+1)^(0+1280),f,c
 14250   0116AE                     
 14251                           ;cmirf.c: 38:     }
 14252   0116AE  2A09               	incf	SPI_read_buff@i^(0+1280),f,c
 14253   0116B0                     l3951:
 14254   0116B0  5008               	movf	SPI_read_buff@bytes^(0+1280),w,c
 14255   0116B2  5C09               	subwf	SPI_read_buff@i^(0+1280),w,c
 14256   0116B4  A0D8               	btfss	status,0,c
 14257   0116B6  EF5F  F08B         	goto	u3111
 14258   0116BA  EF61  F08B         	goto	u3110
 14259   0116BE                     u3111:
 14260   0116BE  EF4D  F08B         	goto	l3945
 14261   0116C2                     u3110:
 14262   0116C2  82C0               	bsf	192,1,c	;volatile
 14263   0116C4  0012               	return		;funcret
 14264   0116C6                     __end_of_SPI_read_buff:
 14265                           	callstack 0
 14266                           
 14267 ;; *************** function _Nrf24_configRegister *****************
 14268 ;; Defined at:
 14269 ;;		line 186 in file "cmirf.c"
 14270 ;; Parameters:    Size  Location     Type
 14271 ;;  reg             1    wreg     unsigned char 
 14272 ;;  value           1    5[COMRAM] unsigned char 
 14273 ;; Auto vars:     Size  Location     Type
 14274 ;;  reg             1    6[COMRAM] unsigned char 
 14275 ;; Return value:  Size  Location     Type
 14276 ;;                  1    wreg      void 
 14277 ;; Registers used:
 14278 ;;		wreg, status,2, status,0, cstack
 14279 ;; Tracked objects:
 14280 ;;		On entry : 0/0
 14281 ;;		On exit  : 0/0
 14282 ;;		Unchanged: 0/0
 14283 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14284 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14285 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14287 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14288 ;;Total ram usage:        2 bytes
 14289 ;; Hardware stack levels used: 1
 14290 ;; Hardware stack levels required when called: 4
 14291 ;; This function calls:
 14292 ;;		_SPI1_ByteExchange
 14293 ;; This function is called by:
 14294 ;;		_Nrf24_config
 14295 ;;		_Nrf24_powerUpRx
 14296 ;;		_Nrf24_powerUpTx
 14297 ;;		_Nrf24_SetSpeedDataRates
 14298 ;;		_Nrf24_setRetransmitDelay
 14299 ;;		_Nrf24_addRADDR
 14300 ;;		_Nrf24_getData
 14301 ;;		_Nrf24_powerDown
 14302 ;;		_Nrf24_SetOutputRF_PWR
 14303 ;; This function uses a non-reentrant model
 14304 ;;
 14305                           
 14306                           	psect	text43
 14307   0119A2                     __ptext43:
 14308                           	callstack 0
 14309   0119A2                     _Nrf24_configRegister:
 14310                           	callstack 119
 14311                           
 14312                           ;incstack = 0
 14313                           ;Nrf24_configRegister@reg stored from wreg
 14314   0119A2  6E07               	movwf	Nrf24_configRegister@reg^(0+1280),c
 14315   0119A4  92C0               	bcf	192,1,c	;volatile
 14316   0119A6                     
 14317                           ;cmirf.c: 189:  SPI1_ByteExchange(0x20 | (0x1F & reg));
 14318   0119A6  5007               	movf	Nrf24_configRegister@reg^(0+1280),w,c
 14319   0119A8  0B1F               	andlw	31
 14320   0119AA  0920               	iorlw	32
 14321   0119AC  EC21  F08C         	call	_SPI1_ByteExchange
 14322                           
 14323                           ;cmirf.c: 190:  SPI1_ByteExchange(value);
 14324   0119B0  5006               	movf	Nrf24_configRegister@value^(0+1280),w,c
 14325   0119B2  EC21  F08C         	call	_SPI1_ByteExchange
 14326   0119B6  82C0               	bsf	192,1,c	;volatile
 14327   0119B8  0012               	return		;funcret
 14328   0119BA                     __end_of_Nrf24_configRegister:
 14329                           	callstack 0
 14330                           
 14331 ;; *************** function _SPI1_ByteExchange *****************
 14332 ;; Defined at:
 14333 ;;		line 210 in file "mcc_generated_files/spi/src/spi1.c"
 14334 ;; Parameters:    Size  Location     Type
 14335 ;;  byteData        1    wreg     unsigned char 
 14336 ;; Auto vars:     Size  Location     Type
 14337 ;;  byteData        1    3[COMRAM] unsigned char 
 14338 ;;  returnValue     1    4[COMRAM] unsigned char 
 14339 ;; Return value:  Size  Location     Type
 14340 ;;                  1    wreg      unsigned char 
 14341 ;; Registers used:
 14342 ;;		wreg, status,2, status,0
 14343 ;; Tracked objects:
 14344 ;;		On entry : 0/0
 14345 ;;		On exit  : 0/0
 14346 ;;		Unchanged: 0/0
 14347 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14349 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14351 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14352 ;;Total ram usage:        2 bytes
 14353 ;; Hardware stack levels used: 1
 14354 ;; Hardware stack levels required when called: 3
 14355 ;; This function calls:
 14356 ;;		Nothing
 14357 ;; This function is called by:
 14358 ;;		_SPI_read_buff
 14359 ;;		_SPI_write_buff
 14360 ;;		_Nrf24_configRegister
 14361 ;;		_Nrf24_readRegister
 14362 ;;		_Nrf24_writeRegister
 14363 ;;		_Nrf24_send
 14364 ;;		_Nrf24_flushRx
 14365 ;;		_Nrf24_getData
 14366 ;; This function uses a non-reentrant model
 14367 ;;
 14368                           
 14369                           	psect	text44
 14370   011842                     __ptext44:
 14371                           	callstack 0
 14372   011842                     _SPI1_ByteExchange:
 14373                           	callstack 119
 14374                           
 14375                           ;incstack = 0
 14376                           ;SPI1_ByteExchange@byteData stored from wreg
 14377   011842  6E04               	movwf	SPI1_ByteExchange@byteData^(0+1280),c
 14378   011844                     
 14379                           ;mcc_generated_files/spi/src/spi1.c: 214:  SPI1STATUSbits.CLRBF = 1U;
 14380   011844  0100               	movlb	0	; () banked
 14381   011846  8587               	bsf	135,2,b	;volatile
 14382   011848                     
 14383                           ; BSR set to: 0
 14384                           ;mcc_generated_files/spi/src/spi1.c: 217:  SPI1CON2 = SPI1CON2 | 0x1 | 0x2;
 14385   011848  5186               	movf	134,w,b	;volatile
 14386   01184A  0903               	iorlw	3
 14387   01184C  6F86               	movwf	134,b	;volatile
 14388   01184E                     
 14389                           ; BSR set to: 0
 14390                           ;mcc_generated_files/spi/src/spi1.c: 220:  SPI1TCNTH = 0U;
 14391   01184E  6B83               	clrf	131,b	;volatile
 14392   011850                     
 14393                           ; BSR set to: 0
 14394                           ;mcc_generated_files/spi/src/spi1.c: 221:  SPI1TCNTL = 1U;
 14395   011850  0E01               	movlw	1
 14396   011852  6F82               	movwf	130,b	;volatile
 14397   011854                     
 14398                           ; BSR set to: 0
 14399                           ;mcc_generated_files/spi/src/spi1.c: 223:  SPI1TXB = byteData;
 14400   011854  C504  F081         	movff	SPI1_ByteExchange@byteData,129	;volatile
 14401   011858                     l102:
 14402                           
 14403                           ;mcc_generated_files/spi/src/spi1.c: 225:  while(!PIR3bits.SPI1RXIF)
 14404   011858  A0B1               	btfss	177,0,c	;volatile
 14405   01185A  EF31  F08C         	goto	u2991
 14406   01185E  EF33  F08C         	goto	u2990
 14407   011862                     u2991:
 14408   011862  EF2C  F08C         	goto	l102
 14409   011866                     u2990:
 14410   011866                     
 14411                           ;mcc_generated_files/spi/src/spi1.c: 229:  returnValue = SPI1RXB;
 14412   011866  C080 F505          	movff	128,SPI1_ByteExchange@returnValue	;volatile
 14413   01186A                     
 14414                           ;mcc_generated_files/spi/src/spi1.c: 230:  return returnValue;
 14415   01186A  5005               	movf	SPI1_ByteExchange@returnValue^(0+1280),w,c
 14416   01186C  0012               	return		;funcret
 14417   01186E                     __end_of_SPI1_ByteExchange:
 14418                           	callstack 0
 14419                           
 14420 ;; *************** function _TMR0_Start *****************
 14421 ;; Defined at:
 14422 ;;		line 78 in file "mcc_generated_files/timer/src/tmr0.c"
 14423 ;; Parameters:    Size  Location     Type
 14424 ;;		None
 14425 ;; Auto vars:     Size  Location     Type
 14426 ;;		None
 14427 ;; Return value:  Size  Location     Type
 14428 ;;                  1    wreg      void 
 14429 ;; Registers used:
 14430 ;;		None
 14431 ;; Tracked objects:
 14432 ;;		On entry : 0/0
 14433 ;;		On exit  : 0/0
 14434 ;;		Unchanged: 0/0
 14435 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14440 ;;Total ram usage:        0 bytes
 14441 ;; Hardware stack levels used: 1
 14442 ;; Hardware stack levels required when called: 3
 14443 ;; This function calls:
 14444 ;;		Nothing
 14445 ;; This function is called by:
 14446 ;;		_main
 14447 ;; This function uses a non-reentrant model
 14448 ;;
 14449                           
 14450                           	psect	text45
 14451   011A56                     __ptext45:
 14452                           	callstack 0
 14453   011A56                     _TMR0_Start:
 14454                           	callstack 123
 14455   011A56                     
 14456                           ;mcc_generated_files/timer/src/tmr0.c: 80:     T0CON0bits.T0EN = 1;
 14457   011A56  0103               	movlb	3	; () banked
 14458   011A58  8F1A               	bsf	26,7,b	;volatile
 14459   011A5A                     
 14460                           ; BSR set to: 3
 14461   011A5A  0012               	return		;funcret
 14462   011A5C                     __end_of_TMR0_Start:
 14463                           	callstack 0
 14464                           
 14465 ;; *************** function _SYSTEM_Initialize *****************
 14466 ;; Defined at:
 14467 ;;		line 38 in file "mcc_generated_files/system/src/system.c"
 14468 ;; Parameters:    Size  Location     Type
 14469 ;;		None
 14470 ;; Auto vars:     Size  Location     Type
 14471 ;;		None
 14472 ;; Return value:  Size  Location     Type
 14473 ;;                  1    wreg      void 
 14474 ;; Registers used:
 14475 ;;		wreg, status,2, status,0, cstack
 14476 ;; Tracked objects:
 14477 ;;		On entry : 0/0
 14478 ;;		On exit  : 0/0
 14479 ;;		Unchanged: 0/0
 14480 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14485 ;;Total ram usage:        0 bytes
 14486 ;; Hardware stack levels used: 1
 14487 ;; Hardware stack levels required when called: 5
 14488 ;; This function calls:
 14489 ;;		_CLOCK_Initialize
 14490 ;;		_INTERRUPT_Initialize
 14491 ;;		_PIN_MANAGER_Initialize
 14492 ;;		_SPI1_Initialize
 14493 ;;		_TMR0_Initialize
 14494 ;; This function is called by:
 14495 ;;		_main
 14496 ;; This function uses a non-reentrant model
 14497 ;;
 14498                           
 14499                           	psect	text46
 14500   0119E8                     __ptext46:
 14501                           	callstack 0
 14502   0119E8                     _SYSTEM_Initialize:
 14503                           	callstack 121
 14504   0119E8                     
 14505                           ;mcc_generated_files/system/src/system.c: 40:     CLOCK_Initialize();
 14506   0119E8  ECFF  F08C         	call	_CLOCK_Initialize	;wreg free
 14507                           
 14508                           ;mcc_generated_files/system/src/system.c: 41:     PIN_MANAGER_Initialize();
 14509   0119EC  EC50  F088         	call	_PIN_MANAGER_Initialize	;wreg free
 14510                           
 14511                           ;mcc_generated_files/system/src/system.c: 42:     SPI1_Initialize();
 14512   0119F0  ECDD  F08C         	call	_SPI1_Initialize	;wreg free
 14513   0119F4                     
 14514                           ;mcc_generated_files/system/src/system.c: 43:     TMR0_Initialize();
 14515   0119F4  EC37  F08C         	call	_TMR0_Initialize	;wreg free
 14516   0119F8                     
 14517                           ;mcc_generated_files/system/src/system.c: 44:     INTERRUPT_Initialize();
 14518   0119F8  ECF3  F08A         	call	_INTERRUPT_Initialize	;wreg free
 14519   0119FC  0012               	return		;funcret
 14520   0119FE                     __end_of_SYSTEM_Initialize:
 14521                           	callstack 0
 14522                           
 14523 ;; *************** function _TMR0_Initialize *****************
 14524 ;; Defined at:
 14525 ;;		line 53 in file "mcc_generated_files/timer/src/tmr0.c"
 14526 ;; Parameters:    Size  Location     Type
 14527 ;;		None
 14528 ;; Auto vars:     Size  Location     Type
 14529 ;;		None
 14530 ;; Return value:  Size  Location     Type
 14531 ;;                  1    wreg      void 
 14532 ;; Registers used:
 14533 ;;		wreg, status,2, status,0, cstack
 14534 ;; Tracked objects:
 14535 ;;		On entry : 0/0
 14536 ;;		On exit  : 0/0
 14537 ;;		Unchanged: 0/0
 14538 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14543 ;;Total ram usage:        0 bytes
 14544 ;; Hardware stack levels used: 1
 14545 ;; Hardware stack levels required when called: 4
 14546 ;; This function calls:
 14547 ;;		_TMR0_OverflowCallbackRegister
 14548 ;; This function is called by:
 14549 ;;		_SYSTEM_Initialize
 14550 ;; This function uses a non-reentrant model
 14551 ;;
 14552                           
 14553                           	psect	text47
 14554   01186E                     __ptext47:
 14555                           	callstack 0
 14556   01186E                     _TMR0_Initialize:
 14557                           	callstack 121
 14558   01186E                     
 14559                           ;mcc_generated_files/timer/src/tmr0.c: 56:     TMR0H = 0xC2;
 14560   01186E  0EC2               	movlw	194
 14561   011870  0103               	movlb	3	; () banked
 14562   011872  6F19               	movwf	25,b	;volatile
 14563   011874                     
 14564                           ; BSR set to: 3
 14565                           ;mcc_generated_files/timer/src/tmr0.c: 59:     TMR0L = 0x0;
 14566   011874  6B18               	clrf	24,b	;volatile
 14567                           
 14568                           ;mcc_generated_files/timer/src/tmr0.c: 62:     T0CON1 = 0x7F;
 14569   011876  0E7F               	movlw	127
 14570   011878  6F1B               	movwf	27,b	;volatile
 14571   01187A                     
 14572                           ; BSR set to: 3
 14573                           ;mcc_generated_files/timer/src/tmr0.c: 66:     TMR0_OverflowCallbackRegister(TMR0_Defaul
      +                          tOverflowCallback);
 14574   01187A  0E5E               	movlw	low _TMR0_DefaultOverflowCallback
 14575   01187C  6E04               	movwf	TMR0_OverflowCallbackRegister@CallbackHandler^(0+1280),c
 14576   01187E  0E1A               	movlw	high _TMR0_DefaultOverflowCallback
 14577   011880  6E05               	movwf	(TMR0_OverflowCallbackRegister@CallbackHandler+1)^(0+1280),c
 14578   011882  0E01               	movlw	low (_TMR0_DefaultOverflowCallback shr (0+16))
 14579   011884  6E06               	movwf	(TMR0_OverflowCallbackRegister@CallbackHandler+2)^(0+1280),c
 14580   011886  EC09  F08D         	call	_TMR0_OverflowCallbackRegister	;wreg free
 14581   01188A                     
 14582                           ;mcc_generated_files/timer/src/tmr0.c: 69:     PIR3bits.TMR0IF = 0;
 14583   01188A  9EB1               	bcf	177,7,c	;volatile
 14584   01188C                     
 14585                           ;mcc_generated_files/timer/src/tmr0.c: 72:     PIE3bits.TMR0IE = 1;
 14586   01188C  8EA1               	bsf	161,7,c	;volatile
 14587   01188E                     
 14588                           ;mcc_generated_files/timer/src/tmr0.c: 75:     T0CON0 = 0x89;
 14589   01188E  0E89               	movlw	137
 14590   011890  0103               	movlb	3	; () banked
 14591   011892  6F1A               	movwf	26,b	;volatile
 14592   011894                     
 14593                           ; BSR set to: 3
 14594   011894  0012               	return		;funcret
 14595   011896                     __end_of_TMR0_Initialize:
 14596                           	callstack 0
 14597                           
 14598 ;; *************** function _TMR0_OverflowCallbackRegister *****************
 14599 ;; Defined at:
 14600 ;;		line 122 in file "mcc_generated_files/timer/src/tmr0.c"
 14601 ;; Parameters:    Size  Location     Type
 14602 ;;  CallbackHand    3    3[COMRAM] PTR FTN()void 
 14603 ;;		 -> led_toggle(1), TMR0_DefaultOverflowCallback(1), 
 14604 ;; Auto vars:     Size  Location     Type
 14605 ;;		None
 14606 ;; Return value:  Size  Location     Type
 14607 ;;                  1    wreg      void 
 14608 ;; Registers used:
 14609 ;;		wreg, status,2, status,0
 14610 ;; Tracked objects:
 14611 ;;		On entry : 0/0
 14612 ;;		On exit  : 0/0
 14613 ;;		Unchanged: 0/0
 14614 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14615 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14618 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14619 ;;Total ram usage:        3 bytes
 14620 ;; Hardware stack levels used: 1
 14621 ;; Hardware stack levels required when called: 3
 14622 ;; This function calls:
 14623 ;;		Nothing
 14624 ;; This function is called by:
 14625 ;;		_TMR0_Initialize
 14626 ;;		_main
 14627 ;; This function uses a non-reentrant model
 14628 ;;
 14629                           
 14630                           	psect	text48
 14631   011A12                     __ptext48:
 14632                           	callstack 0
 14633   011A12                     _TMR0_OverflowCallbackRegister:
 14634                           	callstack 123
 14635   011A12                     
 14636                           ;mcc_generated_files/timer/src/tmr0.c: 122: void TMR0_OverflowCallbackRegister(void (* C
      +                          allbackHandler)(void));mcc_generated_files/timer/src/tmr0.c: 123: {;mcc_generated_files/
      +                          timer/src/tmr0.c: 124:     TMR0_OverflowCallback = CallbackHandler;
 14637   011A12  C504  F5EF         	movff	TMR0_OverflowCallbackRegister@CallbackHandler,_TMR0_OverflowCallback
 14638   011A16  C505  F5F0         	movff	TMR0_OverflowCallbackRegister@CallbackHandler+1,_TMR0_OverflowCallback+1
 14639   011A1A  C506  F5F1         	movff	TMR0_OverflowCallbackRegister@CallbackHandler+2,_TMR0_OverflowCallback+2
 14640   011A1E  0012               	return		;funcret
 14641   011A20                     __end_of_TMR0_OverflowCallbackRegister:
 14642                           	callstack 0
 14643                           
 14644 ;; *************** function _SPI1_Initialize *****************
 14645 ;; Defined at:
 14646 ;;		line 70 in file "mcc_generated_files/spi/src/spi1.c"
 14647 ;; Parameters:    Size  Location     Type
 14648 ;;		None
 14649 ;; Auto vars:     Size  Location     Type
 14650 ;;		None
 14651 ;; Return value:  Size  Location     Type
 14652 ;;                  1    wreg      void 
 14653 ;; Registers used:
 14654 ;;		wreg, status,2
 14655 ;; Tracked objects:
 14656 ;;		On entry : 0/0
 14657 ;;		On exit  : 0/0
 14658 ;;		Unchanged: 0/0
 14659 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14664 ;;Total ram usage:        0 bytes
 14665 ;; Hardware stack levels used: 1
 14666 ;; Hardware stack levels required when called: 3
 14667 ;; This function calls:
 14668 ;;		Nothing
 14669 ;; This function is called by:
 14670 ;;		_SYSTEM_Initialize
 14671 ;; This function uses a non-reentrant model
 14672 ;;
 14673                           
 14674                           	psect	text49
 14675   0119BA                     __ptext49:
 14676                           	callstack 0
 14677   0119BA                     _SPI1_Initialize:
 14678                           	callstack 122
 14679   0119BA                     
 14680                           ;mcc_generated_files/spi/src/spi1.c: 73:     PIE3bits.SPI1IE = 0U;
 14681   0119BA  94A1               	bcf	161,2,c	;volatile
 14682                           
 14683                           ;mcc_generated_files/spi/src/spi1.c: 74:     PIE3bits.SPI1TXIE = 0U;
 14684   0119BC  92A1               	bcf	161,1,c	;volatile
 14685                           
 14686                           ;mcc_generated_files/spi/src/spi1.c: 75:     PIE3bits.SPI1RXIE = 0U;
 14687   0119BE  90A1               	bcf	161,0,c	;volatile
 14688                           
 14689                           ;mcc_generated_files/spi/src/spi1.c: 78:     SPI1CON0 = 0x0;
 14690   0119C0  0100               	movlb	0	; () banked
 14691   0119C2  6B84               	clrf	132,b	;volatile
 14692   0119C4                     
 14693                           ; BSR set to: 0
 14694                           ;mcc_generated_files/spi/src/spi1.c: 79:     SPI1CON1 = 0x4;
 14695   0119C4  0E04               	movlw	4
 14696   0119C6  6F85               	movwf	133,b	;volatile
 14697   0119C8                     
 14698                           ; BSR set to: 0
 14699                           ;mcc_generated_files/spi/src/spi1.c: 80:     SPI1CON2 = 0x0;
 14700   0119C8  6B86               	clrf	134,b	;volatile
 14701   0119CA                     
 14702                           ; BSR set to: 0
 14703                           ;mcc_generated_files/spi/src/spi1.c: 81:     SPI1BAUD = 0x0;
 14704   0119CA  6B89               	clrf	137,b	;volatile
 14705   0119CC                     
 14706                           ; BSR set to: 0
 14707                           ;mcc_generated_files/spi/src/spi1.c: 82:     SPI1CLK = 0x0;
 14708   0119CC  6B8C               	clrf	140,b	;volatile
 14709   0119CE                     
 14710                           ; BSR set to: 0
 14711                           ;mcc_generated_files/spi/src/spi1.c: 83:  SPI1STATUSbits.CLRBF = 1U;
 14712   0119CE  8587               	bsf	135,2,b	;volatile
 14713   0119D0                     
 14714                           ; BSR set to: 0
 14715   0119D0  0012               	return		;funcret
 14716   0119D2                     __end_of_SPI1_Initialize:
 14717                           	callstack 0
 14718                           
 14719 ;; *************** function _PIN_MANAGER_Initialize *****************
 14720 ;; Defined at:
 14721 ;;		line 38 in file "mcc_generated_files/system/src/pins.c"
 14722 ;; Parameters:    Size  Location     Type
 14723 ;;		None
 14724 ;; Auto vars:     Size  Location     Type
 14725 ;;		None
 14726 ;; Return value:  Size  Location     Type
 14727 ;;                  1    wreg      void 
 14728 ;; Registers used:
 14729 ;;		wreg, status,2
 14730 ;; Tracked objects:
 14731 ;;		On entry : 0/0
 14732 ;;		On exit  : 0/0
 14733 ;;		Unchanged: 0/0
 14734 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14739 ;;Total ram usage:        0 bytes
 14740 ;; Hardware stack levels used: 1
 14741 ;; Hardware stack levels required when called: 3
 14742 ;; This function calls:
 14743 ;;		Nothing
 14744 ;; This function is called by:
 14745 ;;		_SYSTEM_Initialize
 14746 ;; This function uses a non-reentrant model
 14747 ;;
 14748                           
 14749                           	psect	text50
 14750   0110A0                     __ptext50:
 14751                           	callstack 0
 14752   0110A0                     _PIN_MANAGER_Initialize:
 14753                           	callstack 122
 14754   0110A0                     
 14755                           ;mcc_generated_files/system/src/pins.c: 43:     LATA = 0x0;
 14756   0110A0  6ABE               	clrf	190,c	;volatile
 14757                           
 14758                           ;mcc_generated_files/system/src/pins.c: 44:     LATB = 0x0;
 14759   0110A2  6ABF               	clrf	191,c	;volatile
 14760                           
 14761                           ;mcc_generated_files/system/src/pins.c: 45:     LATC = 0x0;
 14762   0110A4  6AC0               	clrf	192,c	;volatile
 14763                           
 14764                           ;mcc_generated_files/system/src/pins.c: 46:     LATD = 0x0;
 14765   0110A6  6AC1               	clrf	193,c	;volatile
 14766                           
 14767                           ;mcc_generated_files/system/src/pins.c: 47:     LATE = 0x0;
 14768   0110A8  6AC2               	clrf	194,c	;volatile
 14769                           
 14770                           ;mcc_generated_files/system/src/pins.c: 48:     LATF = 0x0;
 14771   0110AA  6AC3               	clrf	195,c	;volatile
 14772                           
 14773                           ;mcc_generated_files/system/src/pins.c: 52:     ODCONA = 0x0;
 14774   0110AC  0104               	movlb	4	; () banked
 14775   0110AE  6B02               	clrf	2,b	;volatile
 14776                           
 14777                           ;mcc_generated_files/system/src/pins.c: 53:     ODCONB = 0x0;
 14778   0110B0  6B0A               	clrf	10,b	;volatile
 14779                           
 14780                           ;mcc_generated_files/system/src/pins.c: 54:     ODCONC = 0x0;
 14781   0110B2  6B12               	clrf	18,b	;volatile
 14782                           
 14783                           ;mcc_generated_files/system/src/pins.c: 55:     ODCOND = 0x0;
 14784   0110B4  6B1A               	clrf	26,b	;volatile
 14785                           
 14786                           ;mcc_generated_files/system/src/pins.c: 56:     ODCONE = 0x0;
 14787   0110B6  6B22               	clrf	34,b	;volatile
 14788                           
 14789                           ;mcc_generated_files/system/src/pins.c: 57:     ODCONF = 0x0;
 14790   0110B8  6B2A               	clrf	42,b	;volatile
 14791                           
 14792                           ;mcc_generated_files/system/src/pins.c: 62:     TRISA = 0xFF;
 14793   0110BA  68C6               	setf	198,c	;volatile
 14794                           
 14795                           ;mcc_generated_files/system/src/pins.c: 63:     TRISB = 0xFF;
 14796   0110BC  68C7               	setf	199,c	;volatile
 14797   0110BE                     
 14798                           ; BSR set to: 4
 14799                           ;mcc_generated_files/system/src/pins.c: 64:     TRISC = 0xE9;
 14800   0110BE  0EE9               	movlw	233
 14801   0110C0  6EC8               	movwf	200,c	;volatile
 14802   0110C2                     
 14803                           ; BSR set to: 4
 14804                           ;mcc_generated_files/system/src/pins.c: 65:     TRISD = 0xFF;
 14805   0110C2  68C9               	setf	201,c	;volatile
 14806                           
 14807                           ;mcc_generated_files/system/src/pins.c: 66:     TRISE = 0xF;
 14808   0110C4  0E0F               	movlw	15
 14809   0110C6  6ECA               	movwf	202,c	;volatile
 14810                           
 14811                           ;mcc_generated_files/system/src/pins.c: 67:     TRISF = 0xF7;
 14812   0110C8  0EF7               	movlw	247
 14813   0110CA  6ECB               	movwf	203,c	;volatile
 14814   0110CC                     
 14815                           ; BSR set to: 4
 14816                           ;mcc_generated_files/system/src/pins.c: 72:     ANSELA = 0xFF;
 14817   0110CC  6900               	setf	0,b	;volatile
 14818   0110CE                     
 14819                           ; BSR set to: 4
 14820                           ;mcc_generated_files/system/src/pins.c: 73:     ANSELB = 0xFF;
 14821   0110CE  6908               	setf	8,b	;volatile
 14822                           
 14823                           ;mcc_generated_files/system/src/pins.c: 74:     ANSELC = 0x89;
 14824   0110D0  0E89               	movlw	137
 14825   0110D2  6F10               	movwf	16,b	;volatile
 14826   0110D4                     
 14827                           ; BSR set to: 4
 14828                           ;mcc_generated_files/system/src/pins.c: 75:     ANSELD = 0xFF;
 14829   0110D4  6918               	setf	24,b	;volatile
 14830                           
 14831                           ;mcc_generated_files/system/src/pins.c: 76:     ANSELE = 0x7;
 14832   0110D6  0E07               	movlw	7
 14833   0110D8  6F20               	movwf	32,b	;volatile
 14834                           
 14835                           ;mcc_generated_files/system/src/pins.c: 77:     ANSELF = 0xF7;
 14836   0110DA  0EF7               	movlw	247
 14837   0110DC  6F28               	movwf	40,b	;volatile
 14838   0110DE                     
 14839                           ; BSR set to: 4
 14840                           ;mcc_generated_files/system/src/pins.c: 82:     WPUA = 0x0;
 14841   0110DE  6B01               	clrf	1,b	;volatile
 14842   0110E0                     
 14843                           ; BSR set to: 4
 14844                           ;mcc_generated_files/system/src/pins.c: 83:     WPUB = 0x0;
 14845   0110E0  6B09               	clrf	9,b	;volatile
 14846   0110E2                     
 14847                           ; BSR set to: 4
 14848                           ;mcc_generated_files/system/src/pins.c: 84:     WPUC = 0x0;
 14849   0110E2  6B11               	clrf	17,b	;volatile
 14850   0110E4                     
 14851                           ; BSR set to: 4
 14852                           ;mcc_generated_files/system/src/pins.c: 85:     WPUD = 0x0;
 14853   0110E4  6B19               	clrf	25,b	;volatile
 14854   0110E6                     
 14855                           ; BSR set to: 4
 14856                           ;mcc_generated_files/system/src/pins.c: 86:     WPUE = 0x0;
 14857   0110E6  6B21               	clrf	33,b	;volatile
 14858   0110E8                     
 14859                           ; BSR set to: 4
 14860                           ;mcc_generated_files/system/src/pins.c: 87:     WPUF = 0x0;
 14861   0110E8  6B29               	clrf	41,b	;volatile
 14862   0110EA                     
 14863                           ; BSR set to: 4
 14864                           ;mcc_generated_files/system/src/pins.c: 93:     SLRCONA = 0xFF;
 14865   0110EA  6903               	setf	3,b	;volatile
 14866   0110EC                     
 14867                           ; BSR set to: 4
 14868                           ;mcc_generated_files/system/src/pins.c: 94:     SLRCONB = 0xFF;
 14869   0110EC  690B               	setf	11,b	;volatile
 14870   0110EE                     
 14871                           ; BSR set to: 4
 14872                           ;mcc_generated_files/system/src/pins.c: 95:     SLRCONC = 0xFF;
 14873   0110EE  6913               	setf	19,b	;volatile
 14874   0110F0                     
 14875                           ; BSR set to: 4
 14876                           ;mcc_generated_files/system/src/pins.c: 96:     SLRCOND = 0xFF;
 14877   0110F0  691B               	setf	27,b	;volatile
 14878                           
 14879                           ;mcc_generated_files/system/src/pins.c: 97:     SLRCONE = 0x7;
 14880   0110F2  0E07               	movlw	7
 14881   0110F4  6F23               	movwf	35,b	;volatile
 14882   0110F6                     
 14883                           ; BSR set to: 4
 14884                           ;mcc_generated_files/system/src/pins.c: 98:     SLRCONF = 0xFF;
 14885   0110F6  692B               	setf	43,b	;volatile
 14886   0110F8                     
 14887                           ; BSR set to: 4
 14888                           ;mcc_generated_files/system/src/pins.c: 103:     INLVLA = 0xFF;
 14889   0110F8  6904               	setf	4,b	;volatile
 14890   0110FA                     
 14891                           ; BSR set to: 4
 14892                           ;mcc_generated_files/system/src/pins.c: 104:     INLVLB = 0xFF;
 14893   0110FA  690C               	setf	12,b	;volatile
 14894   0110FC                     
 14895                           ; BSR set to: 4
 14896                           ;mcc_generated_files/system/src/pins.c: 105:     INLVLC = 0xFF;
 14897   0110FC  6914               	setf	20,b	;volatile
 14898   0110FE                     
 14899                           ; BSR set to: 4
 14900                           ;mcc_generated_files/system/src/pins.c: 106:     INLVLD = 0xFF;
 14901   0110FE  691C               	setf	28,b	;volatile
 14902                           
 14903                           ;mcc_generated_files/system/src/pins.c: 107:     INLVLE = 0xF;
 14904   011100  0E0F               	movlw	15
 14905   011102  6F24               	movwf	36,b	;volatile
 14906   011104                     
 14907                           ; BSR set to: 4
 14908                           ;mcc_generated_files/system/src/pins.c: 108:     INLVLF = 0xFF;
 14909   011104  692C               	setf	44,b	;volatile
 14910   011106                     
 14911                           ; BSR set to: 4
 14912                           ;mcc_generated_files/system/src/pins.c: 113:     RB1I2C = 0x0;
 14913   011106  0102               	movlb	2	; () banked
 14914   011108  6B89               	clrf	137,b	;volatile
 14915   01110A                     
 14916                           ; BSR set to: 2
 14917                           ;mcc_generated_files/system/src/pins.c: 114:     RB2I2C = 0x0;
 14918   01110A  6B88               	clrf	136,b	;volatile
 14919   01110C                     
 14920                           ; BSR set to: 2
 14921                           ;mcc_generated_files/system/src/pins.c: 115:     RC3I2C = 0x0;
 14922   01110C  6B87               	clrf	135,b	;volatile
 14923   01110E                     
 14924                           ; BSR set to: 2
 14925                           ;mcc_generated_files/system/src/pins.c: 116:     RC4I2C = 0x0;
 14926   01110E  6B86               	clrf	134,b	;volatile
 14927                           
 14928                           ;mcc_generated_files/system/src/pins.c: 120:     SPI1SDIPPS = 0x15;
 14929   011110  0E15               	movlw	21
 14930   011112  6F6B               	movwf	107,b	;volatile
 14931                           
 14932                           ;mcc_generated_files/system/src/pins.c: 121:     RC4PPS = 0x32;
 14933   011114  0E32               	movlw	50
 14934   011116  6F15               	movwf	21,b	;volatile
 14935                           
 14936                           ;mcc_generated_files/system/src/pins.c: 122:     SPI1SCKPPS = 0x16;
 14937   011118  0E16               	movlw	22
 14938   01111A  6F6A               	movwf	106,b	;volatile
 14939                           
 14940                           ;mcc_generated_files/system/src/pins.c: 123:     RC6PPS = 0x31;
 14941   01111C  0E31               	movlw	49
 14942   01111E  6F17               	movwf	23,b	;volatile
 14943   011120                     
 14944                           ; BSR set to: 2
 14945                           ;mcc_generated_files/system/src/pins.c: 128:     IOCAP = 0x0;
 14946   011120  0104               	movlb	4	; () banked
 14947   011122  6B05               	clrf	5,b	;volatile
 14948   011124                     
 14949                           ; BSR set to: 4
 14950                           ;mcc_generated_files/system/src/pins.c: 129:     IOCAN = 0x0;
 14951   011124  6B06               	clrf	6,b	;volatile
 14952   011126                     
 14953                           ; BSR set to: 4
 14954                           ;mcc_generated_files/system/src/pins.c: 130:     IOCAF = 0x0;
 14955   011126  6B07               	clrf	7,b	;volatile
 14956   011128                     
 14957                           ; BSR set to: 4
 14958                           ;mcc_generated_files/system/src/pins.c: 131:     IOCBP = 0x0;
 14959   011128  6B0D               	clrf	13,b	;volatile
 14960   01112A                     
 14961                           ; BSR set to: 4
 14962                           ;mcc_generated_files/system/src/pins.c: 132:     IOCBN = 0x0;
 14963   01112A  6B0E               	clrf	14,b	;volatile
 14964   01112C                     
 14965                           ; BSR set to: 4
 14966                           ;mcc_generated_files/system/src/pins.c: 133:     IOCBF = 0x0;
 14967   01112C  6B0F               	clrf	15,b	;volatile
 14968   01112E                     
 14969                           ; BSR set to: 4
 14970                           ;mcc_generated_files/system/src/pins.c: 134:     IOCCP = 0x0;
 14971   01112E  6B15               	clrf	21,b	;volatile
 14972   011130                     
 14973                           ; BSR set to: 4
 14974                           ;mcc_generated_files/system/src/pins.c: 135:     IOCCN = 0x0;
 14975   011130  6B16               	clrf	22,b	;volatile
 14976   011132                     
 14977                           ; BSR set to: 4
 14978                           ;mcc_generated_files/system/src/pins.c: 136:     IOCCF = 0x0;
 14979   011132  6B17               	clrf	23,b	;volatile
 14980   011134                     
 14981                           ; BSR set to: 4
 14982                           ;mcc_generated_files/system/src/pins.c: 137:     IOCEP = 0x0;
 14983   011134  6B25               	clrf	37,b	;volatile
 14984   011136                     
 14985                           ; BSR set to: 4
 14986                           ;mcc_generated_files/system/src/pins.c: 138:     IOCEN = 0x0;
 14987   011136  6B26               	clrf	38,b	;volatile
 14988   011138                     
 14989                           ; BSR set to: 4
 14990                           ;mcc_generated_files/system/src/pins.c: 139:     IOCEF = 0x0;
 14991   011138  6B27               	clrf	39,b	;volatile
 14992   01113A                     
 14993                           ; BSR set to: 4
 14994   01113A  0012               	return		;funcret
 14995   01113C                     __end_of_PIN_MANAGER_Initialize:
 14996                           	callstack 0
 14997                           
 14998 ;; *************** function _INTERRUPT_Initialize *****************
 14999 ;; Defined at:
 15000 ;;		line 42 in file "mcc_generated_files/system/src/interrupt.c"
 15001 ;; Parameters:    Size  Location     Type
 15002 ;;		None
 15003 ;; Auto vars:     Size  Location     Type
 15004 ;;		None
 15005 ;; Return value:  Size  Location     Type
 15006 ;;                  1    wreg      void 
 15007 ;; Registers used:
 15008 ;;		wreg, status,2, status,0, cstack
 15009 ;; Tracked objects:
 15010 ;;		On entry : 0/0
 15011 ;;		On exit  : 0/0
 15012 ;;		Unchanged: 0/0
 15013 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 15014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15018 ;;Total ram usage:        0 bytes
 15019 ;; Hardware stack levels used: 1
 15020 ;; Hardware stack levels required when called: 4
 15021 ;; This function calls:
 15022 ;;		_INT0_SetInterruptHandler
 15023 ;;		_INT1_SetInterruptHandler
 15024 ;;		_INT2_SetInterruptHandler
 15025 ;; This function is called by:
 15026 ;;		_SYSTEM_Initialize
 15027 ;; This function uses a non-reentrant model
 15028 ;;
 15029                           
 15030                           	psect	text51
 15031   0115E6                     __ptext51:
 15032                           	callstack 0
 15033   0115E6                     _INTERRUPT_Initialize:
 15034                           	callstack 121
 15035   0115E6                     
 15036                           ;mcc_generated_files/system/src/interrupt.c: 45:     INTCON0bits.IPEN = 0;
 15037   0115E6  9AD6               	bcf	214,5,c	;volatile
 15038                           
 15039                           ;mcc_generated_files/system/src/interrupt.c: 49:     (PIR1bits.INT0IF = 0);
 15040   0115E8  90AF               	bcf	175,0,c	;volatile
 15041                           
 15042                           ;mcc_generated_files/system/src/interrupt.c: 50:     (INTCON0bits.INT0EDG = 1);
 15043   0115EA  80D6               	bsf	214,0,c	;volatile
 15044   0115EC                     
 15045                           ;mcc_generated_files/system/src/interrupt.c: 52:     INT0_SetInterruptHandler(INT0_Defau
      +                          ltInterruptHandler);
 15046   0115EC  0E00               	movlw	0
 15047   0115EE  6E04               	movwf	INT0_SetInterruptHandler@InterruptHandler^(0+1280),c
 15048   0115F0  0E00               	movlw	0
 15049   0115F2  6E05               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
 15050   0115F4  0E00               	movlw	0
 15051   0115F6  6E06               	movwf	(INT0_SetInterruptHandler@InterruptHandler+2)^(0+1280),c
 15052   0115F8  EC1E  F08D         	call	_INT0_SetInterruptHandler	;wreg free
 15053   0115FC                     
 15054                           ;mcc_generated_files/system/src/interrupt.c: 57:     (PIR6bits.INT1IF = 0);
 15055   0115FC  90B4               	bcf	180,0,c	;volatile
 15056   0115FE                     
 15057                           ;mcc_generated_files/system/src/interrupt.c: 58:     (INTCON0bits.INT1EDG = 1);
 15058   0115FE  82D6               	bsf	214,1,c	;volatile
 15059                           
 15060                           ;mcc_generated_files/system/src/interrupt.c: 60:     INT1_SetInterruptHandler(INT1_Defau
      +                          ltInterruptHandler);
 15061   011600  0E00               	movlw	0
 15062   011602  6E04               	movwf	INT1_SetInterruptHandler@InterruptHandler^(0+1280),c
 15063   011604  0E00               	movlw	0
 15064   011606  6E05               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
 15065   011608  0E00               	movlw	0
 15066   01160A  6E06               	movwf	(INT1_SetInterruptHandler@InterruptHandler+2)^(0+1280),c
 15067   01160C  EC17  F08D         	call	_INT1_SetInterruptHandler	;wreg free
 15068   011610                     
 15069                           ;mcc_generated_files/system/src/interrupt.c: 65:     (PIR10bits.INT2IF = 0);
 15070   011610  90B8               	bcf	184,0,c	;volatile
 15071   011612                     
 15072                           ;mcc_generated_files/system/src/interrupt.c: 66:     (INTCON0bits.INT2EDG = 1);
 15073   011612  84D6               	bsf	214,2,c	;volatile
 15074                           
 15075                           ;mcc_generated_files/system/src/interrupt.c: 68:     INT2_SetInterruptHandler(INT2_Defau
      +                          ltInterruptHandler);
 15076   011614  0E00               	movlw	0
 15077   011616  6E04               	movwf	INT2_SetInterruptHandler@InterruptHandler^(0+1280),c
 15078   011618  0E00               	movlw	0
 15079   01161A  6E05               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
 15080   01161C  0E00               	movlw	0
 15081   01161E  6E06               	movwf	(INT2_SetInterruptHandler@InterruptHandler+2)^(0+1280),c
 15082   011620  EC10  F08D         	call	_INT2_SetInterruptHandler	;wreg free
 15083   011624  0012               	return		;funcret
 15084   011626                     __end_of_INTERRUPT_Initialize:
 15085                           	callstack 0
 15086                           
 15087 ;; *************** function _INT2_SetInterruptHandler *****************
 15088 ;; Defined at:
 15089 ;;		line 163 in file "mcc_generated_files/system/src/interrupt.c"
 15090 ;; Parameters:    Size  Location     Type
 15091 ;;  InterruptHan    3    3[COMRAM] PTR FTN()void 
 15092 ;;		 -> INT2_DefaultInterruptHandler(1), 
 15093 ;; Auto vars:     Size  Location     Type
 15094 ;;		None
 15095 ;; Return value:  Size  Location     Type
 15096 ;;                  1    wreg      void 
 15097 ;; Registers used:
 15098 ;;		wreg, status,2, status,0
 15099 ;; Tracked objects:
 15100 ;;		On entry : 0/0
 15101 ;;		On exit  : 0/0
 15102 ;;		Unchanged: 0/0
 15103 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 15104 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15107 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15108 ;;Total ram usage:        3 bytes
 15109 ;; Hardware stack levels used: 1
 15110 ;; Hardware stack levels required when called: 3
 15111 ;; This function calls:
 15112 ;;		Nothing
 15113 ;; This function is called by:
 15114 ;;		_INTERRUPT_Initialize
 15115 ;; This function uses a non-reentrant model
 15116 ;;
 15117                           
 15118                           	psect	text52
 15119   011A20                     __ptext52:
 15120                           	callstack 0
 15121   011A20                     _INT2_SetInterruptHandler:
 15122                           	callstack 121
 15123   011A20                     
 15124                           ;mcc_generated_files/system/src/interrupt.c: 164:     INT2_InterruptHandler = InterruptH
      +                          andler;
 15125   011A20  C504  F5F2         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
 15126   011A24  C505  F5F3         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
 15127   011A28  C506  F5F4         	movff	INT2_SetInterruptHandler@InterruptHandler+2,_INT2_InterruptHandler+2
 15128   011A2C  0012               	return		;funcret
 15129   011A2E                     __end_of_INT2_SetInterruptHandler:
 15130                           	callstack 0
 15131                           
 15132 ;; *************** function _INT1_SetInterruptHandler *****************
 15133 ;; Defined at:
 15134 ;;		line 137 in file "mcc_generated_files/system/src/interrupt.c"
 15135 ;; Parameters:    Size  Location     Type
 15136 ;;  InterruptHan    3    3[COMRAM] PTR FTN()void 
 15137 ;;		 -> INT1_DefaultInterruptHandler(1), 
 15138 ;; Auto vars:     Size  Location     Type
 15139 ;;		None
 15140 ;; Return value:  Size  Location     Type
 15141 ;;                  1    wreg      void 
 15142 ;; Registers used:
 15143 ;;		wreg, status,2, status,0
 15144 ;; Tracked objects:
 15145 ;;		On entry : 0/0
 15146 ;;		On exit  : 0/0
 15147 ;;		Unchanged: 0/0
 15148 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 15149 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15152 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15153 ;;Total ram usage:        3 bytes
 15154 ;; Hardware stack levels used: 1
 15155 ;; Hardware stack levels required when called: 3
 15156 ;; This function calls:
 15157 ;;		Nothing
 15158 ;; This function is called by:
 15159 ;;		_INTERRUPT_Initialize
 15160 ;; This function uses a non-reentrant model
 15161 ;;
 15162                           
 15163                           	psect	text53
 15164   011A2E                     __ptext53:
 15165                           	callstack 0
 15166   011A2E                     _INT1_SetInterruptHandler:
 15167                           	callstack 121
 15168   011A2E                     
 15169                           ;mcc_generated_files/system/src/interrupt.c: 138:     INT1_InterruptHandler = InterruptH
      +                          andler;
 15170   011A2E  C504  F5F5         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
 15171   011A32  C505  F5F6         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
 15172   011A36  C506  F5F7         	movff	INT1_SetInterruptHandler@InterruptHandler+2,_INT1_InterruptHandler+2
 15173   011A3A  0012               	return		;funcret
 15174   011A3C                     __end_of_INT1_SetInterruptHandler:
 15175                           	callstack 0
 15176                           
 15177 ;; *************** function _INT0_SetInterruptHandler *****************
 15178 ;; Defined at:
 15179 ;;		line 111 in file "mcc_generated_files/system/src/interrupt.c"
 15180 ;; Parameters:    Size  Location     Type
 15181 ;;  InterruptHan    3    3[COMRAM] PTR FTN()void 
 15182 ;;		 -> INT0_DefaultInterruptHandler(1), 
 15183 ;; Auto vars:     Size  Location     Type
 15184 ;;		None
 15185 ;; Return value:  Size  Location     Type
 15186 ;;                  1    wreg      void 
 15187 ;; Registers used:
 15188 ;;		wreg, status,2, status,0
 15189 ;; Tracked objects:
 15190 ;;		On entry : 0/0
 15191 ;;		On exit  : 0/0
 15192 ;;		Unchanged: 0/0
 15193 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 15194 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15197 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15198 ;;Total ram usage:        3 bytes
 15199 ;; Hardware stack levels used: 1
 15200 ;; Hardware stack levels required when called: 3
 15201 ;; This function calls:
 15202 ;;		Nothing
 15203 ;; This function is called by:
 15204 ;;		_INTERRUPT_Initialize
 15205 ;; This function uses a non-reentrant model
 15206 ;;
 15207                           
 15208                           	psect	text54
 15209   011A3C                     __ptext54:
 15210                           	callstack 0
 15211   011A3C                     _INT0_SetInterruptHandler:
 15212                           	callstack 121
 15213   011A3C                     
 15214                           ;mcc_generated_files/system/src/interrupt.c: 112:     INT0_InterruptHandler = InterruptH
      +                          andler;
 15215   011A3C  C504  F5F8         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
 15216   011A40  C505  F5F9         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
 15217   011A44  C506  F5FA         	movff	INT0_SetInterruptHandler@InterruptHandler+2,_INT0_InterruptHandler+2
 15218   011A48  0012               	return		;funcret
 15219   011A4A                     __end_of_INT0_SetInterruptHandler:
 15220                           	callstack 0
 15221                           
 15222 ;; *************** function _CLOCK_Initialize *****************
 15223 ;; Defined at:
 15224 ;;		line 39 in file "mcc_generated_files/system/src/clock.c"
 15225 ;; Parameters:    Size  Location     Type
 15226 ;;		None
 15227 ;; Auto vars:     Size  Location     Type
 15228 ;;		None
 15229 ;; Return value:  Size  Location     Type
 15230 ;;                  1    wreg      void 
 15231 ;; Registers used:
 15232 ;;		wreg, status,2
 15233 ;; Tracked objects:
 15234 ;;		On entry : 0/0
 15235 ;;		On exit  : 0/0
 15236 ;;		Unchanged: 0/0
 15237 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 15238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15242 ;;Total ram usage:        0 bytes
 15243 ;; Hardware stack levels used: 1
 15244 ;; Hardware stack levels required when called: 3
 15245 ;; This function calls:
 15246 ;;		Nothing
 15247 ;; This function is called by:
 15248 ;;		_SYSTEM_Initialize
 15249 ;; This function uses a non-reentrant model
 15250 ;;
 15251                           
 15252                           	psect	text55
 15253   0119FE                     __ptext55:
 15254                           	callstack 0
 15255   0119FE                     _CLOCK_Initialize:
 15256                           	callstack 122
 15257   0119FE                     
 15258                           ;mcc_generated_files/system/src/clock.c: 42:     OSCCON1 = (0 << 0x0)
 15259   0119FE  0E60               	movlw	96
 15260   011A00  0100               	movlb	0	; () banked
 15261   011A02  6FAD               	movwf	173,b	;volatile
 15262   011A04                     
 15263                           ; BSR set to: 0
 15264                           ;mcc_generated_files/system/src/clock.c: 44:     OSCCON3 = (0 << 0x6)
 15265   011A04  6BAF               	clrf	175,b	;volatile
 15266   011A06                     
 15267                           ; BSR set to: 0
 15268                           ;mcc_generated_files/system/src/clock.c: 46:     OSCEN = (0 << 0x7)
 15269   011A06  6BB3               	clrf	179,b	;volatile
 15270                           
 15271                           ;mcc_generated_files/system/src/clock.c: 53:     OSCFRQ = (8 << 0x0);
 15272   011A08  0E08               	movlw	8
 15273   011A0A  6FB1               	movwf	177,b	;volatile
 15274   011A0C                     
 15275                           ; BSR set to: 0
 15276                           ;mcc_generated_files/system/src/clock.c: 54:     OSCTUNE = (0 << 0x0);
 15277   011A0C  6BB0               	clrf	176,b	;volatile
 15278   011A0E                     
 15279                           ; BSR set to: 0
 15280                           ;mcc_generated_files/system/src/clock.c: 55:     ACTCON = (0 << 0x7)
 15281   011A0E  6BAC               	clrf	172,b	;volatile
 15282   011A10                     
 15283                           ; BSR set to: 0
 15284   011A10  0012               	return		;funcret
 15285   011A12                     __end_of_CLOCK_Initialize:
 15286                           	callstack 0
 15287                           
 15288 ;; *************** function _INTERRUPT_InterruptManager *****************
 15289 ;; Defined at:
 15290 ;;		line 80 in file "mcc_generated_files/system/src/interrupt.c"
 15291 ;; Parameters:    Size  Location     Type
 15292 ;;		None
 15293 ;; Auto vars:     Size  Location     Type
 15294 ;;		None
 15295 ;; Return value:  Size  Location     Type
 15296 ;;                  1    wreg      void 
 15297 ;; Registers used:
 15298 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 15299 ;; Tracked objects:
 15300 ;;		On entry : 0/0
 15301 ;;		On exit  : 0/0
 15302 ;;		Unchanged: 0/0
 15303 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 15304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15306 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15307 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15308 ;;Total ram usage:        2 bytes
 15309 ;; Hardware stack levels used: 1
 15310 ;; Hardware stack levels required when called: 2
 15311 ;; This function calls:
 15312 ;;		_TMR0_OverflowISR
 15313 ;; This function is called by:
 15314 ;;		Interrupt level 2
 15315 ;; This function uses a non-reentrant model
 15316 ;;
 15317                           
 15318                           	psect	text56
 15319   01172C                     __ptext56:
 15320                           	callstack 0
 15321   01172C                     _INTERRUPT_InterruptManager:
 15322                           	callstack 113
 15323                           
 15324                           ; BSR set to: 0
 15325                           ;incstack = 0
 15326   01172C  C4FA F502          	movff	pclath,??_INTERRUPT_InterruptManager
 15327   011730  C4FB F503          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 15328   011734                     
 15329                           ;mcc_generated_files/system/src/interrupt.c: 83:     if(PIE3bits.TMR0IE == 1 && PIR3bits
      +                          .TMR0IF == 1)
 15330   011734  AEA1               	btfss	161,7,c	;volatile
 15331   011736  EF9F  F08B         	goto	i2u232_41
 15332   01173A  EFA1  F08B         	goto	i2u232_40
 15333   01173E                     i2u232_41:
 15334   01173E  EFAA  F08B         	goto	i2l314
 15335   011742                     i2u232_40:
 15336   011742  AEB1               	btfss	177,7,c	;volatile
 15337   011744  EFA6  F08B         	goto	i2u233_41
 15338   011748  EFA8  F08B         	goto	i2u233_40
 15339   01174C                     i2u233_41:
 15340   01174C  EFAA  F08B         	goto	i2l314
 15341   011750                     i2u233_40:
 15342   011750                     
 15343                           ;mcc_generated_files/system/src/interrupt.c: 84:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 85:         TMR0_OverflowISR();
 15344   011750  EC63  F08B         	call	_TMR0_OverflowISR	;wreg free
 15345   011754                     i2l314:
 15346   011754  C503  F4FB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 15347   011758  C502  F4FA         	movff	??_INTERRUPT_InterruptManager,pclath
 15348   01175C  0011               	retfie		f
 15349   01175E                     __end_of_INTERRUPT_InterruptManager:
 15350                           	callstack 0
 15351                           
 15352 ;; *************** function _TMR0_OverflowISR *****************
 15353 ;; Defined at:
 15354 ;;		line 110 in file "mcc_generated_files/timer/src/tmr0.c"
 15355 ;; Parameters:    Size  Location     Type
 15356 ;;		None
 15357 ;; Auto vars:     Size  Location     Type
 15358 ;;		None
 15359 ;; Return value:  Size  Location     Type
 15360 ;;                  1    wreg      void 
 15361 ;; Registers used:
 15362 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 15363 ;; Tracked objects:
 15364 ;;		On entry : 0/0
 15365 ;;		On exit  : 0/0
 15366 ;;		Unchanged: 0/0
 15367 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 15368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15372 ;;Total ram usage:        0 bytes
 15373 ;; Hardware stack levels used: 1
 15374 ;; Hardware stack levels required when called: 1
 15375 ;; This function calls:
 15376 ;;		NULL
 15377 ;;		_TMR0_DefaultOverflowCallback
 15378 ;;		_led_toggle
 15379 ;; This function is called by:
 15380 ;;		_INTERRUPT_InterruptManager
 15381 ;; This function uses a non-reentrant model
 15382 ;;
 15383                           
 15384                           	psect	text57
 15385   0116C6                     __ptext57:
 15386                           	callstack 0
 15387   0116C6                     _TMR0_OverflowISR:
 15388                           	callstack 113
 15389   0116C6                     
 15390                           ;mcc_generated_files/timer/src/tmr0.c: 113:     PIR3bits.TMR0IF = 0;
 15391   0116C6  9EB1               	bcf	177,7,c	;volatile
 15392   0116C8                     
 15393                           ;mcc_generated_files/timer/src/tmr0.c: 116:     if(TMR0_OverflowCallback)
 15394   0116C8  0105               	movlb	5	; () banked
 15395   0116CA  51EF               	movf	_TMR0_OverflowCallback& (0+255),w,b
 15396   0116CC  11F0               	iorwf	(_TMR0_OverflowCallback+1)& (0+255),w,b
 15397   0116CE  11F1               	iorwf	(_TMR0_OverflowCallback+2)& (0+255),w,b
 15398   0116D0  B4D8               	btfsc	status,2,c
 15399   0116D2  EF6D  F08B         	goto	i2u228_41
 15400   0116D6  EF6F  F08B         	goto	i2u228_40
 15401   0116DA                     i2u228_41:
 15402   0116DA  EF7C  F08B         	goto	i2l435
 15403   0116DE                     i2u228_40:
 15404   0116DE                     
 15405                           ; BSR set to: 5
 15406                           ;mcc_generated_files/timer/src/tmr0.c: 117:     {;mcc_generated_files/timer/src/tmr0.c: 
      +                          118:         TMR0_OverflowCallback();
 15407   0116DE  D802               	call	i2u229_48
 15408   0116E0  EF7C  F08B         	goto	i2u229_49
 15409   0116E4                     i2u229_48:
 15410   0116E4  0005               	push	
 15411   0116E6  6EFA               	movwf	pclath,c
 15412   0116E8  51EF               	movf	_TMR0_OverflowCallback& (0+255),w,b
 15413   0116EA  6EFD               	movwf	tosl,c
 15414   0116EC  51F0               	movf	(_TMR0_OverflowCallback+1)& (0+255),w,b
 15415   0116EE  6EFE               	movwf	tosh,c
 15416   0116F0  51F1               	movf	(_TMR0_OverflowCallback+2)& (0+255),w,b
 15417   0116F2  6EFF               	movwf	tosu,c
 15418   0116F4  50FA               	movf	pclath,w,c
 15419   0116F6  0012               	return		;indir
 15420   0116F8                     i2u229_49:
 15421   0116F8                     i2l435:
 15422   0116F8  0012               	return		;funcret
 15423   0116FA                     __end_of_TMR0_OverflowISR:
 15424                           	callstack 0
 15425                           
 15426 ;; *************** function _TMR0_DefaultOverflowCallback *****************
 15427 ;; Defined at:
 15428 ;;		line 127 in file "mcc_generated_files/timer/src/tmr0.c"
 15429 ;; Parameters:    Size  Location     Type
 15430 ;;		None
 15431 ;; Auto vars:     Size  Location     Type
 15432 ;;		None
 15433 ;; Return value:  Size  Location     Type
 15434 ;;                  1    wreg      void 
 15435 ;; Registers used:
 15436 ;;		None
 15437 ;; Tracked objects:
 15438 ;;		On entry : 0/0
 15439 ;;		On exit  : 0/0
 15440 ;;		Unchanged: 0/0
 15441 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 15442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15446 ;;Total ram usage:        0 bytes
 15447 ;; Hardware stack levels used: 1
 15448 ;; This function calls:
 15449 ;;		Nothing
 15450 ;; This function is called by:
 15451 ;;		_TMR0_Initialize
 15452 ;;		_TMR0_OverflowISR
 15453 ;; This function uses a non-reentrant model
 15454 ;;
 15455                           
 15456                           	psect	text58
 15457   011A5E                     __ptext58:
 15458                           	callstack 0
 15459   011A5E                     _TMR0_DefaultOverflowCallback:
 15460                           	callstack 113
 15461   011A5E  0012               	return		;funcret
 15462   011A60                     __end_of_TMR0_DefaultOverflowCallback:
 15463                           	callstack 0
 15464                           
 15465 ;; *************** function _led_toggle *****************
 15466 ;; Defined at:
 15467 ;;		line 24 in file "main.c"
 15468 ;; Parameters:    Size  Location     Type
 15469 ;;		None
 15470 ;; Auto vars:     Size  Location     Type
 15471 ;;		None
 15472 ;; Return value:  Size  Location     Type
 15473 ;;                  1    wreg      void 
 15474 ;; Registers used:
 15475 ;;		wreg, status,2, status,0
 15476 ;; Tracked objects:
 15477 ;;		On entry : 0/0
 15478 ;;		On exit  : 0/0
 15479 ;;		Unchanged: 0/0
 15480 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 15481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15483 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15484 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15485 ;;Total ram usage:        1 bytes
 15486 ;; Hardware stack levels used: 1
 15487 ;; This function calls:
 15488 ;;		Nothing
 15489 ;; This function is called by:
 15490 ;;		_main
 15491 ;;		_TMR0_OverflowISR
 15492 ;; This function uses a non-reentrant model
 15493 ;;
 15494                           
 15495                           	psect	text59
 15496   011896                     __ptext59:
 15497                           	callstack 0
 15498   011896                     _led_toggle:
 15499                           	callstack 113
 15500   011896  B6C3               	btfsc	195,3,c	;volatile
 15501   011898  EF50  F08C         	goto	i2u219_41
 15502   01189C  EF53  F08C         	goto	i2u219_40
 15503   0118A0                     i2u219_41:
 15504   0118A0  0E01               	movlw	1
 15505   0118A2  EF54  F08C         	goto	i2u219_46
 15506   0118A6                     i2u219_40:
 15507   0118A6  0E00               	movlw	0
 15508   0118A8                     i2u219_46:
 15509   0118A8  0AFF               	xorlw	255
 15510   0118AA  6E01               	movwf	??_led_toggle^(0+1280),c
 15511   0118AC  4601               	rlncf	??_led_toggle^(0+1280),f,c
 15512   0118AE  4601               	rlncf	??_led_toggle^(0+1280),f,c
 15513   0118B0  4601               	rlncf	??_led_toggle^(0+1280),f,c
 15514   0118B2  50C3               	movf	195,w,c	;volatile
 15515   0118B4  1801               	xorwf	??_led_toggle^(0+1280),w,c
 15516   0118B6  0BF7               	andlw	-9
 15517   0118B8  1801               	xorwf	??_led_toggle^(0+1280),w,c
 15518   0118BA  6EC3               	movwf	195,c	;volatile
 15519   0118BC  0012               	return		;funcret
 15520   0118BE                     __end_of_led_toggle:
 15521                           	callstack 0
 15522                           
 15523                           ;
 15524                           ; H/W Interrupt Vector Table @ 0x8
 15525                           ;
 15526                           
 15527                           	psect	ivt0x8
 15528   000008                     __pivt0x8:
 15529                           	callstack 0
 15530   000008                     ivt0x8_base:
 15531                           	callstack 0
 15532                           
 15533                           ; high-priority vector
 15534   000008  EF96  F08B         	goto	_INTERRUPT_InterruptManager
 15535   000018                     	org	16
 15536                           
 15537                           ; low-priority vector
 15538   000018  00FF               	reset	
 15539                           
 15540                           	psect	rparam
 15541   000001                     ___rparam_used  equ	1
 15542   000000                     ___param_bank   equ	0
 15543   000000                     __Lparam        equ	__Lrparam
 15544   000000                     __Hparam        equ	__Hrparam
 15545                           
 15546                           	psect	idloc
 15547                           
 15548                           ;Config register IDLOC0 @ 0x200000
 15549                           ;	unspecified, using default values
 15550   200000                     	org	2097152
 15551   200000  FFFF               	dw	65535
 15552                           
 15553                           ;Config register IDLOC1 @ 0x200002
 15554                           ;	unspecified, using default values
 15555   200002                     	org	2097154
 15556   200002  FFFF               	dw	65535
 15557                           
 15558                           ;Config register IDLOC2 @ 0x200004
 15559                           ;	unspecified, using default values
 15560   200004                     	org	2097156
 15561   200004  FFFF               	dw	65535
 15562                           
 15563                           ;Config register IDLOC3 @ 0x200006
 15564                           ;	unspecified, using default values
 15565   200006                     	org	2097158
 15566   200006  FFFF               	dw	65535
 15567                           
 15568                           ;Config register IDLOC4 @ 0x200008
 15569                           ;	unspecified, using default values
 15570   200008                     	org	2097160
 15571   200008  FFFF               	dw	65535
 15572                           
 15573                           ;Config register IDLOC5 @ 0x20000A
 15574                           ;	unspecified, using default values
 15575   20000A                     	org	2097162
 15576   20000A  FFFF               	dw	65535
 15577                           
 15578                           ;Config register IDLOC6 @ 0x20000C
 15579                           ;	unspecified, using default values
 15580   20000C                     	org	2097164
 15581   20000C  FFFF               	dw	65535
 15582                           
 15583                           ;Config register IDLOC7 @ 0x20000E
 15584                           ;	unspecified, using default values
 15585   20000E                     	org	2097166
 15586   20000E  FFFF               	dw	65535
 15587                           
 15588                           ;Config register IDLOC8 @ 0x200010
 15589                           ;	unspecified, using default values
 15590   200010                     	org	2097168
 15591   200010  FFFF               	dw	65535
 15592                           
 15593                           ;Config register IDLOC9 @ 0x200012
 15594                           ;	unspecified, using default values
 15595   200012                     	org	2097170
 15596   200012  FFFF               	dw	65535
 15597                           
 15598                           ;Config register IDLOC10 @ 0x200014
 15599                           ;	unspecified, using default values
 15600   200014                     	org	2097172
 15601   200014  FFFF               	dw	65535
 15602                           
 15603                           ;Config register IDLOC11 @ 0x200016
 15604                           ;	unspecified, using default values
 15605   200016                     	org	2097174
 15606   200016  FFFF               	dw	65535
 15607                           
 15608                           ;Config register IDLOC12 @ 0x200018
 15609                           ;	unspecified, using default values
 15610   200018                     	org	2097176
 15611   200018  FFFF               	dw	65535
 15612                           
 15613                           ;Config register IDLOC13 @ 0x20001A
 15614                           ;	unspecified, using default values
 15615   20001A                     	org	2097178
 15616   20001A  FFFF               	dw	65535
 15617                           
 15618                           ;Config register IDLOC14 @ 0x20001C
 15619                           ;	unspecified, using default values
 15620   20001C                     	org	2097180
 15621   20001C  FFFF               	dw	65535
 15622                           
 15623                           ;Config register IDLOC15 @ 0x20001E
 15624                           ;	unspecified, using default values
 15625   20001E                     	org	2097182
 15626   20001E  FFFF               	dw	65535
 15627                           
 15628                           ;Config register IDLOC16 @ 0x200020
 15629                           ;	unspecified, using default values
 15630   200020                     	org	2097184
 15631   200020  FFFF               	dw	65535
 15632                           
 15633                           ;Config register IDLOC17 @ 0x200022
 15634                           ;	unspecified, using default values
 15635   200022                     	org	2097186
 15636   200022  FFFF               	dw	65535
 15637                           
 15638                           ;Config register IDLOC18 @ 0x200024
 15639                           ;	unspecified, using default values
 15640   200024                     	org	2097188
 15641   200024  FFFF               	dw	65535
 15642                           
 15643                           ;Config register IDLOC19 @ 0x200026
 15644                           ;	unspecified, using default values
 15645   200026                     	org	2097190
 15646   200026  FFFF               	dw	65535
 15647                           
 15648                           ;Config register IDLOC20 @ 0x200028
 15649                           ;	unspecified, using default values
 15650   200028                     	org	2097192
 15651   200028  FFFF               	dw	65535
 15652                           
 15653                           ;Config register IDLOC21 @ 0x20002A
 15654                           ;	unspecified, using default values
 15655   20002A                     	org	2097194
 15656   20002A  FFFF               	dw	65535
 15657                           
 15658                           ;Config register IDLOC22 @ 0x20002C
 15659                           ;	unspecified, using default values
 15660   20002C                     	org	2097196
 15661   20002C  FFFF               	dw	65535
 15662                           
 15663                           ;Config register IDLOC23 @ 0x20002E
 15664                           ;	unspecified, using default values
 15665   20002E                     	org	2097198
 15666   20002E  FFFF               	dw	65535
 15667                           
 15668                           ;Config register IDLOC24 @ 0x200030
 15669                           ;	unspecified, using default values
 15670   200030                     	org	2097200
 15671   200030  FFFF               	dw	65535
 15672                           
 15673                           ;Config register IDLOC25 @ 0x200032
 15674                           ;	unspecified, using default values
 15675   200032                     	org	2097202
 15676   200032  FFFF               	dw	65535
 15677                           
 15678                           ;Config register IDLOC26 @ 0x200034
 15679                           ;	unspecified, using default values
 15680   200034                     	org	2097204
 15681   200034  FFFF               	dw	65535
 15682                           
 15683                           ;Config register IDLOC27 @ 0x200036
 15684                           ;	unspecified, using default values
 15685   200036                     	org	2097206
 15686   200036  FFFF               	dw	65535
 15687                           
 15688                           ;Config register IDLOC28 @ 0x200038
 15689                           ;	unspecified, using default values
 15690   200038                     	org	2097208
 15691   200038  FFFF               	dw	65535
 15692                           
 15693                           ;Config register IDLOC29 @ 0x20003A
 15694                           ;	unspecified, using default values
 15695   20003A                     	org	2097210
 15696   20003A  FFFF               	dw	65535
 15697                           
 15698                           ;Config register IDLOC30 @ 0x20003C
 15699                           ;	unspecified, using default values
 15700   20003C                     	org	2097212
 15701   20003C  FFFF               	dw	65535
 15702                           
 15703                           ;Config register IDLOC31 @ 0x20003E
 15704                           ;	unspecified, using default values
 15705   20003E                     	org	2097214
 15706   20003E  FFFF               	dw	65535
 15707                           
 15708                           	psect	config
 15709                           
 15710                           ;Config register CONFIG1 @ 0x300000
 15711                           ;	External Oscillator Selection
 15712                           ;	FEXTOSC = ECH, EC (external clock) above 8 MHz
 15713                           ;	Reset Oscillator Selection
 15714                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 15715   300000                     	org	3145728
 15716   300000  8F                 	db	143
 15717                           
 15718                           ;Config register CONFIG2 @ 0x300001
 15719                           ;	Clock out Enable bit
 15720                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 15721                           ;	PRLOCKED One-Way Set Enable bit
 15722                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
 15723                           ;	Clock Switch Enable bit
 15724                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 15725                           ;	Fail-Safe Clock Monitor Enable bit
 15726                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 15727   300001                     	org	3145729
 15728   300001  FF                 	db	255
 15729                           
 15730                           ;Config register CONFIG3 @ 0x300002
 15731                           ;	MCLR Enable bit
 15732                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 15733                           ;	Power-up timer selection bits
 15734                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 15735                           ;	Multi-vector enable bit
 15736                           ;	MVECEN = OFF, Interrupt contoller does not use vector table to prioritze interrupts
 15737                           ;	IVTLOCK bit One-way set enable bit
 15738                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
 15739                           ;	Low Power BOR Enable bit
 15740                           ;	LPBOREN = OFF, Low-Power BOR disabled
 15741                           ;	Brown-out Reset Enable bits
 15742                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 15743   300002                     	org	3145730
 15744   300002  F7                 	db	247
 15745                           
 15746                           ;Config register CONFIG4 @ 0x300003
 15747                           ;	Brown-out Reset Voltage Selection bits
 15748                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
 15749                           ;	ZCD Disable bit
 15750                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
 15751                           ;	PPSLOCK bit One-Way Set Enable bit
 15752                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
 15753                           ;	Stack Full/Underflow Reset Enable bit
 15754                           ;	STVREN = ON, Stack full/underflow will cause Reset
 15755                           ;	Low Voltage Programming Enable bit
 15756                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 15757                           ;	Extended Instruction Set Enable bit
 15758                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 15759   300003                     	org	3145731
 15760   300003  FF                 	db	255
 15761                           
 15762                           ;Config register CONFIG5 @ 0x300004
 15763                           ;	WDT Period selection bits
 15764                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 15765                           ;	WDT operating mode
 15766                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 15767   300004                     	org	3145732
 15768   300004  9F                 	db	159
 15769                           
 15770                           ;Config register CONFIG6 @ 0x300005
 15771                           ;	WDT Window Select bits
 15772                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 15773                           ;	WDT input clock selector
 15774                           ;	WDTCCS = SC, Software Control
 15775   300005                     	org	3145733
 15776   300005  FF                 	db	255
 15777                           
 15778                           ;Config register CONFIG7 @ 0x300006
 15779                           ;	Boot Block Size selection bits
 15780                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 15781                           ;	Boot Block enable bit
 15782                           ;	BBEN = OFF, Boot block disabled
 15783                           ;	Storage Area Flash enable bit
 15784                           ;	SAFEN = OFF, SAF disabled
 15785                           ;	Background Debugger
 15786                           ;	DEBUG = 0x1, unprogrammed default
 15787   300006                     	org	3145734
 15788   300006  FF                 	db	255
 15789                           
 15790                           ;Config register CONFIG8 @ 0x300007
 15791                           ;	Boot Block Write Protection bit
 15792                           ;	WRTB = OFF, Boot Block not Write protected
 15793                           ;	Configuration Register Write Protection bit
 15794                           ;	WRTC = OFF, Configuration registers not Write protected
 15795                           ;	Data EEPROM Write Protection bit
 15796                           ;	WRTD = OFF, Data EEPROM not Write protected
 15797                           ;	SAF Write protection bit
 15798                           ;	WRTSAF = OFF, SAF not Write Protected
 15799                           ;	Application Block write protection bit
 15800                           ;	WRTAPP = OFF, Application Block not write protected
 15801   300007                     	org	3145735
 15802   300007  FF                 	db	255
 15803                           
 15804                           ;Config register CONFIG10 @ 0x300009
 15805                           ;	PFM and Data EEPROM Code Protection bit
 15806                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 15807   300009                     	org	3145737
 15808   300009  FF                 	db	255
 15809                           tosu	equ	0x4FF
 15810                           tosh	equ	0x4FE
 15811                           tosl	equ	0x4FD
 15812                           stkptr	equ	0x4FC
 15813                           pclatu	equ	0x4FB
 15814                           pclath	equ	0x4FA
 15815                           pcl	equ	0x4F9
 15816                           tblptru	equ	0x4F8
 15817                           tblptrh	equ	0x4F7
 15818                           tblptrl	equ	0x4F6
 15819                           tablat	equ	0x4F5
 15820                           prodh	equ	0x4F4
 15821                           prodl	equ	0x4F3
 15822                           indf0	equ	0x4EF
 15823                           postinc0	equ	0x4EE
 15824                           postdec0	equ	0x4ED
 15825                           preinc0	equ	0x4EC
 15826                           plusw0	equ	0x4EB
 15827                           fsr0h	equ	0x4EA
 15828                           fsr0l	equ	0x4E9
 15829                           wreg	equ	0x4E8
 15830                           indf1	equ	0x4E7
 15831                           postinc1	equ	0x4E6
 15832                           postdec1	equ	0x4E5
 15833                           preinc1	equ	0x4E4
 15834                           plusw1	equ	0x4E3
 15835                           fsr1h	equ	0x4E2
 15836                           fsr1l	equ	0x4E1
 15837                           bsr	equ	0x4E0
 15838                           indf2	equ	0x4DF
 15839                           postinc2	equ	0x4DE
 15840                           postdec2	equ	0x4DD
 15841                           preinc2	equ	0x4DC
 15842                           plusw2	equ	0x4DB
 15843                           fsr2h	equ	0x4DA
 15844                           fsr2l	equ	0x4D9
 15845                           status	equ	0x4D8

Data Sizes:
    Strings     327
    Constant    105
    Data        88
    BSS         37
    Persistent  12
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     89      92
    BANK5           160     53     155
    BANK6           256      0      32
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    AdvancedSettings@dev	PTR struct . size(2) Largest target is 3
		 -> sender@nrf(BANK5[3]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK5[32]), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), NULL(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), NULL(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), NULL(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    Nrf24_config@dev	PTR struct . size(2) Largest target is 3
		 -> sender@nrf(BANK5[3]), 

    Nrf24_flushRx@dev	PTR struct . size(2) Largest target is 3
		 -> sender@nrf(BANK5[3]), 

    Nrf24_getCRCLength@dev	PTR struct . size(2) Largest target is 3
		 -> sender@nrf(BANK5[3]), 

    Nrf24_getDataRate@dev	PTR struct . size(2) Largest target is 3
		 -> sender@nrf(BANK5[3]), 

    Nrf24_getPALevel@dev	PTR struct . size(2) Largest target is 3
		 -> sender@nrf(BANK5[3]), 

    Nrf24_getRetransmitDelay@dev	PTR struct . size(2) Largest target is 3
		 -> sender@nrf(BANK5[3]), 

    Nrf24_init@dev	PTR struct . size(2) Largest target is 3
		 -> sender@nrf(BANK5[3]), 

    Nrf24_isSend@dev	PTR struct . size(2) Largest target is 3
		 -> sender@nrf(BANK5[3]), 

    Nrf24_powerUpRx@dev	PTR struct . size(2) Largest target is 3
		 -> sender@nrf(BANK5[3]), 

    Nrf24_powerUpTx@dev	PTR struct . size(2) Largest target is 3
		 -> sender@nrf(BANK5[3]), 

    Nrf24_print_address_register@dev	PTR struct . size(2) Largest target is 3
		 -> sender@nrf(BANK5[3]), 

    Nrf24_print_address_register@name	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_3(CODE[13]), STR_5(CODE[9]), 

    Nrf24_print_byte_register@dev	PTR struct . size(2) Largest target is 3
		 -> sender@nrf(BANK5[3]), 

    Nrf24_print_byte_register@name	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_10(CODE[9]), STR_11(CODE[8]), STR_12(CODE[14]), STR_4(CODE[13]), 
		 -> STR_6(CODE[11]), STR_7(CODE[7]), STR_8(CODE[10]), STR_9(CODE[7]), 

    Nrf24_printDetails@dev	PTR struct . size(2) Largest target is 3
		 -> sender@nrf(BANK5[3]), 

    Nrf24_readRegister@value	PTR unsigned char  size(2) Largest target is 5
		 -> Nrf24_addRADDR@value(COMRAM[1]), Nrf24_getCRCLength@AA(COMRAM[1]), Nrf24_getCRCLength@config(COMRAM[1]), Nrf24_getDataRate@dr(COMRAM[1]), 
		 -> Nrf24_getPALevel@level(COMRAM[1]), Nrf24_getRetransmitDelay@value(COMRAM[1]), Nrf24_getStatus@rv(COMRAM[1]), Nrf24_print_address_register@buffer(BANK5[5]), 
		 -> Nrf24_print_byte_register@buffer(COMRAM[1]), Nrf24_rxFifoEmpty@fifoStatus(COMRAM[1]), Nrf24_SetOutputRF_PWR@value(COMRAM[1]), Nrf24_setRADDR@buffer(COMRAM[5]), 
		 -> Nrf24_setRetransmitDelay@value(COMRAM[1]), Nrf24_SetSpeedDataRates@value(COMRAM[1]), Nrf24_setTADDR@buffer(COMRAM[5]), 

    Nrf24_send@dev	PTR struct . size(2) Largest target is 3
		 -> sender@nrf(BANK5[3]), 

    Nrf24_send@value	PTR unsigned char  size(2) Largest target is 32
		 -> sender@buf(BANK5[32]), 

    Nrf24_setRetransmitDelay@dev	PTR struct . size(2) Largest target is 3
		 -> sender@nrf(BANK5[3]), 

    Nrf24_SetSpeedDataRates@dev	PTR struct . size(2) Largest target is 3
		 -> sender@nrf(BANK5[3]), 

    Nrf24_setTADDR@adr	PTR unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    Nrf24_setTADDR@dev	PTR struct . size(2) Largest target is 3
		 -> sender@nrf(BANK5[3]), 

    Nrf24_writeRegister@value	PTR unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    NULL$0	PTR FTN()void  size(3) Largest target is 0

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK5[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 70
		 -> STR_13(CODE[17]), STR_14(CODE[18]), STR_15(CODE[16]), STR_16(CODE[21]), 
		 -> STR_17(CODE[70]), STR_18(CODE[6]), STR_19(CODE[4]), STR_2(CODE[53]), 
		 -> STR_20(CODE[5]), STR_21(CODE[3]), STR_22(CODE[6]), STR_23(CODE[8]), 
		 -> STR_24(CODE[3]), 

    read_prec_or_width@ap	PTR PTR void [1] size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1844$buffer	PTR unsigned char  size(2) Largest target is 0

    S1844$source	PTR const unsigned char  size(2) Largest target is 0

    S40$4$0	PTR void  size(2) Largest target is 0

    S40$5$0	PTR void  size(2) Largest target is 0

    S40$6$0	PTR void  size(2) Largest target is 0

    S40SPI_INTERFACE$BufferExchange	PTR FTN(PTR void ,unsigned int ,)void  size(3) Largest target is 1
		 -> SPI1_BufferExchange(), 

    S40SPI_INTERFACE$BufferRead	PTR FTN(PTR void ,unsigned int ,)void  size(3) Largest target is 1
		 -> SPI1_BufferRead(), 

    S40SPI_INTERFACE$BufferWrite	PTR FTN(PTR void ,unsigned int ,)void  size(3) Largest target is 1
		 -> SPI1_BufferWrite(), 

    S40SPI_INTERFACE$ByteExchange	PTR FTN(unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> SPI1_ByteExchange(), 

    S40SPI_INTERFACE$ByteRead	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> SPI1_ByteRead(), 

    S40SPI_INTERFACE$ByteWrite	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> SPI1_ByteWrite(), 

    S40SPI_INTERFACE$Close	PTR FTN()void  size(3) Largest target is 1
		 -> SPI1_Close(), 

    S40SPI_INTERFACE$Deinitialize	PTR FTN()void  size(3) Largest target is 1
		 -> SPI1_Deinitialize(), 

    S40SPI_INTERFACE$Initialize	PTR FTN()void  size(3) Largest target is 1
		 -> SPI1_Initialize(), 

    S40SPI_INTERFACE$IsRxReady	PTR FTN()_Bool  size(3) Largest target is 1
		 -> SPI1_IsRxReady(), 

    S40SPI_INTERFACE$IsTxReady	PTR FTN()_Bool  size(3) Largest target is 1
		 -> SPI1_IsTxReady(), 

    S40SPI_INTERFACE$Open	PTR FTN(unsigned char ,)_Bool  size(3) Largest target is 1
		 -> SPI1_Open(), 

    S40SPI_INTERFACE$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    S40SPI_INTERFACE$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    S767$4$0	PTR FTN()void  size(3) Largest target is 1
		 -> led_toggle(), TMR0_DefaultOverflowCallback(), 

    S767TMR_INTERFACE$Initialize	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Initialize(), 

    S767TMR_INTERFACE$PeriodCountSet	PTR FTN(unsigned int ,)void  size(3) Largest target is 1
		 -> TMR0_Reload(), 

    S767TMR_INTERFACE$Start	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Start(), 

    S767TMR_INTERFACE$Stop	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Stop(), 

    S767TMR_INTERFACE$Tasks	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), 

    S767TMR_INTERFACE$TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> TMR0_OverflowCallbackRegister(), 

    sender@pvParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__memset	PTR void  size(2) Largest target is 0

    sp__Nrf24_getDataRateString	PTR unsigned char  size(2) Largest target is 24
		 -> rf24_datarates(BANK5[24]), 

    sp__Nrf24_getPALevelString	PTR unsigned char  size(2) Largest target is 32
		 -> rf24_pa_dbm(BANK6[32]), 

    SPI1_nrf24$BufferExchange	PTR FTN(PTR void ,unsigned int ,)void  size(3) Largest target is 1
		 -> SPI1_BufferExchange(), 

    SPI1_nrf24$BufferRead	PTR FTN(PTR void ,unsigned int ,)void  size(3) Largest target is 1
		 -> SPI1_BufferRead(), 

    SPI1_nrf24$BufferWrite	PTR FTN(PTR void ,unsigned int ,)void  size(3) Largest target is 1
		 -> SPI1_BufferWrite(), 

    SPI1_nrf24$ByteExchange	PTR FTN(unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> SPI1_ByteExchange(), 

    SPI1_nrf24$ByteRead	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> SPI1_ByteRead(), 

    SPI1_nrf24$ByteWrite	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> SPI1_ByteWrite(), 

    SPI1_nrf24$Close	PTR FTN()void  size(3) Largest target is 1
		 -> SPI1_Close(), 

    SPI1_nrf24$Deinitialize	PTR FTN()void  size(3) Largest target is 1
		 -> SPI1_Deinitialize(), 

    SPI1_nrf24$Initialize	PTR FTN()void  size(3) Largest target is 1
		 -> SPI1_Initialize(), 

    SPI1_nrf24$IsRxReady	PTR FTN()_Bool  size(3) Largest target is 1
		 -> SPI1_IsRxReady(), 

    SPI1_nrf24$IsTxReady	PTR FTN()_Bool  size(3) Largest target is 1
		 -> SPI1_IsTxReady(), 

    SPI1_nrf24$Open	PTR FTN(unsigned char ,)_Bool  size(3) Largest target is 1
		 -> SPI1_Open(), 

    SPI1_nrf24$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    SPI1_nrf24$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> NULL(), 

    SPI_read_buff@buffer	PTR unsigned char  size(2) Largest target is 5
		 -> Nrf24_addRADDR@value(COMRAM[1]), Nrf24_getCRCLength@AA(COMRAM[1]), Nrf24_getCRCLength@config(COMRAM[1]), Nrf24_getDataRate@dr(COMRAM[1]), 
		 -> Nrf24_getPALevel@level(COMRAM[1]), Nrf24_getRetransmitDelay@value(COMRAM[1]), Nrf24_getStatus@rv(COMRAM[1]), Nrf24_print_address_register@buffer(BANK5[5]), 
		 -> Nrf24_print_byte_register@buffer(COMRAM[1]), Nrf24_rxFifoEmpty@fifoStatus(COMRAM[1]), Nrf24_SetOutputRF_PWR@value(COMRAM[1]), Nrf24_setRADDR@buffer(COMRAM[5]), 
		 -> Nrf24_setRetransmitDelay@value(COMRAM[1]), Nrf24_SetSpeedDataRates@value(COMRAM[1]), Nrf24_setTADDR@buffer(COMRAM[5]), 

    SPI_write_buff@buffer	PTR unsigned char  size(2) Largest target is 32
		 -> sender@buf(BANK5[32]), STR_1(CODE[6]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 32
		 -> ?_printf(COMRAM[2]), rf24_crclength(CODE[30]), rf24_datarates(BANK5[24]), rf24_pa_dbm(BANK6[32]), 
		 -> STR_10(CODE[9]), STR_11(CODE[8]), STR_12(CODE[14]), STR_25(CODE[7]), 
		 -> STR_3(CODE[13]), STR_4(CODE[13]), STR_5(CODE[9]), STR_6(CODE[11]), 
		 -> STR_7(CODE[7]), STR_8(CODE[10]), STR_9(CODE[7]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 32
		 -> ?_printf(COMRAM[2]), rf24_crclength(CODE[30]), rf24_datarates(BANK5[24]), rf24_pa_dbm(BANK6[32]), 
		 -> STR_10(CODE[9]), STR_11(CODE[8]), STR_12(CODE[14]), STR_3(CODE[13]), 
		 -> STR_4(CODE[13]), STR_5(CODE[9]), STR_6(CODE[11]), STR_7(CODE[7]), 
		 -> STR_8(CODE[10]), STR_9(CODE[7]), 

    Timer0$Initialize	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Initialize(), 

    Timer0$PeriodCountSet	PTR FTN(unsigned int ,)void  size(3) Largest target is 1
		 -> TMR0_Reload(), 

    Timer0$Start	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Start(), 

    Timer0$Stop	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_Stop(), 

    Timer0$Tasks	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), 

    Timer0$TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(3) Largest target is 1
		 -> TMR0_OverflowCallbackRegister(), 

    TMR0_OverflowCallback	PTR FTN()void  size(3) Largest target is 1
		 -> led_toggle(), TMR0_DefaultOverflowCallback(), NULL(), 

    TMR0_OverflowCallbackRegister@CallbackHandler	PTR FTN()void  size(3) Largest target is 1
		 -> led_toggle(), TMR0_DefaultOverflowCallback(), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 70
		 -> STR_13(CODE[17]), STR_14(CODE[18]), STR_15(CODE[16]), STR_16(CODE[21]), 
		 -> STR_17(CODE[70]), STR_18(CODE[6]), STR_19(CODE[4]), STR_2(CODE[53]), 
		 -> STR_20(CODE[5]), STR_21(CODE[3]), STR_22(CODE[6]), STR_23(CODE[8]), 
		 -> STR_24(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 70
		 -> STR_13(CODE[17]), STR_14(CODE[18]), STR_15(CODE[16]), STR_16(CODE[21]), 
		 -> STR_17(CODE[70]), STR_18(CODE[6]), STR_19(CODE[4]), STR_2(CODE[53]), 
		 -> STR_20(CODE[5]), STR_21(CODE[3]), STR_22(CODE[6]), STR_23(CODE[8]), 
		 -> STR_24(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 70
		 -> STR_13(CODE[17]), STR_14(CODE[18]), STR_15(CODE[16]), STR_16(CODE[21]), 
		 -> STR_17(CODE[70]), STR_18(CODE[6]), STR_19(CODE[4]), STR_2(CODE[53]), 
		 -> STR_20(CODE[5]), STR_21(CODE[3]), STR_22(CODE[6]), STR_23(CODE[8]), 
		 -> STR_24(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _sender->_Nrf24_printDetails
    _Nrf24_setTADDR->_Nrf24_readRegister
    _Nrf24_setTADDR->_Nrf24_writeRegister
    _Nrf24_writeRegister->_SPI_write_buff
    _Nrf24_send->_Nrf24_getStatus
    _SPI_write_buff->_DELAY_microseconds
    _SPI_write_buff->_SPI1_ByteExchange
    _Nrf24_powerUpTx->_Nrf24_configRegister
    _Nrf24_printDetails->_Nrf24_print_address_register
    _Nrf24_printDetails->_Nrf24_print_byte_register
    _Nrf24_print_status->_printf
    _Nrf24_print_byte_register->_printf
    _Nrf24_print_address_register->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _stoa->_fputc
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _Nrf24_getRetransmitDelay->_Nrf24_readRegister
    _Nrf24_getPALevel->_Nrf24_readRegister
    _Nrf24_getDataRate->_Nrf24_readRegister
    _Nrf24_getCRCLength->_Nrf24_readRegister
    _Nrf24_isSend->_Nrf24_getStatus
    _Nrf24_init->_SPI1_Open
    _Nrf24_config->_Nrf24_getStatus
    _Nrf24_powerUpRx->_Nrf24_configRegister
    _Nrf24_getStatus->_Nrf24_readRegister
    _Nrf24_flushRx->_SPI1_ByteExchange
    _AdvancedSettings->_Nrf24_SetSpeedDataRates
    _AdvancedSettings->_Nrf24_setRetransmitDelay
    _Nrf24_setRetransmitDelay->_Nrf24_readRegister
    _Nrf24_SetSpeedDataRates->_Nrf24_readRegister
    _Nrf24_readRegister->_SPI_read_buff
    _SPI_read_buff->_SPI1_ByteExchange
    _Nrf24_configRegister->_SPI1_ByteExchange
    _TMR0_Initialize->_TMR0_OverflowCallbackRegister
    _INTERRUPT_Initialize->_INT0_SetInterruptHandler
    _INTERRUPT_Initialize->_INT1_SetInterruptHandler
    _INTERRUPT_Initialize->_INT2_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR0_OverflowISR->_led_toggle

Critical Paths under _main in BANK5

    _main->_sender
    _sender->_Nrf24_printDetails
    _Nrf24_printDetails->_Nrf24_print_address_register

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   42703
                  _SYSTEM_Initialize
      _TMR0_OverflowCallbackRegister
                         _TMR0_Start
                             _sender
 ---------------------------------------------------------------------------------
 (1) _sender                                              41    39      2   42586
                                             14 BANK5     39    37      2
                   _AdvancedSettings
                 _DELAY_milliseconds
                       _Nrf24_config
                         _Nrf24_init
                       _Nrf24_isSend
                 _Nrf24_printDetails
                         _Nrf24_send
                     _Nrf24_setTADDR
 ---------------------------------------------------------------------------------
 (2) _Nrf24_setTADDR                                      16    12      4    1335
                                             13 COMRAM    16    12      4
                 _Nrf24_readRegister
                _Nrf24_writeRegister
 ---------------------------------------------------------------------------------
 (3) _Nrf24_writeRegister                                  4     1      3     486
                                              9 COMRAM     4     1      3
                  _SPI1_ByteExchange
                     _SPI_write_buff
 ---------------------------------------------------------------------------------
 (2) _Nrf24_send                                           6     2      4    1377
                                             14 COMRAM     6     2      4
                    _Nrf24_getStatus
                    _Nrf24_powerUpTx
                  _SPI1_ByteExchange
                     _SPI_write_buff
 ---------------------------------------------------------------------------------
 (4) _SPI_write_buff                                       4     1      3     244
                                              5 COMRAM     4     1      3
                 _DELAY_microseconds
                  _SPI1_ByteExchange
 ---------------------------------------------------------------------------------
 (5) _DELAY_microseconds                                   2     0      2      46
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _Nrf24_powerUpTx                                      2     0      2     271
                                              7 COMRAM     2     0      2
               _Nrf24_configRegister
 ---------------------------------------------------------------------------------
 (2) _Nrf24_printDetails                                   9     7      2   34575
                                             87 COMRAM     2     0      2
                                              7 BANK5      7     7      0
                 _Nrf24_getCRCLength
                  _Nrf24_getDataRate
                   _Nrf24_getPALevel
           _Nrf24_getRetransmitDelay
                    _Nrf24_getStatus
       _Nrf24_print_address_register
          _Nrf24_print_byte_register
                 _Nrf24_print_status
                             _printf
 ---------------------------------------------------------------------------------
 (3) _Nrf24_print_status                                   2     2      0    7528
                                             80 COMRAM     2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (3) _Nrf24_print_byte_register                            7     1      6    8018
                                             80 COMRAM     7     1      6
                 _Nrf24_readRegister
                             _printf
 ---------------------------------------------------------------------------------
 (3) _Nrf24_print_address_register                        14     8      6    8048
                                             80 COMRAM     7     1      6
                                              0 BANK5      7     7      0
                 _Nrf24_readRegister
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              18     4     14    7246
                                             64 COMRAM    16     2     14
                 _Nrf24_getCRCLength (ARG)
                  _Nrf24_getDataRate (ARG)
                   _Nrf24_getPALevel (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6    7108
                                             56 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           16    10      6    6851
                                             41 COMRAM    15     9      6
                               _dtoa
                              _fputc
                 _read_prec_or_width
                               _stoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (6) _xtoa                                                13     9      4    1572
                                             28 COMRAM    13     9      4
                                _pad
 ---------------------------------------------------------------------------------
 (6) _stoa                                                14    10      4     820
                                             12 COMRAM    14    10      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _read_prec_or_width                                   9     5      4     266
                                              3 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                12     8      4    2722
                                             28 COMRAM    12     8      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                  9     3      6    1133
                                             19 COMRAM     9     3      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4     505
                                             12 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4     353
                                              3 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2      96
                                              9 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     439
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     451
                                              3 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _Nrf24_getRetransmitDelay                             3     1      2     583
                                             13 COMRAM     3     1      2
                 _Nrf24_readRegister
 ---------------------------------------------------------------------------------
 (3) _Nrf24_getPALevel                                     3     1      2     620
                                             13 COMRAM     3     1      2
                 _Nrf24_readRegister
 ---------------------------------------------------------------------------------
 (3) _Nrf24_getDataRate                                    4     2      2     691
                                             13 COMRAM     4     2      2
                 _Nrf24_readRegister
 ---------------------------------------------------------------------------------
 (3) _Nrf24_getCRCLength                                   5     3      2     756
                                             13 COMRAM     5     3      2
                 _Nrf24_readRegister
 ---------------------------------------------------------------------------------
 (2) _Nrf24_isSend                                        13     9      4    1117
                                             14 COMRAM    13     9      4
                 _DELAY_milliseconds
                    _Nrf24_getStatus
                    _Nrf24_powerUpRx
 ---------------------------------------------------------------------------------
 (3) _DELAY_milliseconds                                   3     1      2      25
                                              3 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _Nrf24_init                                           2     0      2     199
                                              4 COMRAM     2     0      2
                          _SPI1_Open
 ---------------------------------------------------------------------------------
 (3) _SPI1_Open                                            2     2      0     154
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Nrf24_config                                         4     0      4    1472
                                             14 COMRAM     4     0      4
               _Nrf24_configRegister
                      _Nrf24_flushRx
                    _Nrf24_getStatus
                    _Nrf24_powerUpRx
 ---------------------------------------------------------------------------------
 (3) _Nrf24_powerUpRx                                      2     0      2     280
                                              7 COMRAM     2     0      2
               _Nrf24_configRegister
 ---------------------------------------------------------------------------------
 (3) _Nrf24_getStatus                                      1     1      0     580
                                             13 COMRAM     1     1      0
                 _Nrf24_readRegister
 ---------------------------------------------------------------------------------
 (3) _Nrf24_flushRx                                        2     0      2      87
                                              5 COMRAM     2     0      2
                  _SPI1_ByteExchange
 ---------------------------------------------------------------------------------
 (2) _AdvancedSettings                                     2     0      2    2070
                                             17 COMRAM     2     0      2
            _Nrf24_SetSpeedDataRates
           _Nrf24_setRetransmitDelay
 ---------------------------------------------------------------------------------
 (3) _Nrf24_setRetransmitDelay                             4     1      3     922
                                             13 COMRAM     4     1      3
               _Nrf24_configRegister
                 _Nrf24_readRegister
 ---------------------------------------------------------------------------------
 (3) _Nrf24_SetSpeedDataRates                              4     1      3    1083
                                             13 COMRAM     4     1      3
               _Nrf24_configRegister
                 _Nrf24_readRegister
 ---------------------------------------------------------------------------------
 (3) _Nrf24_readRegister                                   4     1      3     512
                                              9 COMRAM     4     1      3
                  _SPI1_ByteExchange
                      _SPI_read_buff
 ---------------------------------------------------------------------------------
 (4) _SPI_read_buff                                        4     1      3     198
                                              5 COMRAM     4     1      3
                  _SPI1_ByteExchange
 ---------------------------------------------------------------------------------
 (4) _Nrf24_configRegister                                 2     1      1     237
                                              5 COMRAM     2     1      1
                  _SPI1_ByteExchange
 ---------------------------------------------------------------------------------
 (5) _SPI1_ByteExchange                                    2     2      0      84
                                              3 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _TMR0_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      93
                   _CLOCK_Initialize
               _INTERRUPT_Initialize
             _PIN_MANAGER_Initialize
                    _SPI1_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0      24
      _TMR0_OverflowCallbackRegister
 ---------------------------------------------------------------------------------
 (1) _TMR0_OverflowCallbackRegister                        3     0      3      24
                                              3 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0      69
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             3     0      3      23
                                              3 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3      23
                                              3 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      23
                                              3 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManager                          2     2      0       0
                                              1 COMRAM     2     2      0
                   _TMR0_OverflowISR
 ---------------------------------------------------------------------------------
 (13) _TMR0_OverflowISR                                    0     0      0       0
                                NULL *
       _TMR0_DefaultOverflowCallback *
                         _led_toggle *
 ---------------------------------------------------------------------------------
 (14) _led_toggle                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (14) _TMR0_DefaultOverflowCallback                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _CLOCK_Initialize
     _INTERRUPT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _PIN_MANAGER_Initialize
     _SPI1_Initialize
     _TMR0_Initialize
       _TMR0_OverflowCallbackRegister
   _TMR0_OverflowCallbackRegister
   _TMR0_Start
   _sender
     _AdvancedSettings
       _Nrf24_SetSpeedDataRates
         _Nrf24_configRegister
           _SPI1_ByteExchange
         _Nrf24_readRegister
           _SPI1_ByteExchange
           _SPI_read_buff
             _SPI1_ByteExchange
       _Nrf24_setRetransmitDelay
         _Nrf24_configRegister
         _Nrf24_readRegister
     _DELAY_milliseconds
     _Nrf24_config
       _Nrf24_configRegister
       _Nrf24_flushRx
         _SPI1_ByteExchange
       _Nrf24_getStatus
         _Nrf24_readRegister
       _Nrf24_powerUpRx
         _Nrf24_configRegister
     _Nrf24_init
       _SPI1_Open
     _Nrf24_isSend
       _DELAY_milliseconds
       _Nrf24_getStatus
       _Nrf24_powerUpRx
     _Nrf24_printDetails
       _Nrf24_getCRCLength
         _Nrf24_readRegister
       _Nrf24_getDataRate
         _Nrf24_readRegister
       _Nrf24_getPALevel
         _Nrf24_readRegister
       _Nrf24_getRetransmitDelay
         _Nrf24_readRegister
       _Nrf24_getStatus
       _Nrf24_print_address_register
         _Nrf24_readRegister
         _printf
           _Nrf24_getCRCLength (ARG)
           _Nrf24_getDataRate (ARG)
           _Nrf24_getPALevel (ARG)
           _vfprintf (ARG)
             _vfpfcnvrt
               _dtoa
                 ___awdiv
                 ___awmod
                 _abs
                   ___awmod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
               _fputc
               _read_prec_or_width
               _stoa
                 _fputc
               _xtoa
                 _pad
       _Nrf24_print_byte_register
         _Nrf24_readRegister
         _printf
       _Nrf24_print_status
         _printf
       _printf
     _Nrf24_send
       _Nrf24_getStatus
       _Nrf24_powerUpTx
         _Nrf24_configRegister
       _SPI1_ByteExchange
       _SPI_write_buff
         _DELAY_microseconds
         _SPI1_ByteExchange
     _Nrf24_setTADDR
       _Nrf24_readRegister
       _Nrf24_writeRegister
         _SPI1_ByteExchange
         _SPI_write_buff

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_OverflowISR
     NULL(Fake) *
     _TMR0_DefaultOverflowCallback *
     _led_toggle *

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            8191      0       0      0.0%
BITBIGSFRh        1150      0       0      0.0%
BITBIGSFR_1        256      0       0      0.0%
BITBANK36          256      0       0      0.0%
BANK36             256      0       0      0.0%
BITBANK35          256      0       0      0.0%
BANK35             256      0       0      0.0%
BITBANK34          256      0       0      0.0%
BANK34             256      0       0      0.0%
BITBANK33          256      0       0      0.0%
BANK33             256      0       0      0.0%
BITBANK32          256      0       0      0.0%
BANK32             256      0       0      0.0%
BITBANK31          256      0       0      0.0%
BANK31             256      0       0      0.0%
BITBANK30          256      0       0      0.0%
BANK30             256      0       0      0.0%
BITBANK29          256      0       0      0.0%
BANK29             256      0       0      0.0%
BITBANK28          256      0       0      0.0%
BANK28             256      0       0      0.0%
BITBANK27          256      0       0      0.0%
BANK27             256      0       0      0.0%
BITBANK26          256      0       0      0.0%
BANK26             256      0       0      0.0%
BITBANK25          256      0       0      0.0%
BANK25             256      0       0      0.0%
BITBANK24          256      0       0      0.0%
BANK24             256      0       0      0.0%
BITBANK23          256      0       0      0.0%
BANK23             256      0       0      0.0%
BITBANK22          256      0       0      0.0%
BANK22             256      0       0      0.0%
BITBANK21          256      0       0      0.0%
BANK21             256      0       0      0.0%
BITBANK20          256      0       0      0.0%
BANK20             256      0       0      0.0%
BITBANK19          256      0       0      0.0%
BANK19             256      0       0      0.0%
BITBANK18          256      0       0      0.0%
BANK18             256      0       0      0.0%
BITBANK17          256      0       0      0.0%
BANK17             256      0       0      0.0%
BITBANK16          256      0       0      0.0%
BANK16             256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BANK15             256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0      32     12.5%
BITBANK5           160      0       0      0.0%
BANK5              160     53     155     96.9%
BITBIGSFRl         128      0       0      0.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     89      92     96.8%
STACK                0      0       0      0.0%
DATA                 0      0     279      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Tue Oct 22 08:42:27 2024

                           _SPI1_ByteExchange 1842                             Nrf24_setTADDR@adr 0510  
                           Nrf24_setTADDR@dev 050E                             ??_Nrf24_powerUpRx 050A  
                           ??_Nrf24_powerUpTx 050A                             Nrf24_setTADDR@ret 051A  
                        ??_Nrf24_printDetails 059F                                            l61 19D0  
                                          l67 0BCE                                            l69 0BCE  
                          ?_SPI1_ByteExchange 0501                           ?_Nrf24_print_status 0501  
                                ___awdiv@sign 0509                                           l102 1858  
                                         l104 1866                                           l105 186C  
                                         l136 1A10                                           l307 1624  
                                         l324 1A48                                           l350 1A2C  
                                         l263 113A                                           l416 1894  
                                         l337 1A3A                                           l419 1A5A  
                                         l621 19A4                                           l438 1A1E  
                                         l366 19FC                                           l550 16C4  
                                         l374 178C                                           l543 1692  
                                         l383 14FC                      Nrf24_getCRCLength@config 0512  
                                         l544 1694                                           l712 1840  
                                         l560 14AA                                           l625 19B8  
                                         l633 17BC                                           l553 1456  
                                         l641 172A                                           l554 1458  
                                         l707 1328                                           l715 058A  
                                         l548 16C2                                           l732 1454  
                                         l660 11C6                                           l629 17A0  
                                         l477 194A                                           l573 1814  
                                         l637 170C                                           l750 1390  
                                         l726 1000                                           l718 1246  
                                         l558 14A8                                           l494 17E6  
                                         l671 0F00                                           l591 0EAE  
                                         l672 0F5A                                           l648 1186  
                                         l745 138E                                           l737 159C  
                                         l753 1988                                           l691 1A54  
                                         l579 12BA                                           l747 1374  
                                         l739 15A0                                           l684 1906  
                                         l677 19E6                                           l589 0EA6  
                                         l694 1928                                           l687 1A4A  
                                         l759 19A0                                           l999 0D54  
                  __end_of_DELAY_milliseconds 178E                    ??_INT0_SetInterruptHandler 0507  
                                         _abs 165E                                           _pad 1002  
                         ??_SPI1_ByteExchange 0504                                  ___awmod@sign 0509  
                    Nrf24_getCRCLength@result 0510                                           prod 04F3  
                                         tosl 04FD                                           wreg 04E8  
                                        l1012 0E02                                          ?_abs 050A  
                                        l2201 10CC                                          l2211 10E2  
                                        l2203 10CE                                          l1500 0772  
                                        l2221 10EC                                          l2213 10E4  
                                        l2205 10D4                                          l3101 0B08  
                                        l3111 1A3C                                          l2231 10FA  
                                        l2223 10EE                                          l2215 10E6  
                                        l2207 10DE                                          l3103 0B18  
                                        l1512 086A                                          l3113 1A2E  
                                        l2241 110A                                          l2233 10FC  
                                        l2225 10F0                                          l2217 10E8  
                                        l2209 10E0                                          l4001 1300  
                                        l3105 0BC6                                          l3121 1772  
                                        l3115 1A20                                          l2251 1126  
                                        l2243 110C                                          l2235 10FE  
                                        l2227 10F6                                          l2219 10EA  
                                        l3123 1A12                                          l4003 130E  
                                        l4011 182E                                          l3107 0BC8  
                                        l1507 0822                                          l3051 14DA  
                                        l3043 14AC                                          l1532 0A3A  
                                        l1524 096E                                          l1452 18E2  
                                        l2261 1130                                          l2253 1128  
                                        l2245 110E                                          l2237 1104  
                                        l2229 10F8                                          l2181 19CC  
                                        l2173 19BA                                          l4005 131E  
                                        l4013 1836                                          l4021 18E4  
                                        l3109 0BCA                                          l3301 1800  
                                        l3117 175E                                          l3053 14E2  
                                        l3045 14B0                                          l2191 1A0C  
                                        l2263 1132                                          l2255 112A  
                                        l2247 1120                                          l2239 1106  
                                        l2183 19CE                                          l2175 19C4  
                                        l4007 1816                                          l4031 1A4C  
                                        l4015 19D2                                          l4023 18EE  
                                        l3303 1810                                          l3119 1762  
                                        l4111 1356                                          l4103 132A  
                                        l3047 14B8                                          l1472 103A  
                                        l1480 05EA                                          l1528 0A32  
                                        l2193 1A0E                                          l2185 19FE  
                                        l2265 1134                                          l2257 112C  
                                        l2249 1124                                          l2177 19C8  
                                        l2417 1A56                                          l4009 1828  
                                        l4033 1A52                                          l4017 19E4  
                                        l4025 18F0                                          l3305 1812  
                                        l4113 1364                                          l4105 132C  
                                        l4121 196C                                          l3049 14C0  
                                        l4201 11A0                                          l4041 1728  
                                        l1570 1690                                          l2187 1A04  
                                        l2267 1136                                          l2259 112E  
                                        l2195 10A0                                          l2179 19CA  
                                        l3411 19F8                                          l4027 18FA  
                                        l4211 0EC8                                          l4115 1382  
                                        l4107 133E                                          l4123 197E  
                                        l4131 199C                                          l1475 107C  
                                        l1547 038C                                          l1563 154E  
                                        l4051 0F5C                                          l4043 1908  
                                        l4203 11A6                                          l4035 16FC  
                                        l1548 021A                                          l2189 1A06  
                                        l2269 1138                                          l2197 10BE  
                                        l4029 18FC                                          l4141 126C  
                                        l4213 0EDC                                          l4117 138A  
                                        l4109 1344                                          l4125 1986  
                                        l1477 109E                                          l1493 0700  
                                        l4053 0F74                                          l4045 1914  
                                        l4205 11C2                                          l4037 170E  
                                        l1582 0B04                                          l1590 15E4  
                                        l3271 15EC                                          l2199 10C2  
                                        l3407 19E8                                          l4135 192A  
                                        l4143 1276                                          l4215 0EE2  
                                        l1567 1678                                          l4055 0F86  
                                        l4071 0FE2                                          l4047 191E  
                                        l4207 11C4                                          l4039 1718  
                                        l4151 0E04                                          l4231 0BD0  
                                        l3273 15FC                                          l3281 186E  
                                        l3409 19F4                                          l4145 128C  
                                        l4137 1248                                          l4225 0F12  
                                        l4217 0EF0                                          l4209 0EB0  
                                        l4129 198A                                          l1593 1A5C  
                                        l3601 0A88                                          l4073 0FF4  
                                        l4065 0F9E                                          l4057 0F88  
                                        l4081 1424                                          l4049 11CA  
                                        l4153 0E0C                                          l4241 0C0C  
                                        l4233 0BDC                                          l3275 15FE  
                                        l3291 188E                                          l3283 1874  
                                        l4147 12A2                                          l4139 1268  
                                        l4227 0F1E                                          l4091 1568  
                                        l3603 0ABE                                          l3611 15C0  
                                        l4067 0FC0                                          l4059 0F94  
                                        l4083 1436                                          l4075 13F8  
                                        l4171 0E8A                                          l4155 0E1E  
                                        l4251 0C5A                                          l4243 0C20  
                                        l4235 0BDC                                          l3277 1610  
                                        l3269 15E6                                          l3285 187A  
                                        l4149 12AE                                          l4229 0F2A  
                                        l4093 157A                                          l3621 0CAC  
                                        l3613 15C4                                          l3701 1032  
                                        l4069 0FC6                                          l4085 1448  
                                        l4077 1410                                          l4173 038E  
                                        l4181 113C                                          l4165 0E4A  
                                        l4157 0E30                                          l4253 0C6E  
                                        l4245 0C30                                          l4237 0BDC  
                                        l4261 17D4                                          l3279 1612  
                                        l3287 188A                                          l4095 1582  
                                        l4087 1550                                          l3631 0CD2  
                                        l3623 0CB0                                          l3615 0C94  
                                        l3711 165E                                          l3607 15A2  
                                        l3703 1046                                          l4079 1422  
                                        l4175 053E                                          l4191 1188  
                                        l4183 1144                                          l4167 0E82  
                                        l4159 0E42                                          l4255 0C82  
                                        l4247 0C3C                                          l4239 0BF0  
                                        l4263 17D8                                          l3289 188C  
                                        l3297 17EA                                          l4097 1594  
                                        l4089 1562                                          l3641 0D08  
                                        l3633 0CE4                                          l3625 0CBE  
                                        l3617 0C96                                          l3713 166C  
                                        l3609 15AE                                          l3705 105A  
                                        l3721 05AC                                          l3801 0880  
                                        l4177 054E                                          l4193 1194  
                                        l4185 114A                                          l4169 0E86  
                                        l4249 0C48                                          l4257 17BE  
                                        l3299 17F0                                          l4099 159E  
                                        l3643 0D1E                                          l3635 0CEC  
                                        l3651 0D34                                          l3627 0CC6  
                                        l3619 0CA4                                          l3707 105E  
                                        l3731 05E6                                          l3723 05BC  
                                        l3715 058C                                          l3811 08AC  
                                        l3803 0888                                          l4179 0576  
                                        l4195 1196                                          l4187 1160  
                                        l4259 17C2                                          l3653 0D44  
                                        l3645 0D26                                          l3637 0CF4  
                                        l3629 0CCA                                          l3661 0D58  
                                        l3709 108A                                          l3741 0634  
                                        l3733 05F2                                          l3725 05C2  
                                        l3717 0590                                          l3813 08B0  
                                        l3805 088E                                          l3821 08E8  
                                        l3901 017E                                          l4197 119C  
                                        l4189 116E                                          ?_pad 0514  
                                        l3655 0D4C                                          l3647 0D28  
                                        l3639 0D02                                          l3671 0D88  
                                        l3663 0D66                                          l3751 0692  
                                        l3743 063A                                          l3735 05FA  
                                        l3727 05D2                                          l3719 05A4  
                                        l3823 0904                                          l3831 094E  
                                        l3815 08C0                                          l3807 0894  
                                        l3911 01FE                                          l3903 019E  
                                        l4199 119E                                          l3649 0D2E  
                                        l3681 0DCE                                          l3673 0D9A  
                                        l3665 0D6E                                          l3593 0A3C  
                                        l3761 06E0                                          l3753 06AC  
                                        l3737 0600                                          l3745 0656  
                                        l3729 05DE                                          l3841 09DA  
                                        l3825 0916                                          l3817 08C2  
                                        l3809 08A4                                          l3921 0282  
                                        l3913 021C                                          l3905 01E6  
                                        l3851 184E                                          l3691 0DFA  
                                        l3683 0DD6                                          l3675 0DA2  
                                        l3667 0D72                                          l3659 0D56  
                                        l3595 0A4E                                          l3747 0670  
                                        l3755 06BA                                          l3739 0632  
                                        l3843 09F8                                          l3835 0970  
                                        l3771 0730                                          l3827 0926  
                                        l3819 08C8                                          l3931 0316  
                                        l3923 02BA                                          l3915 0244  
                                        l3853 1850                                          l3685 0DDC  
                                        l3677 0DAA                                          l3669 0D80  
                                        l3597 0A60                                          l3757 06CA  
                                        l3749 0682                                          l3845 0A06  
                                        l3837 0978                                          l3781 07AC  
                                        l3773 0734                                          l3765 0702  
                                        l3829 0940                                          l3925 02F2  
                                        l3917 0252                                          l3861 0000  
                                        l3855 1854                                          l3847 1844  
                                        l3951 16B0                                          l3679 0DB8  
                                        l3687 0DE2                                          l3599 0A6A  
                                        l3695 1002                                          l3759 06D0  
                                        l3839 09A0                                          l3791 0834  
                                        l3783 07CE                                          l3767 071C  
                                        l3935 034E                                          l3919 025A  
                                        l3871 004E                                          l3863 0028  
                                        l3857 186A                                          l3849 1848  
                                        l3945 169A                                          l3689 0DF2  
                                        l3697 1010                                          l3793 0848  
                                        l3785 0804                                          l3777 0794  
                                        l3769 0724                                          l3929 0306  
                                        l3873 0050                                          l3881 008E  
                                        l3865 0036                                          l3953 14FE  
                                        l3947 16AA                                          l3699 1024  
                                        l3795 084C                                          l3779 07A8  
                                        l3787 0808                                          l3891 00E2  
                                        l3883 009E                                          l3875 0062  
                                        l3867 0042                                          l3939 0360  
                                        l3955 150A                                          l3963 145E  
                                        l3971 1496                                          l3973 19A6  
                                        l3949 16AE                                          l3981 17AA  
                                        l3797 086C                                          l3893 0102  
                                        l3885 00BA                                          l3869 0048  
                                        l3957 1526                                          l3965 1484  
                                        l3975 19B6                                          l3983 17BA  
                                        l3991 12BC                                          l3799 0870  
                                        l3895 0122                                          l3887 00C8  
                                        l3879 006A                                          l3959 1546  
                                        l3967 1488                                          l3977 1790  
                                        l3897 0166                                          l3889 00D2  
                                        l3985 18BE                                          l3969 1494  
                                        l3979 17A2                                          l3995 12D0  
                                        l3987 18C6                                          l3997 12E2  
                                        l3999 12F4                                          STR_1 FFF5  
                                        STR_2 FEFE                                          STR_3 FF89  
                                        STR_4 FF96                                          STR_5 FFB8  
                                        STR_6 FFA3                                          STR_7 FFE1  
                                        STR_8 FFAE                                          STR_9 FFE8  
                        ??_Nrf24_print_status 0551                                          u3000 0028  
                                        u3001 0024                                          u3010 009E  
                                        u3011 009A                                          u3100 0316  
                                        u3020 00C8                                          u3101 0312  
                                        u3021 00C4                                          _LATA 04BE  
                                        u3110 16C2                                          u3030 0102  
                                        _LATB 04BF                                          u3111 16BE  
                                        u3031 00FE                                          _LATC 04C0  
                                        u3040 0122                                          u3120 1546  
                                        u3200 11EA                                          _LATD 04C1  
                                        u3041 011E                                          u3121 1542  
                                        _LATE 04C2                                          u3050 019E  
                                        u3210 11FE                                          u3130 1480  
                                        _LATF 04C3                                          u3051 019A  
                                        u3211 11F8                                          u3300 157A  
                                        u2500 0A60                                          u3060 0244  
                                        u3220 1200                                          u3140 14A8  
                                        u3301 1576                                          u2501 0A5C  
                                        u3061 0240                                          u3141 14A4  
                                        u3150 17A0                                          u3310 1594  
                                        u2510 0A88                                          u3070 0282  
                                        u3230 1214                                          u3151 179C  
                                        u3311 1590                                          u2511 0A84  
                                        u3071 027E                                          u3231 120E  
                                        u3160 12CC                                          u3400 0EF0  
                                        u3320 1364                                          u2600 0D66  
                                        u2520 0ABE                                          u3080 02BA  
                                        u3240 1216                                          u3161 12C8  
                                        u3401 0EEC                                          u3321 1360  
                                        u2601 0D62                                          u2521 0ABA  
                                        u3081 02B6                                          u3137 1476  
                                        u3170 12F4                                          u3410 0F0E  
                                        u3330 1374                                          u2610 0D80  
                                        u2530 15E4                                          u3090 02F2  
                                        u3250 123C                                          u3171 12F0  
                                        u3411 0F0A                                          u3331 1370  
                                        u2611 0D7C                                          u2531 15E0  
                                        u3091 02EE                                          u3251 1236  
                                        u3420 0F5A                                          u3340 1382  
                                        u2540 0CA4                                          u2620 0D9A  
                                        u2700 166C                                          u3260 123E  
                                        u3180 170C                                          u3421 0F56  
                                        u3341 137E                                          u2541 0CA0  
                                        u2621 0D96                                          u2701 1668  
                                        u3181 1708                                          u2550 0CBE  
                                        u2630 0DB8                                          u2710 05A0  
                                        u3270 0FE2                                          u3190 11E8  
                                        u1910 14D6                                          u3350 0E82  
                                        u3430 0C20                                          u2551 0CBA  
                                        u2631 0DB4                                          u2711 059A  
                                        u3271 0FDE                                          u3191 11E2  
                                        u1911 14D2                                          u3351 0E7E  
                                        u3431 0C1C                                          u2560 0CE4  
                                        u2640 0DCE                                          u2800 06CA  
                                        u2720 05A2                                          u3280 0FF4  
                                        u1920 14FC                                          u3360 0EA6  
                                        u2561 0CE0                                          u2641 0DCA  
                                        u2801 06C6                                          u3281 0FF0  
                                        u1921 14F8                                          u3361 0EA2  
                                        u3441 0C52                                          u2570 0D02  
                                        u2650 0DF2                                          u2490 0A4E  
                                        u2730 05BC                                          u2810 071C  
                                        u3290 1448                                          u3370 1160  
                                        u2571 0CFE                                          u2651 0DEE  
                                        u2491 0A4A                                          u2731 05B8  
                                        u2811 0718                                          u3291 1444  
                                        u3371 115C                                          u2580 0D1E  
                                        u2660 1010                                          u2740 05D2  
                                        u2820 0762                                          u2900 08A4  
                                        u3380 1186                                          u2581 0D1A  
                                        u2661 100C                                          u2741 05CE  
                                        u2901 08A0                                          u3381 1182  
                                        u3390 0EC8                                          u2590 0D44  
                                        u2670 1032                                          u2750 0670  
                                        u2830 0772                                          u3391 0EC4  
                                        u2591 0D40                                          u2671 102E  
                                        u2751 066C                                          u2831 076E  
                                        u2680 107C                                          u2760 0682  
                                        u2840 0790                                          u2920 0904  
                                        u2681 1078                                          u2761 067E  
                                        u2841 078C                                          u2921 0900  
                                        u2690 108A                                          u2770 0692  
                                        u2850 07CA                                          u2930 0916  
                                        u2691 1086                                          u2771 068E  
                                        u2851 07C6                                          u2827 0758  
                                        u2931 0912                                          u2915 08D4  
                                        u3547 14B2                                          u1980 0B18  
                                        u2780 06AC                                          u2860 07F0  
                                        u2940 0926                                          u1981 0B14  
                                        u2781 06A8                                          u2941 0922  
                                        u3557 14DC                                          u1990 178C  
                                        u2790 06BA                                          u2870 0822  
                                        u2950 0940                                          u1991 1788  
                                        u3567 1768                                          u2791 06B6  
                                        u2871 081E                                          u2951 093C  
                                        u2880 0830                                          u2960 094E  
                                        u2881 082C                                          u2961 094A  
                                        u2970 09A0                                          u2890 086A  
                                        u2971 099C                                          u2891 0866  
                                        u2867 07E6                                          u2980 0A32  
                                        u2981 0A2E                                          u2990 1866  
                                        u2991 1862                                          _WPUA 0401  
                                        _WPUB 0409                                          _WPUC 0411  
                                        _WPUD 0419                                          _WPUE 0421  
                                        _WPUF 0429                          Nrf24_setTADDR@buffer 0515  
                                        abs@a 050A                                          _dbuf 05CF  
                                        _main 17BE                                          _dtoa 058C  
                            Nrf24_send@status 0514                                          _prec 05CD  
                                        pad@i 051B                                          pad@p 0518  
                                        fsr0h 04EA                                          fsr1h 04E2  
                                        indf0 04EF                                          fsr2h 04DA  
                                        fsr0l 04E9                                          indf2 04DF  
                                        fsr1l 04E1                                          fsr2l 04D9  
                                        _stoa 0702                                          _xtoa 086C  
                   ?_INT2_SetInterruptHandler 0504                                          prodh 04F4  
                                        prodl 04F3                                          start 001A  
                   __end_of_SPI1_ByteExchange 186E                                _SPI1STATUSbits 0087  
                                ___param_bank 0000                              _TMR0_OverflowISR 16C6  
                    __end_of_AdvancedSettings 194C                                         ??_abs 050C  
                                       ??_pad 051A                       __end_of_TMR0_Initialize 1896  
                                       ?_main 0501                                         ?_dtoa 051D  
                             __end_of___awdiv 0D56                                         STR_10 FFC1  
                                       STR_11 FFCA                                         STR_20 FFD5  
                                       STR_12 FF7B                                         STR_21 FEFB  
                                       STR_13 FF5A                                         STR_22 FFEF  
                                       STR_14 FF48                                         STR_23 FFD2  
                                       STR_15 FF6B                                         STR_24 FEFB  
                                       STR_16 FF33                                         STR_25 FFDA  
                                       STR_17 FEB8                                         STR_18 FFEF  
                                       STR_19 FFFB                               __end_of___awmod 0E04  
                                       ?_stoa 050D                                SPI_read_buff@i 0509  
                             ___awdiv@divisor 0506                                         ?_xtoa 051D  
                                       _IOCAF 0407                                         _IOCBF 040F  
                                       _IOCCF 0417                                         _IOCAN 0406  
                                       _IOCEF 0427                                         _IOCAP 0405  
                                       _IOCBN 040E                                         _IOCBP 040D  
                                       _IOCCN 0416                                         _IOCCP 0415  
                                       _IOCEN 0426                                         _IOCEP 0425  
                                       i2l314 1754                                         i2l441 1A5E  
                                       i2l435 16F8                                         i2l472 1896  
                                       i2l474 18BC                               ___awdiv@counter 0508  
                                       _OSCEN 00B3                                  vfpfcnvrt@fmt 052C  
                                       _TMR0H 0319                                         _TMR0L 0318  
                                       _TRISA 04C6                                         _TRISB 04C7  
                                       _TRISC 04C8                                         _TRISD 04C9  
                                       _TRISE 04CA                                         _TRISF 04CB  
                                  _Nrf24_init 17EA                                    _Nrf24_send 113C  
                      ??_Nrf24_configRegister 0507                                   ?_TMR0_Start 0501  
                                       _flags 055C                           read_prec_or_width@c 050A  
                         read_prec_or_width@n 050B                                         _fputc 0A3C  
                                       _fputs 15A2                                         pad@fp 0514  
                                       _width 055A                                         _putch 1A5C  
                                       dtoa@d 051F                                         dtoa@i 0527  
                                       dtoa@p 0523                                         dtoa@s 0526  
                                       dtoa@w 0524                      _INT1_SetInterruptHandler 1A2E  
                                       pclath 04FA                                         pclatu 04FB  
                                       tablat 04F5                                         plusw1 04E3  
                                       plusw2 04DB                                         stoa@l 0519  
                                       stoa@p 0513                                         stoa@s 050F  
                                       stoa@w 0515                                         status 04D8  
                                       xtoa@c 0527                                         xtoa@d 051F  
                                       xtoa@i 0528                                         xtoa@p 0524  
                                       xtoa@w 0525                       _Nrf24_SetSpeedDataRates 12BC  
                             __initialization 1392                      Nrf24_writeRegister@value 050A  
                               _SPI_read_buff 1692                                  __end_of_main 17EA  
                                __end_of_dtoa 0702                       Nrf24_configRegister@reg 0507  
                                __end_of_stoa 086C                                  __end_of_xtoa 0970  
                SPI1_ByteExchange@returnValue 0505                   ?_INTERRUPT_InterruptManager 0501  
                Nrf24_print_byte_register@dev 0551                  Nrf24_print_byte_register@reg 0555  
                Nrf24_print_byte_register@qty 0556                     Nrf24_configRegister@value 0506  
                                      ??_main 055A                                        ??_dtoa 0521  
                         Nrf24_config@channel 0511                                        ??_stoa 0511  
                                      ??_xtoa 0521                                 __activetblptr 0003  
                 ??_Nrf24_print_byte_register 0557                          __end_of_Nrf24_config 12BC  
                  __end_of_read_prec_or_width 0A3C                          __end_of_Nrf24_isSend 0F5C  
                         Nrf24_config@payload 0512                                        ?_fputc 0504  
                                      _ACTCON 00AC                                        ?_fputs 050D  
                            ___awdiv@dividend 0504                                        _ANSELA 0400  
                                      ?_putch 0501                                        _ANSELB 0408  
                                      _ANSELC 0410                                        _ANSELD 0418  
                                      _ANSELE 0420                                        _ANSELF 0428  
                                      _T0CON0 031A                                        _T0CON1 031B  
                                      _RB1I2C 0289                                        _RB2I2C 0288  
                                      _RC3I2C 0287                                        _RC4I2C 0286  
                                      _RC4PPS 0215                                        _ODCONA 0402  
                                      _ODCONB 040A                                        _ODCONC 0412  
                                      _RC6PPS 0217                                        _ODCOND 041A  
                                      _ODCONE 0422                                        _ODCONF 042A  
                                      i2l3401 16C6                                        i2l3403 16C8  
                                      i2l3405 16DE                                        i2l3441 1742  
                                      i2l3443 1750                                        i2l3293 1896  
                                      i2l3439 1734                                        _INLVLA 0404  
                                      _INLVLB 040C                                        _INLVLC 0414  
                                      _INLVLD 041C                                        _INLVLE 0424  
                                      _INLVLF 042C                               _Nrf24_getStatus 19D2  
                                      _OSCFRQ 00B1                                 vfpfcnvrt@done 0536  
             Nrf24_print_byte_register@buffer 0557                             __end_of_SPI1_Open 0BD0  
                                      _Timer0 FE79                                ?_SPI_read_buff 0506  
                                vfprintf@cfmt 053F                                     ??___awdiv 0508  
                                   ??___awmod 0508                              ?_TMR0_Initialize 0501  
               Nrf24_getRetransmitDelay@value 0510                          read_prec_or_width@ap 0506  
                                      clear_0 13D8                              ___awdiv@quotient 050A  
                             ___awmod@divisor 0506                                        _sender 0BD0  
                                      isa$std 0001                               ___awmod@counter 0508  
                                      _printf 18BE                                        pad@buf 0516  
                                      dtoa@fp 051D                             ?_CLOCK_Initialize 0501  
                                      fputc@c 0504                  _INT2_DefaultInterruptHandler 0000  
                                      fputs@c 0511                                        fputs@i 0512  
                                      fputs@s 050D                            ??_CLOCK_Initialize 0504  
                                __mediumconst FE4E                                        tblptrh 04F7  
                                      tblptrl 04F6                                        tblptru 04F8  
                                 ?_Nrf24_init 0505                                   ?_Nrf24_send 050F  
                                      stoa@cp 0517                                        stoa@fp 050D  
                                      putch@c 0501                              __end_of_vfprintf 1550  
    INT2_SetInterruptHandler@InterruptHandler 0504      INT1_SetInterruptHandler@InterruptHandler 0504  
    INT0_SetInterruptHandler@InterruptHandler 0504                                        xtoa@fp 051D  
                              _SPI1_IsRxReady 0000                                _SPI1_IsTxReady 0000  
                           _SYSTEM_Initialize 19E8                               _Nrf24_powerUpRx 18E4  
                             _Nrf24_powerUpTx 1908                                    __accesstop 0560  
                     __end_of__initialization 13F2                         Nrf24_getCRCLength@dev 050E  
                   ??_Nrf24_SetSpeedDataRates 0511                                _SPI1_ByteWrite 0000  
                   _Nrf24_print_byte_register 13F8                            ?_SYSTEM_Initialize 0501  
                          _Nrf24_getCRCLength 132A                                 ___rparam_used 0001  
               Nrf24_setRetransmitDelay@value 0511                                __pcstackCOMRAM 0501  
                                __pidataBANK5 1626                                  __pidataBANK6 194C  
                         ??_SYSTEM_Initialize 0507                           ?_Nrf24_getCRCLength 050E  
                               __end_of_fputc 0B06                                 __end_of_fputs 15E6  
                           ??_SPI1_Initialize 0504                            _DELAY_microseconds 14AC  
                               __end_of_putch 1A5E                     ?_Nrf24_getRetransmitDelay 050E  
                   ?_Nrf24_setRetransmitDelay 050E                            _spi1_configuration FE8B  
                Nrf24_SetSpeedDataRates@value 0511                           ?_DELAY_microseconds 0504  
                         SPI_write_buff@bytes 0508              __end_of_INT2_SetInterruptHandler 1A2E  
               Nrf24_print_byte_register@name 0553                       __end_of_Nrf24_getStatus 19E8  
                        ??_Nrf24_getCRCLength 0510                      __end_of_TMR0_OverflowISR 16FA  
                                     ??_fputc 0508                     __end_of_SYSTEM_Initialize 19FE  
                                     ??_fputs 0511                                       ??_putch 0504  
                              _rf24_datarates 0580                                    __pbssBANK5 05CD  
                          _DELAY_milliseconds 175E                         _INT0_InterruptHandler 05F8  
                       _TMR0_OverflowCallback 05EF                              _Nrf24_getPALevel 196C  
                             ??_SPI_read_buff 0509                                       IVTBASEH 045E  
                                     IVTBASEL 045D                                       IVTBASEU 045F  
                        ??_DELAY_microseconds 0506                                _rf24_crclength FE9A  
                       __end_of_Nrf24_flushRx 1A56            Nrf24_print_address_register@buffer 0598  
                         ?_DELAY_milliseconds 0504                             ?_AdvancedSettings 0512  
                                     ?_sender 05A6                                       ?_printf 0541  
                          ??_AdvancedSettings 0514                           Nrf24_isSend@timeout 0511  
                  ??_INT1_SetInterruptHandler 0507                          Nrf24_getDataRate@dev 050E  
                        ??_DELAY_milliseconds 0506                                       _OSCCON1 00AD  
                                     _OSCCON3 00AF                                       _SPI1CLK 008C  
                     __end_of_Nrf24_powerUpRx 1908                       __end_of_Nrf24_powerUpTx 192A  
                                     _SPI1RXB 0080                                       _SPI1TXB 0081  
                  __end_of_Nrf24_readRegister 17BE                                       _OSCTUNE 00B0  
                                ??_TMR0_Start 0504                                       _SLRCONA 0403  
                                     _SLRCONB 040B                                       _SLRCONC 0413  
                                     _SLRCOND 041B                                       _SLRCONE 0423  
                                     _SLRCONF 042B                                    _led_toggle 1896  
                      __end_of_rf24_crclength FEB8                     ?_INT0_SetInterruptHandler 0504  
                                     __Hparam 0000                                  _Nrf24_config 1248  
                                     __Lparam 0000                                  _Nrf24_isSend 0EB0  
                          __end_of_SPI1_nrf24 FE79                           _Nrf24_writeRegister 16FA  
                              _SPI_write_buff 1456                                       ___awdiv 0C94  
                                     ___awmod 0D56                                     ?_vfprintf 0539  
                          __end_of_TMR0_Start 1A5C                            SPI_read_buff@bytes 0508  
                                     __pcinit 1392                                       __ramtop 2600  
                                     __ptext0 17BE                                       __ptext1 0BD0  
                                     __ptext2 0E04                                       __ptext3 16FA  
                                     __ptext4 113C                                       __ptext5 1456  
                                     __ptext6 14AC                                       __ptext7 1908  
                                     __ptext8 038E                                       __ptext9 11C8  
                       read_prec_or_width@fmt 0504                              ___awmod@dividend 0504  
                    ??_PIN_MANAGER_Initialize 0504                              ?_Nrf24_getStatus 0501  
                        ?_Nrf24_writeRegister 050A                          end_of_initialization 13F2  
                    _INT2_SetInterruptHandler 1A20                               Nrf24_config@dev 050F  
                                   _PIR10bits 04B8                                       fputc@fp 0506  
                                     fputs@fp 050F                            _read_prec_or_width 0970  
                             Nrf24_isSend@dev 050F                 Nrf24_print_address_register@i 059D  
                      __end_of_SPI_write_buff 14AC                             __end_of_vfpfcnvrt 038E  
                             _SPI1_BufferRead 0000                                     _SPI1TCNTH 0083  
                                   _SPI1TCNTL 0082                                       postdec1 04E5  
                                     postdec2 04DD                           ?_read_prec_or_width 0504  
                                     postinc0 04EE                                       postinc1 04E6  
                                     postinc2 04DE                              vfpfcnvrt@convarg 0532  
                                  ??_vfprintf 053F                                     _SPI1_Open 0B06  
                       _INT1_InterruptHandler 05F5                                     _TMR0_Stop 0000  
                       Nrf24_printDetails@dev 0558                           _SPI1_BufferExchange 0000  
                         Nrf24_getPALevel@dev 050E         __end_of_TMR0_OverflowCallbackRegister 1A20  
               _TMR0_OverflowCallbackRegister 1A12  TMR0_OverflowCallbackRegister@CallbackHandler 0504  
                                ??_Nrf24_init 0507                                     _TRISCbits 04C8  
                                ??_Nrf24_send 0513                               Nrf24_setTADDR@i 051C  
                            ?_Nrf24_powerUpRx 0508                              ?_Nrf24_powerUpTx 0508  
                       ??_Nrf24_writeRegister 050D                          ??_read_prec_or_width 0508  
                                 ?_led_toggle 0501                               _SPI1_Initialize 19BA  
        __end_of_TMR0_DefaultOverflowCallback 1A60                  _TMR0_DefaultOverflowCallback 1A5E  
                             Nrf24_send@value 0511              __end_of_Nrf24_getRetransmitDelay 19A2  
            __end_of_Nrf24_setRetransmitDelay 1842                               ?_SPI_write_buff 0506  
                              __end_of_Timer0 FE8B                  __end_of_INTERRUPT_Initialize 1626  
                          __end_of_Nrf24_init 1816                            __end_of_Nrf24_send 11C8  
                                 _rf24_pa_dbm 0600                  _INT0_DefaultInterruptHandler 0000  
                                  ?_SPI1_Open 0501                                   vfpfcnvrt@ap 052E  
                                 vfpfcnvrt@cp 0537                                   vfpfcnvrt@fp 052A  
                              __end_of_sender 0C94                                __end_of_printf 18E4  
                    __end_of_Nrf24_getPALevel 198A                           start_initialization 1392  
                                 __end_of_abs 1692                                   __end_of_pad 10A0  
                           ?_TMR0_OverflowISR 0501                                    ivt0x8_base 0008  
                          ??_TMR0_OverflowISR 0502                          SPI_write_buff@buffer 0506  
               ?_TMR0_DefaultOverflowCallback 0501                                   vfprintf@fmt 053B  
                              _Nrf24_setTADDR 0E04          __end_of_Nrf24_print_address_register 1002  
                _Nrf24_print_address_register 0F5C                                   __pdataBANK5 0560  
                                 __pdataBANK6 0600                                      ??_sender 055A  
                                    ??_printf 054F                          Nrf24_getCRCLength@AA 0511  
                               _SPI1_ByteRead 0000                                   __pbssCOMRAM 055A  
            __end_of_INT0_SetInterruptHandler 1A4A                                 __pcstackBANK5 0598  
                     __end_of_SPI1_Initialize 19D2                ?_TMR0_OverflowCallbackRegister 0504  
                          Nrf24_powerUpRx@dev 0508                      Nrf24_print_status@status 0552  
                    ?_Nrf24_SetSpeedDataRates 050E                            Nrf24_powerUpTx@dev 0508  
                       _INT2_InterruptHandler 05F2                                     __pnvBANK5 05EF  
                          _Nrf24_readRegister 178E                        __end_of_Nrf24_setTADDR 0EB0  
                      _PIN_MANAGER_Initialize 10A0                                     _dtoa$1909 0521  
                       __end_of_SPI_read_buff 16C6                    __end_of_Nrf24_printDetails 058C  
                               __pmediumconst FE4E                                      ?___awdiv 0504  
                                    ?___awmod 0504                             _Nrf24_getDataRate 1550  
                    _Nrf24_getRetransmitDelay 198A                      _Nrf24_setRetransmitDelay 1816  
                                 ??_SPI1_Open 0504                           ?_Nrf24_readRegister 050A  
                          Nrf24_isSend@status 051B                 ?_Nrf24_print_address_register 0551  
                         Nrf24_getDataRate@dr 0511                            ?_Nrf24_getDataRate 050E  
                ??_INTERRUPT_InterruptManager 0502              Nrf24_print_address_register@name 0553  
              DELAY_microseconds@microseconds 0504                    ??_INT2_SetInterruptHandler 0507  
                         ??_Nrf24_getDataRate 0510                    __end_of_Nrf24_print_status 1248  
                             SPI_write_buff@i 0509                          ??_Nrf24_readRegister 050D  
                        _INTERRUPT_Initialize 15E6                         Nrf24_readRegister@len 050C  
                       Nrf24_readRegister@reg 050D                                  sender@F17890 0560  
                            _CLOCK_Initialize 19FE                             ??_TMR0_Initialize 0507  
                                    _LATCbits 04C0                                      _LATFbits 04C3  
                   ?_INT1_SetInterruptHandler 0504                                      _PIE3bits 04A1  
                                _SPI1CON0bits 0084                                      i2u232_40 1742  
                                    i2u232_41 173E                                      i2u233_40 1750  
                                    i2u233_41 174C                                      i2u219_40 18A6  
                                    i2u219_41 18A0                                      i2u219_46 18A8  
                                    i2u228_40 16DE                                      i2u228_41 16DA  
                             ?_Nrf24_setTADDR 050E                                      i2u229_48 16E4  
                                    i2u229_49 16F8                                      _PIR1bits 04AF  
                                    _SPI1BAUD 0089                                      _PIR3bits 04B1  
                                    _SPI1CON0 0084                                      _SPI1CON1 0085  
                                    _SPI1CON2 0086                     __end_of_Nrf24_getDataRate 15A2  
                                    _PIR6bits 04B4                DELAY_milliseconds@milliseconds 0504  
                __end_of_Nrf24_configRegister 19BA                           AdvancedSettings@dev 0512  
              ??_TMR0_DefaultOverflowCallback 0501                                     _vfpfcnvrt 0000  
                                _SPI1INTFbits 008A                             _SPI1_Deinitialize 0000  
                 Nrf24_getRetransmitDelay@dev 050E               __end_of_Nrf24_SetSpeedDataRates 132A  
                 Nrf24_setRetransmitDelay@dev 050E                   Nrf24_setRetransmitDelay@val 0510  
                            ?_SPI1_Initialize 0501                             Nrf24_getStatus@rv 050E  
                                 _INTCON0bits 04D6                                     copy_data0 13A6  
                                   copy_data1 13C6                         ?_INTERRUPT_Initialize 0501  
                  Nrf24_SetSpeedDataRates@dev 050E                      _INT0_SetInterruptHandler 1A3C  
                  Nrf24_SetSpeedDataRates@val 0510                                  ??_led_toggle 0501  
                      Nrf24_writeRegister@len 050C                        Nrf24_writeRegister@reg 050D  
                            ??_SPI_write_buff 0509                                      __Hrparam 0000  
                                  vfprintf@ap 053D                                      __Lrparam 0000  
                                  vfprintf@fp 0539                                 _Nrf24_flushRx 1A4A  
                                  ?_vfpfcnvrt 052A                            __end_of_led_toggle 18BE  
                 __end_of_Nrf24_writeRegister 172C                           SPI_read_buff@buffer 0506  
              ??_Nrf24_print_address_register 0557                                    _T0CON0bits 031A  
                           ?_Nrf24_getPALevel 050E                                      __pivt0x8 0008  
                                    __ptext10 13F8                                      __ptext11 0F5C  
                                    __ptext20 15A2                                      __ptext12 18BE  
                                    __ptext21 0A3C                                      __ptext13 14FE  
                                    __ptext30 0EB0                                      __ptext22 1A5C  
                                    __ptext14 0000                                      __ptext31 175E  
                                    __ptext23 165E                                      __ptext15 086C  
                                    __ptext40 12BC                                      __ptext32 17EA  
                                    __ptext24 0D56                                      __ptext16 0702  
                                    __ptext41 178E                                      __ptext33 0B06  
                                    __ptext25 0C94                                      __ptext17 0970  
                                    __ptext50 10A0                                      __ptext42 1692  
                                    __ptext34 1248                                      __ptext26 198A  
                                    __ptext18 058C                                      __ptext51 15E6  
                                    __ptext43 19A2                                      __ptext35 18E4  
                                    __ptext27 196C                                      __ptext19 1002  
                                    __ptext52 1A20                                      __ptext44 1842  
                                    __ptext36 19D2                                      __ptext28 1550  
                                    __ptext53 1A2E                                      __ptext45 1A56  
                                    __ptext37 1A4A                                      __ptext29 132A  
                                    __ptext54 1A3C                                      __ptext46 19E8  
                                    __ptext38 192A                                      __ptext55 19FE  
                                    __ptext47 186E                                      __ptext39 1816  
                                    __ptext56 172C                                      __ptext48 1A12  
                                    __ptext57 16C6                                      __ptext49 19BA  
                                    __ptext58 1A5E                                      __ptext59 1896  
                          ??_Nrf24_getPALevel 0510                              _AdvancedSettings 192A  
             Nrf24_print_address_register@dev 0551               Nrf24_print_address_register@reg 0555  
             Nrf24_print_address_register@qty 0556                                     sender@buf 05A8  
                                   sender@nrf 05CA                                     sender@ret 05C8  
                     Nrf24_readRegister@value 050A                                ?_Nrf24_flushRx 0506  
                               Nrf24_isSend@i 0517                                      isa$xinst 0000  
                               Nrf24_init@dev 0505                                      _vfprintf 14FE  
          __end_of_INTERRUPT_InterruptManager 175E                    _INTERRUPT_InterruptManager 172C  
                                   printf@fmt 0541                                 Nrf24_send@dev 050F  
                _INT1_DefaultInterruptHandler 0000                    ?_Nrf24_print_byte_register 0551  
                      ??_INTERRUPT_Initialize 0507                          _Nrf24_configRegister 19A2  
                                    intlevel2 0000                       Nrf24_getDataRate@result 0510  
                     ?_PIN_MANAGER_Initialize 0501                     SPI1_ByteExchange@byteData 0504  
                  ??_Nrf24_getRetransmitDelay 0510                    ??_Nrf24_setRetransmitDelay 0511  
                               ?_Nrf24_config 050F                                 ?_Nrf24_isSend 050F  
             ??_TMR0_OverflowCallbackRegister 0507                                   _TMR0_Reload 0000  
                           ??_Nrf24_getStatus 050E                                    _SPI1SDIPPS 026B  
                                  _SPI1SCKPPS 026A                                      printf@ap 054F  
                            _SPI1_BufferWrite 0000                                   ??_vfpfcnvrt 0530  
                     Nrf24_printDetails@delay 05A3                      __end_of_CLOCK_Initialize 1A12  
                                  _SPI1_Close 0000                  Nrf24_printDetails@retransmit 05A5  
                       Nrf24_getPALevel@level 0510                            _Nrf24_printDetails 038E  
                                  _SPI1_nrf24 FE4F             __end_of_Nrf24_print_byte_register 1456  
                             _TMR0_Initialize 186E              __end_of_INT1_SetInterruptHandler 1A3C  
                  __end_of_Nrf24_getCRCLength 1392                                    _TMR0_Start 1A56  
                            Nrf24_flushRx@dev 0506                         ?_Nrf24_configRegister 0506  
                         ?_Nrf24_printDetails 0558                __end_of_PIN_MANAGER_Initialize 113C  
                            ??_Nrf24_setTADDR 0512                    __end_of_DELAY_microseconds 14FE  
                          sender@pvParameters 05A6                               ??_Nrf24_flushRx 0508  
                     SPI1_Open@spiConfigIndex 0504                                ??_Nrf24_config 0513  
                              ??_Nrf24_isSend 0513                            _Nrf24_print_status 11C8  
                  __end_of_spi1_configuration FE9A  
